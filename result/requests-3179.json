{
    "utils": {
        "_hush_pyflakes": [
            {
                "type": "var",
                "anno": "tuple[type[RequestsCookieJar], ...]"
            }
        ],
        "NETRC_FILES": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "unquote_header_value": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "is_filename": "bool"
                }
            }
        ],
        "parse_dict_header": [
            {
                "type": "func",
                "args": {
                    "value": "str"
                }
            }
        ],
        "parse_list_header": [
            {
                "type": "func",
                "args": {
                    "value": "str"
                }
            }
        ],
        "get_encodings_from_content": [
            {
                "type": "func",
                "args": {
                    "content": "str"
                }
            }
        ],
        "iter_slices": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "slice_length": "int"
                }
            }
        ],
        "UNRESERVED_SET": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "dotted_netmask": [
            {
                "type": "func",
                "args": {
                    "mask": "int"
                }
            }
        ],
        "address_in_network": [
            {
                "type": "func",
                "args": {
                    "ip": "str",
                    "net": "str"
                }
            }
        ],
        "is_ipv4_address": [
            {
                "type": "func",
                "args": {
                    "string_ip": "str"
                }
            }
        ],
        "is_valid_cidr": [
            {
                "type": "func",
                "args": {
                    "string_network": "str"
                }
            }
        ],
        "default_user_agent": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "parse_header_links": [
            {
                "type": "func",
                "args": {
                    "value": "str"
                }
            }
        ],
        "_null": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "_null2": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "_null3": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "guess_json_utf": [
            {
                "type": "func",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "prepend_scheme_if_needed": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "new_scheme": "str"
                }
            }
        ],
        "urldefragauth": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "get_auth_from_url": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "dict_from_cookiejar": [
            {
                "type": "func",
                "args": {
                    "cj": "RequestsCookieJar"
                }
            }
        ],
        "super_len": [
            {
                "type": "func",
                "args": {
                    "o": "object"
                }
            }
        ],
        "to_native_string": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "encoding": "str"
                }
            }
        ],
        "guess_filename": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "stream_decode_response_unicode": [
            {
                "type": "func",
                "args": {
                    "iterator": "Iterator[str]",
                    "r": "Response"
                }
            }
        ],
        "DEFAULT_CA_BUNDLE_PATH": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "get_netrc_auth": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "raise_errors": "bool"
                }
            }
        ],
        "should_bypass_proxies": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "get_environ_proxies": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "to_key_val_list": [
            {
                "type": "func",
                "args": {
                    "value": "object"
                }
            }
        ],
        "dict_to_sequence": [
            {
                "type": "func",
                "args": {
                    "d": "dict"
                }
            }
        ],
        "from_key_val_list": [
            {
                "type": "func",
                "args": {
                    "value": "object"
                }
            }
        ],
        "default_headers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "add_dict_to_cookiejar": [
            {
                "type": "func",
                "args": {
                    "cj": "requests.CookieJar",
                    "cookie_dict": "dict"
                }
            }
        ],
        "select_proxy": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "proxies": "dict"
                }
            }
        ],
        "get_encoding_from_headers": [
            {
                "type": "func",
                "args": {
                    "headers": "CaseInsensitiveDict"
                }
            }
        ],
        "get_unicode_from_response": [
            {
                "type": "func",
                "args": {
                    "r": "io.IOBase"
                }
            }
        ],
        "unquote_unreserved": [
            {
                "type": "func",
                "args": {
                    "uri": "str"
                }
            }
        ],
        "requote_uri": [
            {
                "type": "func",
                "args": {
                    "uri": "str"
                }
            }
        ]
    },
    "exceptions": {
        "RequestException.response": [
            {
                "type": "attr",
                "anno": "BaseHTTPError"
            }
        ],
        "RequestException.request": [
            {
                "type": "attr",
                "anno": "BaseHTTPError"
            }
        ],
        "RequestException.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ]
    },
    "structures": {
        "CaseInsensitiveDict._store": [
            {
                "type": "attr",
                "anno": "OrderedDict"
            }
        ],
        "CaseInsensitiveDict.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "CaseInsensitiveDict.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CaseInsensitiveDict.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CaseInsensitiveDict.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LookupDict.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LookupDict.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "LookupDict.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CaseInsensitiveDict.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CaseInsensitiveDict.lower_items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CaseInsensitiveDict.__init__": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "CaseInsensitiveDict.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CaseInsensitiveDict.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CaseInsensitiveDict.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "LookupDict.get": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "LookupDict.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ]
    },
    "auth": {
        "CONTENT_TYPE_FORM_URLENCODED": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CONTENT_TYPE_MULTI_PART": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "AuthBase.__call__": [
            {
                "type": "method",
                "args": {
                    "r": "codes.HTTPDigestAuth"
                }
            }
        ],
        "HTTPBasicAuth.username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPBasicAuth.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPBasicAuth.__init__": [
            {
                "type": "method",
                "args": {
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "HTTPBasicAuth.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "HTTPBasicAuth.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "HTTPDigestAuth.username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPDigestAuth.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPDigestAuth._thread_local": [
            {
                "type": "attr",
                "anno": "threading.local"
            }
        ],
        "HTTPDigestAuth.__init__": [
            {
                "type": "method",
                "args": {
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "HTTPDigestAuth.init_per_thread_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPDigestAuth.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "HTTPDigestAuth.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_basic_auth_str": [
            {
                "type": "func",
                "args": {
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "HTTPDigestAuth.handle_redirect": [
            {
                "type": "method",
                "args": {
                    "r": "requests.Response",
                    "kwargs": "str"
                }
            }
        ],
        "HTTPProxyAuth.__call__": [
            {
                "type": "method",
                "args": {
                    "r": "HTTPResponse"
                }
            }
        ],
        "HTTPBasicAuth.__call__": [
            {
                "type": "method",
                "args": {
                    "r": "HTTPResponse"
                }
            }
        ],
        "HTTPDigestAuth.build_digest_header": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str"
                }
            }
        ],
        "HTTPDigestAuth.handle_401": [
            {
                "type": "method",
                "args": {
                    "r": "requests.Response",
                    "kwargs": "str"
                }
            }
        ],
        "HTTPDigestAuth.__call__": [
            {
                "type": "method",
                "args": {
                    "r": "requests.Response"
                }
            }
        ]
    },
    "packages.urllib3.filepost": {
        "writer": [
            {
                "type": "var",
                "anno": "type[six.TextIO]"
            }
        ],
        "choose_boundary": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "iter_fields": [
            {
                "type": "func",
                "args": {
                    "fields": "dict"
                }
            }
        ],
        "iter_field_objects": [
            {
                "type": "func",
                "args": {
                    "fields": "dict"
                }
            }
        ],
        "encode_multipart_formdata": [
            {
                "type": "func",
                "args": {
                    "fields": "dict",
                    "boundary": "str"
                }
            }
        ]
    },
    "packages.urllib3.exceptions": {
        "PoolError.pool": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PoolError.__init__": [
            {
                "type": "method",
                "args": {
                    "pool": "str",
                    "message": "str"
                }
            }
        ],
        "PoolError.__reduce__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestError.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RequestError.__init__": [
            {
                "type": "method",
                "args": {
                    "pool": "str",
                    "url": "str",
                    "message": "str"
                }
            }
        ],
        "RequestError.__reduce__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionError": [
            {
                "type": "var",
                "anno": "Type[HTTPError]"
            }
        ],
        "MaxRetryError.reason": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MaxRetryError.__init__": [
            {
                "type": "method",
                "args": {
                    "pool": "str",
                    "url": "str",
                    "reason": "str"
                }
            }
        ],
        "HostChangedError.retries": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HostChangedError.__init__": [
            {
                "type": "method",
                "args": {
                    "pool": "str",
                    "url": "str",
                    "retries": "int"
                }
            }
        ],
        "LocationParseError.location": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LocationParseError.__init__": [
            {
                "type": "method",
                "args": {
                    "location": "str"
                }
            }
        ],
        "ResponseError.GENERIC_ERROR": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ResponseError.SPECIFIC_ERROR": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ProxySchemeUnknown.__init__": [
            {
                "type": "method",
                "args": {
                    "scheme": "str"
                }
            }
        ],
        "HeaderParsingError.__init__": [
            {
                "type": "method",
                "args": {
                    "defects": "str",
                    "unparsed_data": "str"
                }
            }
        ]
    },
    "packages.urllib3.contrib.socks": {
        "ssl": [
            {
                "type": "var",
                "anno": "ssl.SSLContext"
            }
        ],
        "SOCKSConnection._socks_options": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SOCKSHTTPConnectionPool.ConnectionCls": [
            {
                "type": "attr",
                "anno": "type[SOCKSConnection]"
            }
        ],
        "SOCKSHTTPSConnectionPool.ConnectionCls": [
            {
                "type": "attr",
                "anno": "type[SOCKSConnection]"
            }
        ],
        "SOCKSProxyManager.pool_classes_by_scheme": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SOCKSProxyManager.proxy_url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SOCKSConnection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "SOCKSProxyManager.__init__": [
            {
                "type": "method",
                "args": {
                    "proxy_url": "str",
                    "username": "str",
                    "password": "str",
                    "num_pools": "int",
                    "headers": "dict",
                    "connection_pool_kw": "object"
                }
            }
        ],
        "SOCKSConnection._new_conn": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.urllib3.contrib.appengine": {
        "urlfetch": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "AppEngineManager.validate_certificate": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AppEngineManager.retries": [
            {
                "type": "attr",
                "anno": "Retry"
            }
        ],
        "AppEngineManager.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AppEngineManager.__exit__": [
            {
                "type": "method",
                "args": {
                    "exc_type": "Any",
                    "exc_val": "Any",
                    "exc_tb": "Any"
                }
            }
        ],
        "is_local_appengine": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "is_prod_appengine_mvms": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "is_prod_appengine": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "is_appengine": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "is_appengine_sandbox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "AppEngineManager._get_absolute_timeout": [
            {
                "type": "method",
                "args": {
                    "timeout": "object"
                }
            }
        ],
        "AppEngineManager.__init__": [
            {
                "type": "method",
                "args": {
                    "headers": "dict",
                    "retries": "Retry",
                    "validate_certificate": "bool"
                }
            }
        ],
        "AppEngineManager._get_retries": [
            {
                "type": "method",
                "args": {
                    "retries": "int",
                    "redirect": "bool"
                }
            }
        ],
        "AppEngineManager._urlfetch_response_to_http_response": [
            {
                "type": "method",
                "args": {
                    "urlfetch_resp": "urlfetch.URLFetchResponse",
                    "response_kw": "object"
                }
            }
        ],
        "AppEngineManager.urlopen": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "body": "object",
                    "headers": "dict",
                    "retries": "int",
                    "redirect": "bool",
                    "timeout": "object",
                    "response_kw": "object"
                }
            }
        ]
    },
    "packages.urllib3.contrib.pyopenssl": {
        "_fileobject": [
            {
                "type": "var",
                "anno": "_fileobject"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "HAS_SNI": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_openssl_versions": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_openssl_verify": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DEFAULT_SSL_CIPHER_LIST": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "SSL_WRITE_BLOCKSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "orig_util_HAS_SNI": [
            {
                "type": "var",
                "anno": "util.HAS_SNI"
            }
        ],
        "SubjectAltName.sizeSpec": [
            {
                "type": "attr",
                "anno": "constraint.ValueSizeConstraint"
            }
        ],
        "get_subj_alt_name": [
            {
                "type": "func",
                "args": {
                    "peer_cert": "ssl.Certificate"
                }
            }
        ],
        "WrappedSocket.connection": [
            {
                "type": "attr",
                "anno": "connection.Connection"
            }
        ],
        "WrappedSocket.socket": [
            {
                "type": "attr",
                "anno": "socket.socket"
            }
        ],
        "WrappedSocket.suppress_ragged_eofs": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WrappedSocket._makefile_refs": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WrappedSocket._closed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WrappedSocket.__init__": [
            {
                "type": "method",
                "args": {
                    "connection": "connection.Connection",
                    "socket": "socket.socket",
                    "suppress_ragged_eofs": "bool"
                }
            }
        ],
        "WrappedSocket.recv": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "WrappedSocket.recv_into": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "WrappedSocket.settimeout": [
            {
                "type": "method",
                "args": {
                    "timeout": "float"
                }
            }
        ],
        "WrappedSocket.shutdown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedSocket.getpeercert": [
            {
                "type": "method",
                "args": {
                    "binary_form": "bool"
                }
            }
        ],
        "WrappedSocket._reuse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "makefile": [
            {
                "type": "var",
                "anno": "backport_makefile"
            }
        ],
        "_verify_callback": [
            {
                "type": "func",
                "args": {
                    "cnx": "str",
                    "x509": "str",
                    "err_no": "int",
                    "err_depth": "int",
                    "return_code": "int"
                }
            }
        ],
        "WrappedSocket.fileno": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ssl_wrap_socket": [
            {
                "type": "func",
                "args": {
                    "sock": "socket.socket",
                    "keyfile": "str",
                    "certfile": "str",
                    "cert_reqs": "int",
                    "ca_certs": "str",
                    "server_hostname": "str",
                    "ssl_version": "int",
                    "ca_cert_dir": "str"
                }
            }
        ],
        "inject_into_urllib3": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "orig_connection_ssl_wrap_socket": [
            {
                "type": "var",
                "anno": "connection.ssl_wrap_socket"
            }
        ],
        "extract_from_urllib3": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "WrappedSocket.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedSocket._drop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedSocket._decref_socketios": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedSocket._send_until_done": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "WrappedSocket.sendall": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ]
    },
    "packages.urllib3.contrib.ntlmpool": {
        "log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "NTLMConnectionPool.scheme": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NTLMConnectionPool.authurl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NTLMConnectionPool.rawuser": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NTLMConnectionPool.domain": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NTLMConnectionPool.user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NTLMConnectionPool.pw": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NTLMConnectionPool.__init__": [
            {
                "type": "method",
                "args": {
                    "user": "str",
                    "pw": "str",
                    "authurl": "str",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "NTLMConnectionPool._new_conn": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NTLMConnectionPool.urlopen": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "body": "object",
                    "headers": "dict",
                    "retries": "int",
                    "redirect": "bool",
                    "assert_same_host": "bool"
                }
            }
        ]
    },
    "packages.urllib3.packages.six": {
        "__author__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "PY3": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "string_types": [
            {
                "type": "var",
                "anno": "types.Type[str]"
            }
        ],
        "integer_types": [
            {
                "type": "var",
                "anno": "types.Type[int]"
            }
        ],
        "class_types": [
            {
                "type": "var",
                "anno": "types.Type"
            }
        ],
        "text_type": [
            {
                "type": "var",
                "anno": "type[str]"
            }
        ],
        "binary_type": [
            {
                "type": "var",
                "anno": "types.Type[bytes]"
            }
        ],
        "MAXSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "X.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_add_doc": [
            {
                "type": "func",
                "args": {
                    "func": "types.Callable",
                    "doc": "str"
                }
            }
        ],
        "_import_module": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_LazyDescr.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_LazyDescr.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "MovedModule.mod": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovedModule.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "old": "str",
                    "new": "str"
                }
            }
        ],
        "MovedModule._resolve": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovedAttribute.mod": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovedAttribute.attr": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovedAttribute.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "old_mod": "str",
                    "new_mod": "str",
                    "old_attr": "str",
                    "new_attr": "str"
                }
            }
        ],
        "MovedAttribute._resolve": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_LazyDescr.__get__": [
            {
                "type": "method",
                "args": {
                    "obj": "types.ModuleType",
                    "tp": "types.ModuleType"
                }
            }
        ],
        "_moved_attributes": [
            {
                "type": "var",
                "anno": "types.ModuleType"
            }
        ],
        "moves": [
            {
                "type": "var",
                "anno": "_MovedItems"
            }
        ],
        "add_move": [
            {
                "type": "func",
                "args": {
                    "move": "types.ModuleType"
                }
            }
        ],
        "remove_move": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_meth_func": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_meth_self": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_func_code": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_func_defaults": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_iterkeys": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_itervalues": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_iteritems": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "get_unbound_function": [
            {
                "type": "func",
                "args": {
                    "unbound": "types.ModuleType"
                }
            }
        ],
        "Iterator.next": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "advance_iterator": [
            {
                "type": "func",
                "args": {
                    "it": "Iterator"
                }
            }
        ],
        "next": [
            {
                "type": "var",
                "anno": "Iterator"
            }
        ],
        "callable": [
            {
                "type": "var",
                "anno": "types.Callable"
            }
        ],
        "get_method_function": [
            {
                "type": "var",
                "anno": "operator.AttributeGetter"
            }
        ],
        "get_method_self": [
            {
                "type": "var",
                "anno": "operator.AttributeGetter"
            }
        ],
        "get_function_code": [
            {
                "type": "var",
                "anno": "operator.AttributeGetter"
            }
        ],
        "get_function_defaults": [
            {
                "type": "var",
                "anno": "operator.AttributeGetter"
            }
        ],
        "iterkeys": [
            {
                "type": "func",
                "args": {
                    "d": "object"
                }
            }
        ],
        "itervalues": [
            {
                "type": "func",
                "args": {
                    "d": "object"
                }
            }
        ],
        "iteritems": [
            {
                "type": "func",
                "args": {
                    "d": "object"
                }
            }
        ],
        "int2byte": [
            {
                "type": "var",
                "anno": "typing.Callable"
            }
        ],
        "StringIO": [
            {
                "type": "var",
                "anno": "types.ModuleType"
            }
        ],
        "BytesIO": [
            {
                "type": "var",
                "anno": "types.ModuleType"
            }
        ],
        "b": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "u": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "reraise": [
            {
                "type": "func",
                "args": {
                    "tp": "type",
                    "value": "object",
                    "tb": "str"
                }
            }
        ],
        "exec_": [
            {
                "type": "func",
                "args": {
                    "code": "str",
                    "globs": "types.ModuleType",
                    "locs": "types.ModuleType"
                }
            }
        ],
        "with_metaclass": [
            {
                "type": "func",
                "args": {
                    "meta": "types.Meta",
                    "base": "types.ModuleType"
                }
            }
        ],
        "print_": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ]
    },
    "packages.urllib3.packages.ordered_dict": {
        "OrderedDict.__root": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "OrderedDict.__map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "OrderedDict.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str",
                    "dict_setitem": "Callable[[], None]"
                }
            }
        ],
        "OrderedDict.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.__reversed__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.popitem": [
            {
                "type": "method",
                "args": {
                    "last": "bool"
                }
            }
        ],
        "OrderedDict.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.iterkeys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.itervalues": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.iteritems": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.__marker": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "OrderedDict.pop": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "OrderedDict.setdefault": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "OrderedDict.__repr__": [
            {
                "type": "method",
                "args": {
                    "_repr_running": "dict"
                }
            }
        ],
        "OrderedDict.fromkeys": [
            {
                "type": "method",
                "args": {
                    "cls": "type[OrderedDict]",
                    "iterable": "KeysView",
                    "value": "ValuesView"
                }
            }
        ],
        "OrderedDict.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "OrderedDict.viewkeys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.viewvalues": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.viewitems": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "dict_delitem": "Callable[[], object]"
                }
            }
        ],
        "OrderedDict.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "OrderedDict.update": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwds": "object"
                }
            }
        ],
        "OrderedDict.__update": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "OrderedDict.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwds": "object"
                }
            }
        ],
        "OrderedDict.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OrderedDict.__reduce__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.urllib3.packages": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ]
    },
    "packages.urllib3.packages.ssl_match_hostname._implementation": {
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_dnsname_match": [
            {
                "type": "func",
                "args": {
                    "dn": "str",
                    "hostname": "str",
                    "max_wildcards": "int"
                }
            }
        ],
        "match_hostname": [
            {
                "type": "func",
                "args": {
                    "cert": "dict",
                    "hostname": "str"
                }
            }
        ]
    },
    "packages.urllib3.packages.ssl_match_hostname": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ]
    },
    "packages.urllib3.packages.backports.makefile": {
        "backport_makefile": [
            {
                "type": "func",
                "args": {
                    "mode": "str",
                    "buffering": "int",
                    "encoding": "str",
                    "errors": "str",
                    "newline": "str"
                }
            }
        ]
    },
    "packages.urllib3.connection": {
        "ssl": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "port_by_scheme": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "RECENT_DATE": [
            {
                "type": "var",
                "anno": "datetime.date"
            }
        ],
        "HTTPConnection.default_port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPConnection.default_socket_options": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "HTTPConnection.is_verified": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTPConnection.source_address": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPConnection.socket_options": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "HTTPConnection.sock": [
            {
                "type": "attr",
                "anno": "connection.Connection"
            }
        ],
        "HTTPConnection.auto_open": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VerifiedHTTPSConnection.cert_reqs": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VerifiedHTTPSConnection.ca_certs": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VerifiedHTTPSConnection.ca_cert_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VerifiedHTTPSConnection.ssl_version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VerifiedHTTPSConnection.assert_fingerprint": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VerifiedHTTPSConnection.key_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VerifiedHTTPSConnection.cert_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VerifiedHTTPSConnection.assert_hostname": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VerifiedHTTPSConnection.set_cert": [
            {
                "type": "method",
                "args": {
                    "key_file": "str",
                    "cert_file": "str",
                    "cert_reqs": "str",
                    "ca_certs": "str",
                    "assert_hostname": "bool",
                    "assert_fingerprint": "bool",
                    "ca_cert_dir": "str"
                }
            }
        ],
        "VerifiedHTTPSConnection.sock": [
            {
                "type": "attr",
                "anno": "socket.socket"
            }
        ],
        "VerifiedHTTPSConnection.auto_open": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VerifiedHTTPSConnection.is_verified": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_match_hostname": [
            {
                "type": "func",
                "args": {
                    "cert": "ssl.Certificate",
                    "asserted_hostname": "str"
                }
            }
        ],
        "HTTPSConnection": [
            {
                "type": "var",
                "anno": "type[HTTPConnection]"
            }
        ],
        "UnverifiedHTTPSConnection": [
            {
                "type": "var",
                "anno": "type[HTTPConnection]"
            }
        ],
        "HTTPConnection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kw": "object"
                }
            }
        ],
        "HTTPConnection._prepare_conn": [
            {
                "type": "method",
                "args": {
                    "conn": "connection.Connection"
                }
            }
        ],
        "VerifiedHTTPSConnection.connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPConnection._new_conn": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPConnection.connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPConnection.request_chunked": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "body": "object",
                    "headers": "dict"
                }
            }
        ]
    },
    "packages.urllib3._collections": {
        "RLock.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RLock.__exit__": [
            {
                "type": "method",
                "args": {
                    "exc_type": "Any",
                    "exc_value": "Any",
                    "traceback": "Any"
                }
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "List[str]"
            }
        ],
        "_Null": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "RecentlyUsedContainer.ContainerCls": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "RecentlyUsedContainer._maxsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecentlyUsedContainer.dispose_func": [
            {
                "type": "attr",
                "anno": "Callable[[object], object]"
            }
        ],
        "RecentlyUsedContainer._container": [
            {
                "type": "attr",
                "anno": "ContainerCls"
            }
        ],
        "RecentlyUsedContainer.lock": [
            {
                "type": "attr",
                "anno": "RLock"
            }
        ],
        "RecentlyUsedContainer.__init__": [
            {
                "type": "method",
                "args": {
                    "maxsize": "int",
                    "dispose_func": "Callable[[object], object]"
                }
            }
        ],
        "RecentlyUsedContainer.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecentlyUsedContainer.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecentlyUsedContainer.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPHeaderDict._container": [
            {
                "type": "attr",
                "anno": "OrderedDict"
            }
        ],
        "HTTPHeaderDict.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "val": "str"
                }
            }
        ],
        "HTTPHeaderDict.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "HTTPHeaderDict.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "HTTPHeaderDict.__contains__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "HTTPHeaderDict.iterkeys": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, Callable]"
            }
        ],
        "HTTPHeaderDict.itervalues": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "HTTPHeaderDict.__marker": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "HTTPHeaderDict.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPHeaderDict.pop": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "RecentlyUsedContainer.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "RecentlyUsedContainer.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "HTTPHeaderDict.discard": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "HTTPHeaderDict.add": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "val": "object"
                }
            }
        ],
        "HTTPHeaderDict.getlist": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "HTTPHeaderDict.getheaders": [
            {
                "type": "attr",
                "anno": "Callable[[str], list]"
            }
        ],
        "HTTPHeaderDict.getallmatchingheaders": [
            {
                "type": "attr",
                "anno": "Callable[[str], list]"
            }
        ],
        "HTTPHeaderDict.iget": [
            {
                "type": "attr",
                "anno": "Callable[[str], list]"
            }
        ],
        "HTTPHeaderDict._copy_from": [
            {
                "type": "method",
                "args": {
                    "other": "HTTPHeaderDict"
                }
            }
        ],
        "HTTPHeaderDict.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPHeaderDict.iteritems": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPHeaderDict.itermerged": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPHeaderDict.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPHeaderDict.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "HTTPHeaderDict.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "HTTPHeaderDict.items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecentlyUsedContainer.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPHeaderDict.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPHeaderDict.extend": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "HTTPHeaderDict.__init__": [
            {
                "type": "method",
                "args": {
                    "headers": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "HTTPHeaderDict.from_httplib": [
            {
                "type": "method",
                "args": {
                    "cls": "type[HTTPHeaderDict]",
                    "message": "httplib.HTTPResponse"
                }
            }
        ],
        "RecentlyUsedContainer.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "object"
                }
            }
        ]
    },
    "packages.urllib3.poolmanager": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "SSL_KEYWORDS": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "pool_classes_by_scheme": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "PoolManager.proxy": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PoolManager.connection_pool_kw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PoolManager.pools": [
            {
                "type": "attr",
                "anno": "RecentlyUsedContainer"
            }
        ],
        "PoolManager.pool_classes_by_scheme": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PoolManager.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProxyManager.proxy": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ProxyManager.proxy_headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ProxyManager.__init__": [
            {
                "type": "method",
                "args": {
                    "proxy_url": "str",
                    "num_pools": "int",
                    "headers": "dict",
                    "proxy_headers": "dict",
                    "connection_pool_kw": "object"
                }
            }
        ],
        "proxy_from_url": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "kw": "object"
                }
            }
        ],
        "PoolManager.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PoolManager.__exit__": [
            {
                "type": "method",
                "args": {
                    "exc_type": "Any",
                    "exc_val": "Any",
                    "exc_tb": "Any"
                }
            }
        ],
        "ProxyManager._set_proxy_headers": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "headers": "dict"
                }
            }
        ],
        "PoolManager._new_pool": [
            {
                "type": "method",
                "args": {
                    "scheme": "str",
                    "host": "str",
                    "port": "int"
                }
            }
        ],
        "PoolManager.connection_from_host": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "port": "int",
                    "scheme": "str"
                }
            }
        ],
        "ProxyManager.connection_from_host": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "port": "int",
                    "scheme": "str"
                }
            }
        ],
        "PoolManager.connection_from_url": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "PoolManager.__init__": [
            {
                "type": "method",
                "args": {
                    "num_pools": "int",
                    "headers": "dict",
                    "connection_pool_kw": "dict"
                }
            }
        ],
        "PoolManager.urlopen": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "redirect": "bool",
                    "kw": "object"
                }
            }
        ],
        "ProxyManager.urlopen": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "redirect": "bool",
                    "kw": "object"
                }
            }
        ]
    },
    "packages.urllib3.response": {
        "DeflateDecoder._first_try": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DeflateDecoder._data": [
            {
                "type": "attr",
                "anno": "binary_type"
            }
        ],
        "DeflateDecoder._obj": [
            {
                "type": "attr",
                "anno": "zlib.decompressobj"
            }
        ],
        "DeflateDecoder.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DeflateDecoder.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "GzipDecoder._obj": [
            {
                "type": "attr",
                "anno": "zlib.Deflate"
            }
        ],
        "GzipDecoder.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GzipDecoder.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "GzipDecoder.decompress": [
            {
                "type": "method",
                "args": {
                    "data": "binary_type"
                }
            }
        ],
        "DeflateDecoder.decompress": [
            {
                "type": "method",
                "args": {
                    "data": "binary_type"
                }
            }
        ],
        "_get_decoder": [
            {
                "type": "func",
                "args": {
                    "mode": "str"
                }
            }
        ],
        "HTTPResponse.CONTENT_DECODERS": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "HTTPResponse.REDIRECT_STATUSES": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "HTTPResponse.headers": [
            {
                "type": "attr",
                "anno": "HTTPHeaderDict"
            }
        ],
        "HTTPResponse.status": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPResponse.version": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPResponse.reason": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPResponse.strict": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPResponse.decode_content": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTPResponse._decoder": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "HTTPResponse._body": [
            {
                "type": "attr",
                "anno": "Union[bytes, bytes, str]"
            }
        ],
        "HTTPResponse._fp": [
            {
                "type": "attr",
                "anno": "Union[bytes, bytes, str]"
            }
        ],
        "HTTPResponse._original_response": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "HTTPResponse._fp_bytes_read": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPResponse._pool": [
            {
                "type": "attr",
                "anno": "httplib.HTTPConnectionPool"
            }
        ],
        "HTTPResponse._connection": [
            {
                "type": "attr",
                "anno": "httplib.HTTPConnection"
            }
        ],
        "HTTPResponse.chunked": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTPResponse.chunk_left": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPResponse.tell": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.getheaders": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.closed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.fileno": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse._flush_decoder": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.readable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse._handle_chunk": [
            {
                "type": "method",
                "args": {
                    "amt": "int"
                }
            }
        ],
        "HTTPResponse.from_httplib": [
            {
                "type": "method",
                "args": {
                    "ResponseCls": "type[HTTPResponse]",
                    "r": "httplib.HTTPResponse",
                    "response_kw": "object"
                }
            }
        ],
        "HTTPResponse.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.release_conn": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse._update_chunk_length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse._error_catcher": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.getheader": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "object"
                }
            }
        ],
        "HTTPResponse._decode": [
            {
                "type": "method",
                "args": {
                    "data": "binary_type",
                    "decode_content": "bool",
                    "flush_decoder": "bool"
                }
            }
        ],
        "HTTPResponse._init_decoder": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.read_chunked": [
            {
                "type": "method",
                "args": {
                    "amt": "int",
                    "decode_content": "bool"
                }
            }
        ],
        "HTTPResponse.read": [
            {
                "type": "method",
                "args": {
                    "amt": "int",
                    "decode_content": "bool",
                    "cache_content": "bool"
                }
            }
        ],
        "HTTPResponse.readinto": [
            {
                "type": "method",
                "args": {
                    "b": "binary_type"
                }
            }
        ],
        "HTTPResponse.stream": [
            {
                "type": "method",
                "args": {
                    "amt": "int",
                    "decode_content": "bool"
                }
            }
        ],
        "HTTPResponse.data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.get_redirect_location": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPResponse.__init__": [
            {
                "type": "method",
                "args": {
                    "body": "Union[bytes, bytes, str]",
                    "headers": "Union[HTTPHeaderDict, bytes]",
                    "status": "int",
                    "version": "int",
                    "reason": "str",
                    "strict": "int",
                    "preload_content": "bool",
                    "decode_content": "bool",
                    "original_response": "object",
                    "pool": "httplib.HTTPConnectionPool",
                    "connection": "httplib.HTTPConnection"
                }
            }
        ]
    },
    "packages.urllib3.fields": {
        "guess_content_type": [
            {
                "type": "func",
                "args": {
                    "filename": "str",
                    "default": "str"
                }
            }
        ],
        "format_header_param": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "RequestField._name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RequestField._filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RequestField.data": [
            {
                "type": "attr",
                "anno": "six.Union[int, str]"
            }
        ],
        "RequestField.headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RequestField.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "six.Union[int, str]",
                    "filename": "str",
                    "headers": "dict"
                }
            }
        ],
        "RequestField._render_part": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "RequestField._render_parts": [
            {
                "type": "method",
                "args": {
                    "header_parts": "tuple"
                }
            }
        ],
        "RequestField.make_multipart": [
            {
                "type": "method",
                "args": {
                    "content_disposition": "str",
                    "content_type": "str",
                    "content_location": "str"
                }
            }
        ],
        "RequestField.from_tuples": [
            {
                "type": "method",
                "args": {
                    "cls": "type[RequestField]",
                    "fieldname": "str",
                    "value": "tuple"
                }
            }
        ],
        "RequestField.render_headers": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.urllib3": {
        "NullHandler.emit": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ],
        "__author__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__license__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "add_stderr_logger": [
            {
                "type": "func",
                "args": {
                    "level": "int"
                }
            }
        ],
        "disable_warnings": [
            {
                "type": "func",
                "args": {
                    "category": "str"
                }
            }
        ]
    },
    "packages.urllib3.util.url": {
        "url_attrs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "Url.slots": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Url.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Url]",
                    "scheme": "str",
                    "auth": "str",
                    "host": "str",
                    "port": "int",
                    "path": "str",
                    "query": "str",
                    "fragment": "str"
                }
            }
        ],
        "Url.request_uri": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Url.url": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Url.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "split_first": [
            {
                "type": "func",
                "args": {
                    "s": "str",
                    "delims": "list[str]"
                }
            }
        ],
        "parse_url": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "Url.netloc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Url.hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "get_host": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ]
    },
    "packages.urllib3.util.ssl_": {
        "HAS_SNI": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "create_default_context": [
            {
                "type": "var",
                "anno": "SSLContext"
            }
        ],
        "IS_PYOPENSSL": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HASHFUNC_MAP": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_const_compare_digest_backport": [
            {
                "type": "func",
                "args": {
                    "a": "bytes",
                    "b": "bytes"
                }
            }
        ],
        "_const_compare_digest": [
            {
                "type": "var",
                "anno": "Callable[[bytes, bytes], bool]"
            }
        ],
        "OP_NO_COMPRESSION": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DEFAULT_CIPHERS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SSLContext.supports_set_ciphers": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SSLContext.protocol": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SSLContext.check_hostname": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SSLContext.verify_mode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SSLContext.ca_certs": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SSLContext.options": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SSLContext.certfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SSLContext.keyfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SSLContext.ciphers": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SSLContext.__init__": [
            {
                "type": "method",
                "args": {
                    "protocol_version": "int"
                }
            }
        ],
        "SSLContext.load_cert_chain": [
            {
                "type": "method",
                "args": {
                    "certfile": "str",
                    "keyfile": "str"
                }
            }
        ],
        "SSLContext.load_verify_locations": [
            {
                "type": "method",
                "args": {
                    "cafile": "str",
                    "capath": "str"
                }
            }
        ],
        "SSLContext.set_ciphers": [
            {
                "type": "method",
                "args": {
                    "cipher_suite": "str"
                }
            }
        ],
        "SSLContext.wrap_socket": [
            {
                "type": "method",
                "args": {
                    "socket": "socket.socket",
                    "server_hostname": "str",
                    "server_side": "bool"
                }
            }
        ],
        "resolve_cert_reqs": [
            {
                "type": "func",
                "args": {
                    "candidate": "int"
                }
            }
        ],
        "resolve_ssl_version": [
            {
                "type": "func",
                "args": {
                    "candidate": "str"
                }
            }
        ],
        "create_urllib3_context": [
            {
                "type": "func",
                "args": {
                    "ssl_version": "int",
                    "cert_reqs": "int",
                    "options": "int",
                    "ciphers": "str"
                }
            }
        ],
        "ssl_wrap_socket": [
            {
                "type": "func",
                "args": {
                    "sock": "socket.socket",
                    "keyfile": "str",
                    "certfile": "str",
                    "cert_reqs": "int",
                    "ca_certs": "str",
                    "server_hostname": "str",
                    "ssl_version": "int",
                    "ciphers": "str",
                    "ssl_context": "SSLContext",
                    "ca_cert_dir": "str"
                }
            }
        ],
        "assert_fingerprint": [
            {
                "type": "func",
                "args": {
                    "cert": "ssl.Certificate",
                    "fingerprint": "str"
                }
            }
        ]
    },
    "packages.urllib3.util.connection": {
        "poll": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "select": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "is_connection_dropped": [
            {
                "type": "func",
                "args": {
                    "conn": "object"
                }
            }
        ],
        "_set_socket_options": [
            {
                "type": "func",
                "args": {
                    "sock": "socket.socket",
                    "options": "list"
                }
            }
        ],
        "create_connection": [
            {
                "type": "func",
                "args": {
                    "address": "tuple",
                    "timeout": "int",
                    "source_address": "str",
                    "socket_options": "list"
                }
            }
        ]
    },
    "packages.urllib3.util.response": {
        "is_fp_closed": [
            {
                "type": "func",
                "args": {
                    "obj": "httplib.HTTPResponse"
                }
            }
        ],
        "assert_header_parsing": [
            {
                "type": "func",
                "args": {
                    "headers": "httplib.HTTPMessage"
                }
            }
        ],
        "is_response_to_head": [
            {
                "type": "func",
                "args": {
                    "response": "httplib.HTTPResponse"
                }
            }
        ]
    },
    "packages.urllib3.util.retry": {
        "log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "Retry.DEFAULT_METHOD_WHITELIST": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "Retry.BACKOFF_MAX": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Retry.total": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Retry.connect": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Retry.read": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Retry.redirect": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Retry.status_forcelist": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "Retry.method_whitelist": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "Retry.backoff_factor": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Retry.raise_on_redirect": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Retry.raise_on_status": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Retry._observed_errors": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Retry.__init__": [
            {
                "type": "method",
                "args": {
                    "total": "int",
                    "connect": "int",
                    "read": "int",
                    "redirect": "int",
                    "method_whitelist": "frozenset",
                    "status_forcelist": "set",
                    "backoff_factor": "int",
                    "raise_on_redirect": "bool",
                    "raise_on_status": "bool",
                    "_observed_errors": "int"
                }
            }
        ],
        "Retry.from_int": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Retry]",
                    "retries": "int",
                    "redirect": "bool",
                    "default": "object"
                }
            }
        ],
        "Retry.get_backoff_time": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Retry.sleep": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Retry._is_connection_error": [
            {
                "type": "method",
                "args": {
                    "err": "Exception"
                }
            }
        ],
        "Retry._is_read_error": [
            {
                "type": "method",
                "args": {
                    "err": "Exception"
                }
            }
        ],
        "Retry.is_forced_retry": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "status_code": "int"
                }
            }
        ],
        "Retry.is_exhausted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Retry.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Retry.new": [
            {
                "type": "method",
                "args": {
                    "kw": "object"
                }
            }
        ],
        "Retry.increment": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "response": "object",
                    "error": "Exception",
                    "_pool": "str",
                    "_stacktrace": "str"
                }
            }
        ]
    },
    "packages.urllib3.util": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ]
    },
    "packages.urllib3.util.request": {
        "ACCEPT_ENCODING": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "make_headers": [
            {
                "type": "func",
                "args": {
                    "keep_alive": "bool",
                    "accept_encoding": "str",
                    "user_agent": "str",
                    "basic_auth": "str",
                    "proxy_basic_auth": "str",
                    "disable_cache": "bool"
                }
            }
        ]
    },
    "packages.urllib3.util.timeout": {
        "_Default": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "current_time": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Timeout.DEFAULT_TIMEOUT": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Timeout._connect": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Timeout._read": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Timeout.total": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Timeout._start_connect": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Timeout.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Timeout._validate_timeout": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "value": "object",
                    "name": "str"
                }
            }
        ],
        "Timeout.__init__": [
            {
                "type": "method",
                "args": {
                    "total": "object",
                    "connect": "object",
                    "read": "object"
                }
            }
        ],
        "Timeout.from_float": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "timeout": "float"
                }
            }
        ],
        "Timeout.clone": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Timeout.start_connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Timeout.get_connect_duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Timeout.connect_timeout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Timeout.read_timeout": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.urllib3.request": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "RequestMethods._encode_url_methods": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "RequestMethods.headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RequestMethods.__init__": [
            {
                "type": "method",
                "args": {
                    "headers": "dict"
                }
            }
        ],
        "RequestMethods.urlopen": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "body": "object",
                    "headers": "dict",
                    "encode_multipart": "bool",
                    "multipart_boundary": "str",
                    "kw": "object"
                }
            }
        ],
        "RequestMethods.request_encode_url": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "fields": "dict",
                    "headers": "dict",
                    "urlopen_kw": "dict"
                }
            }
        ],
        "RequestMethods.request_encode_body": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "fields": "dict",
                    "headers": "dict",
                    "encode_multipart": "bool",
                    "multipart_boundary": "str",
                    "urlopen_kw": "dict"
                }
            }
        ],
        "RequestMethods.request": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "fields": "dict",
                    "headers": "dict",
                    "urlopen_kw": "dict"
                }
            }
        ]
    },
    "packages.urllib3.connectionpool": {
        "xrange": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_Default": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "ConnectionPool.scheme": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionPool.QueueCls": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ConnectionPool.host": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionPool.port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ConnectionPool.__init__": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "port": "int"
                }
            }
        ],
        "ConnectionPool.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionPool.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionPool.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionPool.__exit__": [
            {
                "type": "method",
                "args": {
                    "exc_type": "Any",
                    "exc_val": "Any",
                    "exc_tb": "Any"
                }
            }
        ],
        "_blocking_errnos": [
            {
                "type": "var",
                "anno": "set[int]"
            }
        ],
        "HTTPConnectionPool.scheme": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPConnectionPool.ConnectionCls": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "HTTPConnectionPool.strict": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTPConnectionPool.timeout": [
            {
                "type": "attr",
                "anno": "Timeout"
            }
        ],
        "HTTPConnectionPool.retries": [
            {
                "type": "attr",
                "anno": "Retry"
            }
        ],
        "HTTPConnectionPool.pool": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "HTTPConnectionPool.block": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTPConnectionPool.proxy": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPConnectionPool.proxy_headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "HTTPConnectionPool.num_connections": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPConnectionPool.num_requests": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPConnectionPool.conn_kw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "HTTPConnectionPool._validate_conn": [
            {
                "type": "method",
                "args": {
                    "conn": "HTTPConnection"
                }
            }
        ],
        "HTTPConnectionPool._prepare_proxy": [
            {
                "type": "method",
                "args": {
                    "conn": "object"
                }
            }
        ],
        "HTTPConnectionPool._get_timeout": [
            {
                "type": "method",
                "args": {
                    "timeout": "float"
                }
            }
        ],
        "HTTPConnectionPool._raise_timeout": [
            {
                "type": "method",
                "args": {
                    "err": "BaseException",
                    "url": "str",
                    "timeout_value": "float"
                }
            }
        ],
        "HTTPSConnectionPool.scheme": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSConnectionPool.ConnectionCls": [
            {
                "type": "attr",
                "anno": "type[HTTPConnection]"
            }
        ],
        "HTTPSConnectionPool.key_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSConnectionPool.cert_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSConnectionPool.cert_reqs": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSConnectionPool.ca_certs": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSConnectionPool.ca_cert_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSConnectionPool.ssl_version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSConnectionPool.assert_hostname": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTPSConnectionPool.assert_fingerprint": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTPSConnectionPool._prepare_conn": [
            {
                "type": "method",
                "args": {
                    "conn": "HTTPConnection"
                }
            }
        ],
        "HTTPConnectionPool._absolute_url": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "HTTPConnectionPool.is_same_host": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "HTTPSConnectionPool._new_conn": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPConnectionPool._new_conn": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPConnectionPool.__init__": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "port": "int",
                    "strict": "bool",
                    "timeout": "float",
                    "maxsize": "int",
                    "block": "bool",
                    "headers": "dict",
                    "retries": "Retry",
                    "_proxy": "str",
                    "_proxy_headers": "dict",
                    "conn_kw": "object"
                }
            }
        ],
        "HTTPSConnectionPool.__init__": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "port": "int",
                    "strict": "bool",
                    "timeout": "float",
                    "maxsize": "int",
                    "block": "bool",
                    "headers": "dict",
                    "retries": "Retry",
                    "_proxy": "str",
                    "_proxy_headers": "dict",
                    "key_file": "str",
                    "cert_file": "str",
                    "cert_reqs": "str",
                    "ca_certs": "str",
                    "ssl_version": "str",
                    "assert_hostname": "bool",
                    "assert_fingerprint": "bool",
                    "ca_cert_dir": "str",
                    "conn_kw": "object"
                }
            }
        ],
        "connection_from_url": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "kw": "object"
                }
            }
        ],
        "HTTPConnectionPool.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPConnectionPool._put_conn": [
            {
                "type": "method",
                "args": {
                    "conn": "object"
                }
            }
        ],
        "HTTPConnectionPool._get_conn": [
            {
                "type": "method",
                "args": {
                    "timeout": "float"
                }
            }
        ],
        "HTTPSConnectionPool._validate_conn": [
            {
                "type": "method",
                "args": {
                    "conn": "HTTPSConnection"
                }
            }
        ],
        "HTTPSConnectionPool._prepare_proxy": [
            {
                "type": "method",
                "args": {
                    "conn": "HTTPConnection"
                }
            }
        ],
        "HTTPConnectionPool._make_request": [
            {
                "type": "method",
                "args": {
                    "conn": "object",
                    "method": "str",
                    "url": "str",
                    "timeout": "float",
                    "chunked": "bool",
                    "httplib_request_kw": "object"
                }
            }
        ],
        "HTTPConnectionPool.urlopen": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "body": "object",
                    "headers": "dict",
                    "retries": "Retry",
                    "redirect": "bool",
                    "assert_same_host": "bool",
                    "timeout": "float",
                    "pool_timeout": "float",
                    "release_conn": "bool",
                    "chunked": "bool",
                    "response_kw": "object"
                }
            }
        ]
    },
    "packages.chardet.latin1prober": {
        "FREQ_CAT_NUM": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UDF": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "OTH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ASC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ASS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ACV": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ACO": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ASV": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ASO": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CLASS_NUM": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Latin1_CharToClass": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "Latin1ClassModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "Latin1Prober._mLastCharClass": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Latin1Prober._mFreqCounter": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Latin1Prober.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Latin1Prober._mState": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Latin1Prober.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Latin1Prober.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Latin1Prober.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Latin1Prober.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "list"
                }
            }
        ]
    },
    "packages.chardet.langhungarianmodel": {
        "Latin2_HungarianCharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "win1250HungarianCharToOrderMap": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "HungarianLangModel": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "Latin2HungarianModel": [
            {
                "type": "var",
                "anno": "ClassVar[HungarianLangModel]"
            }
        ],
        "Win1250HungarianModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ]
    },
    "packages.chardet.mbcssm": {
        "BIG5_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Big5CharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CP949_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CP949CharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCJP_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCJPCharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCKR_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCKRCharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCTW_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCTWCharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "GB2312_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "GB2312CharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SJIS_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SJISCharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UCS2BE_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UCS2BECharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UCS2LE_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UCS2LECharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UTF8_cls": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UTF8CharLenTable": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UTF8_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UTF8SMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "UCS2LE_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UCS2LESMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "UCS2BE_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UCS2BESMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "SJIS_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SJISSMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "GB2312_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "GB2312SMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "EUCTW_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCTWSMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "EUCKR_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCKRSMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "EUCJP_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCJPSMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "CP949_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CP949SMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "BIG5_st": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Big5SMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ]
    },
    "packages.chardet.escsm": {
        "HZ_cls": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "HZCharLenTable": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022CN_cls": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022CNCharLenTable": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022JP_cls": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022JPCharLenTable": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022KR_cls": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022KRCharLenTable": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022KR_st": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022KRSMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ISO2022JP_st": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022JPSMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ISO2022CN_st": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "ISO2022CNSMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "HZ_st": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "HZSMModel": [
            {
                "type": "var",
                "anno": "dict"
            }
        ]
    },
    "packages.chardet.euctwfreq": {
        "EUCTW_TYPICAL_DISTRIBUTION_RATIO": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "EUCTW_TABLE_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCTWCharToFreqOrder": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "packages.chardet.utf8prober": {
        "ONE_CHAR_PROB": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "UTF8Prober._mCodingSM": [
            {
                "type": "attr",
                "anno": "CodingStateMachine"
            }
        ],
        "UTF8Prober._mNumOfMBChar": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UTF8Prober.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UTF8Prober._mState": [
            {
                "type": "attr",
                "anno": "constants.State"
            }
        ],
        "UTF8Prober.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UTF8Prober.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "UTF8Prober.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UTF8Prober.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.langgreekmodel": {
        "Latin7_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[str]"
            }
        ],
        "win1253_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "GreekLangModel": [
            {
                "type": "var",
                "anno": "ClassVar[str]"
            }
        ],
        "Latin7GreekModel": [
            {
                "type": "var",
                "anno": "ClassVar[str]"
            }
        ],
        "Win1253GreekModel": [
            {
                "type": "var",
                "anno": "ClassVar[GreekLangModel]"
            }
        ]
    },
    "packages.chardet.big5freq": {
        "BIG5_TYPICAL_DISTRIBUTION_RATIO": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "BIG5_TABLE_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Big5CharToFreqOrder": [
            {
                "type": "var",
                "anno": "int"
            }
        ]
    },
    "packages.chardet.sjisprober": {
        "SJISProber._mCodingSM": [
            {
                "type": "attr",
                "anno": "CodingStateMachine"
            }
        ],
        "SJISProber._mDistributionAnalyzer": [
            {
                "type": "attr",
                "anno": "SJISDistributionAnalysis"
            }
        ],
        "SJISProber._mContextAnalyzer": [
            {
                "type": "attr",
                "anno": "SJISContextAnalysis"
            }
        ],
        "SJISProber._mState": [
            {
                "type": "attr",
                "anno": "constants.State"
            }
        ],
        "SJISProber.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SJISProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SJISProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SJISProber.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SJISProber.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ]
    },
    "packages.chardet.big5prober": {
        "Big5Prober._mCodingSM": [
            {
                "type": "attr",
                "anno": "CodingStateMachine"
            }
        ],
        "Big5Prober._mDistributionAnalyzer": [
            {
                "type": "attr",
                "anno": "Big5DistributionAnalysis"
            }
        ],
        "Big5Prober.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Big5Prober.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.cp949prober": {
        "CP949Prober._mCodingSM": [
            {
                "type": "attr",
                "anno": "CodingStateMachine"
            }
        ],
        "CP949Prober._mDistributionAnalyzer": [
            {
                "type": "attr",
                "anno": "EUCKRDistributionAnalysis"
            }
        ],
        "CP949Prober.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CP949Prober.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.charsetprober": {
        "CharSetProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharSetProber._mState": [
            {
                "type": "attr",
                "anno": "constants.State"
            }
        ],
        "CharSetProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharSetProber.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "CharSetProber.get_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharSetProber.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharSetProber.filter_high_bit_only": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "CharSetProber.filter_without_english_letters": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "CharSetProber.filter_with_english_letters": [
            {
                "type": "method",
                "args": {
                    "aBuf": "list"
                }
            }
        ],
        "CharSetProber.reset": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.codingstatemachine": {
        "CodingStateMachine._mModel": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CodingStateMachine._mCurrentBytePos": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CodingStateMachine._mCurrentCharLen": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CodingStateMachine._mCurrentState": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CodingStateMachine.get_current_charlen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CodingStateMachine.get_coding_state_machine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CodingStateMachine.next_state": [
            {
                "type": "method",
                "args": {
                    "c": "int"
                }
            }
        ],
        "CodingStateMachine.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CodingStateMachine.__init__": [
            {
                "type": "method",
                "args": {
                    "sm": "dict"
                }
            }
        ]
    },
    "packages.chardet.eucjpprober": {
        "EUCJPProber._mCodingSM": [
            {
                "type": "attr",
                "anno": "CodingStateMachine"
            }
        ],
        "EUCJPProber._mDistributionAnalyzer": [
            {
                "type": "attr",
                "anno": "EUCJPDistributionAnalysis"
            }
        ],
        "EUCJPProber._mContextAnalyzer": [
            {
                "type": "attr",
                "anno": "EUCJPContextAnalysis"
            }
        ],
        "EUCJPProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCJPProber._mState": [
            {
                "type": "attr",
                "anno": "constants.State"
            }
        ],
        "EUCJPProber.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCJPProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCJPProber.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCJPProber.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ]
    },
    "packages.chardet.compat": {
        "base_str": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "wrap_ord": [
            {
                "type": "func",
                "args": {
                    "a": "int"
                }
            }
        ]
    },
    "packages.chardet.jpcntx": {
        "NUM_OF_CATEGORY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DONT_KNOW": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ENOUGH_REL_THRESHOLD": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MAX_REL_THRESHOLD": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MINIMUM_DATA_THRESHOLD": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "jp2CharContext": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "JapaneseContextAnalysis._mTotalRel": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "JapaneseContextAnalysis._mRelSample": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "JapaneseContextAnalysis._mNeedToSkipCharNum": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "JapaneseContextAnalysis._mLastCharOrder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "JapaneseContextAnalysis._mDone": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "JapaneseContextAnalysis.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JapaneseContextAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JapaneseContextAnalysis.got_enough_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JapaneseContextAnalysis.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JapaneseContextAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "JapaneseContextAnalysis.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes",
                    "aLen": "int"
                }
            }
        ],
        "SJISContextAnalysis.charset_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SJISContextAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SJISContextAnalysis.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SJISContextAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "EUCJPContextAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ]
    },
    "packages.chardet.euckrfreq": {
        "EUCKR_TYPICAL_DISTRIBUTION_RATIO": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "EUCKR_TABLE_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EUCKRCharToFreqOrder": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "packages.chardet.langcyrillicmodel": {
        "KOI8R_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "win1251_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[str]"
            }
        ],
        "latin5_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "macCyrillic_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "IBM855_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "IBM866_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "RussianLangModel": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "Koi8rModel": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "Win1251CyrillicModel": [
            {
                "type": "var",
                "anno": "ClassVar[str]"
            }
        ],
        "Latin5CyrillicModel": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "MacCyrillicModel": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "Ibm866Model": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ],
        "Ibm855Model": [
            {
                "type": "var",
                "anno": "ClassVar[ArrayProperty]"
            }
        ]
    },
    "packages.chardet.sbcsgroupprober": {
        "SBCSGroupProber._mProbers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SBCSGroupProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.langthaimodel": {
        "TIS620CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[str]"
            }
        ],
        "ThaiLangModel": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "TIS620ThaiModel": [
            {
                "type": "var",
                "anno": "ClassVar[ThaiLangModel]"
            }
        ]
    },
    "packages.chardet.hebrewprober": {
        "FINAL_KAF": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "NORMAL_KAF": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FINAL_MEM": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "NORMAL_MEM": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FINAL_NUN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "NORMAL_NUN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FINAL_PE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "NORMAL_PE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FINAL_TSADI": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "NORMAL_TSADI": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MIN_FINAL_CHAR_DISTANCE": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MIN_MODEL_DISTANCE": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "VISUAL_HEBREW_NAME": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LOGICAL_HEBREW_NAME": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HebrewProber._mLogicalProber": [
            {
                "type": "attr",
                "anno": "CharSetProber"
            }
        ],
        "HebrewProber._mVisualProber": [
            {
                "type": "attr",
                "anno": "CharSetProber"
            }
        ],
        "HebrewProber._mFinalCharLogicalScore": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HebrewProber._mFinalCharVisualScore": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HebrewProber._mPrev": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HebrewProber._mBeforePrev": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HebrewProber.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HebrewProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HebrewProber.set_model_probers": [
            {
                "type": "method",
                "args": {
                    "logicalProber": "CharSetProber",
                    "visualProber": "CharSetProber"
                }
            }
        ],
        "HebrewProber.is_final": [
            {
                "type": "method",
                "args": {
                    "c": "str"
                }
            }
        ],
        "HebrewProber.is_non_final": [
            {
                "type": "method",
                "args": {
                    "c": "str"
                }
            }
        ],
        "HebrewProber.get_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HebrewProber.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "HebrewProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.langbulgarianmodel": {
        "Latin5_BulgarianCharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[str]"
            }
        ],
        "win1251BulgarianCharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "BulgarianLangModel": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "Latin5BulgarianModel": [
            {
                "type": "var",
                "anno": "ClassVar[BulgarianLangModel]"
            }
        ],
        "Win1251BulgarianModel": [
            {
                "type": "var",
                "anno": "ClassVar[BulgarianLangModel]"
            }
        ]
    },
    "packages.chardet.constants": {
        "_debug": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "eDetecting": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "eFoundIt": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "eNotMe": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "eStart": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "eError": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "eItsMe": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SHORTCUT_THRESHOLD": [
            {
                "type": "var",
                "anno": "float"
            }
        ]
    },
    "packages.chardet.langhebrewmodel": {
        "win1255_CharToOrderMap": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "HebrewLangModel": [
            {
                "type": "var",
                "anno": "ClassVar[int]"
            }
        ],
        "Win1255HebrewModel": [
            {
                "type": "var",
                "anno": "ClassVar[HebrewLangModel]"
            }
        ]
    },
    "packages.chardet.mbcsgroupprober": {
        "MBCSGroupProber._mProbers": [
            {
                "type": "attr",
                "anno": "List[CharSetGroupProber]"
            }
        ],
        "MBCSGroupProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.gb2312prober": {
        "GB2312Prober._mCodingSM": [
            {
                "type": "attr",
                "anno": "CodingStateMachine"
            }
        ],
        "GB2312Prober._mDistributionAnalyzer": [
            {
                "type": "attr",
                "anno": "GB2312DistributionAnalysis"
            }
        ],
        "GB2312Prober.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GB2312Prober.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.sbcharsetprober": {
        "SAMPLE_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SB_ENOUGH_REL_THRESHOLD": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "POSITIVE_SHORTCUT_THRESHOLD": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "NEGATIVE_SHORTCUT_THRESHOLD": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "SYMBOL_CAT_ORDER": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "NUMBER_OF_SEQ_CAT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "POSITIVE_CAT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SingleByteCharSetProber._mModel": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SingleByteCharSetProber._mReversed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SingleByteCharSetProber._mNameProber": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SingleByteCharSetProber._mLastOrder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SingleByteCharSetProber._mSeqCounters": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SingleByteCharSetProber._mTotalSeqs": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SingleByteCharSetProber._mTotalChar": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SingleByteCharSetProber._mFreqChar": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SingleByteCharSetProber.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SingleByteCharSetProber.__init__": [
            {
                "type": "method",
                "args": {
                    "model": "dict",
                    "reversed": "bool",
                    "nameProber": "bool"
                }
            }
        ],
        "SingleByteCharSetProber._mState": [
            {
                "type": "attr",
                "anno": "constants.State"
            }
        ],
        "SingleByteCharSetProber.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SingleByteCharSetProber.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "SingleByteCharSetProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.escprober": {
        "EscCharSetProber._mCodingSM": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "EscCharSetProber._mActiveSM": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "EscCharSetProber._mDetectedCharset": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "EscCharSetProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EscCharSetProber.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EscCharSetProber._mState": [
            {
                "type": "attr",
                "anno": "constants.State"
            }
        ],
        "EscCharSetProber.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "EscCharSetProber.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EscCharSetProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.universaldetector": {
        "MINIMUM_THRESHOLD": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "ePureAscii": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "eEscAscii": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "eHighbyte": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UniversalDetector._highBitDetector": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "UniversalDetector._escDetector": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "UniversalDetector._mEscCharSetProber": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "UniversalDetector._mCharSetProbers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "UniversalDetector.result": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UniversalDetector.done": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UniversalDetector._mStart": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UniversalDetector._mGotData": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UniversalDetector._mInputState": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UniversalDetector._mLastChar": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "UniversalDetector.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UniversalDetector.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UniversalDetector.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UniversalDetector.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ]
    },
    "packages.chardet.gb2312freq": {
        "GB2312_TYPICAL_DISTRIBUTION_RATIO": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "GB2312_TABLE_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "GB2312CharToFreqOrder": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ]
    },
    "packages.chardet": {
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "detect": [
            {
                "type": "func",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ]
    },
    "packages.chardet.jisfreq": {
        "JIS_TYPICAL_DISTRIBUTION_RATIO": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "JIS_TABLE_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "JISCharToFreqOrder": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ]
    },
    "packages.chardet.chardistribution": {
        "ENOUGH_DATA_THRESHOLD": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SURE_YES": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "SURE_NO": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MINIMUM_DATA_THRESHOLD": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CharDistributionAnalysis._mCharToFreqOrder": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "CharDistributionAnalysis._mTableSize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CharDistributionAnalysis._mTypicalDistributionRatio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CharDistributionAnalysis._mDone": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CharDistributionAnalysis._mTotalChars": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CharDistributionAnalysis._mFreqChars": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CharDistributionAnalysis.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharDistributionAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharDistributionAnalysis.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharDistributionAnalysis.got_enough_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharDistributionAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "CharDistributionAnalysis.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes",
                    "aCharLen": "int"
                }
            }
        ],
        "EUCTWDistributionAnalysis._mCharToFreqOrder": [
            {
                "type": "attr",
                "anno": "CharDistributionAnalysis"
            }
        ],
        "EUCTWDistributionAnalysis._mTableSize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "EUCTWDistributionAnalysis._mTypicalDistributionRatio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EUCTWDistributionAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCTWDistributionAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "EUCKRDistributionAnalysis._mCharToFreqOrder": [
            {
                "type": "attr",
                "anno": "CharDistributionAnalysis"
            }
        ],
        "EUCKRDistributionAnalysis._mTableSize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "EUCKRDistributionAnalysis._mTypicalDistributionRatio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EUCKRDistributionAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCKRDistributionAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "GB2312DistributionAnalysis._mCharToFreqOrder": [
            {
                "type": "attr",
                "anno": "CharDistributionAnalysis"
            }
        ],
        "GB2312DistributionAnalysis._mTableSize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GB2312DistributionAnalysis._mTypicalDistributionRatio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GB2312DistributionAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GB2312DistributionAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "Big5DistributionAnalysis._mCharToFreqOrder": [
            {
                "type": "attr",
                "anno": "CharDistributionAnalysis"
            }
        ],
        "Big5DistributionAnalysis._mTableSize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Big5DistributionAnalysis._mTypicalDistributionRatio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Big5DistributionAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Big5DistributionAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "SJISDistributionAnalysis._mCharToFreqOrder": [
            {
                "type": "attr",
                "anno": "CharDistributionAnalysis"
            }
        ],
        "SJISDistributionAnalysis._mTableSize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SJISDistributionAnalysis._mTypicalDistributionRatio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SJISDistributionAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SJISDistributionAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ],
        "EUCJPDistributionAnalysis._mCharToFreqOrder": [
            {
                "type": "attr",
                "anno": "CharDistributionAnalysis"
            }
        ],
        "EUCJPDistributionAnalysis._mTableSize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "EUCJPDistributionAnalysis._mTypicalDistributionRatio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EUCJPDistributionAnalysis.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCJPDistributionAnalysis.get_order": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ]
    },
    "packages.chardet.euckrprober": {
        "EUCKRProber._mCodingSM": [
            {
                "type": "attr",
                "anno": "CodingStateMachine"
            }
        ],
        "EUCKRProber._mDistributionAnalyzer": [
            {
                "type": "attr",
                "anno": "EUCKRDistributionAnalysis"
            }
        ],
        "EUCKRProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCKRProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "packages.chardet.mbcharsetprober": {
        "MultiByteCharSetProber._mDistributionAnalyzer": [
            {
                "type": "attr",
                "anno": "constants.DistributionAnalyzer"
            }
        ],
        "MultiByteCharSetProber._mCodingSM": [
            {
                "type": "attr",
                "anno": "constants.CodingStateMachine"
            }
        ],
        "MultiByteCharSetProber._mLastChar": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MultiByteCharSetProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiByteCharSetProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiByteCharSetProber._mState": [
            {
                "type": "attr",
                "anno": "constants.State"
            }
        ],
        "MultiByteCharSetProber.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiByteCharSetProber.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiByteCharSetProber.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ]
    },
    "packages.chardet.charsetgroupprober": {
        "CharSetGroupProber._mActiveNum": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CharSetGroupProber._mProbers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "CharSetGroupProber._mBestGuessProber": [
            {
                "type": "attr",
                "anno": "constants.Prober"
            }
        ],
        "CharSetGroupProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharSetGroupProber.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharSetGroupProber._mState": [
            {
                "type": "attr",
                "anno": "constants.State"
            }
        ],
        "CharSetGroupProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharSetGroupProber.get_confidence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharSetGroupProber.feed": [
            {
                "type": "method",
                "args": {
                    "aBuf": "bytes"
                }
            }
        ]
    },
    "packages.chardet.euctwprober": {
        "EUCTWProber._mCodingSM": [
            {
                "type": "attr",
                "anno": "CodingStateMachine"
            }
        ],
        "EUCTWProber._mDistributionAnalyzer": [
            {
                "type": "attr",
                "anno": "EUCTWDistributionAnalysis"
            }
        ],
        "EUCTWProber.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EUCTWProber.get_charset_name": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "compat": {
        "_ver": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "is_py2": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "is_py3": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "bytes": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "str": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "builtin_str": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "basestring": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "numeric_types": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ]
    },
    "models": {
        "REDIRECT_STATI": [
            {
                "type": "var",
                "anno": "CaseInsensitiveDict"
            }
        ],
        "DEFAULT_REDIRECT_LIMIT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CONTENT_CHUNK_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ITER_CHUNK_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Request.hooks": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Request.method": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.headers": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "Request.files": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Request.data": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Request.json": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Request.params": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "Request.auth": [
            {
                "type": "attr",
                "anno": "HTTPBasicAuth"
            }
        ],
        "Request.cookies": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Request.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PreparedRequest.method": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PreparedRequest.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PreparedRequest.headers": [
            {
                "type": "attr",
                "anno": "CaseInsensitiveDict"
            }
        ],
        "PreparedRequest._cookies": [
            {
                "type": "attr",
                "anno": "cookielib.CookieJar"
            }
        ],
        "PreparedRequest.body": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "PreparedRequest.hooks": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PreparedRequest.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PreparedRequest.prepare_method": [
            {
                "type": "method",
                "args": {
                    "method": "str"
                }
            }
        ],
        "Response.__attrs__": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Response._content": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Response._content_consumed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Response.status_code": [
            {
                "type": "attr",
                "anno": "codes.Code"
            }
        ],
        "Response.headers": [
            {
                "type": "attr",
                "anno": "CaseInsensitiveDict"
            }
        ],
        "Response.raw": [
            {
                "type": "attr",
                "anno": "Response"
            }
        ],
        "Response.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RequestEncodingMixin.path_url": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Response.history": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Response.reason": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Response.cookies": [
            {
                "type": "attr",
                "anno": "cookielib.CookieJar"
            }
        ],
        "Response.elapsed": [
            {
                "type": "attr",
                "anno": "datetime.timedelta"
            }
        ],
        "Response.request": [
            {
                "type": "attr",
                "anno": "Request"
            }
        ],
        "Response.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.is_redirect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.is_permanent_redirect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "RequestEncodingMixin._encode_params": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "PreparedRequest.prepare_headers": [
            {
                "type": "method",
                "args": {
                    "headers": "dict"
                }
            }
        ],
        "Response.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestHooksMixin.deregister_hook": [
            {
                "type": "method",
                "args": {
                    "event": "str",
                    "hook": "Callable"
                }
            }
        ],
        "RequestHooksMixin.register_hook": [
            {
                "type": "method",
                "args": {
                    "event": "str",
                    "hook": "collections.Callable"
                }
            }
        ],
        "PreparedRequest.prepare_hooks": [
            {
                "type": "method",
                "args": {
                    "hooks": "list"
                }
            }
        ],
        "PreparedRequest.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PreparedRequest.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Request.__init__": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "headers": "dict[str, str]",
                    "files": "list[str]",
                    "data": "list[str]",
                    "params": "dict[str, str]",
                    "auth": "HTTPBasicAuth",
                    "cookies": "dict",
                    "hooks": "dict",
                    "json": "dict"
                }
            }
        ],
        "Response.links": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PreparedRequest.prepare_content_length": [
            {
                "type": "method",
                "args": {
                    "body": "bytes"
                }
            }
        ],
        "PreparedRequest.prepare_auth": [
            {
                "type": "method",
                "args": {
                    "auth": "HTTPBasicAuth",
                    "url": "str"
                }
            }
        ],
        "Response.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestEncodingMixin._encode_files": [
            {
                "type": "method",
                "args": {
                    "files": "dict",
                    "data": "dict"
                }
            }
        ],
        "PreparedRequest.prepare_body": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "files": "dict",
                    "json": "dict"
                }
            }
        ],
        "PreparedRequest.prepare_cookies": [
            {
                "type": "method",
                "args": {
                    "cookies": "dict"
                }
            }
        ],
        "Response.raise_for_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.ok": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.__nonzero__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.__bool__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.iter_content": [
            {
                "type": "method",
                "args": {
                    "chunk_size": "int",
                    "decode_unicode": "bool"
                }
            }
        ],
        "Response.content": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.apparent_encoding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.json": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Response.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.iter_lines": [
            {
                "type": "method",
                "args": {
                    "chunk_size": "int",
                    "decode_unicode": "str",
                    "delimiter": "str"
                }
            }
        ],
        "Response.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PreparedRequest.prepare_url": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "params": "dict"
                }
            }
        ],
        "PreparedRequest.prepare": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "headers": "dict",
                    "files": "dict",
                    "data": "dict",
                    "params": "dict",
                    "auth": "HTTPBasicAuth",
                    "cookies": "dict",
                    "hooks": "list",
                    "json": "dict"
                }
            }
        ],
        "Request.prepare": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "certs": {
        "where": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "cookies": {
        "MockRequest._r": [
            {
                "type": "attr",
                "anno": "MockResponse"
            }
        ],
        "MockRequest._new_headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MockRequest.type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MockRequest.__init__": [
            {
                "type": "method",
                "args": {
                    "request": "MockRequest"
                }
            }
        ],
        "MockRequest.get_type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockRequest.is_unverifiable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockRequest.add_header": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "val": "str"
                }
            }
        ],
        "MockRequest.add_unredirected_header": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "MockRequest.get_new_headers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockRequest.unverifiable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockRequest.host": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockRequest.get_host": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockRequest.get_origin_req_host": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockRequest.origin_req_host": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockResponse._headers": [
            {
                "type": "attr",
                "anno": "Morsel"
            }
        ],
        "MockResponse.__init__": [
            {
                "type": "method",
                "args": {
                    "headers": "Morsel"
                }
            }
        ],
        "MockResponse.info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MockResponse.getheaders": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "extract_cookies_to_jar": [
            {
                "type": "func",
                "args": {
                    "jar": "cookielib.CookieJar",
                    "request": "MockRequest",
                    "response": "MockResponse"
                }
            }
        ],
        "RequestsCookieJar.iterkeys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.itervalues": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "remove_cookie_by_name": [
            {
                "type": "func",
                "args": {
                    "cookiejar": "cookielib.CookieJar",
                    "name": "str",
                    "domain": "str",
                    "path": "str"
                }
            }
        ],
        "RequestsCookieJar.values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.iteritems": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.list_domains": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.list_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.multiple_domains": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.get_dict": [
            {
                "type": "method",
                "args": {
                    "domain": "str",
                    "path": "str"
                }
            }
        ],
        "RequestsCookieJar.__contains__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "RequestsCookieJar.__delitem__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "RequestsCookieJar.set_cookie": [
            {
                "type": "method",
                "args": {
                    "cookie": "cookielib.Cookie",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "RequestsCookieJar.update": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "RequestsCookieJar._find": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "domain": "str",
                    "path": "str"
                }
            }
        ],
        "RequestsCookieJar._find_no_duplicates": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "domain": "str",
                    "path": "str"
                }
            }
        ],
        "RequestsCookieJar.__getitem__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "RequestsCookieJar.get": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "object",
                    "domain": "str",
                    "path": "str"
                }
            }
        ],
        "RequestsCookieJar._cookies_lock": [
            {
                "type": "attr",
                "anno": "threading.RLock"
            }
        ],
        "RequestsCookieJar.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "RequestsCookieJar.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "create_cookie": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "value": "object",
                    "kwargs": "object"
                }
            }
        ],
        "morsel_to_cookie": [
            {
                "type": "func",
                "args": {
                    "morsel": "Morsel"
                }
            }
        ],
        "cookiejar_from_dict": [
            {
                "type": "func",
                "args": {
                    "cookie_dict": "dict",
                    "cookiejar": "cookielib.CookieJar",
                    "overwrite": "bool"
                }
            }
        ],
        "merge_cookies": [
            {
                "type": "func",
                "args": {
                    "cookiejar": "cookielib.CookieJar",
                    "cookies": "cookielib.CookieJar"
                }
            }
        ],
        "MockRequest.has_header": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_copy_cookie_jar": [
            {
                "type": "func",
                "args": {
                    "jar": "cookielib.CookieJar"
                }
            }
        ],
        "RequestsCookieJar.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RequestsCookieJar.set": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "object",
                    "kwargs": "object"
                }
            }
        ],
        "RequestsCookieJar.__setitem__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "object"
                }
            }
        ],
        "get_cookie_header": [
            {
                "type": "func",
                "args": {
                    "jar": "cookielib.CookieJar",
                    "request": "MockRequest"
                }
            }
        ],
        "MockRequest.get_header": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "object"
                }
            }
        ],
        "MockRequest.get_full_url": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "sessions": {
        "REDIRECT_CACHE_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "merge_setting": [
            {
                "type": "func",
                "args": {
                    "request_setting": "object",
                    "session_setting": "object",
                    "dict_class": "OrderedDict"
                }
            }
        ],
        "SessionRedirectMixin.rebuild_method": [
            {
                "type": "method",
                "args": {
                    "prepared_request": "PreparedRequest",
                    "response": "PreparedRequest"
                }
            }
        ],
        "Session.__attrs__": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Session.headers": [
            {
                "type": "attr",
                "anno": "CaseInsensitiveDict"
            }
        ],
        "Session.auth": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Session.proxies": [
            {
                "type": "attr",
                "anno": "CaseInsensitiveDict"
            }
        ],
        "Session.hooks": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Session.params": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Session.stream": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Session.verify": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Session.cert": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Session.max_redirects": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Session.trust_env": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Session.cookies": [
            {
                "type": "attr",
                "anno": "cookielib.CookieJar"
            }
        ],
        "Session.adapters": [
            {
                "type": "attr",
                "anno": "CaseInsensitiveDict"
            }
        ],
        "Session.redirect_cache": [
            {
                "type": "attr",
                "anno": "RecentlyUsedContainer"
            }
        ],
        "Session.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Session.merge_environment_settings": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "proxies": "CaseInsensitiveDict",
                    "stream": "object",
                    "verify": "object",
                    "cert": "object"
                }
            }
        ],
        "Session.mount": [
            {
                "type": "method",
                "args": {
                    "prefix": "str",
                    "adapter": "HTTPAdapter"
                }
            }
        ],
        "Session.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Session.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "Session.send": [
            {
                "type": "method",
                "args": {
                    "request": "PreparedRequest",
                    "kwargs": "object"
                }
            }
        ],
        "Session.request": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "params": "dict[str, str]",
                    "data": "dict[str]",
                    "headers": "dict[str, str]",
                    "cookies": "dict",
                    "files": "list[str]",
                    "auth": "HTTPBasicAuth",
                    "timeout": "object",
                    "allow_redirects": "bool",
                    "proxies": "CaseInsensitiveDict",
                    "hooks": "dict",
                    "stream": "object",
                    "verify": "object",
                    "cert": "object",
                    "json": "dict"
                }
            }
        ],
        "Session.delete": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Session.patch": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "data": "dict[str]",
                    "kwargs": "object"
                }
            }
        ],
        "Session.put": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "data": "dict[str]",
                    "kwargs": "object"
                }
            }
        ],
        "Session.post": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "data": "dict[str]",
                    "json": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "Session.head": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Session.options": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Session.get": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "kwargs": "object"
                }
            }
        ],
        "SessionRedirectMixin.rebuild_proxies": [
            {
                "type": "method",
                "args": {
                    "prepared_request": "PreparedRequest",
                    "proxies": "CaseInsensitiveDict"
                }
            }
        ],
        "merge_hooks": [
            {
                "type": "func",
                "args": {
                    "request_hooks": "object",
                    "session_hooks": "object",
                    "dict_class": "OrderedDict"
                }
            }
        ],
        "Session.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Session.__exit__": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Session.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "session": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "SessionRedirectMixin.rebuild_auth": [
            {
                "type": "method",
                "args": {
                    "prepared_request": "PreparedRequest",
                    "response": "PreparedRequest"
                }
            }
        ],
        "Session.get_adapter": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "Session.prepare_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "SessionRedirectMixin.resolve_redirects": [
            {
                "type": "method",
                "args": {
                    "resp": "Response",
                    "req": "PreparedRequest",
                    "stream": "bool",
                    "timeout": "object",
                    "verify": "bool",
                    "cert": "object",
                    "proxies": "CaseInsensitiveDict",
                    "adapter_kwargs": "object"
                }
            }
        ]
    },
    "status_codes": {
        "_codes": [
            {
                "type": "var",
                "anno": "LookupDict"
            }
        ],
        "codes": [
            {
                "type": "var",
                "anno": "LookupDict"
            }
        ]
    },
    "": {
        "__title__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__build__": [
            {
                "type": "var",
                "anno": "codes.Code"
            }
        ],
        "__author__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__license__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__copyright__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "NullHandler.emit": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ]
    },
    "adapters": {
        "DEFAULT_POOLBLOCK": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "DEFAULT_POOLSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DEFAULT_RETRIES": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DEFAULT_POOL_TIMEOUT": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "BaseAdapter.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseAdapter.send": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseAdapter.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPAdapter.__attrs__": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "HTTPAdapter.max_retries": [
            {
                "type": "attr",
                "anno": "Retry"
            }
        ],
        "HTTPAdapter.config": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "HTTPAdapter.proxy_manager": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "HTTPAdapter._pool_connections": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPAdapter._pool_maxsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTPAdapter._pool_block": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTPAdapter.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPAdapter.poolmanager": [
            {
                "type": "attr",
                "anno": "PoolManager"
            }
        ],
        "HTTPAdapter.cert_verify": [
            {
                "type": "method",
                "args": {
                    "conn": "HTTPConnection",
                    "url": "str",
                    "verify": "bool",
                    "cert": "str"
                }
            }
        ],
        "HTTPAdapter.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTTPAdapter.add_headers": [
            {
                "type": "method",
                "args": {
                    "request": "HTTPRequest",
                    "kwargs": "object"
                }
            }
        ],
        "HTTPAdapter.proxy_headers": [
            {
                "type": "method",
                "args": {
                    "proxy": "str"
                }
            }
        ],
        "HTTPAdapter.init_poolmanager": [
            {
                "type": "method",
                "args": {
                    "connections": "int",
                    "maxsize": "int",
                    "block": "bool",
                    "pool_kwargs": "dict"
                }
            }
        ],
        "HTTPAdapter.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "HTTPAdapter.__init__": [
            {
                "type": "method",
                "args": {
                    "pool_connections": "int",
                    "pool_maxsize": "int",
                    "max_retries": "int",
                    "pool_block": "bool"
                }
            }
        ],
        "HTTPAdapter.request_url": [
            {
                "type": "method",
                "args": {
                    "request": "HTTPRequest",
                    "proxies": "dict"
                }
            }
        ],
        "HTTPAdapter.build_response": [
            {
                "type": "method",
                "args": {
                    "req": "HTTPRequest",
                    "resp": "HTTPResponse"
                }
            }
        ],
        "SOCKSProxyManager": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "HTTPAdapter.proxy_manager_for": [
            {
                "type": "method",
                "args": {
                    "proxy": "str",
                    "proxy_kwargs": "object"
                }
            }
        ],
        "HTTPAdapter.get_connection": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "proxies": "dict"
                }
            }
        ],
        "HTTPAdapter.send": [
            {
                "type": "method",
                "args": {
                    "request": "HTTPRequest",
                    "stream": "bool",
                    "timeout": "object",
                    "verify": "bool",
                    "cert": "str",
                    "proxies": "dict"
                }
            }
        ]
    },
    "hooks": {
        "HOOKS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "default_hooks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "dispatch_hook": [
            {
                "type": "func",
                "args": {
                    "key": "str",
                    "hooks": "dict",
                    "hook_data": "object",
                    "kwargs": "object"
                }
            }
        ]
    },
    "packages.chardet.chardetect": {
        "description_of": [
            {
                "type": "func",
                "args": {
                    "lines": "list",
                    "name": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {
                    "argv": "list"
                }
            }
        ]
    },
    "api": {
        "request": [
            {
                "type": "func",
                "args": {
                    "method": "str",
                    "url": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "delete": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "patch": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "data": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "put": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "data": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "post": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "data": "dict",
                    "json": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "head": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "options": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "get": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "params": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    }
}