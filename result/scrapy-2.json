{
    "core.scheduler": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "Scheduler.df": [
            {
                "type": "attr",
                "anno": "DupeFilter"
            }
        ],
        "Scheduler.dqdir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Scheduler.pqclass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Scheduler.dqclass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Scheduler.mqclass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Scheduler.logunser": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Scheduler.stats": [
            {
                "type": "attr",
                "anno": "StatsCollector"
            }
        ],
        "Scheduler.crawler": [
            {
                "type": "attr",
                "anno": "logging.Crawler"
            }
        ],
        "Scheduler.has_pending_requests": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scheduler.spider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Scheduler.mqs": [
            {
                "type": "attr",
                "anno": "QueueCollector"
            }
        ],
        "Scheduler.dqs": [
            {
                "type": "attr",
                "anno": "QueueCollector"
            }
        ],
        "Scheduler.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scheduler._newmq": [
            {
                "type": "method",
                "args": {
                    "priority": "int"
                }
            }
        ],
        "Scheduler._newdq": [
            {
                "type": "method",
                "args": {
                    "priority": "int"
                }
            }
        ],
        "Scheduler._mq": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scheduler._dqdir": [
            {
                "type": "method",
                "args": {
                    "jobdir": "str"
                }
            }
        ],
        "Scheduler.__init__": [
            {
                "type": "method",
                "args": {
                    "dupefilter": "DupeFilter",
                    "jobdir": "str",
                    "dqclass": "str",
                    "mqclass": "str",
                    "logunser": "bool",
                    "stats": "StatsCollector",
                    "pqclass": "str",
                    "crawler": "Spider"
                }
            }
        ],
        "Scheduler._read_dqs_state": [
            {
                "type": "method",
                "args": {
                    "dqdir": "str"
                }
            }
        ],
        "Scheduler._write_dqs_state": [
            {
                "type": "method",
                "args": {
                    "dqdir": "str",
                    "state": "dict"
                }
            }
        ],
        "Scheduler._dq": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scheduler._mqpush": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "Scheduler._dqpush": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "Scheduler.open": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "Scheduler.enqueue_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "Scheduler._dqpop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scheduler.next_request": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scheduler.close": [
            {
                "type": "method",
                "args": {
                    "reason": "str"
                }
            }
        ],
        "Scheduler.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "core.engine": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "Slot.closing": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Slot.inprogress": [
            {
                "type": "attr",
                "anno": "set[Request]"
            }
        ],
        "Slot.start_requests": [
            {
                "type": "attr",
                "anno": "Iterator[Request]"
            }
        ],
        "Slot.close_if_idle": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Slot.nextcall": [
            {
                "type": "attr",
                "anno": "CallLaterOnce"
            }
        ],
        "Slot.scheduler": [
            {
                "type": "attr",
                "anno": "execution.scheduler.scheduler"
            }
        ],
        "Slot.heartbeat": [
            {
                "type": "attr",
                "anno": "task.LoopingCall"
            }
        ],
        "Slot.add_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "ExecutionEngine.crawler": [
            {
                "type": "attr",
                "anno": "Scraper"
            }
        ],
        "ExecutionEngine.settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ExecutionEngine.signals": [
            {
                "type": "attr",
                "anno": "signals.SignalManager"
            }
        ],
        "ExecutionEngine.logformatter": [
            {
                "type": "attr",
                "anno": "logging.LogFormatter"
            }
        ],
        "ExecutionEngine.slot": [
            {
                "type": "attr",
                "anno": "Slot"
            }
        ],
        "ExecutionEngine.spider": [
            {
                "type": "attr",
                "anno": "Spider"
            }
        ],
        "ExecutionEngine.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ExecutionEngine.paused": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ExecutionEngine.scheduler_cls": [
            {
                "type": "attr",
                "anno": "load_object"
            }
        ],
        "ExecutionEngine.downloader": [
            {
                "type": "attr",
                "anno": "downloader_cls"
            }
        ],
        "ExecutionEngine.scraper": [
            {
                "type": "attr",
                "anno": "Scraper"
            }
        ],
        "ExecutionEngine._spider_closed_callback": [
            {
                "type": "attr",
                "anno": "Callable[[Spider], None]"
            }
        ],
        "ExecutionEngine.start_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ExecutionEngine._closewait": [
            {
                "type": "attr",
                "anno": "defer.Deferred"
            }
        ],
        "ExecutionEngine.pause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExecutionEngine.unpause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExecutionEngine.open_spiders": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExecutionEngine.has_capacity": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExecutionEngine._needs_backout": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "ExecutionEngine.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExecutionEngine._finish_stopping_engine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExecutionEngine.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Scraper",
                    "spider_closed_callback": "Callable[[Scraper], None]"
                }
            }
        ],
        "ExecutionEngine.schedule": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Scraper"
                }
            }
        ],
        "ExecutionEngine.crawl": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Scraper"
                }
            }
        ],
        "Slot.__init__": [
            {
                "type": "method",
                "args": {
                    "start_requests": "Iterator[Request]",
                    "close_if_idle": "bool",
                    "nextcall": "CallLaterOnce",
                    "scheduler": "execution.scheduler.scheduler"
                }
            }
        ],
        "ExecutionEngine.spider_is_idle": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "ExecutionEngine.close_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "reason": "str"
                }
            }
        ],
        "ExecutionEngine._close_all_spiders": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExecutionEngine.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slot._maybe_fire_closing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slot.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExecutionEngine.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slot.remove_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "ExecutionEngine._spider_idle": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "ExecutionEngine.open_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "start_requests": "Iterator[Request]",
                    "close_if_idle": "bool"
                }
            }
        ],
        "ExecutionEngine._download": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "ExecutionEngine.download": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Scraper"
                }
            }
        ],
        "ExecutionEngine._handle_downloader_output": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "ExecutionEngine._downloaded": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "slot": "Slot",
                    "request": "Request",
                    "spider": "Scraper"
                }
            }
        ],
        "ExecutionEngine._next_request_from_scheduler": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "ExecutionEngine._next_request": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ]
    },
    "core.downloader.middleware": {
        "DownloaderMiddlewareManager.component_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DownloaderMiddlewareManager.download": [
            {
                "type": "method",
                "args": {
                    "download_func": "Callable",
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "DownloaderMiddlewareManager._get_mwlist_from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MiddlewareManager]",
                    "settings": "dict"
                }
            }
        ],
        "DownloaderMiddlewareManager._add_middleware": [
            {
                "type": "method",
                "args": {
                    "mw": "object"
                }
            }
        ]
    },
    "core.downloader.contextfactory": {
        "ScrapyClientContextFactory._ssl_method": [
            {
                "type": "attr",
                "anno": "SSL.SSLMethod"
            }
        ],
        "ScrapyClientContextFactory.tls_verbose_logging": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrapyClientContextFactory.tls_ciphers": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScrapyClientContextFactory.__init__": [
            {
                "type": "method",
                "args": {
                    "method": "SSL.SSLMethod",
                    "tls_verbose_logging": "bool",
                    "tls_ciphers": "str",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "ScrapyClientContextFactory.getCertificateOptions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyClientContextFactory.getContext": [
            {
                "type": "method",
                "args": {
                    "hostname": "str",
                    "port": "int"
                }
            }
        ],
        "ScrapyClientContextFactory.creatorForNetloc": [
            {
                "type": "method",
                "args": {
                    "hostname": "str",
                    "port": "int"
                }
            }
        ],
        "BrowserLikeContextFactory.creatorForNetloc": [
            {
                "type": "method",
                "args": {
                    "hostname": "str",
                    "port": "int"
                }
            }
        ],
        "ScrapyClientContextFactory.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[ScrapyClientContextFactory]",
                    "settings": "dict",
                    "method": "int",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "core.downloader.tls": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "METHOD_SSLv3": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "METHOD_TLS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "METHOD_TLSv10": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "METHOD_TLSv11": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "METHOD_TLSv12": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "openssl_methods": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "set_tlsext_host_name": [
            {
                "type": "func",
                "args": {
                    "connection": "SSL.SSLConnection",
                    "hostNameBytes": "bytes"
                }
            }
        ],
        "ScrapyClientTLSOptions.verbose_logging": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrapyClientTLSOptions.__init__": [
            {
                "type": "method",
                "args": {
                    "hostname": "str",
                    "ctx": "SSL.SSLContext",
                    "verbose_logging": "bool"
                }
            }
        ],
        "DEFAULT_CIPHERS": [
            {
                "type": "var",
                "anno": "AcceptableCiphers"
            }
        ],
        "ScrapyClientTLSOptions._identityVerifyingInfoCallback": [
            {
                "type": "method",
                "args": {
                    "connection": "SSL.SSLConnection",
                    "where": "int",
                    "ret": "int"
                }
            }
        ]
    },
    "core.downloader.webclient": {
        "ScrapyHTTPPageGetter.delimiter": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "ScrapyHTTPPageGetter.headers": [
            {
                "type": "attr",
                "anno": "Headers"
            }
        ],
        "ScrapyHTTPPageGetter.lineReceived": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "ScrapyHTTPPageGetter._connection_lost_reason": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScrapyHTTPPageGetter.connectionLost": [
            {
                "type": "method",
                "args": {
                    "reason": "str"
                }
            }
        ],
        "ScrapyHTTPPageGetter.handleStatus": [
            {
                "type": "method",
                "args": {
                    "version": "str",
                    "status": "str",
                    "message": "str"
                }
            }
        ],
        "ScrapyHTTPClientFactory.protocol": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScrapyHTTPClientFactory.waiting": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrapyHTTPClientFactory.noisy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrapyHTTPClientFactory.followRedirect": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrapyHTTPClientFactory.afterFoundGet": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrapyHTTPClientFactory._url": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "ScrapyHTTPClientFactory.url": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "ScrapyHTTPClientFactory.method": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "ScrapyHTTPClientFactory.body": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "ScrapyHTTPClientFactory.headers": [
            {
                "type": "attr",
                "anno": "Headers"
            }
        ],
        "ScrapyHTTPClientFactory.response_headers": [
            {
                "type": "attr",
                "anno": "Headers"
            }
        ],
        "ScrapyHTTPClientFactory.timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrapyHTTPClientFactory.start_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ScrapyHTTPClientFactory.deferred": [
            {
                "type": "attr",
                "anno": "defer.Deferred"
            }
        ],
        "ScrapyHTTPClientFactory._disconnectedDeferred": [
            {
                "type": "attr",
                "anno": "defer.Deferred"
            }
        ],
        "ScrapyHTTPClientFactory.path": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "ScrapyHTTPClientFactory.headers_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ScrapyHTTPClientFactory.gotHeaders": [
            {
                "type": "method",
                "args": {
                    "headers": "Headers"
                }
            }
        ],
        "ScrapyHTTPPageGetter.handleEndHeaders": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_parsed_url_args": [
            {
                "type": "func",
                "args": {
                    "parsed": "urlparse"
                }
            }
        ],
        "_parse": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "ScrapyHTTPPageGetter.handleResponse": [
            {
                "type": "method",
                "args": {
                    "response": "bytes"
                }
            }
        ],
        "ScrapyHTTPClientFactory._build_response": [
            {
                "type": "method",
                "args": {
                    "body": "bytes",
                    "request": "HTTPClient"
                }
            }
        ],
        "ScrapyHTTPClientFactory._set_connection_attributes": [
            {
                "type": "method",
                "args": {
                    "request": "HTTPClient"
                }
            }
        ],
        "ScrapyHTTPPageGetter.handleHeader": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "ScrapyHTTPClientFactory.__init__": [
            {
                "type": "method",
                "args": {
                    "request": "HTTPClient",
                    "timeout": "int"
                }
            }
        ],
        "ScrapyHTTPPageGetter.timeout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyHTTPPageGetter.connectionMade": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.downloader.handlers.s3": {
        "S3DownloadHandler.anon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "S3DownloadHandler._signer": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3DownloadHandler.conn": [
            {
                "type": "attr",
                "anno": "S3Connection"
            }
        ],
        "S3DownloadHandler._download_http": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_get_boto_connection": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "S3DownloadHandler.download_request": [
            {
                "type": "method",
                "args": {
                    "request": "str",
                    "spider": "str"
                }
            }
        ],
        "S3DownloadHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict",
                    "aws_access_key_id": "str",
                    "aws_secret_access_key": "str",
                    "httpdownloadhandler": "HTTPDownloadHandler",
                    "kw": "str"
                }
            }
        ]
    },
    "core.downloader.handlers.ftp": {
        "ReceivedDataProtocol.__filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ReceivedDataProtocol.body": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "ReceivedDataProtocol.size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ReceivedDataProtocol.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "ReceivedDataProtocol.filename": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_CODE_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "FTPDownloadHandler.lazy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FTPDownloadHandler.CODE_MAPPING": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FTPDownloadHandler.default_user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FTPDownloadHandler.default_password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FTPDownloadHandler.passive_mode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FTPDownloadHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "FTPDownloadHandler.client": [
            {
                "type": "attr",
                "anno": "FTPClient"
            }
        ],
        "FTPDownloadHandler.result": [
            {
                "type": "attr",
                "anno": "ReceivedDataProtocol"
            }
        ],
        "FTPDownloadHandler._failed": [
            {
                "type": "method",
                "args": {
                    "result": "ReceivedDataProtocol",
                    "request": "ReceivedDataProtocol"
                }
            }
        ],
        "ReceivedDataProtocol.dataReceived": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "ReceivedDataProtocol.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FTPDownloadHandler._build_response": [
            {
                "type": "method",
                "args": {
                    "result": "ReceivedDataProtocol",
                    "request": "ReceivedDataProtocol",
                    "protocol": "ReceivedDataProtocol"
                }
            }
        ],
        "FTPDownloadHandler.gotClient": [
            {
                "type": "method",
                "args": {
                    "client": "FTPClient",
                    "request": "ReceivedDataProtocol",
                    "filepath": "str"
                }
            }
        ],
        "FTPDownloadHandler.download_request": [
            {
                "type": "method",
                "args": {
                    "request": "str",
                    "spider": "str"
                }
            }
        ]
    },
    "core.downloader.handlers.datauri": {
        "DataURIDownloadHandler.lazy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DataURIDownloadHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "DataURIDownloadHandler.download_request": [
            {
                "type": "method",
                "args": {
                    "request": "str",
                    "spider": "str"
                }
            }
        ]
    },
    "core.downloader.handlers.http11": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "HTTP11DownloadHandler.lazy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTP11DownloadHandler._pool": [
            {
                "type": "attr",
                "anno": "HTTPConnectionPool"
            }
        ],
        "HTTP11DownloadHandler._sslMethod": [
            {
                "type": "attr",
                "anno": "openssl_methods"
            }
        ],
        "HTTP11DownloadHandler._contextFactoryClass": [
            {
                "type": "attr",
                "anno": "load_object"
            }
        ],
        "HTTP11DownloadHandler._contextFactory": [
            {
                "type": "attr",
                "anno": "create_instance"
            }
        ],
        "HTTP11DownloadHandler._default_maxsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTP11DownloadHandler._default_warnsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTTP11DownloadHandler._fail_on_dataloss": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTP11DownloadHandler._disconnect_timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TunnelingTCP4ClientEndpoint._responseMatcher": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "TunnelingTCP4ClientEndpoint._tunnelReadyDeferred": [
            {
                "type": "attr",
                "anno": "defer.Deferred"
            }
        ],
        "TunnelingTCP4ClientEndpoint._tunneledHost": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TunnelingTCP4ClientEndpoint._tunneledPort": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TunnelingTCP4ClientEndpoint._contextFactory": [
            {
                "type": "attr",
                "anno": "protocol.ContextFactory"
            }
        ],
        "TunnelingTCP4ClientEndpoint._connectBuffer": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "TunnelingTCP4ClientEndpoint.__init__": [
            {
                "type": "method",
                "args": {
                    "reactor": "reactor.Reactor",
                    "host": "str",
                    "port": "int",
                    "proxyConf": "tuple",
                    "contextFactory": "protocol.ContextFactory",
                    "timeout": "int",
                    "bindAddress": "URI"
                }
            }
        ],
        "TunnelingTCP4ClientEndpoint._protocolDataReceived": [
            {
                "type": "attr",
                "anno": "Callable[[], bytes]"
            }
        ],
        "TunnelingTCP4ClientEndpoint._protocol": [
            {
                "type": "attr",
                "anno": "protocol.Protocol"
            }
        ],
        "TunnelingTCP4ClientEndpoint._protocolFactory": [
            {
                "type": "attr",
                "anno": "protocol.ContextFactory"
            }
        ],
        "tunnel_request_data": [
            {
                "type": "func",
                "args": {
                    "host": "str",
                    "port": "int",
                    "proxy_auth_header": "bytes"
                }
            }
        ],
        "TunnelingAgent._proxyConf": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "TunnelingAgent._contextFactory": [
            {
                "type": "attr",
                "anno": "protocol.ContextFactory"
            }
        ],
        "TunnelingAgent.__init__": [
            {
                "type": "method",
                "args": {
                    "reactor": "reactor.Reactor",
                    "proxyConf": "tuple",
                    "contextFactory": "protocol.ContextFactory",
                    "connectTimeout": "float",
                    "bindAddress": "str",
                    "pool": "HTTPConnectionPool"
                }
            }
        ],
        "TunnelingAgent._requestWithEndpoint": [
            {
                "type": "method",
                "args": {
                    "key": "tuple",
                    "endpoint": "str",
                    "method": "bytes",
                    "parsedURI": "URI",
                    "headers": "TxHeaders",
                    "bodyProducer": "IBodyProducer",
                    "requestPath": "str"
                }
            }
        ],
        "ScrapyProxyAgent._proxyURI": [
            {
                "type": "attr",
                "anno": "URI"
            }
        ],
        "ScrapyProxyAgent.__init__": [
            {
                "type": "method",
                "args": {
                    "reactor": "reactor.Reactor",
                    "proxyURI": "bytes",
                    "connectTimeout": "float",
                    "bindAddress": "str",
                    "pool": "HTTPConnectionPool"
                }
            }
        ],
        "ScrapyAgent._Agent": [
            {
                "type": "attr",
                "anno": "Agent"
            }
        ],
        "ScrapyAgent._ProxyAgent": [
            {
                "type": "attr",
                "anno": "Agent"
            }
        ],
        "ScrapyAgent._TunnelingAgent": [
            {
                "type": "attr",
                "anno": "Agent"
            }
        ],
        "ScrapyAgent._contextFactory": [
            {
                "type": "attr",
                "anno": "create_instance"
            }
        ],
        "ScrapyAgent._connectTimeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrapyAgent._bindAddress": [
            {
                "type": "attr",
                "anno": "URI"
            }
        ],
        "ScrapyAgent._pool": [
            {
                "type": "attr",
                "anno": "HTTPConnectionPool"
            }
        ],
        "ScrapyAgent._maxsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrapyAgent._warnsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrapyAgent._fail_on_dataloss": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrapyAgent._txresponse": [
            {
                "type": "attr",
                "anno": "asyncio.Future"
            }
        ],
        "ScrapyAgent.__init__": [
            {
                "type": "method",
                "args": {
                    "contextFactory": "create_instance",
                    "connectTimeout": "int",
                    "bindAddress": "URI",
                    "pool": "HTTPConnectionPool",
                    "maxsize": "int",
                    "warnsize": "int",
                    "fail_on_dataloss": "bool"
                }
            }
        ],
        "ScrapyAgent._timeout_cl": [
            {
                "type": "attr",
                "anno": "reactor.Future"
            }
        ],
        "_RequestBodyProducer.body": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "_RequestBodyProducer.length": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_RequestBodyProducer.__init__": [
            {
                "type": "method",
                "args": {
                    "body": "bytes"
                }
            }
        ],
        "_RequestBodyProducer.pauseProducing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_RequestBodyProducer.stopProducing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ResponseReader._finished": [
            {
                "type": "attr",
                "anno": "asyncio.Future"
            }
        ],
        "_ResponseReader._txresponse": [
            {
                "type": "attr",
                "anno": "asyncio.Future"
            }
        ],
        "_ResponseReader._request": [
            {
                "type": "attr",
                "anno": "asyncio.Future"
            }
        ],
        "_ResponseReader._bodybuf": [
            {
                "type": "attr",
                "anno": "BytesIO"
            }
        ],
        "_ResponseReader._maxsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_ResponseReader._warnsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_ResponseReader._fail_on_dataloss": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_ResponseReader._fail_on_dataloss_warned": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_ResponseReader._reached_warnsize": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_ResponseReader._bytes_received": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_ResponseReader.__init__": [
            {
                "type": "method",
                "args": {
                    "finished": "asyncio.Future",
                    "txresponse": "asyncio.Future",
                    "request": "asyncio.Future",
                    "maxsize": "int",
                    "warnsize": "int",
                    "fail_on_dataloss": "bool"
                }
            }
        ],
        "ScrapyAgent._cb_timeout": [
            {
                "type": "method",
                "args": {
                    "result": "asyncio.Future",
                    "request": "request",
                    "url": "str",
                    "timeout": "int"
                }
            }
        ],
        "TunnelingAgent._getEndpoint": [
            {
                "type": "method",
                "args": {
                    "uri": "URI"
                }
            }
        ],
        "ScrapyProxyAgent.request": [
            {
                "type": "method",
                "args": {
                    "method": "bytes",
                    "uri": "bytes",
                    "headers": "TxHeaders",
                    "bodyProducer": "IBodyProducer"
                }
            }
        ],
        "TunnelingTCP4ClientEndpoint.connectFailed": [
            {
                "type": "method",
                "args": {
                    "reason": "Exception"
                }
            }
        ],
        "ScrapyAgent._cb_latency": [
            {
                "type": "method",
                "args": {
                    "result": "int",
                    "request": "request",
                    "start_time": "float"
                }
            }
        ],
        "HTTP11DownloadHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "ScrapyAgent._cb_bodydone": [
            {
                "type": "method",
                "args": {
                    "result": "asyncio.Future",
                    "request": "request",
                    "url": "str"
                }
            }
        ],
        "_ResponseReader.connectionLost": [
            {
                "type": "method",
                "args": {
                    "reason": "Exception"
                }
            }
        ],
        "HTTP11DownloadHandler.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyAgent._cb_bodyready": [
            {
                "type": "method",
                "args": {
                    "txresponse": "asyncio.Future",
                    "request": "request"
                }
            }
        ],
        "ScrapyAgent._get_agent": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "timeout": "int"
                }
            }
        ],
        "ScrapyAgent.download_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "_ResponseReader.dataReceived": [
            {
                "type": "method",
                "args": {
                    "bodyBytes": "bytes"
                }
            }
        ],
        "TunnelingTCP4ClientEndpoint.processProxyResponse": [
            {
                "type": "method",
                "args": {
                    "rcvd_bytes": "bytes"
                }
            }
        ],
        "_RequestBodyProducer.startProducing": [
            {
                "type": "method",
                "args": {
                    "consumer": "protocol.Consumer"
                }
            }
        ],
        "TunnelingTCP4ClientEndpoint.requestTunnel": [
            {
                "type": "method",
                "args": {
                    "protocol": "protocol.Protocol"
                }
            }
        ],
        "TunnelingTCP4ClientEndpoint.connect": [
            {
                "type": "method",
                "args": {
                    "protocolFactory": "protocol.ContextFactory"
                }
            }
        ],
        "HTTP11DownloadHandler.download_request": [
            {
                "type": "method",
                "args": {
                    "request": "str",
                    "spider": "str"
                }
            }
        ]
    },
    "core.downloader.handlers.http10": {
        "HTTP10DownloadHandler.lazy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTTP10DownloadHandler.HTTPClientFactory": [
            {
                "type": "attr",
                "anno": "load_object"
            }
        ],
        "HTTP10DownloadHandler.ClientContextFactory": [
            {
                "type": "attr",
                "anno": "load_object"
            }
        ],
        "HTTP10DownloadHandler._settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "HTTP10DownloadHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "HTTP10DownloadHandler._connect": [
            {
                "type": "method",
                "args": {
                    "factory": "HTTPClientFactory"
                }
            }
        ],
        "HTTP10DownloadHandler.download_request": [
            {
                "type": "method",
                "args": {
                    "request": "str",
                    "spider": "str"
                }
            }
        ]
    },
    "core.downloader.handlers.file": {
        "FileDownloadHandler.lazy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FileDownloadHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "FileDownloadHandler.download_request": [
            {
                "type": "method",
                "args": {
                    "request": "str",
                    "spider": "str"
                }
            }
        ]
    },
    "core.downloader.handlers": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "DownloadHandlers._crawler": [
            {
                "type": "attr",
                "anno": "DownloadHandlers"
            }
        ],
        "DownloadHandlers._schemes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DownloadHandlers._handlers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DownloadHandlers._notconfigured": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DownloadHandlers._load_handler": [
            {
                "type": "method",
                "args": {
                    "scheme": "str",
                    "skip_lazy": "bool"
                }
            }
        ],
        "DownloadHandlers._get_handler": [
            {
                "type": "method",
                "args": {
                    "scheme": "str"
                }
            }
        ],
        "DownloadHandlers.download_request": [
            {
                "type": "method",
                "args": {
                    "request": "str",
                    "spider": "str"
                }
            }
        ],
        "DownloadHandlers._close": [
            {
                "type": "method",
                "args": {
                    "_a": "object",
                    "_kw": "object"
                }
            }
        ],
        "DownloadHandlers.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "DownloadHandlers"
                }
            }
        ]
    },
    "core.downloader": {
        "Slot.concurrency": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Slot.delay": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Slot.randomize_delay": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Slot.active": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "Slot.queue": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "Slot.transferring": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "Slot.lastseen": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Slot.latercall": [
            {
                "type": "attr",
                "anno": "reactor.Future"
            }
        ],
        "Slot.__init__": [
            {
                "type": "method",
                "args": {
                    "concurrency": "int",
                    "delay": "float",
                    "randomize_delay": "bool"
                }
            }
        ],
        "Slot.free_transfer_slots": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slot.download_delay": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slot.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slot.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Downloader.DOWNLOAD_SLOT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Downloader.settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Downloader.signals": [
            {
                "type": "attr",
                "anno": "signals.SignalManager"
            }
        ],
        "Downloader.slots": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Downloader.active": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Downloader.handlers": [
            {
                "type": "attr",
                "anno": "DownloadHandlers"
            }
        ],
        "Downloader.total_concurrency": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Downloader.domain_concurrency": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Downloader.ip_concurrency": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Downloader.randomize_delay": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Downloader.middleware": [
            {
                "type": "attr",
                "anno": "DownloaderMiddlewareManager"
            }
        ],
        "Downloader._slot_gc_loop": [
            {
                "type": "attr",
                "anno": "task.LoopingCall"
            }
        ],
        "Downloader.needs_backout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_get_concurrency_delay": [
            {
                "type": "func",
                "args": {
                    "concurrency": "int",
                    "spider": "str",
                    "settings": "dict"
                }
            }
        ],
        "Slot.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Downloader._get_slot_key": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "Downloader._get_slot": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "Downloader.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Downloader._download": [
            {
                "type": "method",
                "args": {
                    "slot": "Slot",
                    "request": "str",
                    "spider": "str"
                }
            }
        ],
        "Downloader._process_queue": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "slot": "Slot"
                }
            }
        ],
        "Downloader._enqueue_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "Downloader._slot_gc": [
            {
                "type": "method",
                "args": {
                    "age": "int"
                }
            }
        ],
        "Downloader.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Crawler"
                }
            }
        ],
        "Downloader.fetch": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ]
    },
    "core.spidermw": {
        "_isiterable": [
            {
                "type": "func",
                "args": {
                    "possible_iterator": "object"
                }
            }
        ],
        "SpiderMiddlewareManager.component_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SpiderMiddlewareManager.process_start_requests": [
            {
                "type": "method",
                "args": {
                    "start_requests": "Iterator[Request]",
                    "spider": "Spider"
                }
            }
        ],
        "SpiderMiddlewareManager.scrape_response": [
            {
                "type": "method",
                "args": {
                    "scrape_func": "Callable[[Failure], Failure]",
                    "response": "Failure",
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "SpiderMiddlewareManager._get_mwlist_from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MiddlewareManager]",
                    "settings": "dict"
                }
            }
        ],
        "SpiderMiddlewareManager._add_middleware": [
            {
                "type": "method",
                "args": {
                    "mw": "object"
                }
            }
        ]
    },
    "core.scraper": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "Slot.MIN_RESPONSE_SIZE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Slot.max_active_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Slot.queue": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "Slot.active": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "Slot.active_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Slot.itemproc_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Slot.closing": [
            {
                "type": "attr",
                "anno": "defer.Deferred"
            }
        ],
        "Slot.__init__": [
            {
                "type": "method",
                "args": {
                    "max_active_size": "int"
                }
            }
        ],
        "Slot.next_response_request_deferred": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slot.is_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slot.needs_backout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scraper.slot": [
            {
                "type": "attr",
                "anno": "Slot"
            }
        ],
        "Scraper.spidermw": [
            {
                "type": "attr",
                "anno": "SpiderMiddlewareManager"
            }
        ],
        "Scraper.itemproc": [
            {
                "type": "attr",
                "anno": "ItemProcessor"
            }
        ],
        "Scraper.concurrent_items": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Scraper.crawler": [
            {
                "type": "attr",
                "anno": "Spider"
            }
        ],
        "Scraper.signals": [
            {
                "type": "attr",
                "anno": "signals.SignalManager"
            }
        ],
        "Scraper.logformatter": [
            {
                "type": "attr",
                "anno": "logging.LogFormatter"
            }
        ],
        "Scraper.is_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scraper._log_download_errors": [
            {
                "type": "method",
                "args": {
                    "spider_failure": "Failure",
                    "download_failure": "Failure",
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "Slot.finish_response": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request"
                }
            }
        ],
        "Slot.add_response_request": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request"
                }
            }
        ],
        "Scraper._check_if_closing": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "slot": "Slot"
                }
            }
        ],
        "Scraper._itemproc_finished": [
            {
                "type": "method",
                "args": {
                    "output": "BaseItem",
                    "item": "str",
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "Scraper.close_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "Scraper.handle_spider_error": [
            {
                "type": "method",
                "args": {
                    "_failure": "Failure",
                    "request": "Request",
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "Scraper.open_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "Scraper.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Spider"
                }
            }
        ],
        "Scraper.call_spider": [
            {
                "type": "method",
                "args": {
                    "result": "Response",
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "Scraper._scrape2": [
            {
                "type": "method",
                "args": {
                    "request_result": "Response",
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "Scraper._process_spidermw_output": [
            {
                "type": "method",
                "args": {
                    "output": "Union[Request, BaseItem]",
                    "request": "Request",
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "Scraper.handle_spider_output": [
            {
                "type": "method",
                "args": {
                    "result": "Response",
                    "request": "Request",
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "Scraper._scrape": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "Scraper._scrape_next": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "slot": "Slot"
                }
            }
        ],
        "Scraper.enqueue_scrape": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ]
    },
    "extension": {
        "ExtensionManager.component_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ExtensionManager._get_mwlist_from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MiddlewareManager]",
                    "settings": "dict"
                }
            }
        ]
    },
    "commands.fetch": {
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.long_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command._print_bytes": [
            {
                "type": "method",
                "args": {
                    "bytes_": "bytes"
                }
            }
        ],
        "Command._print_headers": [
            {
                "type": "method",
                "args": {
                    "headers": "dict",
                    "prefix": "bytes"
                }
            }
        ],
        "Command._print_response": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "opts": "dict"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.edit": {
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.long_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.exitcode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Command._err": [
            {
                "type": "method",
                "args": {
                    "msg": "str"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.genspider": {
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command.exitcode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Command.templates_dir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command._list_templates": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command._find_template": [
            {
                "type": "method",
                "args": {
                    "template": "str"
                }
            }
        ],
        "Command._genspider": [
            {
                "type": "method",
                "args": {
                    "module": "str",
                    "name": "str",
                    "domain": "str",
                    "template_name": "str",
                    "template_file": "str"
                }
            }
        ],
        "sanitize_module_name": [
            {
                "type": "func",
                "args": {
                    "module_name": "str"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.check": {
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command.exitcode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TextTestResult.printSummary": [
            {
                "type": "method",
                "args": {
                    "start": "float",
                    "stop": "float"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.shell": {
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.long_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command.update_vars": [
            {
                "type": "method",
                "args": {
                    "vars": "dict"
                }
            }
        ],
        "Command._start_crawler_thread": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.parse": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.spider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Command.items": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.requests": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.first_response": [
            {
                "type": "attr",
                "anno": "Response"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command.max_level": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.run_callback": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "callback": "Callable",
                    "cb_kwargs": "dict"
                }
            }
        ],
        "Command.spidercls": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Command.pcrawler": [
            {
                "type": "attr",
                "anno": "scrapy.crawler.Crawler"
            }
        ],
        "Command.process_spider_arguments": [
            {
                "type": "method",
                "args": {
                    "opts": "ScrapyCommand"
                }
            }
        ],
        "Command.process_request_cb_kwargs": [
            {
                "type": "method",
                "args": {
                    "opts": "ScrapyCommand"
                }
            }
        ],
        "Command.process_request_meta": [
            {
                "type": "method",
                "args": {
                    "opts": "ScrapyCommand"
                }
            }
        ],
        "Command.process_options": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "ScrapyCommand"
                }
            }
        ],
        "Command.print_requests": [
            {
                "type": "method",
                "args": {
                    "lvl": "int",
                    "colour": "bool"
                }
            }
        ],
        "Command.add_requests": [
            {
                "type": "method",
                "args": {
                    "lvl": "int",
                    "new_reqs": "list"
                }
            }
        ],
        "Command.add_items": [
            {
                "type": "method",
                "args": {
                    "lvl": "int",
                    "new_items": "list"
                }
            }
        ],
        "Command.print_items": [
            {
                "type": "method",
                "args": {
                    "lvl": "int",
                    "colour": "bool"
                }
            }
        ],
        "Command.print_results": [
            {
                "type": "method",
                "args": {
                    "opts": "ScrapyCommand"
                }
            }
        ],
        "Command.get_callback_from_rules": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "response": "Response"
                }
            }
        ],
        "Command.start_parsing": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "opts": "ScrapyCommand"
                }
            }
        ],
        "Command.prepare_request": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "request": "Request",
                    "opts": "ScrapyCommand"
                }
            }
        ],
        "Command.set_spidercls": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "opts": "ScrapyCommand"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "ScrapyCommand"
                }
            }
        ]
    },
    "commands.view": {
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.long_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command._print_response": [
            {
                "type": "method",
                "args": {
                    "response": "str",
                    "opts": "dict"
                }
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ]
    },
    "commands.runspider": {
        "_import_file": [
            {
                "type": "func",
                "args": {
                    "filepath": "str"
                }
            }
        ],
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.long_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command.exitcode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Command.process_options": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.settings": {
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.version": {
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.crawl": {
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "Command.exitcode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Command.process_options": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.startproject": {
        "TEMPLATES_TO_RENDER": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "IGNORE": [
            {
                "type": "var",
                "anno": "ignore_patterns"
            }
        ],
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command._is_valid_name": [
            {
                "type": "method",
                "args": {
                    "project_name": "str"
                }
            }
        ],
        "Command._copytree": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "dst": "str"
                }
            }
        ],
        "Command.exitcode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Command.templates_dir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.bench": {
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BenchServer.proc": [
            {
                "type": "attr",
                "anno": "subprocess.Popen"
            }
        ],
        "_BenchServer.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BenchServer.__exit__": [
            {
                "type": "method",
                "args": {
                    "exc_type": "str",
                    "exc_value": "str",
                    "traceback": "str"
                }
            }
        ],
        "_BenchSpider.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_BenchSpider.total": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_BenchSpider.show": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_BenchSpider.baseurl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_BenchSpider.link_extractor": [
            {
                "type": "attr",
                "anno": "LinkExtractor"
            }
        ],
        "_BenchSpider.start_requests": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BenchSpider.parse": [
            {
                "type": "method",
                "args": {
                    "response": "bytes"
                }
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands": {
        "ScrapyCommand.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrapyCommand.crawler_process": [
            {
                "type": "attr",
                "anno": "CrawlerProcess"
            }
        ],
        "ScrapyCommand.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ScrapyCommand.exitcode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrapyCommand.settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ScrapyCommand.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyCommand._crawler": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScrapyCommand.set_crawler": [
            {
                "type": "method",
                "args": {
                    "crawler": "str"
                }
            }
        ],
        "ScrapyCommand.syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyCommand.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyCommand.long_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyCommand.help": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyCommand.add_options": [
            {
                "type": "method",
                "args": {
                    "parser": "optparse.OptionParser"
                }
            }
        ],
        "ScrapyCommand.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ],
        "ScrapyCommand.process_options": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "commands.list": {
        "Command.requires_project": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Command.default_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Command.short_desc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Command.run": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ]
    },
    "middleware": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "MiddlewareManager.component_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MiddlewareManager.middlewares": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MiddlewareManager.methods": [
            {
                "type": "attr",
                "anno": "dict[str, deque]"
            }
        ],
        "MiddlewareManager._get_mwlist_from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MiddlewareManager]",
                    "settings": "dict"
                }
            }
        ],
        "MiddlewareManager._process_parallel": [
            {
                "type": "method",
                "args": {
                    "methodname": "str",
                    "obj": "object",
                    "args": "str"
                }
            }
        ],
        "MiddlewareManager._process_chain": [
            {
                "type": "method",
                "args": {
                    "methodname": "str",
                    "obj": "object",
                    "args": "str"
                }
            }
        ],
        "MiddlewareManager._process_chain_both": [
            {
                "type": "method",
                "args": {
                    "cb_methodname": "str",
                    "eb_methodname": "str",
                    "obj": "object",
                    "args": "str"
                }
            }
        ],
        "MiddlewareManager.open_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "MiddlewareManager.close_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "MiddlewareManager.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MiddlewareManager]",
                    "settings": "dict",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "MiddlewareManager.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MiddlewareManager]",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "MiddlewareManager._add_middleware": [
            {
                "type": "method",
                "args": {
                    "mw": "object"
                }
            }
        ],
        "MiddlewareManager.__init__": [
            {
                "type": "method",
                "args": {
                    "middlewares": "str"
                }
            }
        ]
    },
    "logformatter": {
        "SCRAPEDMSG": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DROPPEDMSG": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CRAWLEDMSG": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LogFormatter.scraped": [
            {
                "type": "method",
                "args": {
                    "item": "str",
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "LogFormatter.dropped": [
            {
                "type": "method",
                "args": {
                    "item": "str",
                    "exception": "Exception",
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "LogFormatter.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "LogFormatter.crawled": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "Response",
                    "spider": "Spider"
                }
            }
        ]
    },
    "shell": {
        "Shell.relevant_classes": [
            {
                "type": "attr",
                "anno": "SequenceExclude"
            }
        ],
        "Shell.crawler": [
            {
                "type": "attr",
                "anno": "Crawler"
            }
        ],
        "Shell.update_vars": [
            {
                "type": "attr",
                "anno": "Callable[[dict], None]"
            }
        ],
        "Shell.item_class": [
            {
                "type": "attr",
                "anno": "load_object"
            }
        ],
        "Shell.spider": [
            {
                "type": "attr",
                "anno": "Spider"
            }
        ],
        "Shell.inthread": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Shell.code": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Shell.vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Shell._is_relevant": [
            {
                "type": "method",
                "args": {
                    "value": "BaseItem"
                }
            }
        ],
        "_SelectorProxy._proxiedresponse": [
            {
                "type": "attr",
                "anno": "Response"
            }
        ],
        "_SelectorProxy.__init__": [
            {
                "type": "method",
                "args": {
                    "response": "Response"
                }
            }
        ],
        "_SelectorProxy.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Shell.get_help": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Shell.print_help": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_request_deferred": [
            {
                "type": "func",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "Shell.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Crawler",
                    "update_vars": "Callable[[dict], None]",
                    "code": "str"
                }
            }
        ],
        "Shell._open_spider": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "Shell._schedule": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "Shell.fetch": [
            {
                "type": "method",
                "args": {
                    "request_or_url": "Union[Request, Response]",
                    "spider": "Spider",
                    "redirect": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "Shell.populate_vars": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "Shell.start": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "request": "Request",
                    "response": "Response",
                    "spider": "Spider",
                    "redirect": "bool"
                }
            }
        ],
        "inspect_response": [
            {
                "type": "func",
                "args": {
                    "response": "Response",
                    "spider": "Spider"
                }
            }
        ]
    },
    "selector.unified": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "_st": [
            {
                "type": "func",
                "args": {
                    "response": "object_ref",
                    "st": "str"
                }
            }
        ],
        "_response_from_text": [
            {
                "type": "func",
                "args": {
                    "text": "str",
                    "st": "str"
                }
            }
        ],
        "Selector.__slots__": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Selector.selectorlist_cls": [
            {
                "type": "attr",
                "anno": "type[SelectorList]"
            }
        ],
        "Selector.response": [
            {
                "type": "attr",
                "anno": "object_ref"
            }
        ],
        "Selector.__init__": [
            {
                "type": "method",
                "args": {
                    "response": "object_ref",
                    "text": "str",
                    "type": "str",
                    "root": "str",
                    "kwargs": "object"
                }
            }
        ]
    },
    "extensions.memdebug": {
        "MemoryDebugger.stats": [
            {
                "type": "attr",
                "anno": "stats.StatsCollector"
            }
        ],
        "MemoryDebugger.__init__": [
            {
                "type": "method",
                "args": {
                    "stats": "stats.StatsCollector"
                }
            }
        ],
        "MemoryDebugger.spider_closed": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "reason": "str"
                }
            }
        ],
        "MemoryDebugger.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "extensions.telnet": {
        "TWISTED_CONCH_AVAILABLE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_TWISTED_CONCH_TRACEBACK": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "hpy": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "update_telnet_vars": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "TelnetConsole.crawler": [
            {
                "type": "attr",
                "anno": "protocol.Crawler"
            }
        ],
        "TelnetConsole.noisy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TelnetConsole.portrange": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TelnetConsole.host": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TelnetConsole.username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TelnetConsole.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TelnetConsole.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "TelnetConsole.port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TelnetConsole.stop_listening": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TelnetConsole.start_listening": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TelnetConsole.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "protocol.Crawler"
                }
            }
        ],
        "TelnetConsole._get_telnet_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TelnetConsole.Portal.login": [
            {
                "type": "method",
                "args": {
                    "self_": "protocol.ServerFactory",
                    "credentials": "protocol.AuthenticatingTelnetProtocol",
                    "mind": "str",
                    "interfaces": "str"
                }
            }
        ],
        "TelnetConsole.protocol": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "extensions.statsmailer": {
        "StatsMailer.stats": [
            {
                "type": "attr",
                "anno": "signals.StatsCollector"
            }
        ],
        "StatsMailer.recipients": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StatsMailer.mail": [
            {
                "type": "attr",
                "anno": "MailSender"
            }
        ],
        "StatsMailer.__init__": [
            {
                "type": "method",
                "args": {
                    "stats": "signals.StatsCollector",
                    "recipients": "str",
                    "mail": "MailSender"
                }
            }
        ],
        "StatsMailer.spider_closed": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "StatsMailer.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "extensions.httpcache": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "DummyPolicy.ignore_schemes": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "DummyPolicy.ignore_http_codes": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "DummyPolicy.should_cache_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "DummyPolicy.is_cached_response_fresh": [
            {
                "type": "method",
                "args": {
                    "cachedresponse": "Response",
                    "request": "Request"
                }
            }
        ],
        "DummyPolicy.is_cached_response_valid": [
            {
                "type": "method",
                "args": {
                    "cachedresponse": "Response",
                    "response": "Response",
                    "request": "Request"
                }
            }
        ],
        "RFC2616Policy.MAXAGE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RFC2616Policy.always_store": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RFC2616Policy.ignore_schemes": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RFC2616Policy.ignore_response_cache_controls": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RFC2616Policy._cc_parsed": [
            {
                "type": "attr",
                "anno": "WeakKeyDictionary"
            }
        ],
        "RFC2616Policy._get_max_age": [
            {
                "type": "method",
                "args": {
                    "cc": "dict"
                }
            }
        ],
        "DbmCacheStorage.cachedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DbmCacheStorage.expiration_secs": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DbmCacheStorage.dbmodule": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DbmCacheStorage.db": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DbmCacheStorage._request_key": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "DbmCacheStorage._read_data": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "request": "Request"
                }
            }
        ],
        "DbmCacheStorage.retrieve_response": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "request": "Request"
                }
            }
        ],
        "FilesystemCacheStorage.cachedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilesystemCacheStorage.expiration_secs": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FilesystemCacheStorage.use_gzip": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FilesystemCacheStorage._open": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "FilesystemCacheStorage.close_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "rfc1123_to_epoch": [
            {
                "type": "func",
                "args": {
                    "date_str": "str"
                }
            }
        ],
        "FilesystemCacheStorage.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "DbmCacheStorage.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "parse_cachecontrol": [
            {
                "type": "func",
                "args": {
                    "header": "bytes"
                }
            }
        ],
        "DummyPolicy.should_cache_response": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request"
                }
            }
        ],
        "RFC2616Policy.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "BaseSettings"
                }
            }
        ],
        "DummyPolicy.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "RFC2616Policy._compute_current_age": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "now": "float"
                }
            }
        ],
        "RFC2616Policy._set_conditional_validators": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "cachedresponse": "Response"
                }
            }
        ],
        "FilesystemCacheStorage._get_request_path": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "request": "Request"
                }
            }
        ],
        "FilesystemCacheStorage._read_meta": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "request": "Request"
                }
            }
        ],
        "FilesystemCacheStorage.retrieve_response": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "request": "Request"
                }
            }
        ],
        "DbmCacheStorage.store_response": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "request": "Request",
                    "response": "Response"
                }
            }
        ],
        "FilesystemCacheStorage.open_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "DbmCacheStorage.open_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "FilesystemCacheStorage.store_response": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "request": "Request",
                    "response": "Response"
                }
            }
        ],
        "RFC2616Policy._parse_cachecontrol": [
            {
                "type": "method",
                "args": {
                    "r": "Response"
                }
            }
        ],
        "RFC2616Policy._compute_freshness_lifetime": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "now": "float"
                }
            }
        ],
        "RFC2616Policy.is_cached_response_valid": [
            {
                "type": "method",
                "args": {
                    "cachedresponse": "Response",
                    "response": "Response",
                    "request": "Request"
                }
            }
        ],
        "RFC2616Policy.is_cached_response_fresh": [
            {
                "type": "method",
                "args": {
                    "cachedresponse": "Response",
                    "request": "Request"
                }
            }
        ],
        "RFC2616Policy.should_cache_response": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request"
                }
            }
        ],
        "RFC2616Policy.should_cache_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "DbmCacheStorage.close_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ]
    },
    "extensions.feedexport": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "IFeedStorage.__init__": [
            {
                "type": "method",
                "args": {
                    "uri": "str"
                }
            }
        ],
        "IFeedStorage.open": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "IFeedStorage.store": [
            {
                "type": "method",
                "args": {
                    "file": "str"
                }
            }
        ],
        "BlockingFeedStorage._store_in_thread": [
            {
                "type": "method",
                "args": {
                    "file": "threading.Thread"
                }
            }
        ],
        "BlockingFeedStorage.store": [
            {
                "type": "method",
                "args": {
                    "file": "threading.Thread"
                }
            }
        ],
        "StdoutFeedStorage._stdout": [
            {
                "type": "attr",
                "anno": "sys.stdout.Buffer"
            }
        ],
        "StdoutFeedStorage.__init__": [
            {
                "type": "method",
                "args": {
                    "uri": "str",
                    "_stdout": "sys.stdout.Buffer"
                }
            }
        ],
        "StdoutFeedStorage.open": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "StdoutFeedStorage.store": [
            {
                "type": "method",
                "args": {
                    "file": "str"
                }
            }
        ],
        "FileFeedStorage.path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileFeedStorage.__init__": [
            {
                "type": "method",
                "args": {
                    "uri": "str"
                }
            }
        ],
        "FileFeedStorage.open": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "S3FeedStorage.bucketname": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FeedStorage.access_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FeedStorage.secret_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FeedStorage.is_botocore": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "S3FeedStorage.keyname": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FeedStorage.acl": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "S3FeedStorage.s3_client": [
            {
                "type": "attr",
                "anno": "s3.Client"
            }
        ],
        "S3FeedStorage.connect_s3": [
            {
                "type": "attr",
                "anno": "s3.Client"
            }
        ],
        "FTPFeedStorage.host": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FTPFeedStorage.port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FTPFeedStorage.username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FTPFeedStorage.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FTPFeedStorage.path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FeedStorage.__init__": [
            {
                "type": "method",
                "args": {
                    "uri": "str",
                    "access_key": "str",
                    "secret_key": "str",
                    "acl": "list"
                }
            }
        ],
        "FTPFeedStorage.use_active_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FTPFeedStorage.__init__": [
            {
                "type": "method",
                "args": {
                    "uri": "str",
                    "use_active_mode": "bool"
                }
            }
        ],
        "SpiderSlot.file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SpiderSlot.exporter": [
            {
                "type": "attr",
                "anno": "FeedExporter"
            }
        ],
        "SpiderSlot.storage": [
            {
                "type": "attr",
                "anno": "IFeedStorage"
            }
        ],
        "SpiderSlot.uri": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SpiderSlot.itemcount": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SpiderSlot.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "str",
                    "exporter": "FeedExporter",
                    "storage": "IFeedStorage",
                    "uri": "str"
                }
            }
        ],
        "FeedExporter.settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FeedExporter.urifmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FeedExporter.format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FeedExporter.export_encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FeedExporter.storages": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FeedExporter.exporters": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FeedExporter.store_empty": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FeedExporter._exporting": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FeedExporter.export_fields": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FeedExporter.indent": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FeedExporter._uripar": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "FeedExporter.slot": [
            {
                "type": "attr",
                "anno": "SpiderSlot"
            }
        ],
        "FeedExporter._get_instance": [
            {
                "type": "method",
                "args": {
                    "objcls": "type",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FeedExporter._get_exporter": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FeedExporter._get_storage": [
            {
                "type": "method",
                "args": {
                    "uri": "str"
                }
            }
        ],
        "FeedExporter._storage_supported": [
            {
                "type": "method",
                "args": {
                    "uri": "str"
                }
            }
        ],
        "FeedExporter._exporter_supported": [
            {
                "type": "method",
                "args": {
                    "format": "str"
                }
            }
        ],
        "FTPFeedStorage.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "uri": "str"
                }
            }
        ],
        "S3FeedStorage.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "uri": "str"
                }
            }
        ],
        "BlockingFeedStorage.open": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "FeedExporter.item_scraped": [
            {
                "type": "method",
                "args": {
                    "item": "dict",
                    "spider": "Spider"
                }
            }
        ],
        "FeedExporter._get_uri_params": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "FeedExporter.open_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "FeedExporter._load_components": [
            {
                "type": "method",
                "args": {
                    "setting_prefix": "str"
                }
            }
        ],
        "FeedExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "FTPFeedStorage._store_in_thread": [
            {
                "type": "method",
                "args": {
                    "file": "threading.StreamReader"
                }
            }
        ],
        "S3FeedStorage._store_in_thread": [
            {
                "type": "method",
                "args": {
                    "file": "threading.StreamReader"
                }
            }
        ],
        "FileFeedStorage.store": [
            {
                "type": "method",
                "args": {
                    "file": "six.BytesIO"
                }
            }
        ],
        "FeedExporter.close_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "FeedExporter.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "extensions.throttle": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "AutoThrottle.crawler": [
            {
                "type": "attr",
                "anno": "Spider"
            }
        ],
        "AutoThrottle.debug": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AutoThrottle.target_concurrency": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AutoThrottle.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "AutoThrottle.mindelay": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AutoThrottle.maxdelay": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AutoThrottle._adjust_delay": [
            {
                "type": "method",
                "args": {
                    "slot": "Slot",
                    "latency": "float",
                    "response": "Response"
                }
            }
        ],
        "AutoThrottle._start_delay": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "AutoThrottle._max_delay": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "AutoThrottle._min_delay": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "AutoThrottle._spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "AutoThrottle._get_slot": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "AutoThrottle._response_downloaded": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "AutoThrottle.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Spider"
                }
            }
        ]
    },
    "extensions.logstats": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "LogStats.stats": [
            {
                "type": "attr",
                "anno": "logging.Stats"
            }
        ],
        "LogStats.interval": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LogStats.multiplier": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LogStats.task": [
            {
                "type": "attr",
                "anno": "task.LoopingCall"
            }
        ],
        "LogStats.__init__": [
            {
                "type": "method",
                "args": {
                    "stats": "logging.Stats",
                    "interval": "float"
                }
            }
        ],
        "LogStats.pagesprev": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogStats.itemsprev": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogStats.log": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "LogStats.spider_closed": [
            {
                "type": "method",
                "args": {
                    "spider": "logging.Spider",
                    "reason": "str"
                }
            }
        ],
        "LogStats.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "LogStats.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "extensions.debug": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "StackTraceDump.crawler": [
            {
                "type": "attr",
                "anno": "Pdb"
            }
        ],
        "StackTraceDump.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "Debugger._enter_debugger": [
            {
                "type": "method",
                "args": {
                    "signum": "int",
                    "frame": "threading.Frame"
                }
            }
        ],
        "Debugger.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StackTraceDump._thread_stacks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StackTraceDump.dump_stacktrace": [
            {
                "type": "method",
                "args": {
                    "signum": "int",
                    "frame": "traceback.TracebackFrame"
                }
            }
        ],
        "StackTraceDump.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Pdb"
                }
            }
        ]
    },
    "extensions.closespider": {
        "CloseSpider.crawler": [
            {
                "type": "attr",
                "anno": "Spider"
            }
        ],
        "CloseSpider.close_on": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CloseSpider.counter": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CloseSpider.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "dict"
                }
            }
        ],
        "CloseSpider.task": [
            {
                "type": "attr",
                "anno": "reactor.Future"
            }
        ],
        "CloseSpider.spider_closed": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "CloseSpider.item_scraped": [
            {
                "type": "method",
                "args": {
                    "item": "str",
                    "spider": "str"
                }
            }
        ],
        "CloseSpider.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "CloseSpider.page_count": [
            {
                "type": "method",
                "args": {
                    "response": "int",
                    "request": "int",
                    "spider": "str"
                }
            }
        ],
        "CloseSpider.error_count": [
            {
                "type": "method",
                "args": {
                    "failure": "int",
                    "response": "int",
                    "spider": "str"
                }
            }
        ],
        "CloseSpider.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Spider"
                }
            }
        ]
    },
    "extensions.spiderstate": {
        "SpiderState.jobdir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SpiderState.__init__": [
            {
                "type": "method",
                "args": {
                    "jobdir": "str"
                }
            }
        ],
        "SpiderState.statefn": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpiderState.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "SpiderState.spider_closed": [
            {
                "type": "method",
                "args": {
                    "spider": "SpiderState"
                }
            }
        ],
        "SpiderState.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "extensions.memusage": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "MemoryUsage.resource": [
            {
                "type": "attr",
                "anno": "logging.Resource"
            }
        ],
        "MemoryUsage.crawler": [
            {
                "type": "attr",
                "anno": "logging.Crawler"
            }
        ],
        "MemoryUsage.warned": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MemoryUsage.notify_mails": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "MemoryUsage.limit": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MemoryUsage.warning": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MemoryUsage.check_interval": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MemoryUsage.mail": [
            {
                "type": "attr",
                "anno": "MailSender"
            }
        ],
        "MemoryUsage.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "MemoryUsage.get_virtual_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MemoryUsage.tasks": [
            {
                "type": "attr",
                "anno": "list[task.LoopingCall]"
            }
        ],
        "MemoryUsage._send_report": [
            {
                "type": "method",
                "args": {
                    "rcpts": "list[str]",
                    "subject": "str"
                }
            }
        ],
        "MemoryUsage._check_warning": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MemoryUsage.update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MemoryUsage.engine_stopped": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MemoryUsage._check_limit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MemoryUsage.engine_started": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MemoryUsage.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Crawler"
                }
            }
        ]
    },
    "extensions.corestats": {
        "CoreStats.stats": [
            {
                "type": "attr",
                "anno": "signals.Signal"
            }
        ],
        "CoreStats.start_time": [
            {
                "type": "attr",
                "anno": "datetime"
            }
        ],
        "CoreStats.__init__": [
            {
                "type": "method",
                "args": {
                    "stats": "signals.Signal"
                }
            }
        ],
        "CoreStats.spider_closed": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "reason": "str"
                }
            }
        ],
        "CoreStats.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "CoreStats.item_dropped": [
            {
                "type": "method",
                "args": {
                    "item": "str",
                    "spider": "str",
                    "exception": "Exception"
                }
            }
        ],
        "CoreStats.response_received": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "CoreStats.item_scraped": [
            {
                "type": "method",
                "args": {
                    "item": "str",
                    "spider": "str"
                }
            }
        ],
        "CoreStats.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "spidermiddlewares.httperror": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "HttpError.response": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HttpError.__init__": [
            {
                "type": "method",
                "args": {
                    "response": "str",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "HttpErrorMiddleware.handle_httpstatus_all": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HttpErrorMiddleware.handle_httpstatus_list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "HttpErrorMiddleware.process_spider_input": [
            {
                "type": "method",
                "args": {
                    "response": "str",
                    "spider": "object"
                }
            }
        ],
        "HttpErrorMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "BaseSettings"
                }
            }
        ],
        "HttpErrorMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "HttpErrorMiddleware.process_spider_exception": [
            {
                "type": "method",
                "args": {
                    "response": "HttpError",
                    "exception": "Exception",
                    "spider": "str"
                }
            }
        ]
    },
    "spidermiddlewares.referer": {
        "LOCAL_SCHEMES": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "POLICY_NO_REFERRER": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "POLICY_NO_REFERRER_WHEN_DOWNGRADE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "POLICY_SAME_ORIGIN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "POLICY_ORIGIN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "POLICY_STRICT_ORIGIN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "POLICY_ORIGIN_WHEN_CROSS_ORIGIN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "POLICY_STRICT_ORIGIN_WHEN_CROSS_ORIGIN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "POLICY_UNSAFE_URL": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "POLICY_SCRAPY_DEFAULT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ReferrerPolicy.NOREFERRER_SCHEMES": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ReferrerPolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "ReferrerPolicy.strip_url": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "origin_only": "bool"
                }
            }
        ],
        "ReferrerPolicy.stripped_referrer": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "ReferrerPolicy.origin": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "ReferrerPolicy.origin_referrer": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "ReferrerPolicy.tls_protected": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "ReferrerPolicy.potentially_trustworthy": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "NoReferrerPolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NoReferrerPolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "NoReferrerWhenDowngradePolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NoReferrerWhenDowngradePolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "SameOriginPolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SameOriginPolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "OriginPolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OriginPolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "StrictOriginPolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StrictOriginPolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "OriginWhenCrossOriginPolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OriginWhenCrossOriginPolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "StrictOriginWhenCrossOriginPolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StrictOriginWhenCrossOriginPolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "UnsafeUrlPolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UnsafeUrlPolicy.referrer": [
            {
                "type": "method",
                "args": {
                    "response_url": "str",
                    "request_url": "str"
                }
            }
        ],
        "DefaultReferrerPolicy.NOREFERRER_SCHEMES": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "DefaultReferrerPolicy.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RefererMiddleware.default_policy": [
            {
                "type": "attr",
                "anno": "ReferrerPolicy"
            }
        ],
        "_policy_classes": [
            {
                "type": "var",
                "anno": "dict[str, type[ReferrerPolicy]]"
            }
        ],
        "_load_policy_class": [
            {
                "type": "func",
                "args": {
                    "policy": "str",
                    "warning_only": "bool"
                }
            }
        ],
        "RefererMiddleware.policy": [
            {
                "type": "method",
                "args": {
                    "resp_or_url": "Response",
                    "request": "Request"
                }
            }
        ],
        "RefererMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "RefererMiddleware.process_spider_output": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "result": "dict",
                    "spider": "dict"
                }
            }
        ],
        "RefererMiddleware.request_scheduled": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "RefererMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "spidermiddlewares.depth": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "DepthMiddleware.maxdepth": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DepthMiddleware.stats": [
            {
                "type": "attr",
                "anno": "logging.Logger"
            }
        ],
        "DepthMiddleware.verbose_stats": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DepthMiddleware.prio": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DepthMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "maxdepth": "int",
                    "stats": "logging.Logger",
                    "verbose_stats": "bool",
                    "prio": "int"
                }
            }
        ],
        "DepthMiddleware.process_spider_output": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "result": "list",
                    "spider": "str"
                }
            }
        ],
        "DepthMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "spidermiddlewares.offsite": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "OffsiteMiddleware.stats": [
            {
                "type": "attr",
                "anno": "logging.Stats"
            }
        ],
        "OffsiteMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "stats": "logging.Stats"
                }
            }
        ],
        "OffsiteMiddleware.host_regex": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "OffsiteMiddleware.should_follow": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "OffsiteMiddleware.domains_seen": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "OffsiteMiddleware.get_host_regex": [
            {
                "type": "method",
                "args": {
                    "spider": "Request"
                }
            }
        ],
        "OffsiteMiddleware.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "Request"
                }
            }
        ],
        "OffsiteMiddleware.process_spider_output": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "result": "signals.Signal",
                    "spider": "str"
                }
            }
        ],
        "OffsiteMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "spidermiddlewares.urllength": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "UrlLengthMiddleware.maxlength": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UrlLengthMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "maxlength": "int"
                }
            }
        ],
        "UrlLengthMiddleware.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[UrlLengthMiddleware]",
                    "settings": "dict"
                }
            }
        ],
        "UrlLengthMiddleware.process_spider_output": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "result": "list",
                    "spider": "str"
                }
            }
        ]
    },
    "cmdline": {
        "_pop_command_name": [
            {
                "type": "func",
                "args": {
                    "argv": "list"
                }
            }
        ],
        "_print_header": [
            {
                "type": "func",
                "args": {
                    "settings": "dict",
                    "inproject": "bool"
                }
            }
        ],
        "_print_unknown_command": [
            {
                "type": "func",
                "args": {
                    "settings": "dict",
                    "cmdname": "str",
                    "inproject": "bool"
                }
            }
        ],
        "_run_command_profiled": [
            {
                "type": "func",
                "args": {
                    "cmd": "ScrapyCommand",
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ],
        "_run_print_help": [
            {
                "type": "func",
                "args": {
                    "parser": "optparse.OptionParser",
                    "func": "Callable",
                    "a": "dict",
                    "kw": "dict"
                }
            }
        ],
        "_iter_command_classes": [
            {
                "type": "func",
                "args": {
                    "module_name": "str"
                }
            }
        ],
        "_get_commands_from_module": [
            {
                "type": "func",
                "args": {
                    "module": "str",
                    "inproject": "bool"
                }
            }
        ],
        "_get_commands_from_entry_points": [
            {
                "type": "func",
                "args": {
                    "inproject": "bool",
                    "group": "str"
                }
            }
        ],
        "_get_commands_dict": [
            {
                "type": "func",
                "args": {
                    "settings": "dict",
                    "inproject": "bool"
                }
            }
        ],
        "_print_commands": [
            {
                "type": "func",
                "args": {
                    "settings": "dict",
                    "inproject": "bool"
                }
            }
        ],
        "_run_command": [
            {
                "type": "func",
                "args": {
                    "cmd": "ScrapyCommand",
                    "args": "dict",
                    "opts": "dict"
                }
            }
        ],
        "execute": [
            {
                "type": "func",
                "args": {
                    "argv": "list",
                    "settings": "dict"
                }
            }
        ]
    },
    "settings.default_settings": {
        "AJAXCRAWL_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "AUTOTHROTTLE_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "AUTOTHROTTLE_DEBUG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "AUTOTHROTTLE_MAX_DELAY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "AUTOTHROTTLE_START_DELAY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "AUTOTHROTTLE_TARGET_CONCURRENCY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "BOT_NAME": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CLOSESPIDER_TIMEOUT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CLOSESPIDER_PAGECOUNT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CLOSESPIDER_ITEMCOUNT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CLOSESPIDER_ERRORCOUNT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "COMMANDS_MODULE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "COMPRESSION_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "CONCURRENT_ITEMS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CONCURRENT_REQUESTS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CONCURRENT_REQUESTS_PER_DOMAIN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CONCURRENT_REQUESTS_PER_IP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "COOKIES_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "COOKIES_DEBUG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "DEFAULT_ITEM_CLASS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DEFAULT_REQUEST_HEADERS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DEPTH_LIMIT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DEPTH_STATS_VERBOSE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "DEPTH_PRIORITY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DNSCACHE_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "DNSCACHE_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DNS_TIMEOUT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DOWNLOAD_DELAY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DOWNLOAD_HANDLERS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOWNLOAD_HANDLERS_BASE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOWNLOAD_TIMEOUT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DOWNLOAD_MAXSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DOWNLOAD_WARNSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DOWNLOAD_FAIL_ON_DATALOSS": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "DOWNLOADER": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DOWNLOADER_HTTPCLIENTFACTORY": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DOWNLOADER_CLIENTCONTEXTFACTORY": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DOWNLOADER_CLIENT_TLS_CIPHERS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DOWNLOADER_CLIENT_TLS_METHOD": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DOWNLOADER_CLIENT_TLS_VERBOSE_LOGGING": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "DOWNLOADER_MIDDLEWARES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOWNLOADER_MIDDLEWARES_BASE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOWNLOADER_STATS": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "DUPEFILTER_CLASS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EDITOR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXTENSIONS": [
            {
                "type": "var",
                "anno": "dict[str, six.Any]"
            }
        ],
        "EXTENSIONS_BASE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "FEED_TEMPDIR": [
            {
                "type": "var",
                "anno": "six.Optional[str]"
            }
        ],
        "FEED_URI": [
            {
                "type": "var",
                "anno": "six.Optional[str]"
            }
        ],
        "FEED_URI_PARAMS": [
            {
                "type": "var",
                "anno": "six.Optional[dict]"
            }
        ],
        "FEED_FORMAT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FEED_STORE_EMPTY": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "FEED_EXPORT_ENCODING": [
            {
                "type": "var",
                "anno": "six.Optional[str]"
            }
        ],
        "FEED_EXPORT_FIELDS": [
            {
                "type": "var",
                "anno": "six.Optional[six.Dict[str, six.Any]]"
            }
        ],
        "FEED_STORAGES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "FEED_STORAGES_BASE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "FEED_EXPORTERS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "FEED_EXPORTERS_BASE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "FEED_EXPORT_INDENT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FEED_STORAGE_FTP_ACTIVE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "FEED_STORAGE_S3_ACL": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FILES_STORE_S3_ACL": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FILES_STORE_GCS_ACL": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FTP_USER": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FTP_PASSWORD": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FTP_PASSIVE_MODE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HTTPCACHE_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HTTPCACHE_DIR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HTTPCACHE_IGNORE_MISSING": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HTTPCACHE_STORAGE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HTTPCACHE_EXPIRATION_SECS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "HTTPCACHE_ALWAYS_STORE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HTTPCACHE_IGNORE_HTTP_CODES": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "HTTPCACHE_IGNORE_SCHEMES": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "HTTPCACHE_IGNORE_RESPONSE_CACHE_CONTROLS": [
            {
                "type": "var",
                "anno": "list[bool]"
            }
        ],
        "HTTPCACHE_DBM_MODULE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HTTPCACHE_POLICY": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HTTPCACHE_GZIP": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HTTPPROXY_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HTTPPROXY_AUTH_ENCODING": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "IMAGES_STORE_S3_ACL": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "IMAGES_STORE_GCS_ACL": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ITEM_PROCESSOR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ITEM_PIPELINES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ITEM_PIPELINES_BASE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "LOG_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "LOG_ENCODING": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LOG_FORMATTER": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LOG_FORMAT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LOG_DATEFORMAT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LOG_STDOUT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "LOG_LEVEL": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LOG_FILE": [
            {
                "type": "var",
                "anno": "six.Optional[str]"
            }
        ],
        "LOG_SHORT_NAMES": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "SCHEDULER_DEBUG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "LOGSTATS_INTERVAL": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MAIL_HOST": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "MAIL_PORT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MAIL_FROM": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "MAIL_PASS": [
            {
                "type": "var",
                "anno": "six.Optional[bool]"
            }
        ],
        "MAIL_USER": [
            {
                "type": "var",
                "anno": "six.Optional[str]"
            }
        ],
        "MEMDEBUG_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "MEMDEBUG_NOTIFY": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "MEMUSAGE_CHECK_INTERVAL_SECONDS": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MEMUSAGE_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "MEMUSAGE_LIMIT_MB": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MEMUSAGE_NOTIFY_MAIL": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "MEMUSAGE_WARNING_MB": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "METAREFRESH_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "METAREFRESH_IGNORE_TAGS": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "METAREFRESH_MAXDELAY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "NEWSPIDER_MODULE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RANDOMIZE_DOWNLOAD_DELAY": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "REACTOR_THREADPOOL_MAXSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "REDIRECT_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "REDIRECT_MAX_TIMES": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "REDIRECT_PRIORITY_ADJUST": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "REFERER_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "REFERRER_POLICY": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETRY_ENABLED": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "RETRY_TIMES": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "RETRY_HTTP_CODES": [
            {
                "type": "var",
                "anno": "list[int]"
            }
        ],
        "RETRY_PRIORITY_ADJUST": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ROBOTSTXT_OBEY": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "ROBOTSTXT_PARSER": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ROBOTSTXT_USER_AGENT": [
            {
                "type": "var",
                "anno": "six.Optional[str]"
            }
        ],
        "SCHEDULER": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SCHEDULER_DISK_QUEUE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SCHEDULER_MEMORY_QUEUE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SCHEDULER_PRIORITY_QUEUE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SPIDER_LOADER_CLASS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SPIDER_LOADER_WARN_ONLY": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "SPIDER_MIDDLEWARES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "SPIDER_MIDDLEWARES_BASE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "SPIDER_MODULES": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "STATS_CLASS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "STATS_DUMP": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "STATSMAILER_RCPTS": [
            {
                "type": "var",
                "anno": "list[int]"
            }
        ],
        "TEMPLATES_DIR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "URLLENGTH_LIMIT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USER_AGENT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "TELNETCONSOLE_ENABLED": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TELNETCONSOLE_PORT": [
            {
                "type": "var",
                "anno": "list[int]"
            }
        ],
        "TELNETCONSOLE_HOST": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "TELNETCONSOLE_USERNAME": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "TELNETCONSOLE_PASSWORD": [
            {
                "type": "var",
                "anno": "six.Optional[str]"
            }
        ],
        "SPIDER_CONTRACTS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "SPIDER_CONTRACTS_BASE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ]
    },
    "settings.deprecated": {
        "DEPRECATED_SETTINGS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "check_deprecated_settings": [
            {
                "type": "func",
                "args": {
                    "settings": "dict"
                }
            }
        ]
    },
    "settings": {
        "MutableMapping": [
            {
                "type": "var",
                "anno": "MutableMapping"
            }
        ],
        "SETTINGS_PRIORITIES": [
            {
                "type": "var",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "get_settings_priority": [
            {
                "type": "func",
                "args": {
                    "priority": "str"
                }
            }
        ],
        "SettingsAttribute.value": [
            {
                "type": "attr",
                "anno": "BaseSettings"
            }
        ],
        "SettingsAttribute.priority": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SettingsAttribute.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SettingsAttribute.__repr__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseSettings.frozen": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BaseSettings.attributes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BaseSettings.__getitem__": [
            {
                "type": "method",
                "args": {
                    "opt_name": "str"
                }
            }
        ],
        "BaseSettings.__contains__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "BaseSettings.get": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "object"
                }
            }
        ],
        "BaseSettings.getbool": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "bool"
                }
            }
        ],
        "BaseSettings.getint": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "int"
                }
            }
        ],
        "BaseSettings.getfloat": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "float"
                }
            }
        ],
        "BaseSettings.getlist": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "object"
                }
            }
        ],
        "BaseSettings.getdict": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "object"
                }
            }
        ],
        "BaseSettings._assert_mutability": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSettings.__delitem__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "BaseSettings.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSettings.freeze": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSettings.frozencopy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSettings.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSettings.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSettings._to_dict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSettings.copy_to_dict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DictProxy.o": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_DictProxy.settings": [
            {
                "type": "attr",
                "anno": "SettingsAttribute"
            }
        ],
        "_DictProxy.priority": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_DictProxy.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "SettingsAttribute",
                    "priority": "int"
                }
            }
        ],
        "_DictProxy.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DictProxy.__getitem__": [
            {
                "type": "method",
                "args": {
                    "k": "str"
                }
            }
        ],
        "_DictProxy.__delitem__": [
            {
                "type": "method",
                "args": {
                    "k": "str"
                }
            }
        ],
        "_DictProxy.__iter__": [
            {
                "type": "method",
                "args": {
                    "k": "str",
                    "v": "str"
                }
            }
        ],
        "iter_default_settings": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "overridden_settings": [
            {
                "type": "func",
                "args": {
                    "settings": "Settings"
                }
            }
        ],
        "BaseSettings.getpriority": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "BaseSettings.delete": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "priority": "str"
                }
            }
        ],
        "BaseSettings.maxpriority": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SettingsAttribute.__init__": [
            {
                "type": "method",
                "args": {
                    "value": "SettingsAttribute",
                    "priority": "str"
                }
            }
        ],
        "BaseSettings.set": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "SettingsAttribute",
                    "priority": "str"
                }
            }
        ],
        "BaseSettings.update": [
            {
                "type": "method",
                "args": {
                    "values": "dict",
                    "priority": "str"
                }
            }
        ],
        "BaseSettings.setdict": [
            {
                "type": "method",
                "args": {
                    "values": "dict",
                    "priority": "str"
                }
            }
        ],
        "BaseSettings.__init__": [
            {
                "type": "method",
                "args": {
                    "values": "dict",
                    "priority": "str"
                }
            }
        ],
        "SettingsAttribute.set": [
            {
                "type": "method",
                "args": {
                    "value": "SettingsAttribute",
                    "priority": "int"
                }
            }
        ],
        "_DictProxy.__setitem__": [
            {
                "type": "method",
                "args": {
                    "k": "str",
                    "v": "str"
                }
            }
        ],
        "BaseSettings.setmodule": [
            {
                "type": "method",
                "args": {
                    "module": "str",
                    "priority": "str"
                }
            }
        ],
        "Settings.__init__": [
            {
                "type": "method",
                "args": {
                    "values": "dict",
                    "priority": "str"
                }
            }
        ],
        "BaseSettings.__setitem__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "SettingsAttribute"
                }
            }
        ],
        "BaseSettings._repr_pretty_": [
            {
                "type": "method",
                "args": {
                    "p": "p.Parameter",
                    "cycle": "bool"
                }
            }
        ],
        "BaseSettings.getwithbase": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ]
    },
    "exceptions": {
        "CloseSpider.reason": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CloseSpider.__init__": [
            {
                "type": "method",
                "args": {
                    "reason": "str"
                }
            }
        ],
        "UsageError.print_help": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UsageError.__init__": [
            {
                "type": "method",
                "args": {
                    "a": "str",
                    "kw": "str"
                }
            }
        ]
    },
    "interfaces": {
        "ISpiderLoader.from_settings": [
            {
                "type": "method",
                "args": {
                    "settings": "dict"
                }
            }
        ],
        "ISpiderLoader.load": [
            {
                "type": "method",
                "args": {
                    "spider_name": "str"
                }
            }
        ],
        "ISpiderLoader.list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ISpiderLoader.find_by_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ]
    },
    "crawler": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "Crawler.spidercls": [
            {
                "type": "attr",
                "anno": "Spider"
            }
        ],
        "Crawler.settings": [
            {
                "type": "attr",
                "anno": "Settings"
            }
        ],
        "Crawler.signals": [
            {
                "type": "attr",
                "anno": "SignalManager"
            }
        ],
        "Crawler.stats": [
            {
                "type": "attr",
                "anno": "logging.Stats"
            }
        ],
        "Crawler.__remove_handler": [
            {
                "type": "attr",
                "anno": "Callable[[], None]"
            }
        ],
        "Crawler.logformatter": [
            {
                "type": "attr",
                "anno": "logging.Logger"
            }
        ],
        "Crawler.extensions": [
            {
                "type": "attr",
                "anno": "ExtensionManager"
            }
        ],
        "Crawler.crawling": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Crawler.spider": [
            {
                "type": "attr",
                "anno": "Spider"
            }
        ],
        "Crawler.engine": [
            {
                "type": "attr",
                "anno": "ExecutionEngine"
            }
        ],
        "Crawler._spiders": [
            {
                "type": "attr",
                "anno": "ISpiderLoader"
            }
        ],
        "CrawlerRunner.settings": [
            {
                "type": "attr",
                "anno": "Settings"
            }
        ],
        "CrawlerRunner.spider_loader": [
            {
                "type": "attr",
                "anno": "ISpiderLoader"
            }
        ],
        "CrawlerRunner._crawlers": [
            {
                "type": "attr",
                "anno": "set[Crawler]"
            }
        ],
        "CrawlerRunner.crawlers": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "CrawlerRunner._active": [
            {
                "type": "attr",
                "anno": "set[defer.Deferred]"
            }
        ],
        "CrawlerRunner.bootstrap_failed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CrawlerRunner.spiders": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CrawlerRunner.join": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CrawlerProcess._get_dns_resolver": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CrawlerProcess._stop_reactor": [
            {
                "type": "method",
                "args": {
                    "_": "int"
                }
            }
        ],
        "CrawlerProcess._signal_kill": [
            {
                "type": "method",
                "args": {
                    "signum": "int",
                    "_": "int"
                }
            }
        ],
        "_get_spider_loader": [
            {
                "type": "func",
                "args": {
                    "settings": "Settings"
                }
            }
        ],
        "CrawlerRunner.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "Settings"
                }
            }
        ],
        "Crawler.spiders": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Crawler.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CrawlerRunner.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CrawlerProcess._graceful_stop_reactor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CrawlerProcess._signal_shutdown": [
            {
                "type": "method",
                "args": {
                    "signum": "int",
                    "_": "int"
                }
            }
        ],
        "CrawlerProcess.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "Settings",
                    "install_root_handler": "bool"
                }
            }
        ],
        "CrawlerProcess.start": [
            {
                "type": "method",
                "args": {
                    "stop_after_crawl": "bool"
                }
            }
        ],
        "Crawler._create_engine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Crawler._create_spider": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Crawler.crawl": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Crawler.__init__": [
            {
                "type": "method",
                "args": {
                    "spidercls": "Spider",
                    "settings": "Settings"
                }
            }
        ],
        "CrawlerRunner._create_crawler": [
            {
                "type": "method",
                "args": {
                    "spidercls": "Spider"
                }
            }
        ],
        "CrawlerRunner.create_crawler": [
            {
                "type": "method",
                "args": {
                    "crawler_or_spidercls": "Spider"
                }
            }
        ],
        "CrawlerRunner.crawl": [
            {
                "type": "method",
                "args": {
                    "crawler_or_spidercls": "Spider",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "CrawlerRunner._crawl": [
            {
                "type": "method",
                "args": {
                    "crawler": "Crawler",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "statscollectors": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "StatsCollector._dump": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StatsCollector._stats": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StatsCollector.get_stats": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "StatsCollector.set_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "int",
                    "spider": "str"
                }
            }
        ],
        "StatsCollector.set_stats": [
            {
                "type": "method",
                "args": {
                    "stats": "dict",
                    "spider": "str"
                }
            }
        ],
        "StatsCollector.open_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "StatsCollector._persist_stats": [
            {
                "type": "method",
                "args": {
                    "stats": "dict",
                    "spider": "str"
                }
            }
        ],
        "MemoryStatsCollector.spider_stats": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MemoryStatsCollector.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "StatsCollector"
                }
            }
        ],
        "DummyStatsCollector.get_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "int",
                    "spider": "str"
                }
            }
        ],
        "DummyStatsCollector.set_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "int",
                    "spider": "str"
                }
            }
        ],
        "DummyStatsCollector.set_stats": [
            {
                "type": "method",
                "args": {
                    "stats": "dict",
                    "spider": "str"
                }
            }
        ],
        "DummyStatsCollector.inc_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "count": "int",
                    "start": "int",
                    "spider": "str"
                }
            }
        ],
        "DummyStatsCollector.max_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "int",
                    "spider": "str"
                }
            }
        ],
        "DummyStatsCollector.min_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "int",
                    "spider": "str"
                }
            }
        ],
        "StatsCollector.min_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "object",
                    "spider": "object"
                }
            }
        ],
        "StatsCollector.max_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "int",
                    "spider": "str"
                }
            }
        ],
        "StatsCollector.inc_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "count": "int",
                    "start": "int",
                    "spider": "str"
                }
            }
        ],
        "StatsCollector.clear_stats": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "StatsCollector.close_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "reason": "str"
                }
            }
        ],
        "StatsCollector.get_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "object",
                    "spider": "str"
                }
            }
        ],
        "MemoryStatsCollector._persist_stats": [
            {
                "type": "method",
                "args": {
                    "stats": "dict",
                    "spider": "Spider"
                }
            }
        ],
        "StatsCollector.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Crawler"
                }
            }
        ]
    },
    "squeues": {
        "_pickle_serialize": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "FifoMemoryQueue": [
            {
                "type": "var",
                "anno": "type[queue.FifoMemoryQueue]"
            }
        ],
        "LifoMemoryQueue": [
            {
                "type": "var",
                "anno": "type[queue.LifoMemoryQueue]"
            }
        ],
        "_serializable_queue": [
            {
                "type": "func",
                "args": {
                    "queue_class": "type",
                    "serialize": "Callable[[object], object]",
                    "deserialize": "Callable[[bytes], object]"
                }
            }
        ],
        "MarshalLifoDiskQueue": [
            {
                "type": "var",
                "anno": "Callable[[bytes], object]"
            }
        ],
        "MarshalFifoDiskQueue": [
            {
                "type": "var",
                "anno": "Callable[[bytes], object]"
            }
        ],
        "PickleLifoDiskQueue": [
            {
                "type": "var",
                "anno": "Callable[[object], object]"
            }
        ],
        "PickleFifoDiskQueue": [
            {
                "type": "var",
                "anno": "Callable[[object], object]"
            }
        ]
    },
    "exporters": {
        "__all__": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "BaseItemExporter.encoding": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "BaseItemExporter.fields_to_export": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BaseItemExporter.export_empty_fields": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BaseItemExporter.indent": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "BaseItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "dict"
                }
            }
        ],
        "BaseItemExporter.start_exporting": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseItemExporter.finish_exporting": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JsonLinesItemExporter.file": [
            {
                "type": "attr",
                "anno": "io.BytesIO"
            }
        ],
        "JsonLinesItemExporter.encoder": [
            {
                "type": "attr",
                "anno": "ScrapyJSONEncoder"
            }
        ],
        "JsonItemExporter.file": [
            {
                "type": "attr",
                "anno": "io.BytesIO"
            }
        ],
        "JsonItemExporter.encoder": [
            {
                "type": "attr",
                "anno": "ScrapyJSONEncoder"
            }
        ],
        "JsonItemExporter.first_item": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "XmlItemExporter.item_element": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XmlItemExporter.root_element": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XmlItemExporter.encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XmlItemExporter.xg": [
            {
                "type": "attr",
                "anno": "XMLGenerator"
            }
        ],
        "XmlItemExporter.finish_exporting": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XmlItemExporter._xg_characters": [
            {
                "type": "method",
                "args": {
                    "serialized_value": "six.text_type"
                }
            }
        ],
        "XmlItemExporter._beautify_indent": [
            {
                "type": "method",
                "args": {
                    "depth": "int"
                }
            }
        ],
        "XmlItemExporter._beautify_newline": [
            {
                "type": "method",
                "args": {
                    "new_item": "bool"
                }
            }
        ],
        "XmlItemExporter.start_exporting": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CsvItemExporter.encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CsvItemExporter.include_headers_line": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CsvItemExporter.stream": [
            {
                "type": "attr",
                "anno": "io.TextIOWrapper"
            }
        ],
        "CsvItemExporter.csv_writer": [
            {
                "type": "attr",
                "anno": "csv.writer"
            }
        ],
        "CsvItemExporter._headers_not_written": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CsvItemExporter._join_multivalued": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CsvItemExporter._join_if_needed": [
            {
                "type": "method",
                "args": {
                    "value": "object"
                }
            }
        ],
        "CsvItemExporter._build_row": [
            {
                "type": "method",
                "args": {
                    "values": "list"
                }
            }
        ],
        "CsvItemExporter.fields_to_export": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PickleItemExporter.file": [
            {
                "type": "attr",
                "anno": "io.BytesIO"
            }
        ],
        "PickleItemExporter.protocol": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MarshalItemExporter.file": [
            {
                "type": "attr",
                "anno": "io.BytesIO"
            }
        ],
        "PprintItemExporter.file": [
            {
                "type": "attr",
                "anno": "io.BytesIO"
            }
        ],
        "PythonItemExporter.binary": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PythonItemExporter.encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CsvItemExporter._write_headers_and_set_fields_to_export": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "CsvItemExporter.serialize_field": [
            {
                "type": "method",
                "args": {
                    "field": "dict",
                    "name": "str",
                    "value": "object"
                }
            }
        ],
        "BaseItemExporter.serialize_field": [
            {
                "type": "method",
                "args": {
                    "field": "dict",
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "BaseItemExporter._get_serialized_fields": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem",
                    "default_value": "str",
                    "include_empty": "bool"
                }
            }
        ],
        "PythonItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "PythonItemExporter._serialize_value": [
            {
                "type": "method",
                "args": {
                    "value": "object"
                }
            }
        ],
        "PythonItemExporter._serialize_dict": [
            {
                "type": "method",
                "args": {
                    "value": "dict"
                }
            }
        ],
        "PythonItemExporter.serialize_field": [
            {
                "type": "method",
                "args": {
                    "field": "dict",
                    "name": "str",
                    "value": "object"
                }
            }
        ],
        "MarshalItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "PickleItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "CsvItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "XmlItemExporter._export_xml_field": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "serialized_value": "object",
                    "depth": "int"
                }
            }
        ],
        "XmlItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "PprintItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "JsonItemExporter._beautify_newline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JsonItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "JsonItemExporter.finish_exporting": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JsonItemExporter.start_exporting": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JsonLinesItemExporter.export_item": [
            {
                "type": "method",
                "args": {
                    "item": "BaseItem"
                }
            }
        ],
        "BaseItemExporter._configure": [
            {
                "type": "method",
                "args": {
                    "options": "dict",
                    "dont_fail": "bool"
                }
            }
        ],
        "PythonItemExporter._configure": [
            {
                "type": "method",
                "args": {
                    "options": "dict",
                    "dont_fail": "bool"
                }
            }
        ],
        "PprintItemExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "io.BytesIO",
                    "kwargs": "dict"
                }
            }
        ],
        "MarshalItemExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "io.BytesIO",
                    "kwargs": "dict"
                }
            }
        ],
        "PickleItemExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "io.BytesIO",
                    "protocol": "int",
                    "kwargs": "dict"
                }
            }
        ],
        "CsvItemExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "str",
                    "include_headers_line": "bool",
                    "join_multivalued": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "XmlItemExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "JsonItemExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "io.BytesIO",
                    "kwargs": "object"
                }
            }
        ],
        "JsonLinesItemExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "io.BytesIO",
                    "kwargs": "object"
                }
            }
        ],
        "BaseItemExporter.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ]
    },
    "pipelines.images": {
        "ImagesPipeline.MEDIA_NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImagesPipeline.MIN_WIDTH": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ImagesPipeline.MIN_HEIGHT": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ImagesPipeline.EXPIRES": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ImagesPipeline.THUMBS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ImagesPipeline.DEFAULT_IMAGES_URLS_FIELD": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImagesPipeline.DEFAULT_IMAGES_RESULT_FIELD": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImagesPipeline.expires": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ImagesPipeline.IMAGES_RESULT_FIELD": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImagesPipeline.IMAGES_URLS_FIELD": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImagesPipeline.images_urls_field": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImagesPipeline.images_result_field": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImagesPipeline.min_width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ImagesPipeline.min_height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ImagesPipeline.thumbs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ImagesPipeline.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[ImagesPipeline]",
                    "settings": "Settings"
                }
            }
        ],
        "ImagesPipeline.item_completed": [
            {
                "type": "method",
                "args": {
                    "results": "list",
                    "item": "BaseItem",
                    "info": "dict"
                }
            }
        ],
        "ImagesPipeline.get_media_requests": [
            {
                "type": "method",
                "args": {
                    "item": "dict",
                    "info": "Settings"
                }
            }
        ],
        "ImagesPipeline.__init__": [
            {
                "type": "method",
                "args": {
                    "store_uri": "str",
                    "download_func": "Callable",
                    "settings": "Settings"
                }
            }
        ],
        "ImagesPipeline.thumb_path": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "thumb_id": "str",
                    "response": "Response",
                    "info": "str"
                }
            }
        ],
        "ImagesPipeline.file_path": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "Response",
                    "info": "str"
                }
            }
        ],
        "ImagesPipeline.convert_image": [
            {
                "type": "method",
                "args": {
                    "image": "Image.Image",
                    "size": "int"
                }
            }
        ],
        "ImagesPipeline.get_images": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "info": "str"
                }
            }
        ],
        "ImagesPipeline.image_downloaded": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "info": "str"
                }
            }
        ],
        "ImagesPipeline.file_downloaded": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "info": "str"
                }
            }
        ]
    },
    "pipelines.media": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "MediaPipeline.LOG_FAILED_RESULTS": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MediaPipeline.SpiderInfo.spider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MediaPipeline.SpiderInfo.downloading": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "MediaPipeline.SpiderInfo.downloaded": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MediaPipeline.SpiderInfo.waiting": [
            {
                "type": "attr",
                "anno": "defaultdict"
            }
        ],
        "MediaPipeline.SpiderInfo.__init__": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "MediaPipeline.download_func": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "MediaPipeline.allow_redirects": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MediaPipeline.handle_httpstatus_list": [
            {
                "type": "attr",
                "anno": "SequenceExclude"
            }
        ],
        "MediaPipeline._handle_statuses": [
            {
                "type": "method",
                "args": {
                    "allow_redirects": "bool"
                }
            }
        ],
        "MediaPipeline.spiderinfo": [
            {
                "type": "attr",
                "anno": "SpiderInfo"
            }
        ],
        "MediaPipeline.open_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "MediaPipeline.media_to_download": [
            {
                "type": "method",
                "args": {
                    "request": "_DefGen_Return",
                    "info": "SpiderInfo"
                }
            }
        ],
        "MediaPipeline.get_media_requests": [
            {
                "type": "method",
                "args": {
                    "item": "str",
                    "info": "SpiderInfo"
                }
            }
        ],
        "MediaPipeline.media_downloaded": [
            {
                "type": "method",
                "args": {
                    "response": "_DefGen_Return",
                    "request": "Request",
                    "info": "SpiderInfo"
                }
            }
        ],
        "MediaPipeline.media_failed": [
            {
                "type": "method",
                "args": {
                    "failure": "Failure",
                    "request": "Request",
                    "info": "SpiderInfo"
                }
            }
        ],
        "MediaPipeline._modify_media_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "MediaPipeline._key_for_pipe": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "base_class_name": "str",
                    "settings": "Settings"
                }
            }
        ],
        "MediaPipeline.__init__": [
            {
                "type": "method",
                "args": {
                    "download_func": "Callable",
                    "settings": "Settings"
                }
            }
        ],
        "MediaPipeline.item_completed": [
            {
                "type": "method",
                "args": {
                    "results": "Sequence[_DefGen_Return]",
                    "item": "str",
                    "info": "SpiderInfo"
                }
            }
        ],
        "MediaPipeline._cache_result_and_execute_waiters": [
            {
                "type": "method",
                "args": {
                    "result": "_DefGen_Return",
                    "fp": "str",
                    "info": "SpiderInfo"
                }
            }
        ],
        "MediaPipeline.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MediaPipeline]",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "MediaPipeline._check_media_to_download": [
            {
                "type": "method",
                "args": {
                    "result": "_DefGen_Return",
                    "request": "_DefGen_Return",
                    "info": "SpiderInfo"
                }
            }
        ],
        "MediaPipeline._process_request": [
            {
                "type": "method",
                "args": {
                    "request": "_DefGen_Return",
                    "info": "SpiderInfo"
                }
            }
        ],
        "MediaPipeline.process_item": [
            {
                "type": "method",
                "args": {
                    "item": "str",
                    "spider": "str"
                }
            }
        ]
    },
    "pipelines.files": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "FSFilesStore.basedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FSFilesStore.created_directories": [
            {
                "type": "attr",
                "anno": "defaultdict"
            }
        ],
        "FSFilesStore._get_filesystem_path": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "FSFilesStore.stat_file": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "info": "Settings"
                }
            }
        ],
        "FSFilesStore._mkdir": [
            {
                "type": "method",
                "args": {
                    "dirname": "str",
                    "domain": "str"
                }
            }
        ],
        "FSFilesStore.__init__": [
            {
                "type": "method",
                "args": {
                    "basedir": "str"
                }
            }
        ],
        "S3FilesStore.AWS_ACCESS_KEY_ID": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FilesStore.AWS_SECRET_ACCESS_KEY": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FilesStore.AWS_ENDPOINT_URL": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FilesStore.AWS_REGION_NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FilesStore.AWS_USE_SSL": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "S3FilesStore.AWS_VERIFY": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "S3FilesStore.POLICY": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FilesStore.HEADERS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "S3FilesStore.is_botocore": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "S3FilesStore.s3_client": [
            {
                "type": "attr",
                "anno": "s3.Client"
            }
        ],
        "S3FilesStore.S3Connection": [
            {
                "type": "attr",
                "anno": "S3Connection"
            }
        ],
        "S3FilesStore._headers_to_botocore_kwargs": [
            {
                "type": "method",
                "args": {
                    "headers": "dict"
                }
            }
        ],
        "GCSFilesStore.GCS_PROJECT_ID": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GCSFilesStore.CACHE_CONTROL": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GCSFilesStore.POLICY": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GCSFilesStore.bucket": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "S3FilesStore._get_boto_bucket": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GCSFilesStore.prefix": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GCSFilesStore.__init__": [
            {
                "type": "method",
                "args": {
                    "uri": "str"
                }
            }
        ],
        "GCSFilesStore.stat_file": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "info": "Settings"
                }
            }
        ],
        "GCSFilesStore._get_content_type": [
            {
                "type": "method",
                "args": {
                    "headers": "dict"
                }
            }
        ],
        "GCSFilesStore.persist_file": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "buf": "BytesIO",
                    "info": "str",
                    "meta": "dict",
                    "headers": "dict"
                }
            }
        ],
        "FilesPipeline.MEDIA_NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilesPipeline.EXPIRES": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FilesPipeline.STORE_SCHEMES": [
            {
                "type": "attr",
                "anno": "dict[str, type[S3FilesStore]]"
            }
        ],
        "FilesPipeline.DEFAULT_FILES_URLS_FIELD": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilesPipeline.DEFAULT_FILES_RESULT_FIELD": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilesPipeline.store": [
            {
                "type": "attr",
                "anno": "S3FilesStore"
            }
        ],
        "FilesPipeline.expires": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FilesPipeline.FILES_URLS_FIELD": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilesPipeline.FILES_RESULT_FIELD": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilesPipeline.files_urls_field": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilesPipeline.files_result_field": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilesPipeline.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FilesPipeline]",
                    "settings": "Settings"
                }
            }
        ],
        "FilesPipeline._get_store": [
            {
                "type": "method",
                "args": {
                    "uri": "str"
                }
            }
        ],
        "S3FilesStore._get_boto_key": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "S3FilesStore.__init__": [
            {
                "type": "method",
                "args": {
                    "uri": "str"
                }
            }
        ],
        "FilesPipeline.item_completed": [
            {
                "type": "method",
                "args": {
                    "results": "list",
                    "item": "BaseItem",
                    "info": "dict"
                }
            }
        ],
        "S3FilesStore.stat_file": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "info": "Settings"
                }
            }
        ],
        "FilesPipeline.get_media_requests": [
            {
                "type": "method",
                "args": {
                    "item": "dict",
                    "info": "Settings"
                }
            }
        ],
        "FilesPipeline.__init__": [
            {
                "type": "method",
                "args": {
                    "store_uri": "str",
                    "download_func": "Callable",
                    "settings": "Settings"
                }
            }
        ],
        "FilesPipeline.media_failed": [
            {
                "type": "method",
                "args": {
                    "failure": "Exception",
                    "request": "Request",
                    "info": "Settings"
                }
            }
        ],
        "FilesPipeline.file_path": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "Response",
                    "info": "Settings"
                }
            }
        ],
        "FSFilesStore.persist_file": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "buf": "BytesIO",
                    "info": "str",
                    "meta": "dict",
                    "headers": "dict"
                }
            }
        ],
        "FilesPipeline.inc_stats": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "status": "str"
                }
            }
        ],
        "FilesPipeline.media_to_download": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "info": "Settings"
                }
            }
        ],
        "S3FilesStore.persist_file": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "buf": "BytesIO",
                    "info": "str",
                    "meta": "dict",
                    "headers": "dict"
                }
            }
        ],
        "FilesPipeline.file_downloaded": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "info": "Settings"
                }
            }
        ],
        "FilesPipeline.media_downloaded": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request",
                    "info": "Settings"
                }
            }
        ]
    },
    "pipelines": {
        "ItemPipelineManager.component_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ItemPipelineManager.process_item": [
            {
                "type": "method",
                "args": {
                    "item": "str",
                    "spider": "str"
                }
            }
        ],
        "ItemPipelineManager._get_mwlist_from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MiddlewareManager]",
                    "settings": "dict"
                }
            }
        ],
        "ItemPipelineManager._add_middleware": [
            {
                "type": "method",
                "args": {
                    "pipe": "object"
                }
            }
        ]
    },
    "loader.common": {
        "wrap_loader_context": [
            {
                "type": "func",
                "args": {
                    "function": "Callable",
                    "context": "dict"
                }
            }
        ]
    },
    "loader.processors": {
        "MapCompose.functions": [
            {
                "type": "attr",
                "anno": "ChainMap"
            }
        ],
        "MapCompose.default_loader_context": [
            {
                "type": "attr",
                "anno": "ChainMap"
            }
        ],
        "MapCompose.__init__": [
            {
                "type": "method",
                "args": {
                    "functions": "ChainMap",
                    "default_loader_context": "ChainMap"
                }
            }
        ],
        "MapCompose.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "loader_context": "ChainMap"
                }
            }
        ],
        "Compose.functions": [
            {
                "type": "attr",
                "anno": "ChainMap"
            }
        ],
        "Compose.stop_on_none": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Compose.default_loader_context": [
            {
                "type": "attr",
                "anno": "ChainMap"
            }
        ],
        "Compose.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "loader_context": "ChainMap"
                }
            }
        ],
        "TakeFirst.__call__": [
            {
                "type": "method",
                "args": {
                    "values": "ChainMap"
                }
            }
        ],
        "Identity.__call__": [
            {
                "type": "method",
                "args": {
                    "values": "ChainMap"
                }
            }
        ],
        "SelectJmes.json_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SelectJmes.compiled_path": [
            {
                "type": "attr",
                "anno": "jmespath.Pattern"
            }
        ],
        "SelectJmes.__init__": [
            {
                "type": "method",
                "args": {
                    "json_path": "str"
                }
            }
        ],
        "SelectJmes.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "Join.separator": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Join.__init__": [
            {
                "type": "method",
                "args": {
                    "separator": "str"
                }
            }
        ],
        "Join.__call__": [
            {
                "type": "method",
                "args": {
                    "values": "ChainMap"
                }
            }
        ],
        "Compose.__init__": [
            {
                "type": "method",
                "args": {
                    "functions": "ChainMap",
                    "default_loader_context": "ChainMap"
                }
            }
        ]
    },
    "loader": {
        "ItemLoader.default_item_class": [
            {
                "type": "attr",
                "anno": "Item"
            }
        ],
        "ItemLoader.default_input_processor": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ItemLoader.default_output_processor": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ItemLoader.default_selector_class": [
            {
                "type": "attr",
                "anno": "Selector"
            }
        ],
        "ItemLoader.selector": [
            {
                "type": "attr",
                "anno": "Selector | None"
            }
        ],
        "ItemLoader.context": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ItemLoader.parent": [
            {
                "type": "attr",
                "anno": "ItemLoader"
            }
        ],
        "ItemLoader._local_item": [
            {
                "type": "attr",
                "anno": "Item"
            }
        ],
        "ItemLoader._local_values": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ItemLoader.item": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ItemLoader._check_selector_method": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ItemLoader._values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ItemLoader.get_collected_values": [
            {
                "type": "method",
                "args": {
                    "field_name": "str"
                }
            }
        ],
        "ItemLoader._get_cssvalues": [
            {
                "type": "method",
                "args": {
                    "csss": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader._get_xpathvalues": [
            {
                "type": "method",
                "args": {
                    "xpaths": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader._get_item_field_attr": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "ItemLoader.get_output_processor": [
            {
                "type": "method",
                "args": {
                    "field_name": "str"
                }
            }
        ],
        "ItemLoader.get_output_value": [
            {
                "type": "method",
                "args": {
                    "field_name": "str"
                }
            }
        ],
        "ItemLoader.load_item": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ItemLoader.get_input_processor": [
            {
                "type": "method",
                "args": {
                    "field_name": "str"
                }
            }
        ],
        "ItemLoader._process_input_value": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "value": "Item"
                }
            }
        ],
        "ItemLoader._add_value": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "value": "Item"
                }
            }
        ],
        "ItemLoader.get_value": [
            {
                "type": "method",
                "args": {
                    "value": "Item",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader.get_css": [
            {
                "type": "method",
                "args": {
                    "css": "str",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader.get_xpath": [
            {
                "type": "method",
                "args": {
                    "xpath": "str",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader.add_value": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "value": "Item",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader.add_css": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "css": "str",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader.add_xpath": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "xpath": "str",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader._replace_value": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "value": "Item"
                }
            }
        ],
        "ItemLoader.replace_value": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "value": "Item",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader.replace_css": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "css": "str",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader.replace_xpath": [
            {
                "type": "method",
                "args": {
                    "field_name": "str",
                    "xpath": "str",
                    "processors": "str",
                    "kw": "str"
                }
            }
        ],
        "ItemLoader.__init__": [
            {
                "type": "method",
                "args": {
                    "item": "Item",
                    "selector": "Selector",
                    "response": "str",
                    "parent": "ItemLoader",
                    "context": "dict"
                }
            }
        ],
        "ItemLoader.nested_css": [
            {
                "type": "method",
                "args": {
                    "css": "str",
                    "context": "dict"
                }
            }
        ],
        "ItemLoader.nested_xpath": [
            {
                "type": "method",
                "args": {
                    "xpath": "str",
                    "context": "dict"
                }
            }
        ]
    },
    "contracts.default": {
        "UrlContract.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackKeywordArgumentsContract.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ReturnsContract.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ReturnsContract.objects": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ReturnsContract.obj_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ReturnsContract.obj_type": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "ReturnsContract.min_bound": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ReturnsContract.max_bound": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ReturnsContract.post_process": [
            {
                "type": "method",
                "args": {
                    "output": "list"
                }
            }
        ],
        "ScrapesContract.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScrapesContract.post_process": [
            {
                "type": "method",
                "args": {
                    "output": "list"
                }
            }
        ],
        "ReturnsContract.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "CallbackKeywordArgumentsContract.adjust_request_args": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "UrlContract.adjust_request_args": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ]
    },
    "contracts": {
        "ContractsManager.contracts": [
            {
                "type": "attr",
                "anno": "dict[str, Contract]"
            }
        ],
        "ContractsManager.tested_methods_from_spidercls": [
            {
                "type": "method",
                "args": {
                    "spidercls": "type"
                }
            }
        ],
        "Contract.request_cls": [
            {
                "type": "attr",
                "anno": "Request | None"
            }
        ],
        "Contract.testcase_pre": [
            {
                "type": "attr",
                "anno": "TestCase"
            }
        ],
        "Contract.testcase_post": [
            {
                "type": "attr",
                "anno": "TestCase"
            }
        ],
        "Contract.args": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Contract.adjust_request_args": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "ContractsManager.extract_contracts": [
            {
                "type": "method",
                "args": {
                    "method": "Callable"
                }
            }
        ],
        "_create_testcase": [
            {
                "type": "func",
                "args": {
                    "method": "Callable",
                    "desc": "str"
                }
            }
        ],
        "ContractsManager._clean_req": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "method": "Callable",
                    "results": "dict"
                }
            }
        ],
        "Contract.__init__": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "args": "str"
                }
            }
        ],
        "Contract.add_post_hook": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "results": "dict"
                }
            }
        ],
        "Contract.add_pre_hook": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "results": "dict"
                }
            }
        ],
        "ContractsManager.from_method": [
            {
                "type": "method",
                "args": {
                    "method": "Callable",
                    "results": "dict"
                }
            }
        ],
        "ContractsManager.from_spider": [
            {
                "type": "method",
                "args": {
                    "spider": "Request",
                    "results": "dict"
                }
            }
        ],
        "ContractsManager.__init__": [
            {
                "type": "method",
                "args": {
                    "contracts": "list[Contract]"
                }
            }
        ]
    },
    "utils.conf": {
        "arglist_to_dict": [
            {
                "type": "func",
                "args": {
                    "arglist": "str"
                }
            }
        ],
        "closest_scrapy_cfg": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "prevpath": "str"
                }
            }
        ],
        "get_sources": [
            {
                "type": "func",
                "args": {
                    "use_closest": "bool"
                }
            }
        ],
        "get_config": [
            {
                "type": "func",
                "args": {
                    "use_closest": "bool"
                }
            }
        ],
        "init_env": [
            {
                "type": "func",
                "args": {
                    "project": "str",
                    "set_syspath": "bool"
                }
            }
        ],
        "build_component_list": [
            {
                "type": "func",
                "args": {
                    "compdict": "dict",
                    "custom": "dict",
                    "convert": "Callable[[str], object]"
                }
            }
        ]
    },
    "utils.url": {
        "parse_url": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "encoding": "str"
                }
            }
        ],
        "url_has_any_extension": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "extensions": "str"
                }
            }
        ],
        "url_is_from_any_domain": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "domains": "list"
                }
            }
        ],
        "escape_ajax": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "add_http_if_no_scheme": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "guess_scheme": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "url_is_from_spider": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "spider": "Spider"
                }
            }
        ],
        "strip_url": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "strip_credentials": "bool",
                    "strip_default_port": "bool",
                    "origin_only": "bool",
                    "strip_fragment": "bool"
                }
            }
        ]
    },
    "utils.python": {
        "is_listlike": [
            {
                "type": "func",
                "args": {
                    "x": "object"
                }
            }
        ],
        "iflatten": [
            {
                "type": "func",
                "args": {
                    "x": "object"
                }
            }
        ],
        "flatten": [
            {
                "type": "func",
                "args": {
                    "x": "object"
                }
            }
        ],
        "unique": [
            {
                "type": "func",
                "args": {
                    "list_": "list",
                    "key": "Callable[[object], object]"
                }
            }
        ],
        "to_unicode": [
            {
                "type": "func",
                "args": {
                    "text": "six.Union[str, bytes]",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "to_bytes": [
            {
                "type": "func",
                "args": {
                    "text": "six.Union[str, bytes]",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "to_native_str": [
            {
                "type": "func",
                "args": {
                    "text": "six.Union[str, bytes]",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "re_rsearch": [
            {
                "type": "func",
                "args": {
                    "pattern": "six.Union[str, re.Pattern]",
                    "text": "str",
                    "chunk_size": "int"
                }
            }
        ],
        "memoizemethod_noargs": [
            {
                "type": "func",
                "args": {
                    "method": "Callable"
                }
            }
        ],
        "_BINARYCHARS": [
            {
                "type": "var",
                "anno": "set[bytes]"
            }
        ],
        "binary_is_text": [
            {
                "type": "func",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "isbinarytext": [
            {
                "type": "func",
                "args": {
                    "text": "bytes"
                }
            }
        ],
        "_getargspec_py23": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "get_spec": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "equal_attributes": [
            {
                "type": "func",
                "args": {
                    "obj1": "object",
                    "obj2": "object",
                    "attributes": "list"
                }
            }
        ],
        "WeakKeyCache.default_factory": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "WeakKeyCache._weakdict": [
            {
                "type": "attr",
                "anno": "weakref.WeakKeyDictionary"
            }
        ],
        "WeakKeyCache.__init__": [
            {
                "type": "method",
                "args": {
                    "default_factory": "object"
                }
            }
        ],
        "WeakKeyCache.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "int"
                }
            }
        ],
        "stringify_dict": [
            {
                "type": "func",
                "args": {
                    "dct_or_tuples": "dict",
                    "encoding": "str",
                    "keys_only": "bool"
                }
            }
        ],
        "is_writable": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "setattr_default": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "retry_on_eintr": [
            {
                "type": "func",
                "args": {
                    "function": "Callable",
                    "args": "str",
                    "kw": "str"
                }
            }
        ],
        "without_none_values": [
            {
                "type": "func",
                "args": {
                    "iterable": "object"
                }
            }
        ],
        "global_object_name": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "garbage_collect": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "MutableChain.data": [
            {
                "type": "attr",
                "anno": "chain"
            }
        ],
        "MutableChain.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "MutableChain.extend": [
            {
                "type": "method",
                "args": {
                    "iterables": "object"
                }
            }
        ],
        "MutableChain.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MutableChain.__next__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MutableChain.next": [
            {
                "type": "attr",
                "anno": "chain"
            }
        ],
        "get_func_args": [
            {
                "type": "func",
                "args": {
                    "func": "Callable",
                    "stripself": "bool"
                }
            }
        ]
    },
    "utils.testproc": {
        "ProcessTest.command": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ProcessTest.prefix": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ProcessTest.cwd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TestProcessProtocol.deferred": [
            {
                "type": "attr",
                "anno": "defer.Deferred"
            }
        ],
        "TestProcessProtocol.out": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "TestProcessProtocol.err": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "TestProcessProtocol.exitcode": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TestProcessProtocol.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProcessTest._process_finished": [
            {
                "type": "method",
                "args": {
                    "pp": "protocol.ProcessProtocol",
                    "cmd": "str",
                    "check_code": "bool"
                }
            }
        ],
        "ProcessTest.execute": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "check_code": "bool",
                    "settings": "str"
                }
            }
        ],
        "TestProcessProtocol.outReceived": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "TestProcessProtocol.errReceived": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "TestProcessProtocol.processEnded": [
            {
                "type": "method",
                "args": {
                    "status": "protocol.ProcessStatus"
                }
            }
        ]
    },
    "utils.ossignal": {
        "signal_names": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "signum": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "install_shutdown_handlers": [
            {
                "type": "func",
                "args": {
                    "function": "signal.SignalsHandler",
                    "override_sigint": "bool"
                }
            }
        ]
    },
    "utils.test": {
        "assert_gcs_environ": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "skip_if_no_boto": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "assert_aws_environ": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_gcs_content_and_delete": [
            {
                "type": "func",
                "args": {
                    "bucket": "str",
                    "path": "str"
                }
            }
        ],
        "get_pythonpath": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_testenv": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "assert_samelines": [
            {
                "type": "func",
                "args": {
                    "testcase": "SkipTest",
                    "text1": "str",
                    "text2": "str",
                    "msg": "str"
                }
            }
        ],
        "get_s3_content_and_delete": [
            {
                "type": "func",
                "args": {
                    "bucket": "str",
                    "path": "str",
                    "with_key": "bool"
                }
            }
        ],
        "get_crawler": [
            {
                "type": "func",
                "args": {
                    "spidercls": "Spider",
                    "settings_dict": "dict"
                }
            }
        ]
    },
    "utils.gz": {
        "read1": [
            {
                "type": "func",
                "args": {
                    "gzf": "GzipFile",
                    "size": "int"
                }
            }
        ],
        "gunzip": [
            {
                "type": "func",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "_is_gzipped": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_is_octetstream": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "gzip_magic_number": [
            {
                "type": "func",
                "args": {
                    "response": "six.Any"
                }
            }
        ],
        "is_gzipped": [
            {
                "type": "func",
                "args": {
                    "response": "six.Any"
                }
            }
        ]
    },
    "utils.signal": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "disconnect_all": [
            {
                "type": "func",
                "args": {
                    "signal": "str",
                    "sender": "str"
                }
            }
        ],
        "send_catch_log_deferred": [
            {
                "type": "func",
                "args": {
                    "signal": "str",
                    "sender": "str",
                    "arguments": "str",
                    "named": "str"
                }
            }
        ],
        "send_catch_log": [
            {
                "type": "func",
                "args": {
                    "signal": "str",
                    "sender": "str",
                    "arguments": "str",
                    "named": "str"
                }
            }
        ]
    },
    "utils.trackref": {
        "NoneType": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "live_refs": [
            {
                "type": "var",
                "anno": "defaultdict"
            }
        ],
        "object_ref.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "object_ref.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "format_live_refs": [
            {
                "type": "func",
                "args": {
                    "ignore": "type"
                }
            }
        ],
        "print_live_refs": [
            {
                "type": "func",
                "args": {
                    "a": "object",
                    "kw": "object"
                }
            }
        ],
        "get_oldest": [
            {
                "type": "func",
                "args": {
                    "class_name": "str"
                }
            }
        ],
        "iter_all": [
            {
                "type": "func",
                "args": {
                    "class_name": "str"
                }
            }
        ]
    },
    "utils.sitemap": {
        "Sitemap._root": [
            {
                "type": "attr",
                "anno": "lxml.etree.Element"
            }
        ],
        "Sitemap.type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Sitemap.__init__": [
            {
                "type": "method",
                "args": {
                    "xmltext": "str"
                }
            }
        ],
        "sitemap_urls_from_robots": [
            {
                "type": "func",
                "args": {
                    "robots_text": "str",
                    "base_url": "str"
                }
            }
        ],
        "Sitemap.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "utils.iterators": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_StreamReader._ptr": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_StreamReader._is_unicode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_StreamReader.read": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_StreamReader._read_string": [
            {
                "type": "method",
                "args": {
                    "n": "int"
                }
            }
        ],
        "_StreamReader._read_unicode": [
            {
                "type": "method",
                "args": {
                    "n": "int"
                }
            }
        ],
        "_body_or_str": [
            {
                "type": "func",
                "args": {
                    "obj": "Union[TextResponse, Response]",
                    "unicode": "bool"
                }
            }
        ],
        "xmliter": [
            {
                "type": "func",
                "args": {
                    "obj": "TextResponse",
                    "nodename": "str"
                }
            }
        ],
        "csviter": [
            {
                "type": "func",
                "args": {
                    "obj": "Union[TextResponse, Response]",
                    "delimiter": "str | None",
                    "headers": "str | None",
                    "encoding": "str | None",
                    "quotechar": "str"
                }
            }
        ],
        "_StreamReader.__init__": [
            {
                "type": "method",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "xmliter_lxml": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "nodename": "str",
                    "namespace": "str",
                    "prefix": "str"
                }
            }
        ]
    },
    "utils.defer": {
        "parallel": [
            {
                "type": "func",
                "args": {
                    "iterable": "list",
                    "count": "int",
                    "callable": "Callable[[], int]",
                    "args": "int",
                    "named": "str"
                }
            }
        ],
        "process_parallel": [
            {
                "type": "func",
                "args": {
                    "callbacks": "Any",
                    "input": "task.Task",
                    "a": "int",
                    "kw": "int"
                }
            }
        ],
        "iter_errback": [
            {
                "type": "func",
                "args": {
                    "iterable": "Iterable[Exception]",
                    "errback": "Callable[[Exception], None]",
                    "a": "Any",
                    "kw": "Any"
                }
            }
        ],
        "defer_fail": [
            {
                "type": "func",
                "args": {
                    "_failure": "failure.Failure"
                }
            }
        ],
        "process_chain_both": [
            {
                "type": "func",
                "args": {
                    "callbacks": "list",
                    "errbacks": "list",
                    "input": "failure.Failure",
                    "a": "tuple",
                    "kw": "tuple"
                }
            }
        ],
        "process_chain": [
            {
                "type": "func",
                "args": {
                    "callbacks": "list",
                    "input": "six.Any",
                    "a": "str",
                    "kw": "str"
                }
            }
        ],
        "defer_succeed": [
            {
                "type": "func",
                "args": {
                    "result": "failure.Failure"
                }
            }
        ],
        "defer_result": [
            {
                "type": "func",
                "args": {
                    "result": "failure.Failure"
                }
            }
        ],
        "mustbe_deferred": [
            {
                "type": "func",
                "args": {
                    "f": "Callable",
                    "args": "Any",
                    "kw": "Any"
                }
            }
        ]
    },
    "utils.engine": {
        "get_engine_status": [
            {
                "type": "func",
                "args": {
                    "engine": "engine.Engine"
                }
            }
        ],
        "format_engine_status": [
            {
                "type": "func",
                "args": {
                    "engine": "engine.Engine"
                }
            }
        ],
        "print_engine_status": [
            {
                "type": "func",
                "args": {
                    "engine": "engine.Engine"
                }
            }
        ]
    },
    "utils.decorators": {
        "deprecated": [
            {
                "type": "func",
                "args": {
                    "use_instead": "str"
                }
            }
        ],
        "defers": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "inthread": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ]
    },
    "utils.project": {
        "ENVVAR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DATADIR_CFG_SECTION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "inside_project": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "project_data_dir": [
            {
                "type": "func",
                "args": {
                    "project": "str"
                }
            }
        ],
        "data_path": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "createdir": "bool"
                }
            }
        ],
        "get_project_settings": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "utils.ftp": {
        "ftp_makedirs_cwd": [
            {
                "type": "func",
                "args": {
                    "ftp": "FTP",
                    "path": "str",
                    "first_call": "bool"
                }
            }
        ]
    },
    "utils.boto": {
        "is_botocore": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "utils.log": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "TopLevelFormatter.loggers": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "TopLevelFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "loggers": "list[str]"
                }
            }
        ],
        "DEFAULT_LOGGING": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_scrapy_root_handler": [
            {
                "type": "var",
                "anno": "logging.Handler"
            }
        ],
        "get_scrapy_root_handler": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "StreamLogger.logger": [
            {
                "type": "attr",
                "anno": "logging.Logger"
            }
        ],
        "StreamLogger.log_level": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "StreamLogger.linebuf": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StreamLogger.__init__": [
            {
                "type": "method",
                "args": {
                    "logger": "logging.Logger",
                    "log_level": "int"
                }
            }
        ],
        "StreamLogger.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogCounterHandler.crawler": [
            {
                "type": "attr",
                "anno": "scrapy.Crawler"
            }
        ],
        "LogCounterHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "scrapy.Crawler",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "failure_to_exc_info": [
            {
                "type": "func",
                "args": {
                    "failure": "Exception"
                }
            }
        ],
        "logformatter_adapter": [
            {
                "type": "func",
                "args": {
                    "logkws": "dict"
                }
            }
        ],
        "_get_handler": [
            {
                "type": "func",
                "args": {
                    "settings": "Settings"
                }
            }
        ],
        "install_scrapy_root_handler": [
            {
                "type": "func",
                "args": {
                    "settings": "Settings"
                }
            }
        ],
        "log_scrapy_info": [
            {
                "type": "func",
                "args": {
                    "settings": "Settings"
                }
            }
        ],
        "TopLevelFormatter.filter": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ],
        "StreamLogger.write": [
            {
                "type": "method",
                "args": {
                    "buf": "str"
                }
            }
        ],
        "LogCounterHandler.emit": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ],
        "configure_logging": [
            {
                "type": "func",
                "args": {
                    "settings": "Settings",
                    "install_root_handler": "bool"
                }
            }
        ]
    },
    "utils.serialize": {
        "ScrapyJSONEncoder.DATE_FORMAT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScrapyJSONEncoder.TIME_FORMAT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScrapyJSONEncoder.default": [
            {
                "type": "method",
                "args": {
                    "o": "object"
                }
            }
        ]
    },
    "utils.reqser": {
        "_is_private_method": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_mangle_private_name": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "func": "str",
                    "name": "str"
                }
            }
        ],
        "_find_method": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "func": "str"
                }
            }
        ],
        "_get_method": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "name": "str"
                }
            }
        ],
        "request_from_dict": [
            {
                "type": "func",
                "args": {
                    "d": "dict",
                    "spider": "object"
                }
            }
        ],
        "request_to_dict": [
            {
                "type": "func",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ]
    },
    "utils.response": {
        "_baseurl_cache": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "_metaref_cache": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "response_status_message": [
            {
                "type": "func",
                "args": {
                    "status": "str"
                }
            }
        ],
        "response_httprepr": [
            {
                "type": "func",
                "args": {
                    "response": "http.Response"
                }
            }
        ],
        "open_in_browser": [
            {
                "type": "func",
                "args": {
                    "response": "http.Response",
                    "_openfunc": "webbrowser.Open"
                }
            }
        ],
        "get_meta_refresh": [
            {
                "type": "func",
                "args": {
                    "response": "http.Response",
                    "ignore_tags": "tuple[str, ...]"
                }
            }
        ],
        "get_base_url": [
            {
                "type": "func",
                "args": {
                    "response": "http.Response"
                }
            }
        ]
    },
    "utils.datatypes": {
        "Mapping": [
            {
                "type": "var",
                "anno": "Mapping"
            }
        ],
        "MultiValueDictKeyError.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "MultiValueDict.__init__": [
            {
                "type": "method",
                "args": {
                    "key_to_list_mapping": "dict"
                }
            }
        ],
        "MultiValueDict.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiValueDict.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "int"
                }
            }
        ],
        "MultiValueDict.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "object"
                }
            }
        ],
        "MultiValueDict.__copy__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiValueDict.__deepcopy__": [
            {
                "type": "method",
                "args": {
                    "memo": "dict"
                }
            }
        ],
        "MultiValueDict.get": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "dict"
                }
            }
        ],
        "MultiValueDict.getlist": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "MultiValueDict.setlist": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "list_": "list"
                }
            }
        ],
        "MultiValueDict.setdefault": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "MultiValueDict.setlistdefault": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default_list": "list"
                }
            }
        ],
        "MultiValueDict.appendlist": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "MultiValueDict.lists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiValueDict.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SiteNode.url": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "SiteNode.itemnames": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "SiteNode.children": [
            {
                "type": "attr",
                "anno": "list[SiteNode]"
            }
        ],
        "SiteNode.parent": [
            {
                "type": "attr",
                "anno": "SiteNode"
            }
        ],
        "SiteNode.__init__": [
            {
                "type": "method",
                "args": {
                    "url": "bytes"
                }
            }
        ],
        "SiteNode.add_child": [
            {
                "type": "method",
                "args": {
                    "node": "SiteNode"
                }
            }
        ],
        "CaselessDict.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CaselessDict.normkey": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CaselessDict.__contains__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CaselessDict.has_key": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "CaselessDict.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CaselessDict.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CaselessDict.normvalue": [
            {
                "type": "method",
                "args": {
                    "value": "object"
                }
            }
        ],
        "CaselessDict.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "object"
                }
            }
        ],
        "CaselessDict.get": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "def_val": "object"
                }
            }
        ],
        "CaselessDict.setdefault": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "def_val": "object"
                }
            }
        ],
        "CaselessDict.fromkeys": [
            {
                "type": "method",
                "args": {
                    "cls": "type[CaselessDict]",
                    "keys": "Iterable[str]",
                    "value": "str"
                }
            }
        ],
        "CaselessDict.pop": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "args": "str"
                }
            }
        ],
        "MergeDict.dicts": [
            {
                "type": "attr",
                "anno": "Mapping"
            }
        ],
        "MergeDict.__init__": [
            {
                "type": "method",
                "args": {
                    "dicts": "Mapping"
                }
            }
        ],
        "MergeDict.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "MergeDict.__copy__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MergeDict.get": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "MergeDict.has_key": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "MergeDict.__contains__": [
            {
                "type": "attr",
                "anno": "Mapping"
            }
        ],
        "MergeDict.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LocalCache.limit": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LocalCache.__init__": [
            {
                "type": "method",
                "args": {
                    "limit": "int"
                }
            }
        ],
        "LocalCache.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "object"
                }
            }
        ],
        "SequenceExclude.seq": [
            {
                "type": "attr",
                "anno": "Mapping"
            }
        ],
        "SequenceExclude.__init__": [
            {
                "type": "method",
                "args": {
                    "seq": "Mapping"
                }
            }
        ],
        "SequenceExclude.__contains__": [
            {
                "type": "method",
                "args": {
                    "item": "object"
                }
            }
        ],
        "MultiValueDict.values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiValueDict.items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MergeDict.getlist": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "MergeDict.items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiValueDict.update": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "SiteNode.to_string": [
            {
                "type": "method",
                "args": {
                    "level": "int"
                }
            }
        ],
        "CaselessDict.update": [
            {
                "type": "method",
                "args": {
                    "seq": "dict"
                }
            }
        ],
        "CaselessDict.__init__": [
            {
                "type": "method",
                "args": {
                    "seq": "dict"
                }
            }
        ],
        "CaselessDict.__copy__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CaselessDict.copy": [
            {
                "type": "attr",
                "anno": "CaselessDict"
            }
        ]
    },
    "utils.httpobj": {
        "_urlparse_cache": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "urlparse_cached": [
            {
                "type": "func",
                "args": {
                    "request_or_response": "Request"
                }
            }
        ]
    },
    "utils.http": {
        "decode_chunked_transfer": [
            {
                "type": "func",
                "args": {
                    "chunked_body": "str"
                }
            }
        ]
    },
    "utils.misc": {
        "_ITERABLE_SINGLE_VALUES": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "arg_to_iter": [
            {
                "type": "func",
                "args": {
                    "arg": "BaseItem"
                }
            }
        ],
        "load_object": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "walk_modules": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "extract_regex": [
            {
                "type": "func",
                "args": {
                    "regex": "six.Union[str, re.Pattern]",
                    "text": "six.Union[str, six.TextType]",
                    "encoding": "str"
                }
            }
        ],
        "rel_has_nofollow": [
            {
                "type": "func",
                "args": {
                    "rel": "str"
                }
            }
        ],
        "set_environ": [
            {
                "type": "func",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "md5sum": [
            {
                "type": "func",
                "args": {
                    "file": "six.StreamReader"
                }
            }
        ],
        "create_instance": [
            {
                "type": "func",
                "args": {
                    "objcls": "type",
                    "settings": "dict",
                    "crawler": "dict",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "utils.deprecate": {
        "attribute": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "oldattr": "str",
                    "newattr": "str",
                    "version": "str"
                }
            }
        ],
        "_clspath": [
            {
                "type": "func",
                "args": {
                    "cls": "type",
                    "forced": "str"
                }
            }
        ],
        "create_deprecated_class": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "new_class": "type",
                    "clsdict": "dict",
                    "warn_category": "ScrapyDeprecationWarning",
                    "warn_once": "bool",
                    "old_class_path": "str",
                    "new_class_path": "str",
                    "subclass_warn_message": "str",
                    "instance_warn_message": "str"
                }
            }
        ],
        "DEPRECATION_RULES": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "method_is_overridden": [
            {
                "type": "func",
                "args": {
                    "subclass": "type",
                    "base_class": "type",
                    "method_name": "str"
                }
            }
        ],
        "update_classpath": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ]
    },
    "utils.template": {
        "CAMELCASE_INVALID_CHARS": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "string_camelcase": [
            {
                "type": "func",
                "args": {
                    "string": "str"
                }
            }
        ],
        "render_templatefile": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "utils.display": {
        "_colorize": [
            {
                "type": "func",
                "args": {
                    "text": "str",
                    "colorize": "bool"
                }
            }
        ],
        "pformat": [
            {
                "type": "func",
                "args": {
                    "obj": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "pprint": [
            {
                "type": "func",
                "args": {
                    "obj": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "utils.spider": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "iterate_spider_output": [
            {
                "type": "func",
                "args": {
                    "result": "Spider"
                }
            }
        ],
        "DefaultSpider.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "spidercls_for_request": [
            {
                "type": "func",
                "args": {
                    "spider_loader": "SpiderLoader",
                    "request": "Request",
                    "default_spidercls": "Spider",
                    "log_none": "bool",
                    "log_multiple": "bool"
                }
            }
        ],
        "iter_spider_classes": [
            {
                "type": "func",
                "args": {
                    "module": "Spider"
                }
            }
        ]
    },
    "utils.versions": {
        "scrapy_components_versions": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "utils.job": {
        "job_dir": [
            {
                "type": "func",
                "args": {
                    "settings": "dict"
                }
            }
        ]
    },
    "utils.request": {
        "_fingerprint_cache": [
            {
                "type": "var",
                "anno": "weakref.WeakKeyDictionary"
            }
        ],
        "referer_str": [
            {
                "type": "func",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "request_httprepr": [
            {
                "type": "func",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "request_authenticate": [
            {
                "type": "func",
                "args": {
                    "request": "Request",
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "request_fingerprint": [
            {
                "type": "func",
                "args": {
                    "request": "Request",
                    "include_headers": "tuple",
                    "keep_fragments": "bool"
                }
            }
        ]
    },
    "utils.testsite": {
        "SiteTest.site": [
            {
                "type": "attr",
                "anno": "server.Site"
            }
        ],
        "SiteTest.baseurl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SiteTest.tearDown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SiteTest.url": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "test_site": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "port": [
            {
                "type": "var",
                "anno": "reactor.listenTCP"
            }
        ],
        "SiteTest.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NoMetaRefreshRedirect.render": [
            {
                "type": "method",
                "args": {
                    "request": "util.Request"
                }
            }
        ]
    },
    "utils.console": {
        "_embed_ipython_shell": [
            {
                "type": "func",
                "args": {
                    "namespace": "dict",
                    "banner": "str"
                }
            }
        ],
        "_embed_bpython_shell": [
            {
                "type": "func",
                "args": {
                    "namespace": "dict",
                    "banner": "str"
                }
            }
        ],
        "_embed_ptpython_shell": [
            {
                "type": "func",
                "args": {
                    "namespace": "dict",
                    "banner": "str"
                }
            }
        ],
        "_embed_standard_shell": [
            {
                "type": "func",
                "args": {
                    "namespace": "dict",
                    "banner": "str"
                }
            }
        ],
        "DEFAULT_PYTHON_SHELLS": [
            {
                "type": "var",
                "anno": "OrderedDict"
            }
        ],
        "get_shell_embed_func": [
            {
                "type": "func",
                "args": {
                    "shells": "dict",
                    "known_shells": "dict"
                }
            }
        ],
        "start_python_console": [
            {
                "type": "func",
                "args": {
                    "namespace": "dict",
                    "banner": "str",
                    "shells": "dict"
                }
            }
        ]
    },
    "utils.curl": {
        "CurlParser.error": [
            {
                "type": "method",
                "args": {
                    "message": "str"
                }
            }
        ],
        "curl_parser": [
            {
                "type": "var",
                "anno": "CurlParser"
            }
        ],
        "safe_to_ignore_arguments": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "curl_to_request_kwargs": [
            {
                "type": "func",
                "args": {
                    "curl_command": "str",
                    "ignore_unknown_options": "bool"
                }
            }
        ]
    },
    "utils.ssl": {
        "SSL_OP_NO_TLSv1_3": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ffi_buf_to_string": [
            {
                "type": "func",
                "args": {
                    "buf": "pyOpenSSLutil.lib.X509_NAME"
                }
            }
        ],
        "x509name_to_string": [
            {
                "type": "func",
                "args": {
                    "x509name": "pyOpenSSLutil.lib.X509_NAME"
                }
            }
        ],
        "get_temp_key_info": [
            {
                "type": "func",
                "args": {
                    "ssl_object": "OpenSSL.SSL"
                }
            }
        ],
        "get_openssl_version": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "utils.benchserver": {
        "Root.isLeaf": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Root.getChild": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "request": "Site"
                }
            }
        ],
        "_getarg": [
            {
                "type": "func",
                "args": {
                    "request": "Request",
                    "name": "bytes",
                    "default": "int",
                    "type": "type"
                }
            }
        ],
        "root": [
            {
                "type": "var",
                "anno": "Root"
            }
        ],
        "factory": [
            {
                "type": "var",
                "anno": "Site"
            }
        ],
        "httpPort": [
            {
                "type": "var",
                "anno": "reactor.listenTCP"
            }
        ],
        "_print_listening": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Root.render": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ]
    },
    "utils.reactor": {
        "listen_tcp": [
            {
                "type": "func",
                "args": {
                    "portrange": "int",
                    "host": "int",
                    "factory": "int"
                }
            }
        ],
        "CallLaterOnce._func": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "CallLaterOnce._a": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CallLaterOnce._kw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CallLaterOnce._call": [
            {
                "type": "attr",
                "anno": "reactor.callLater"
            }
        ],
        "CallLaterOnce.__init__": [
            {
                "type": "method",
                "args": {
                    "func": "Callable",
                    "a": "tuple",
                    "kw": "dict"
                }
            }
        ],
        "CallLaterOnce.schedule": [
            {
                "type": "method",
                "args": {
                    "delay": "int"
                }
            }
        ],
        "CallLaterOnce.cancel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallLaterOnce.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "robotstxt": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "decode_robotstxt": [
            {
                "type": "func",
                "args": {
                    "robotstxt_body": "bytes",
                    "spider": "str",
                    "to_native_str_type": "bool"
                }
            }
        ],
        "RobotParser.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "robotstxt_body": "bytes"
                }
            }
        ],
        "RobotParser.allowed": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "user_agent": "str"
                }
            }
        ],
        "PythonRobotParser.spider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PythonRobotParser.rp": [
            {
                "type": "attr",
                "anno": "RobotParser"
            }
        ],
        "PythonRobotParser.allowed": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "user_agent": "str"
                }
            }
        ],
        "ReppyRobotParser.spider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ReppyRobotParser.rp": [
            {
                "type": "attr",
                "anno": "RobotParser"
            }
        ],
        "ReppyRobotParser.__init__": [
            {
                "type": "method",
                "args": {
                    "robotstxt_body": "str",
                    "spider": "str"
                }
            }
        ],
        "RerpRobotParser.spider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RerpRobotParser.rp": [
            {
                "type": "attr",
                "anno": "RobotParser"
            }
        ],
        "RerpRobotParser.allowed": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "user_agent": "str"
                }
            }
        ],
        "ProtegoRobotParser.spider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ProtegoRobotParser.rp": [
            {
                "type": "attr",
                "anno": "Protego.RobotParser"
            }
        ],
        "ProtegoRobotParser.__init__": [
            {
                "type": "method",
                "args": {
                    "robotstxt_body": "bytes",
                    "spider": "str"
                }
            }
        ],
        "ProtegoRobotParser.allowed": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "user_agent": "str"
                }
            }
        ],
        "ReppyRobotParser.allowed": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "user_agent": "str"
                }
            }
        ],
        "ProtegoRobotParser.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "robotstxt_body": "bytes"
                }
            }
        ],
        "RerpRobotParser.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "robotstxt_body": "bytes"
                }
            }
        ],
        "ReppyRobotParser.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "robotstxt_body": "bytes"
                }
            }
        ],
        "PythonRobotParser.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "robotstxt_body": "bytes"
                }
            }
        ],
        "RerpRobotParser.__init__": [
            {
                "type": "method",
                "args": {
                    "robotstxt_body": "bytes",
                    "spider": "str"
                }
            }
        ],
        "PythonRobotParser.__init__": [
            {
                "type": "method",
                "args": {
                    "robotstxt_body": "bytes",
                    "spider": "str"
                }
            }
        ]
    },
    "item": {
        "MutableMapping": [
            {
                "type": "var",
                "anno": "MutableMapping"
            }
        ],
        "DictItem.fields": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DictItem.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "DictItem._values": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DictItem.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "DictItem.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "int"
                }
            }
        ],
        "DictItem.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "BaseItem"
                }
            }
        ],
        "DictItem.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "DictItem.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "DictItem.__setattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "object"
                }
            }
        ],
        "DictItem.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DictItem.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DictItem.__hash__": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DictItem.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DictItem.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DictItem.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DictItem.deepcopy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ItemMeta.__new__": [
            {
                "type": "method",
                "args": {
                    "mcs": "type",
                    "class_name": "str",
                    "bases": "tuple",
                    "attrs": "dict"
                }
            }
        ]
    },
    "linkextractors.sgml": {
        "BaseSgmlLinkExtractor.scan_tag": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "BaseSgmlLinkExtractor.scan_attr": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "BaseSgmlLinkExtractor.process_value": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "BaseSgmlLinkExtractor.current_link": [
            {
                "type": "attr",
                "anno": "Link"
            }
        ],
        "BaseSgmlLinkExtractor.unique": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BaseSgmlLinkExtractor.strip": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BaseSgmlLinkExtractor.link_key": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "BaseSgmlLinkExtractor._process_links": [
            {
                "type": "method",
                "args": {
                    "links": "list"
                }
            }
        ],
        "BaseSgmlLinkExtractor.links": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BaseSgmlLinkExtractor.base_url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseSgmlLinkExtractor.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSgmlLinkExtractor.unknown_endtag": [
            {
                "type": "method",
                "args": {
                    "tag": "str"
                }
            }
        ],
        "BaseSgmlLinkExtractor.matches": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "BaseSgmlLinkExtractor.unknown_starttag": [
            {
                "type": "method",
                "args": {
                    "tag": "str",
                    "attrs": "dict"
                }
            }
        ],
        "BaseSgmlLinkExtractor.__init__": [
            {
                "type": "method",
                "args": {
                    "tag": "str",
                    "attr": "str",
                    "unique": "bool",
                    "process_value": "Callable",
                    "strip": "bool",
                    "canonicalized": "bool"
                }
            }
        ],
        "SgmlLinkExtractor.__init__": [
            {
                "type": "method",
                "args": {
                    "allow": "str",
                    "deny": "str",
                    "allow_domains": "str",
                    "deny_domains": "str",
                    "restrict_xpaths": "tuple[str, ...]",
                    "tags": "tuple[str, ...]",
                    "attrs": "tuple[str, ...]",
                    "canonicalize": "bool",
                    "unique": "bool",
                    "process_value": "Callable",
                    "deny_extensions": "str",
                    "restrict_css": "str",
                    "strip": "bool",
                    "restrict_text": "str"
                }
            }
        ],
        "BaseSgmlLinkExtractor.handle_data": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "BaseSgmlLinkExtractor._extract_links": [
            {
                "type": "method",
                "args": {
                    "response_text": "str",
                    "response_url": "str",
                    "response_encoding": "str",
                    "base_url": "str"
                }
            }
        ],
        "SgmlLinkExtractor.extract_links": [
            {
                "type": "method",
                "args": {
                    "response": "Link"
                }
            }
        ],
        "BaseSgmlLinkExtractor.extract_links": [
            {
                "type": "method",
                "args": {
                    "response": "Link"
                }
            }
        ]
    },
    "linkextractors.regex": {
        "linkre": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "clean_link": [
            {
                "type": "func",
                "args": {
                    "link_text": "str"
                }
            }
        ],
        "RegexLinkExtractor._extract_links": [
            {
                "type": "method",
                "args": {
                    "response_text": "str",
                    "response_url": "str",
                    "response_encoding": "str",
                    "base_url": "str"
                }
            }
        ]
    },
    "linkextractors.lxmlhtml": {
        "XHTML_NAMESPACE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_collect_string_content": [
            {
                "type": "var",
                "anno": "etree.XPath"
            }
        ],
        "_nons": [
            {
                "type": "func",
                "args": {
                    "tag": "str"
                }
            }
        ],
        "LxmlParserLinkExtractor.scan_tag": [
            {
                "type": "attr",
                "anno": "Callable[[str], bool]"
            }
        ],
        "LxmlParserLinkExtractor.scan_attr": [
            {
                "type": "attr",
                "anno": "Callable[[str], bool]"
            }
        ],
        "LxmlParserLinkExtractor.process_attr": [
            {
                "type": "attr",
                "anno": "Callable[[str], str]"
            }
        ],
        "LxmlParserLinkExtractor.unique": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LxmlParserLinkExtractor.strip": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LxmlParserLinkExtractor.link_key": [
            {
                "type": "attr",
                "anno": "Callable[[Link], str]"
            }
        ],
        "LxmlParserLinkExtractor._iter_links": [
            {
                "type": "method",
                "args": {
                    "document": "etree.Element"
                }
            }
        ],
        "LxmlParserLinkExtractor._deduplicate_if_needed": [
            {
                "type": "method",
                "args": {
                    "links": "list"
                }
            }
        ],
        "LxmlParserLinkExtractor._process_links": [
            {
                "type": "method",
                "args": {
                    "links": "list"
                }
            }
        ],
        "LxmlParserLinkExtractor._extract_links": [
            {
                "type": "method",
                "args": {
                    "selector": "etree.Element",
                    "response_url": "str",
                    "response_encoding": "str",
                    "base_url": "str"
                }
            }
        ],
        "LxmlParserLinkExtractor.__init__": [
            {
                "type": "method",
                "args": {
                    "tag": "str",
                    "attr": "str",
                    "process": "Callable[[str], str]",
                    "unique": "bool",
                    "strip": "bool",
                    "canonicalized": "bool"
                }
            }
        ],
        "LxmlLinkExtractor.__init__": [
            {
                "type": "method",
                "args": {
                    "allow": "str",
                    "deny": "str",
                    "allow_domains": "str",
                    "deny_domains": "str",
                    "restrict_xpaths": "tuple[str, ...]",
                    "tags": "tuple[str, ...]",
                    "attrs": "tuple[str, ...]",
                    "canonicalize": "bool",
                    "unique": "bool",
                    "process_value": "Callable[[str], str]",
                    "deny_extensions": "str",
                    "restrict_css": "str",
                    "strip": "bool",
                    "restrict_text": "str"
                }
            }
        ],
        "LxmlParserLinkExtractor.extract_links": [
            {
                "type": "method",
                "args": {
                    "response": "Link"
                }
            }
        ],
        "LxmlLinkExtractor.extract_links": [
            {
                "type": "method",
                "args": {
                    "response": "Link"
                }
            }
        ]
    },
    "linkextractors.htmlparser": {
        "HtmlParserLinkExtractor.scan_tag": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "HtmlParserLinkExtractor.scan_attr": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "HtmlParserLinkExtractor.process_attr": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "HtmlParserLinkExtractor.unique": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HtmlParserLinkExtractor.strip": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HtmlParserLinkExtractor.__init__": [
            {
                "type": "method",
                "args": {
                    "tag": "str",
                    "attr": "str",
                    "process": "Callable",
                    "unique": "bool",
                    "strip": "bool"
                }
            }
        ],
        "HtmlParserLinkExtractor.base_url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HtmlParserLinkExtractor.current_link": [
            {
                "type": "attr",
                "anno": "Link"
            }
        ],
        "HtmlParserLinkExtractor.links": [
            {
                "type": "attr",
                "anno": "list[Link]"
            }
        ],
        "HtmlParserLinkExtractor.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HtmlParserLinkExtractor.handle_endtag": [
            {
                "type": "method",
                "args": {
                    "tag": "str"
                }
            }
        ],
        "HtmlParserLinkExtractor.matches": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "HtmlParserLinkExtractor.handle_starttag": [
            {
                "type": "method",
                "args": {
                    "tag": "str",
                    "attrs": "list[tuple[str, str]]"
                }
            }
        ],
        "HtmlParserLinkExtractor.handle_data": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "HtmlParserLinkExtractor._extract_links": [
            {
                "type": "method",
                "args": {
                    "response_text": "str",
                    "response_url": "str",
                    "response_encoding": "str"
                }
            }
        ],
        "HtmlParserLinkExtractor.extract_links": [
            {
                "type": "method",
                "args": {
                    "response": "HtmlResponse"
                }
            }
        ]
    },
    "linkextractors": {
        "IGNORED_EXTENSIONS": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "_re_type": [
            {
                "type": "var",
                "anno": "type[re.Pattern]"
            }
        ],
        "_matches": [
            {
                "type": "var",
                "anno": "Callable[[str, list[re.Pattern]], bool]"
            }
        ],
        "_is_valid_url": [
            {
                "type": "var",
                "anno": "Callable[[str], bool]"
            }
        ],
        "FilteringLinkExtractor._csstranslator": [
            {
                "type": "attr",
                "anno": "HTMLTranslator"
            }
        ],
        "FilteringLinkExtractor.link_extractor": [
            {
                "type": "attr",
                "anno": "LinkExtractor"
            }
        ],
        "FilteringLinkExtractor.allow_res": [
            {
                "type": "attr",
                "anno": "list[re.Pattern]"
            }
        ],
        "FilteringLinkExtractor.deny_res": [
            {
                "type": "attr",
                "anno": "list[re.Pattern]"
            }
        ],
        "FilteringLinkExtractor.allow_domains": [
            {
                "type": "attr",
                "anno": "set[re.Pattern]"
            }
        ],
        "FilteringLinkExtractor.deny_domains": [
            {
                "type": "attr",
                "anno": "set[re.Pattern]"
            }
        ],
        "FilteringLinkExtractor.restrict_xpaths": [
            {
                "type": "attr",
                "anno": "tuple[re.Pattern, ...]"
            }
        ],
        "FilteringLinkExtractor.canonicalize": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FilteringLinkExtractor.deny_extensions": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "FilteringLinkExtractor.restrict_text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FilteringLinkExtractor.__init__": [
            {
                "type": "method",
                "args": {
                    "link_extractor": "LinkExtractor",
                    "allow": "str",
                    "deny": "str",
                    "allow_domains": "str",
                    "deny_domains": "str",
                    "restrict_xpaths": "tuple[re.Pattern, ...]",
                    "canonicalize": "bool",
                    "deny_extensions": "list[str]",
                    "restrict_css": "str",
                    "restrict_text": "str"
                }
            }
        ],
        "FilteringLinkExtractor.matches": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "FilteringLinkExtractor._link_allowed": [
            {
                "type": "method",
                "args": {
                    "link": "Link"
                }
            }
        ],
        "FilteringLinkExtractor._process_links": [
            {
                "type": "method",
                "args": {
                    "links": "list"
                }
            }
        ],
        "FilteringLinkExtractor._extract_links": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "http.common": {
        "obsolete_setter": [
            {
                "type": "func",
                "args": {
                    "setter": "Callable[[], value]",
                    "attrname": "str"
                }
            }
        ]
    },
    "http.response.text": {
        "TextResponse._DEFAULT_ENCODING": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TextResponse._encoding": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "TextResponse._cached_benc": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "TextResponse._cached_ubody": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "TextResponse._cached_selector": [
            {
                "type": "attr",
                "anno": "Selector | None"
            }
        ],
        "TextResponse._url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TextResponse._body": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "TextResponse.urljoin": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "TextResponse._auto_detect_fun": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "TextResponse.selector": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextResponse.css": [
            {
                "type": "method",
                "args": {
                    "query": "str"
                }
            }
        ],
        "TextResponse.xpath": [
            {
                "type": "method",
                "args": {
                    "query": "str",
                    "kwargs": "str"
                }
            }
        ],
        "TextResponse._body_declared_encoding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextResponse._set_body": [
            {
                "type": "method",
                "args": {
                    "body": "str"
                }
            }
        ],
        "_url_from_selector": [
            {
                "type": "func",
                "args": {
                    "sel": "parsel.Selector"
                }
            }
        ],
        "TextResponse.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "TextResponse._body_inferred_encoding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextResponse._headers_encoding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextResponse._declared_encoding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextResponse.encoding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextResponse.follow": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "callback": "str",
                    "method": "str",
                    "headers": "Headers",
                    "body": "str",
                    "cookies": "Headers",
                    "meta": "Headers",
                    "encoding": "str",
                    "priority": "int",
                    "dont_filter": "bool",
                    "errback": "str",
                    "cb_kwargs": "dict"
                }
            }
        ],
        "TextResponse.text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextResponse.body_as_unicode": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextResponse.replace": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "TextResponse._set_url": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ]
    },
    "http.response": {
        "Response.headers": [
            {
                "type": "attr",
                "anno": "Headers"
            }
        ],
        "Response.status": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Response.request": [
            {
                "type": "attr",
                "anno": "Request"
            }
        ],
        "Response.flags": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "Response._url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Response._set_url": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "Response._get_url": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Response._body": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "Response._set_body": [
            {
                "type": "method",
                "args": {
                    "body": "bytes"
                }
            }
        ],
        "Response.__init__": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "status": "int",
                    "headers": "Headers",
                    "body": "bytes",
                    "flags": "List[str]",
                    "request": "Request"
                }
            }
        ],
        "Response._get_body": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.body": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "Response.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.__repr__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Response.urljoin": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "Response.text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.css": [
            {
                "type": "method",
                "args": {
                    "a": "str",
                    "kw": "str"
                }
            }
        ],
        "Response.xpath": [
            {
                "type": "method",
                "args": {
                    "a": "str",
                    "kw": "str"
                }
            }
        ],
        "Response.meta": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Response.follow": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "callback": "str",
                    "method": "str",
                    "headers": "Headers",
                    "body": "str",
                    "cookies": "Headers",
                    "meta": "Headers",
                    "encoding": "str",
                    "priority": "int",
                    "dont_filter": "bool",
                    "errback": "str",
                    "cb_kwargs": "dict"
                }
            }
        ],
        "Response.replace": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Response.copy": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "http.cookies": {
        "CookieJar.policy": [
            {
                "type": "attr",
                "anno": "DefaultCookiePolicy"
            }
        ],
        "CookieJar.jar": [
            {
                "type": "attr",
                "anno": "_CookieJar"
            }
        ],
        "CookieJar.check_expired_frequency": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CookieJar.processed": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CookieJar.__init__": [
            {
                "type": "method",
                "args": {
                    "policy": "DefaultCookiePolicy",
                    "check_expired_frequency": "int"
                }
            }
        ],
        "CookieJar._cookies": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CookieJar.clear_session_cookies": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "CookieJar.clear": [
            {
                "type": "method",
                "args": {
                    "domain": "str",
                    "path": "str",
                    "name": "str"
                }
            }
        ],
        "CookieJar.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CookieJar.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CookieJar.set_policy": [
            {
                "type": "method",
                "args": {
                    "pol": "DefaultCookiePolicy"
                }
            }
        ],
        "CookieJar.set_cookie": [
            {
                "type": "method",
                "args": {
                    "cookie": "str"
                }
            }
        ],
        "potential_domain_matches": [
            {
                "type": "func",
                "args": {
                    "domain": "str"
                }
            }
        ],
        "_DummyLock.acquire": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DummyLock.release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.request": [
            {
                "type": "attr",
                "anno": "Request"
            }
        ],
        "WrappedRequest.__init__": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "CookieJar.set_cookie_if_ok": [
            {
                "type": "method",
                "args": {
                    "cookie": "str",
                    "request": "Request"
                }
            }
        ],
        "WrappedRequest.get_host": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.get_type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.get_origin_req_host": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.host": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.origin_req_host": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedResponse.response": [
            {
                "type": "attr",
                "anno": "wrapped_response"
            }
        ],
        "WrappedResponse.__init__": [
            {
                "type": "method",
                "args": {
                    "response": "wrapped_response"
                }
            }
        ],
        "CookieJar.make_cookies": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request"
                }
            }
        ],
        "CookieJar.extract_cookies": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "request": "Request"
                }
            }
        ],
        "WrappedResponse.info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.is_unverifiable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.unverifiable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedResponse.get_all": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "object"
                }
            }
        ],
        "WrappedResponse.getheaders": [
            {
                "type": "attr",
                "anno": "Callable[[str], list]"
            }
        ],
        "WrappedRequest.add_unredirected_header": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "WrappedRequest.header_items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.get_header": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "default": "object"
                }
            }
        ],
        "WrappedRequest.has_header": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "CookieJar.add_cookie_header": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "WrappedRequest.get_full_url": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WrappedRequest.full_url": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "http.request.form": {
        "FormRequest.valid_form_methods": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_urlencode": [
            {
                "type": "func",
                "args": {
                    "seq": "list",
                    "enc": "str"
                }
            }
        ],
        "_get_clickable": [
            {
                "type": "func",
                "args": {
                    "clickdata": "dict",
                    "form": "Form"
                }
            }
        ],
        "_get_form_url": [
            {
                "type": "func",
                "args": {
                    "form": "Form",
                    "url": "str"
                }
            }
        ],
        "_select_value": [
            {
                "type": "func",
                "args": {
                    "ele": "lxml.html.Element",
                    "n": "str",
                    "v": "str"
                }
            }
        ],
        "_value": [
            {
                "type": "func",
                "args": {
                    "ele": "lxml.html.Element"
                }
            }
        ],
        "_get_inputs": [
            {
                "type": "func",
                "args": {
                    "form": "Form",
                    "formdata": "tuple",
                    "dont_click": "bool",
                    "clickdata": "dict",
                    "response": "Response"
                }
            }
        ],
        "_get_form": [
            {
                "type": "func",
                "args": {
                    "response": "Response",
                    "formname": "str",
                    "formid": "str",
                    "formnumber": "int",
                    "formxpath": "str"
                }
            }
        ],
        "FormRequest.from_response": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FormRequest]",
                    "response": "Response",
                    "formname": "str",
                    "formid": "str",
                    "formnumber": "int",
                    "formdata": "tuple",
                    "clickdata": "dict",
                    "dont_click": "bool",
                    "formxpath": "str",
                    "formcss": "str",
                    "kwargs": "object"
                }
            }
        ],
        "FormRequest.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ]
    },
    "http.request.json_request": {
        "JsonRequest._dumps_kwargs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "JsonRequest._dumps": [
            {
                "type": "method",
                "args": {
                    "data": "object"
                }
            }
        ],
        "JSONRequest": [
            {
                "type": "var",
                "anno": "Request"
            }
        ],
        "JsonRequest.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "JsonRequest.replace": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "http.request.rpc": {
        "DUMPS_ARGS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "XmlRpcRequest.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "http.request": {
        "Request._encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.method": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.priority": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Request.callback": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Request.errback": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Request.cookies": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Request.headers": [
            {
                "type": "attr",
                "anno": "Headers"
            }
        ],
        "Request.dont_filter": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Request._meta": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Request._cb_kwargs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Request.flags": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Request.cb_kwargs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Request.meta": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Request._url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request._get_url": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Request._body": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "Request._get_body": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Request.encoding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Request._set_body": [
            {
                "type": "method",
                "args": {
                    "body": "bytes"
                }
            }
        ],
        "Request.body": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "Request._set_url": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "Request.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.__init__": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "callback": "Callable",
                    "method": "str",
                    "headers": "dict",
                    "body": "bytes",
                    "cookies": "dict",
                    "meta": "dict",
                    "encoding": "str",
                    "priority": "int",
                    "dont_filter": "bool",
                    "errback": "Callable",
                    "flags": "list",
                    "cb_kwargs": "dict"
                }
            }
        ],
        "Request.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Request.__repr__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.replace": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Request.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Request.from_curl": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Request]",
                    "curl_command": "str",
                    "ignore_unknown_options": "bool",
                    "kwargs": "object"
                }
            }
        ]
    },
    "http.headers": {
        "Headers.encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Headers.__init__": [
            {
                "type": "method",
                "args": {
                    "seq": "list",
                    "encoding": "str"
                }
            }
        ],
        "Headers._tobytes": [
            {
                "type": "method",
                "args": {
                    "x": "object"
                }
            }
        ],
        "Headers.normvalue": [
            {
                "type": "method",
                "args": {
                    "value": "object"
                }
            }
        ],
        "Headers.normkey": [
            {
                "type": "method",
                "args": {
                    "key": "six.TextIO"
                }
            }
        ],
        "Headers.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "int"
                }
            }
        ],
        "Headers.get": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "def_val": "object"
                }
            }
        ],
        "Headers.getlist": [
            {
                "type": "method",
                "args": {
                    "key": "six.Union[bytes, six.text_type, int, six.text_type]",
                    "def_val": "object"
                }
            }
        ],
        "Headers.setlist": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "list_": "list"
                }
            }
        ],
        "Headers.setlistdefault": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default_list": "list"
                }
            }
        ],
        "Headers.appendlist": [
            {
                "type": "method",
                "args": {
                    "key": "six.Union[bytes, six.text_type, int, six.text_type]",
                    "value": "six.Union[bytes, six.text_type, int, six.text_type]"
                }
            }
        ],
        "Headers.iteritems": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Headers.items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Headers.values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Headers.to_string": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Headers.to_unicode_dict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Headers.__copy__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Headers.copy": [
            {
                "type": "attr",
                "anno": "Headers"
            }
        ]
    },
    "signals": {
        "engine_started": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "engine_stopped": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "spider_opened": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "spider_idle": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "spider_closed": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "spider_error": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "request_scheduled": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "request_dropped": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "request_reached_downloader": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "response_received": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "response_downloaded": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "item_scraped": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "item_dropped": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "item_error": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "stats_spider_opened": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "stats_spider_closing": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "stats_spider_closed": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "item_passed": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "request_received": [
            {
                "type": "var",
                "anno": "object"
            }
        ]
    },
    "signalmanager": {
        "SignalManager.sender": [
            {
                "type": "attr",
                "anno": "dispatcher.Anonymous"
            }
        ],
        "SignalManager.__init__": [
            {
                "type": "method",
                "args": {
                    "sender": "dispatcher.Anonymous"
                }
            }
        ],
        "SignalManager.connect": [
            {
                "type": "method",
                "args": {
                    "receiver": "object",
                    "signal": "_signal.Signal",
                    "kwargs": "object"
                }
            }
        ],
        "SignalManager.disconnect": [
            {
                "type": "method",
                "args": {
                    "receiver": "dispatcher.Anonymous",
                    "signal": "_signal.Signal",
                    "kwargs": "object"
                }
            }
        ],
        "SignalManager.send_catch_log": [
            {
                "type": "method",
                "args": {
                    "signal": "str",
                    "kwargs": "object"
                }
            }
        ],
        "SignalManager.send_catch_log_deferred": [
            {
                "type": "method",
                "args": {
                    "signal": "str",
                    "kwargs": "object"
                }
            }
        ],
        "SignalManager.disconnect_all": [
            {
                "type": "method",
                "args": {
                    "signal": "str",
                    "kwargs": "object"
                }
            }
        ]
    },
    "spiders.sitemap": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "SitemapSpider.sitemap_urls": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SitemapSpider.sitemap_rules": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SitemapSpider.sitemap_follow": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SitemapSpider.sitemap_alternate_links": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SitemapSpider._cbs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SitemapSpider._follow": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SitemapSpider.sitemap_filter": [
            {
                "type": "method",
                "args": {
                    "entries": "list"
                }
            }
        ],
        "regex": [
            {
                "type": "func",
                "args": {
                    "x": "six.Union[str, re.Pattern]"
                }
            }
        ],
        "SitemapSpider.__init__": [
            {
                "type": "method",
                "args": {
                    "a": "Any",
                    "kw": "Any"
                }
            }
        ],
        "iterloc": [
            {
                "type": "func",
                "args": {
                    "it": "list",
                    "alt": "bool"
                }
            }
        ],
        "SitemapSpider._get_sitemap_body": [
            {
                "type": "method",
                "args": {
                    "response": "six.Any"
                }
            }
        ],
        "SitemapSpider._parse_sitemap": [
            {
                "type": "method",
                "args": {
                    "response": "six.Any"
                }
            }
        ],
        "SitemapSpider.start_requests": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "spiders.init": {
        "InitSpider._postinit_reqs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "InitSpider.initialized": [
            {
                "type": "method",
                "args": {
                    "response": "list"
                }
            }
        ],
        "InitSpider.init_request": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InitSpider.start_requests": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "spiders.feed": {
        "XMLFeedSpider.iterator": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XMLFeedSpider.itertag": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XMLFeedSpider.namespaces": [
            {
                "type": "attr",
                "anno": "tuple[str, str]"
            }
        ],
        "XMLFeedSpider.process_results": [
            {
                "type": "method",
                "args": {
                    "response": "str",
                    "results": "str"
                }
            }
        ],
        "XMLFeedSpider.adapt_response": [
            {
                "type": "method",
                "args": {
                    "response": "str"
                }
            }
        ],
        "XMLFeedSpider.parse_node": [
            {
                "type": "method",
                "args": {
                    "response": "str",
                    "selector": "Selector"
                }
            }
        ],
        "XMLFeedSpider.parse_nodes": [
            {
                "type": "method",
                "args": {
                    "response": "str",
                    "nodes": "list"
                }
            }
        ],
        "XMLFeedSpider._register_namespaces": [
            {
                "type": "method",
                "args": {
                    "selector": "Selector"
                }
            }
        ],
        "XMLFeedSpider._iternodes": [
            {
                "type": "method",
                "args": {
                    "response": "str"
                }
            }
        ],
        "XMLFeedSpider.parse": [
            {
                "type": "method",
                "args": {
                    "response": "str"
                }
            }
        ],
        "CSVFeedSpider.delimiter": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CSVFeedSpider.quotechar": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CSVFeedSpider.headers": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CSVFeedSpider.process_results": [
            {
                "type": "method",
                "args": {
                    "response": "str",
                    "results": "str"
                }
            }
        ],
        "CSVFeedSpider.adapt_response": [
            {
                "type": "method",
                "args": {
                    "response": "str"
                }
            }
        ],
        "CSVFeedSpider.parse_row": [
            {
                "type": "method",
                "args": {
                    "response": "str",
                    "row": "str"
                }
            }
        ],
        "CSVFeedSpider.parse_rows": [
            {
                "type": "method",
                "args": {
                    "response": "str"
                }
            }
        ],
        "CSVFeedSpider.parse": [
            {
                "type": "method",
                "args": {
                    "response": "str"
                }
            }
        ]
    },
    "spiders.crawl": {
        "_identity": [
            {
                "type": "func",
                "args": {
                    "request": "Request",
                    "response": "HtmlResponse"
                }
            }
        ],
        "_get_method": [
            {
                "type": "func",
                "args": {
                    "method": "six.Any",
                    "spider": "Spider"
                }
            }
        ],
        "_default_link_extractor": [
            {
                "type": "var",
                "anno": "LinkExtractor"
            }
        ],
        "Rule.link_extractor": [
            {
                "type": "attr",
                "anno": "LinkExtractor"
            }
        ],
        "Rule.callback": [
            {
                "type": "attr",
                "anno": "six.Any"
            }
        ],
        "Rule.cb_kwargs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Rule.process_links": [
            {
                "type": "attr",
                "anno": "six.Any"
            }
        ],
        "Rule.process_request": [
            {
                "type": "attr",
                "anno": "six.Any"
            }
        ],
        "Rule.process_request_argcount": [
            {
                "type": "attr",
                "anno": "six.Any"
            }
        ],
        "Rule.follow": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Rule.__init__": [
            {
                "type": "method",
                "args": {
                    "link_extractor": "LinkExtractor",
                    "callback": "six.Any",
                    "cb_kwargs": "dict",
                    "follow": "bool",
                    "process_links": "six.Any",
                    "process_request": "six.Any"
                }
            }
        ],
        "Rule._compile": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "Rule._process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "HtmlResponse"
                }
            }
        ],
        "CrawlSpider.rules": [
            {
                "type": "attr",
                "anno": "tuple[Rule, ...]"
            }
        ],
        "CrawlSpider.parse_start_url": [
            {
                "type": "method",
                "args": {
                    "response": "HtmlResponse"
                }
            }
        ],
        "CrawlSpider.process_results": [
            {
                "type": "method",
                "args": {
                    "response": "HtmlResponse",
                    "results": "dict"
                }
            }
        ],
        "CrawlSpider._rules": [
            {
                "type": "attr",
                "anno": "tuple[Rule, ...]"
            }
        ],
        "CrawlSpider._compile_rules": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CrawlSpider.__init__": [
            {
                "type": "method",
                "args": {
                    "a": "object",
                    "kw": "object"
                }
            }
        ],
        "CrawlSpider.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "Spider",
                    "crawler": "CrawlSpider",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "CrawlSpider._requests_to_follow": [
            {
                "type": "method",
                "args": {
                    "response": "HtmlResponse"
                }
            }
        ],
        "CrawlSpider._parse_response": [
            {
                "type": "method",
                "args": {
                    "response": "HtmlResponse",
                    "callback": "six.Any",
                    "cb_kwargs": "dict",
                    "follow": "bool"
                }
            }
        ],
        "CrawlSpider._response_downloaded": [
            {
                "type": "method",
                "args": {
                    "response": "HtmlResponse"
                }
            }
        ],
        "CrawlSpider._build_request": [
            {
                "type": "method",
                "args": {
                    "rule": "Rule",
                    "link": "Link"
                }
            }
        ],
        "CrawlSpider.parse": [
            {
                "type": "method",
                "args": {
                    "response": "HtmlResponse"
                }
            }
        ]
    },
    "spiders": {
        "Spider.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Spider.custom_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Spider.start_urls": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Spider.logger": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spider.crawler": [
            {
                "type": "attr",
                "anno": "CrawlSpider"
            }
        ],
        "Spider.settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Spider.make_requests_from_url": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "Spider.start_requests": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spider.parse": [
            {
                "type": "method",
                "args": {
                    "response": "Response"
                }
            }
        ],
        "Spider.update_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "Spider",
                    "settings": "Settings"
                }
            }
        ],
        "Spider.close": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider",
                    "reason": "str"
                }
            }
        ],
        "Spider.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spider.__repr__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Spider.handles_request": [
            {
                "type": "method",
                "args": {
                    "cls": "Type[Spider]",
                    "request": "Request"
                }
            }
        ],
        "Spider.log": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "level": "int",
                    "kw": "Any"
                }
            }
        ],
        "Spider._set_crawler": [
            {
                "type": "method",
                "args": {
                    "crawler": "CrawlSpider"
                }
            }
        ],
        "Spider.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "Spider",
                    "crawler": "CrawlSpider",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Spider.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "kwargs": "object"
                }
            }
        ]
    },
    "spiderloader": {
        "SpiderLoader.spider_modules": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SpiderLoader.warn_only": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SpiderLoader._spiders": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SpiderLoader._found": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SpiderLoader._check_name_duplicates": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpiderLoader._load_spiders": [
            {
                "type": "method",
                "args": {
                    "module": "str"
                }
            }
        ],
        "SpiderLoader._load_all_spiders": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpiderLoader.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "BaseSettings"
                }
            }
        ],
        "SpiderLoader.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[SpiderLoader]",
                    "settings": "dict"
                }
            }
        ],
        "SpiderLoader.load": [
            {
                "type": "method",
                "args": {
                    "spider_name": "str"
                }
            }
        ],
        "SpiderLoader.list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpiderLoader.find_by_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ]
    },
    "pqueues": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_path_safe": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "_Priority.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "_Priority.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_SlotPriorityQueues.pqfactory": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_SlotPriorityQueues.pqueues": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_SlotPriorityQueues.__init__": [
            {
                "type": "method",
                "args": {
                    "pqfactory": "Callable",
                    "slot_startprios": "dict"
                }
            }
        ],
        "_SlotPriorityQueues.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_SlotPriorityQueues.__contains__": [
            {
                "type": "method",
                "args": {
                    "slot": "str"
                }
            }
        ],
        "ScrapyPriorityQueue.serialize": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrapyPriorityQueue.spider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScrapyPriorityQueue.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Crawler",
                    "qfactory": "Callable",
                    "startprios": "tuple",
                    "serialize": "bool"
                }
            }
        ],
        "ScrapyPriorityQueue.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "qfactory": "QueueFactory",
                    "startprios": "int",
                    "serialize": "bool"
                }
            }
        ],
        "DownloaderInterface.downloader": [
            {
                "type": "attr",
                "anno": "Downloader"
            }
        ],
        "DownloaderInterface.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Crawler"
                }
            }
        ],
        "DownloaderInterface.get_slot_key": [
            {
                "type": "method",
                "args": {
                    "request": "object"
                }
            }
        ],
        "DownloaderInterface._active_downloads": [
            {
                "type": "method",
                "args": {
                    "slot": "int"
                }
            }
        ],
        "DownloaderInterface.stats": [
            {
                "type": "method",
                "args": {
                    "possible_slots": "list[int]"
                }
            }
        ],
        "DownloaderAwarePriorityQueue.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler",
                    "qfactory": "PriorityQueue",
                    "slot_startprios": "int",
                    "serialize": "bool"
                }
            }
        ],
        "DownloaderAwarePriorityQueue._slot_pqueues": [
            {
                "type": "attr",
                "anno": "_SlotPriorityQueues"
            }
        ],
        "DownloaderAwarePriorityQueue.serialize": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DownloaderAwarePriorityQueue._downloader_interface": [
            {
                "type": "attr",
                "anno": "DownloaderInterface"
            }
        ],
        "DownloaderAwarePriorityQueue.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "Crawler",
                    "qfactory": "Callable",
                    "slot_startprios": "dict",
                    "serialize": "bool"
                }
            }
        ],
        "DownloaderAwarePriorityQueue.push": [
            {
                "type": "method",
                "args": {
                    "request": "object",
                    "priority": "int"
                }
            }
        ],
        "ScrapyPriorityQueue.push": [
            {
                "type": "method",
                "args": {
                    "request": "object",
                    "priority": "int"
                }
            }
        ],
        "_SlotPriorityQueues.push_slot": [
            {
                "type": "method",
                "args": {
                    "slot": "str",
                    "obj": "object",
                    "priority": "int"
                }
            }
        ],
        "DownloaderAwarePriorityQueue.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DownloaderAwarePriorityQueue.pop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrapyPriorityQueue.pop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_SlotPriorityQueues.pop_slot": [
            {
                "type": "method",
                "args": {
                    "slot": "str"
                }
            }
        ],
        "_SlotPriorityQueues.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DownloaderAwarePriorityQueue.close": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "": {
        "__all__": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "version_info": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "twisted_version": [
            {
                "type": "var",
                "anno": "tuple[int, int, int]"
            }
        ]
    },
    "dupefilters": {
        "BaseDupeFilter.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[BaseDupeFilter]",
                    "settings": "dict"
                }
            }
        ],
        "BaseDupeFilter.request_seen": [
            {
                "type": "method",
                "args": {
                    "request": "Request"
                }
            }
        ],
        "BaseDupeFilter.open": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseDupeFilter.close": [
            {
                "type": "method",
                "args": {
                    "reason": "str"
                }
            }
        ],
        "BaseDupeFilter.log": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "RFPDupeFilter.file": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "RFPDupeFilter.fingerprints": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "RFPDupeFilter.logdupes": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RFPDupeFilter.debug": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RFPDupeFilter.logger": [
            {
                "type": "attr",
                "anno": "logging.Logger"
            }
        ],
        "RFPDupeFilter.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[RFPDupeFilter]",
                    "settings": "dict"
                }
            }
        ],
        "RFPDupeFilter.request_fingerprint": [
            {
                "type": "method",
                "args": {
                    "request": "str"
                }
            }
        ],
        "RFPDupeFilter.log": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "RFPDupeFilter.request_seen": [
            {
                "type": "method",
                "args": {
                    "request": "str"
                }
            }
        ],
        "RFPDupeFilter.__init__": [
            {
                "type": "method",
                "args": {
                    "path": "str | None",
                    "debug": "bool"
                }
            }
        ],
        "RFPDupeFilter.close": [
            {
                "type": "method",
                "args": {
                    "reason": "str"
                }
            }
        ]
    },
    "resolver": {
        "dnscache": [
            {
                "type": "var",
                "anno": "LocalCache"
            }
        ],
        "CachingThreadedResolver.timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CachingThreadedResolver.__init__": [
            {
                "type": "method",
                "args": {
                    "reactor": "asyncio.AbstractEventLoop",
                    "cache_size": "int",
                    "timeout": "int"
                }
            }
        ],
        "CachingThreadedResolver._cache_result": [
            {
                "type": "method",
                "args": {
                    "result": "str",
                    "name": "str"
                }
            }
        ],
        "CachingThreadedResolver.getHostByName": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "timeout": "tuple"
                }
            }
        ]
    },
    "mail": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_to_bytes_or_none": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "MailSender.smtphost": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MailSender.smtpport": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MailSender.smtpuser": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "MailSender.smtppass": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "MailSender.smtptls": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MailSender.smtpssl": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MailSender.mailfrom": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MailSender.debug": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MailSender.__init__": [
            {
                "type": "method",
                "args": {
                    "smtphost": "str",
                    "mailfrom": "str",
                    "smtpuser": "bytes",
                    "smtppass": "bytes",
                    "smtpport": "int",
                    "smtptls": "bool",
                    "smtpssl": "bool",
                    "debug": "bool"
                }
            }
        ],
        "MailSender.from_settings": [
            {
                "type": "method",
                "args": {
                    "cls": "type[MailSender]",
                    "settings": "dict"
                }
            }
        ],
        "MailSender._sent_ok": [
            {
                "type": "method",
                "args": {
                    "result": "str",
                    "to": "str",
                    "cc": "str",
                    "subject": "str",
                    "nattachs": "int"
                }
            }
        ],
        "MailSender._sent_failed": [
            {
                "type": "method",
                "args": {
                    "failure": "Exception",
                    "to": "str",
                    "cc": "str",
                    "subject": "str",
                    "nattachs": "int"
                }
            }
        ],
        "MailSender._sendmail": [
            {
                "type": "method",
                "args": {
                    "to_addrs": "bytes",
                    "msg": "bytes"
                }
            }
        ],
        "MailSender.send": [
            {
                "type": "method",
                "args": {
                    "to": "str",
                    "subject": "str",
                    "body": "str",
                    "cc": "str",
                    "attachs": "list",
                    "mimetype": "str",
                    "charset": "str",
                    "_callback": "Callable[[str, str], None]"
                }
            }
        ]
    },
    "responsetypes": {
        "ResponseTypes.CLASSES": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ResponseTypes.classes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ResponseTypes.mimetypes": [
            {
                "type": "attr",
                "anno": "MimeTypes"
            }
        ],
        "ResponseTypes.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ResponseTypes.from_mimetype": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ResponseTypes.from_content_type": [
            {
                "type": "method",
                "args": {
                    "content_type": "str",
                    "content_encoding": "str"
                }
            }
        ],
        "ResponseTypes.from_filename": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "ResponseTypes.from_content_disposition": [
            {
                "type": "method",
                "args": {
                    "content_disposition": "str"
                }
            }
        ],
        "ResponseTypes.from_headers": [
            {
                "type": "method",
                "args": {
                    "headers": "dict"
                }
            }
        ],
        "ResponseTypes.from_body": [
            {
                "type": "method",
                "args": {
                    "body": "bytes"
                }
            }
        ],
        "ResponseTypes.from_args": [
            {
                "type": "method",
                "args": {
                    "headers": "dict",
                    "url": "str",
                    "filename": "str",
                    "body": "bytes"
                }
            }
        ],
        "responsetypes": [
            {
                "type": "var",
                "anno": "Type[Response]"
            }
        ]
    },
    "link": {
        "Link.__slots__": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Link.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Link.text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Link.fragment": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Link.nofollow": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Link.__init__": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "text": "str",
                    "fragment": "str",
                    "nofollow": "bool"
                }
            }
        ],
        "Link.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Link.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Link.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ]
    },
    "downloadermiddlewares.defaultheaders": {
        "DefaultHeadersMiddleware._headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DefaultHeadersMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "headers": "dict"
                }
            }
        ],
        "DefaultHeadersMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "DefaultHeadersMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ]
    },
    "downloadermiddlewares.httpcache": {
        "HttpCacheMiddleware.DOWNLOAD_EXCEPTIONS": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "HttpCacheMiddleware.policy": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "HttpCacheMiddleware.storage": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "HttpCacheMiddleware.ignore_missing": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HttpCacheMiddleware.stats": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "HttpCacheMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "dict",
                    "stats": "object"
                }
            }
        ],
        "HttpCacheMiddleware.process_exception": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "exception": "Exception",
                    "spider": "str"
                }
            }
        ],
        "HttpCacheMiddleware._cache_response": [
            {
                "type": "method",
                "args": {
                    "spider": "str",
                    "response": "Response",
                    "request": "Request",
                    "cachedresponse": "Response"
                }
            }
        ],
        "HttpCacheMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "HttpCacheMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "HttpCacheMiddleware.spider_closed": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "HttpCacheMiddleware.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "str"
                }
            }
        ],
        "HttpCacheMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "downloadermiddlewares.httpcompression": {
        "ACCEPTED_ENCODINGS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "HttpCompressionMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "HttpCompressionMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "HttpCompressionMiddleware._decode": [
            {
                "type": "method",
                "args": {
                    "body": "bytes",
                    "encoding": "bytes"
                }
            }
        ],
        "HttpCompressionMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "Response",
                    "spider": "Spider"
                }
            }
        ]
    },
    "downloadermiddlewares.cookies": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "CookiesMiddleware.jars": [
            {
                "type": "attr",
                "anno": "defaultdict"
            }
        ],
        "CookiesMiddleware.debug": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CookiesMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "debug": "bool"
                }
            }
        ],
        "CookiesMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "CookiesMiddleware._debug_cookie": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "CookiesMiddleware._debug_set_cookie": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "CookiesMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "Response",
                    "spider": "str"
                }
            }
        ],
        "CookiesMiddleware._format_cookie": [
            {
                "type": "method",
                "args": {
                    "cookie": "dict"
                }
            }
        ],
        "CookiesMiddleware._get_request_cookies": [
            {
                "type": "method",
                "args": {
                    "jar": "CookieJar",
                    "request": "Request"
                }
            }
        ],
        "CookiesMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ]
    },
    "downloadermiddlewares.ajaxcrawl": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "AjaxCrawlMiddleware.lookup_bytes": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AjaxCrawlMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "six.Mapping"
                }
            }
        ],
        "AjaxCrawlMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "_ajax_crawlable_re": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_has_ajaxcrawlable_meta": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "AjaxCrawlMiddleware._has_ajax_crawlable_variant": [
            {
                "type": "method",
                "args": {
                    "response": "HtmlResponse"
                }
            }
        ],
        "AjaxCrawlMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "HtmlRequest",
                    "response": "HtmlResponse",
                    "spider": "str"
                }
            }
        ]
    },
    "downloadermiddlewares.robotstxt": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "RobotsTxtMiddleware.DOWNLOAD_PRIORITY": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RobotsTxtMiddleware._default_useragent": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RobotsTxtMiddleware._robotstxt_useragent": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RobotsTxtMiddleware.crawler": [
            {
                "type": "attr",
                "anno": "logging.Crawler"
            }
        ],
        "RobotsTxtMiddleware._parsers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RobotsTxtMiddleware._parserimpl": [
            {
                "type": "attr",
                "anno": "RobotParser"
            }
        ],
        "RobotsTxtMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "RobotsTxtMiddleware._logerror": [
            {
                "type": "method",
                "args": {
                    "failure": "Exception",
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "RobotsTxtMiddleware._robots_error": [
            {
                "type": "method",
                "args": {
                    "failure": "Exception",
                    "netloc": "str"
                }
            }
        ],
        "RobotsTxtMiddleware.process_request_2": [
            {
                "type": "method",
                "args": {
                    "rp": "Request",
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "RobotsTxtMiddleware._parse_robots": [
            {
                "type": "method",
                "args": {
                    "response": "Response",
                    "netloc": "str",
                    "spider": "str"
                }
            }
        ],
        "RobotsTxtMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "RobotsTxtMiddleware.robot_parser": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "RobotsTxtMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ]
    },
    "downloadermiddlewares.decompression": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "DecompressionMiddleware._formats": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DecompressionMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "requests.Request",
                    "response": "requests.Response",
                    "spider": "str"
                }
            }
        ],
        "DecompressionMiddleware._is_bzip2": [
            {
                "type": "method",
                "args": {
                    "response": "six.Any"
                }
            }
        ],
        "DecompressionMiddleware._is_gzip": [
            {
                "type": "method",
                "args": {
                    "response": "six.Any"
                }
            }
        ],
        "DecompressionMiddleware._is_zip": [
            {
                "type": "method",
                "args": {
                    "response": "six.Any"
                }
            }
        ],
        "DecompressionMiddleware._is_tar": [
            {
                "type": "method",
                "args": {
                    "response": "six.Any"
                }
            }
        ],
        "DecompressionMiddleware.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "downloadermiddlewares.redirect": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "BaseRedirectMiddleware.enabled_setting": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseRedirectMiddleware.max_redirect_times": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BaseRedirectMiddleware.priority_adjust": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BaseRedirectMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "BaseSettings"
                }
            }
        ],
        "BaseRedirectMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "BaseRedirectMiddleware._redirect": [
            {
                "type": "method",
                "args": {
                    "redirected": "HtmlRequest",
                    "request": "HtmlRequest",
                    "spider": "str",
                    "reason": "str"
                }
            }
        ],
        "MetaRefreshMiddleware.enabled_setting": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MetaRefreshMiddleware._ignore_tags": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MetaRefreshMiddleware._maxdelay": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MetaRefreshMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "BaseSettings"
                }
            }
        ],
        "BaseRedirectMiddleware._redirect_request_using_get": [
            {
                "type": "method",
                "args": {
                    "request": "HtmlRequest",
                    "redirect_url": "str"
                }
            }
        ],
        "MetaRefreshMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "HtmlRequest",
                    "response": "HtmlResponse",
                    "spider": "str"
                }
            }
        ],
        "RedirectMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "HtmlRequest",
                    "response": "HtmlResponse",
                    "spider": "str"
                }
            }
        ]
    },
    "downloadermiddlewares.useragent": {
        "UserAgentMiddleware.user_agent": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UserAgentMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "user_agent": "str"
                }
            }
        ],
        "UserAgentMiddleware.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "UserAgentMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "requests.Request",
                    "spider": "signals.Spider"
                }
            }
        ],
        "UserAgentMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "downloadermiddlewares.httpauth": {
        "HttpAuthMiddleware.auth": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HttpAuthMiddleware.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "object"
                }
            }
        ],
        "HttpAuthMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ],
        "HttpAuthMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "downloadermiddlewares.downloadtimeout": {
        "DownloadTimeoutMiddleware._timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DownloadTimeoutMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "DownloadTimeoutMiddleware.spider_opened": [
            {
                "type": "method",
                "args": {
                    "spider": "Spider"
                }
            }
        ],
        "DownloadTimeoutMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "requests.Request",
                    "spider": "signals.Spider"
                }
            }
        ],
        "DownloadTimeoutMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ]
    },
    "downloadermiddlewares.retry": {
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "RetryMiddleware.EXCEPTIONS_TO_RETRY": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RetryMiddleware.max_retry_times": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RetryMiddleware.retry_http_codes": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "RetryMiddleware.priority_adjust": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RetryMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "settings": "logging.Logger"
                }
            }
        ],
        "RetryMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "RetryMiddleware._retry": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "reason": "Exception",
                    "spider": "Spider"
                }
            }
        ],
        "RetryMiddleware.process_exception": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "exception": "Exception",
                    "spider": "Spider"
                }
            }
        ],
        "RetryMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "Response",
                    "spider": "Spider"
                }
            }
        ]
    },
    "downloadermiddlewares.stats": {
        "DownloaderStats.stats": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DownloaderStats.__init__": [
            {
                "type": "method",
                "args": {
                    "stats": "dict"
                }
            }
        ],
        "DownloaderStats.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "DownloaderStats.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "str"
                }
            }
        ],
        "DownloaderStats.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "request_httprepr.Request",
                    "response": "response_httprepr.Response",
                    "spider": "str"
                }
            }
        ],
        "DownloaderStats.process_exception": [
            {
                "type": "method",
                "args": {
                    "request": "request_httprepr.Request",
                    "exception": "Exception",
                    "spider": "str"
                }
            }
        ]
    },
    "downloadermiddlewares.chunked": {
        "ChunkedTransferMiddleware.process_response": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "response": "Response",
                    "spider": "Spider"
                }
            }
        ]
    },
    "downloadermiddlewares.httpproxy": {
        "HttpProxyMiddleware.auth_encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HttpProxyMiddleware.proxies": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "HttpProxyMiddleware.from_crawler": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "crawler": "logging.Crawler"
                }
            }
        ],
        "HttpProxyMiddleware._basic_auth_header": [
            {
                "type": "method",
                "args": {
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "HttpProxyMiddleware._get_proxy": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "orig_type": "str"
                }
            }
        ],
        "HttpProxyMiddleware.__init__": [
            {
                "type": "method",
                "args": {
                    "auth_encoding": "str"
                }
            }
        ],
        "HttpProxyMiddleware._set_proxy": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "scheme": "str"
                }
            }
        ],
        "HttpProxyMiddleware.process_request": [
            {
                "type": "method",
                "args": {
                    "request": "Request",
                    "spider": "Spider"
                }
            }
        ]
    }
}