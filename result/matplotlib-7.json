{
    "pylab": {
        "__doc__": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "matplotlib.artist": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_XYPair": [
            {
                "type": "var",
                "anno": "namedtuple"
            }
        ],
        "Artist.zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Artist._stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist.stale_callback": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "Artist._axes": [
            {
                "type": "attr",
                "anno": "Artist"
            }
        ],
        "Artist.figure": [
            {
                "type": "attr",
                "anno": "mpl.figure.Figure"
            }
        ],
        "Artist._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "Artist._transformSet": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist._visible": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist._animated": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist._alpha": [
            {
                "type": "attr",
                "anno": "Number"
            }
        ],
        "Artist.clipbox": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "Artist._clippath": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "Artist._clipon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist._label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Artist._picker": [
            {
                "type": "attr",
                "anno": "Number"
            }
        ],
        "Artist._contains": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Artist._rasterized": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist._agg_filter": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Artist._mouseover": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist.eventson": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist._oid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Artist._propobservers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Artist._remove_method": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Artist._url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Artist._gid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Artist._snap": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist._sketch": [
            {
                "type": "attr",
                "anno": "mpl.rcParams[float]"
            }
        ],
        "Artist._path_effects": [
            {
                "type": "attr",
                "anno": "mpl.rcParams[path.effects]"
            }
        ],
        "Artist._sticky_edges": [
            {
                "type": "attr",
                "anno": "_XYPair"
            }
        ],
        "Artist._in_layout": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist.add_callback": [
            {
                "type": "method",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "Artist.remove_callback": [
            {
                "type": "method",
                "args": {
                    "oid": "str"
                }
            }
        ],
        "Artist.pchanged": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.is_transform_set": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Artist.set_transform": [
            {
                "type": "method",
                "args": {
                    "t": "Transform"
                }
            }
        ],
        "Artist.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_contains": [
            {
                "type": "method",
                "args": {
                    "picker": "Callable"
                }
            }
        ],
        "Artist.get_contains": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.pickable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_picker": [
            {
                "type": "method",
                "args": {
                    "picker": "Number"
                }
            }
        ],
        "Artist.get_picker": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_url": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_url": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "Artist.get_gid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_gid": [
            {
                "type": "method",
                "args": {
                    "gid": "int"
                }
            }
        ],
        "Artist.set_snap": [
            {
                "type": "method",
                "args": {
                    "snap": "bool"
                }
            }
        ],
        "Artist.get_sketch_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_sketch_params": [
            {
                "type": "method",
                "args": {
                    "scale": "float",
                    "length": "float",
                    "randomness": "float"
                }
            }
        ],
        "Artist.set_path_effects": [
            {
                "type": "method",
                "args": {
                    "path_effects": "mpl.rcParams[path.effects]"
                }
            }
        ],
        "Artist.get_path_effects": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_figure": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_figure": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "Artist.set_clip_box": [
            {
                "type": "method",
                "args": {
                    "clipbox": "Transform"
                }
            }
        ],
        "Artist.get_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_visible": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_animated": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_in_layout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_clip_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_clip_box": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_clip_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_clip_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Artist.get_rasterized": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_agg_filter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_agg_filter": [
            {
                "type": "method",
                "args": {
                    "filter_func": "Callable"
                }
            }
        ],
        "Artist.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "Artist.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "Artist.set_visible": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Artist.set_animated": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Artist.set_in_layout": [
            {
                "type": "method",
                "args": {
                    "in_layout": "bool"
                }
            }
        ],
        "Artist.get_label": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_label": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "Artist.get_zorder": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.sticky_edges": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_cursor_data": [
            {
                "type": "method",
                "args": {
                    "event": "MouseEvent"
                }
            }
        ],
        "ArtistInspector.oorig": [
            {
                "type": "attr",
                "anno": "Artist"
            }
        ],
        "ArtistInspector.o": [
            {
                "type": "attr",
                "anno": "Artist"
            }
        ],
        "ArtistInspector.aliasd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ArtistInspector._get_valid_values_regex": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "ArtistInspector._replace_path": [
            {
                "type": "method",
                "args": {
                    "source_class": "str"
                }
            }
        ],
        "ArtistInspector.is_alias": [
            {
                "type": "method",
                "args": {
                    "o": "Artist"
                }
            }
        ],
        "ArtistInspector.get_setters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.update": [
            {
                "type": "method",
                "args": {
                    "props": "dict"
                }
            }
        ],
        "Artist.findobj": [
            {
                "type": "method",
                "args": {
                    "match": "Artist",
                    "include_self": "bool"
                }
            }
        ],
        "Artist._default_contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist",
                    "figure": "None"
                }
            }
        ],
        "Artist.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "ArtistInspector.properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_zorder": [
            {
                "type": "method",
                "args": {
                    "level": "float"
                }
            }
        ],
        "Artist.set_clip_path": [
            {
                "type": "method",
                "args": {
                    "path": "Union[Path, Transformation, TransformedPath]",
                    "transform": "Transform"
                }
            }
        ],
        "Artist._set_gc_clip": [
            {
                "type": "method",
                "args": {
                    "gc": "mpl.rcsetup.Context"
                }
            }
        ],
        "ArtistInspector.aliased_name": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "ArtistInspector.pprint_getters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ArtistInspector.pprint_setters": [
            {
                "type": "method",
                "args": {
                    "prop": "str",
                    "leadingspace": "int"
                }
            }
        ],
        "setp": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "args": "tuple",
                    "file": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "Artist.pick": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "Artist.get_snap": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.set_rasterized": [
            {
                "type": "method",
                "args": {
                    "rasterized": "bool"
                }
            }
        ],
        "Artist.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Artist.set": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Artist.convert_yunits": [
            {
                "type": "method",
                "args": {
                    "y": "np.ndarray"
                }
            }
        ],
        "Artist.convert_xunits": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "Artist.update_from": [
            {
                "type": "method",
                "args": {
                    "other": "Artist"
                }
            }
        ],
        "_stale_axes_callback": [
            {
                "type": "func",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "Artist.axes": [
            {
                "type": "method",
                "args": {
                    "new_axes": "Artist"
                }
            }
        ],
        "Artist.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.remove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.format_cursor_data": [
            {
                "type": "method",
                "args": {
                    "data": "np.ndarray"
                }
            }
        ],
        "Artist.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Artist._get_clipping_extent_bbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.get_transformed_clip_path_and_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Artist.mouseover": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "Artist.have_units": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ArtistInspector.get_valid_values": [
            {
                "type": "method",
                "args": {
                    "attr": "str"
                }
            }
        ],
        "ArtistInspector.get_aliases": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ArtistInspector.__init__": [
            {
                "type": "method",
                "args": {
                    "o": "Artist"
                }
            }
        ],
        "getp": [
            {
                "type": "func",
                "args": {
                    "obj": "Artist",
                    "property": "object"
                }
            }
        ],
        "get": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "Artist.properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "allow_rasterization": [
            {
                "type": "func",
                "args": {
                    "draw": "Callable"
                }
            }
        ],
        "ArtistInspector.aliased_name_rest": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "target": "str"
                }
            }
        ],
        "ArtistInspector.pprint_setters_rest": [
            {
                "type": "method",
                "args": {
                    "prop": "str",
                    "leadingspace": "int"
                }
            }
        ],
        "kwdoc": [
            {
                "type": "func",
                "args": {
                    "artist": "Artist"
                }
            }
        ]
    },
    "matplotlib._version": {
        "get_keywords": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LONG_VERSION_PY": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "HANDLERS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "register_vcs_handler": [
            {
                "type": "func",
                "args": {
                    "vcs": "str",
                    "method": "str"
                }
            }
        ],
        "run_command": [
            {
                "type": "func",
                "args": {
                    "commands": "list[str]",
                    "args": "list[str]",
                    "cwd": "str",
                    "verbose": "bool",
                    "hide_stderr": "bool"
                }
            }
        ],
        "versions_from_parentdir": [
            {
                "type": "func",
                "args": {
                    "parentdir_prefix": "str",
                    "root": "str",
                    "verbose": "bool"
                }
            }
        ],
        "render_pep440_pre": [
            {
                "type": "func",
                "args": {
                    "pieces": "dict"
                }
            }
        ],
        "render_pep440_old": [
            {
                "type": "func",
                "args": {
                    "pieces": "dict"
                }
            }
        ],
        "render_git_describe": [
            {
                "type": "func",
                "args": {
                    "pieces": "dict"
                }
            }
        ],
        "render_git_describe_long": [
            {
                "type": "func",
                "args": {
                    "pieces": "dict"
                }
            }
        ],
        "get_config": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "plus_or_dot": [
            {
                "type": "func",
                "args": {
                    "pieces": "dict"
                }
            }
        ],
        "render_pep440_post": [
            {
                "type": "func",
                "args": {
                    "pieces": "dict"
                }
            }
        ],
        "render_pep440": [
            {
                "type": "func",
                "args": {
                    "pieces": "dict"
                }
            }
        ],
        "render": [
            {
                "type": "func",
                "args": {
                    "pieces": "dict",
                    "style": "str"
                }
            }
        ],
        "git_versions_from_keywords": [
            {
                "type": "func",
                "args": {
                    "keywords": "dict",
                    "tag_prefix": "str",
                    "verbose": "bool"
                }
            }
        ],
        "git_pieces_from_vcs": [
            {
                "type": "func",
                "args": {
                    "tag_prefix": "str",
                    "root": "str",
                    "verbose": "bool",
                    "run_command": "Callable"
                }
            }
        ],
        "get_versions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "git_get_keywords": [
            {
                "type": "func",
                "args": {
                    "versionfile_abs": "str"
                }
            }
        ]
    },
    "matplotlib.type1font": {
        "_TokenType": [
            {
                "type": "var",
                "anno": "enum.Enum"
            }
        ],
        "Type1Font.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Type1Font.parts": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Type1Font._read": [
            {
                "type": "method",
                "args": {
                    "file": "bytes"
                }
            }
        ],
        "Type1Font._split": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "Type1Font._whitespace_re": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Type1Font._token_re": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Type1Font._comment_re": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Type1Font._instring_re": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Type1Font.prop": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Type1Font._tokens": [
            {
                "type": "method",
                "args": {
                    "cls": "Type1Font",
                    "text": "bytes"
                }
            }
        ],
        "Type1Font._parse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Type1Font.__init__": [
            {
                "type": "method",
                "args": {
                    "input": "tuple"
                }
            }
        ],
        "Type1Font.transform": [
            {
                "type": "method",
                "args": {
                    "effects": "tuple"
                }
            }
        ],
        "Type1Font._transformer": [
            {
                "type": "method",
                "args": {
                    "cls": "Type1Font",
                    "tokens": "tuple",
                    "slant": "float",
                    "extend": "float"
                }
            }
        ]
    },
    "matplotlib.collections": {
        "Collection._offsets": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._transforms": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._edge_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Collection._us_linestyles": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._linestyles": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._us_lw": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._linewidths": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._is_filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Collection._hatch_color": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._offset_position": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Collection._capstyle": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._joinstyle": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._offsetsNone": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Collection._uniform_offsets": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._path_effects": [
            {
                "type": "attr",
                "anno": "mpl.rcParams[path.effects]"
            }
        ],
        "Collection._paths": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection.get_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.set_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.get_transforms": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Collection._pickradius": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Collection.set_pickradius": [
            {
                "type": "method",
                "args": {
                    "pr": "float"
                }
            }
        ],
        "Collection.get_pickradius": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection._urls": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection.set_urls": [
            {
                "type": "method",
                "args": {
                    "urls": "np.ndarray"
                }
            }
        ],
        "Collection.get_urls": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection._hatch": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection.set_hatch": [
            {
                "type": "method",
                "args": {
                    "hatch": "np.ndarray"
                }
            }
        ],
        "Collection.get_hatch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.get_offsets": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.get_offset_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.get_capstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.get_joinstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection._antialiaseds": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._facecolors": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._original_facecolor": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection.get_facecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection._is_stroked": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Collection._edgecolors": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection._original_edgecolor": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection.get_linewidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.get_linestyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.get_fill": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection._A": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Collection.norm": [
            {
                "type": "attr",
                "anno": "cm.Normalize"
            }
        ],
        "Collection.cmap": [
            {
                "type": "attr",
                "anno": "cm.Colormap"
            }
        ],
        "_CollectionWithSizes._factor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_CollectionWithSizes._sizes": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_CollectionWithSizes.get_sizes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_CollectionWithSizes._transforms": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_CollectionWithSizes.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_CollectionWithSizes.set_sizes": [
            {
                "type": "method",
                "args": {
                    "sizes": "np.ndarray",
                    "dpi": "float"
                }
            }
        ],
        "PathCollection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PathCollection._paths": [
            {
                "type": "attr",
                "anno": "list[_path]"
            }
        ],
        "PathCollection.set_paths": [
            {
                "type": "method",
                "args": {
                    "paths": "list[_path]"
                }
            }
        ],
        "PathCollection.get_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolyCollection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PolyCollection._paths": [
            {
                "type": "attr",
                "anno": "list[mpath.Path]"
            }
        ],
        "RegularPolyCollection._factor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RegularPolyCollection._numsides": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "RegularPolyCollection._paths": [
            {
                "type": "attr",
                "anno": "list[mpath.Path]"
            }
        ],
        "RegularPolyCollection._rotation": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RegularPolyCollection.get_numsides": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RegularPolyCollection.get_rotation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RegularPolyCollection._transforms": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "LineCollection._edge_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LineCollection._paths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LineCollection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LineCollection.get_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LineCollection.get_colors": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "EventCollection._edge_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "EventCollection._is_horizontal": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "EventCollection._linelength": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EventCollection._lineoffset": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EventCollection.is_horizontal": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventCollection.get_orientation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventCollection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "EventCollection.get_linelength": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventCollection.get_lineoffset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventCollection.get_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CircleCollection._factor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CircleCollection._paths": [
            {
                "type": "attr",
                "anno": "list[mpath.Path]"
            }
        ],
        "EllipseCollection._widths": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EllipseCollection._heights": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EllipseCollection._angles": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EllipseCollection._units": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "EllipseCollection._transforms": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EllipseCollection._paths": [
            {
                "type": "attr",
                "anno": "list[mpath.Path]"
            }
        ],
        "PatchCollection._paths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TriMesh._triangulation": [
            {
                "type": "attr",
                "anno": "Triangulation"
            }
        ],
        "TriMesh._shading": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TriMesh._is_filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TriMesh._bbox": [
            {
                "type": "attr",
                "anno": "transforms.Bbox"
            }
        ],
        "TriMesh._paths": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "QuadMesh._meshWidth": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "QuadMesh._meshHeight": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "QuadMesh._coordinates": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "QuadMesh._antialiased": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "QuadMesh._shading": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "QuadMesh._bbox": [
            {
                "type": "attr",
                "anno": "transforms.Bbox"
            }
        ],
        "QuadMesh._paths": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "QuadMesh.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Collection.get_edgecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventCollection.get_linewidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventCollection.get_linewidths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LineCollection._add_offsets": [
            {
                "type": "method",
                "args": {
                    "segs": "np.ndarray"
                }
            }
        ],
        "Collection.set_offsets": [
            {
                "type": "method",
                "args": {
                    "offsets": "np.ndarray"
                }
            }
        ],
        "Collection.update_scalarmappable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection._transOffset": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "QuadMesh.convert_mesh_to_triangles": [
            {
                "type": "method",
                "args": {
                    "meshWidth": "int",
                    "meshHeight": "int",
                    "coordinates": "np.ndarray"
                }
            }
        ],
        "BrokenBarHCollection.span_where": [
            {
                "type": "method",
                "args": {
                    "cls": "type[BrokenBarHCollection]",
                    "x": "np.ndarray",
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "where": "np.ndarray",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "RegularPolyCollection._path_generator": [
            {
                "type": "attr",
                "anno": "mpath.Path"
            }
        ],
        "Collection.set_antialiased": [
            {
                "type": "method",
                "args": {
                    "aa": "np.ndarray"
                }
            }
        ],
        "LineCollection.get_segments": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventCollection.get_positions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LineCollection.set_segments": [
            {
                "type": "method",
                "args": {
                    "segments": "np.ndarray"
                }
            }
        ],
        "EventCollection.set_lineoffset": [
            {
                "type": "method",
                "args": {
                    "lineoffset": "int"
                }
            }
        ],
        "EventCollection.set_linelength": [
            {
                "type": "method",
                "args": {
                    "linelength": "int"
                }
            }
        ],
        "EventCollection.switch_orientation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventCollection.set_orientation": [
            {
                "type": "method",
                "args": {
                    "orientation": "str"
                }
            }
        ],
        "EventCollection.set_positions": [
            {
                "type": "method",
                "args": {
                    "positions": "np.ndarray"
                }
            }
        ],
        "EventCollection.add_positions": [
            {
                "type": "method",
                "args": {
                    "position": "np.ndarray"
                }
            }
        ],
        "EventCollection.append_positions": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "EventCollection.extend_positions": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "LineCollection.set_paths": [
            {
                "type": "attr",
                "anno": "Callable[[np.ndarray], None]"
            }
        ],
        "LineCollection.set_verts": [
            {
                "type": "attr",
                "anno": "Callable[[np.ndarray], None]"
            }
        ],
        "PolyCollection.set_verts_and_codes": [
            {
                "type": "method",
                "args": {
                    "verts": "np.ndarray",
                    "codes": "np.ndarray"
                }
            }
        ],
        "PolyCollection.set_verts": [
            {
                "type": "method",
                "args": {
                    "verts": "np.ndarray",
                    "closed": "bool"
                }
            }
        ],
        "PolyCollection.set_paths": [
            {
                "type": "attr",
                "anno": "Callable[[np.ndarray], None]"
            }
        ],
        "Collection.set_capstyle": [
            {
                "type": "method",
                "args": {
                    "cs": "np.ndarray"
                }
            }
        ],
        "Collection.set_joinstyle": [
            {
                "type": "method",
                "args": {
                    "js": "np.ndarray"
                }
            }
        ],
        "Collection.set_offset_position": [
            {
                "type": "method",
                "args": {
                    "offset_position": "str"
                }
            }
        ],
        "Collection._set_edgecolor": [
            {
                "type": "method",
                "args": {
                    "c": "Union[Number, str]"
                }
            }
        ],
        "Collection.set_edgecolor": [
            {
                "type": "method",
                "args": {
                    "c": "Union[Number, str]"
                }
            }
        ],
        "LineCollection.set_color": [
            {
                "type": "method",
                "args": {
                    "c": "Union[Number, str]"
                }
            }
        ],
        "Collection._set_facecolor": [
            {
                "type": "method",
                "args": {
                    "c": "Union[Number, str]"
                }
            }
        ],
        "Collection.set_facecolor": [
            {
                "type": "method",
                "args": {
                    "c": "Union[Number, str]"
                }
            }
        ],
        "Collection.set_color": [
            {
                "type": "method",
                "args": {
                    "c": "Union[Number, str]"
                }
            }
        ],
        "QuadMesh.convert_mesh_to_paths": [
            {
                "type": "method",
                "args": {
                    "meshWidth": "int",
                    "meshHeight": "int",
                    "coordinates": "np.ndarray"
                }
            }
        ],
        "QuadMesh.set_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "QuadMesh.get_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TriMesh.convert_mesh_to_paths": [
            {
                "type": "method",
                "args": {
                    "tri": "Triangulation"
                }
            }
        ],
        "TriMesh.set_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TriMesh.get_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection._bcast_lwls": [
            {
                "type": "method",
                "args": {
                    "linewidths": "np.ndarray",
                    "dashes": "np.ndarray"
                }
            }
        ],
        "Collection.set_linestyle": [
            {
                "type": "method",
                "args": {
                    "ls": "str"
                }
            }
        ],
        "Collection.set_linewidth": [
            {
                "type": "method",
                "args": {
                    "lw": "np.ndarray"
                }
            }
        ],
        "Collection.update_from": [
            {
                "type": "method",
                "args": {
                    "other": "Artist"
                }
            }
        ],
        "Collection.get_offset_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "QuadMesh.get_datalim": [
            {
                "type": "method",
                "args": {
                    "transData": "transforms.TransformWrapper"
                }
            }
        ],
        "Collection.__init__": [
            {
                "type": "method",
                "args": {
                    "edgecolors": "np.ndarray",
                    "facecolors": "np.ndarray",
                    "linewidths": "np.ndarray",
                    "linestyles": "str",
                    "capstyle": "np.ndarray",
                    "joinstyle": "np.ndarray",
                    "antialiaseds": "np.ndarray",
                    "offsets": "np.ndarray",
                    "transOffset": "np.ndarray",
                    "norm": "colors.Normalize",
                    "cmap": "colors.Colormap",
                    "pickradius": "float",
                    "hatch": "np.ndarray",
                    "urls": "np.ndarray",
                    "offset_position": "str",
                    "zorder": "int",
                    "kwargs": "object"
                }
            }
        ],
        "QuadMesh.__init__": [
            {
                "type": "method",
                "args": {
                    "meshWidth": "int",
                    "meshHeight": "int",
                    "coordinates": "np.ndarray",
                    "antialiased": "bool",
                    "shading": "str",
                    "kwargs": "object"
                }
            }
        ],
        "TriMesh.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation",
                    "kwargs": "object"
                }
            }
        ],
        "EllipseCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "widths": "float",
                    "heights": "float",
                    "angles": "float",
                    "units": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "CircleCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "sizes": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ],
        "LineCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "segments": "np.ndarray",
                    "linewidths": "np.ndarray",
                    "colors": "np.ndarray",
                    "antialiaseds": "np.ndarray",
                    "linestyles": "str",
                    "offsets": "np.ndarray",
                    "transOffset": "np.ndarray",
                    "norm": "colors.Normalize",
                    "cmap": "colors.Colormap",
                    "pickradius": "float",
                    "zorder": "int",
                    "facecolors": "str",
                    "kwargs": "object"
                }
            }
        ],
        "EventCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "positions": "np.ndarray",
                    "orientation": "str",
                    "lineoffset": "float",
                    "linelength": "float",
                    "linewidth": "float",
                    "color": "np.ndarray",
                    "linestyle": "str",
                    "antialiased": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "RegularPolyCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "numsides": "np.ndarray",
                    "rotation": "float",
                    "sizes": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ],
        "PolyCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "verts": "np.ndarray",
                    "sizes": "np.ndarray",
                    "closed": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "BrokenBarHCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "xranges": "np.ndarray",
                    "yrange": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "PathCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "paths": "list[_path]",
                    "sizes": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Collection._prepare_points": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Collection.get_datalim": [
            {
                "type": "method",
                "args": {
                    "transData": "np.ndarray"
                }
            }
        ],
        "Collection.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "EllipseCollection._set_transforms": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PatchCollection.set_paths": [
            {
                "type": "method",
                "args": {
                    "patches": "list"
                }
            }
        ],
        "PatchCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "patches": "list",
                    "match_original": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Collection.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "Collection.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "Number"
                }
            }
        ],
        "QuadMesh.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "TriMesh.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Collection.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "EllipseCollection.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "RegularPolyCollection.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "_CollectionWithSizes.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "patchstr": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "StarPolygonCollection._path_generator": [
            {
                "type": "attr",
                "anno": "mpath.Path"
            }
        ],
        "AsteriskPolygonCollection._path_generator": [
            {
                "type": "attr",
                "anno": "mpath.Path"
            }
        ],
        "PathCollection.legend_elements": [
            {
                "type": "method",
                "args": {
                    "prop": "str",
                    "num": "int | None",
                    "fmt": "str | mpl.ticker.Locator | mpl.ticker.ScalarFormatter | mpl.ticker.StrMethodFormatter",
                    "func": "Callable[[np.ndarray], np.ndarray]",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "matplotlib.mlab": {
        "window_hanning": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "window_none": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "detrend_mean": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "axis": "int"
                }
            }
        ],
        "detrend_none": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "axis": "int"
                }
            }
        ],
        "_single_spectrum_docs": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "GaussianKDE.dataset": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "GaussianKDE._bw_method": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "GaussianKDE.factor": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "GaussianKDE.data_covariance": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "GaussianKDE.data_inv_cov": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "GaussianKDE.covariance": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "GaussianKDE.inv_cov": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "GaussianKDE.norm_factor": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "GaussianKDE.scotts_factor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GaussianKDE.covariance_factor": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "GaussianKDE.silverman_factor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GaussianKDE.evaluate": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "GaussianKDE.__call__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "GaussianKDE.__init__": [
            {
                "type": "method",
                "args": {
                    "dataset": "np.ndarray",
                    "bw_method": "Callable"
                }
            }
        ],
        "stride_repeat": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "n": "int",
                    "axis": "int"
                }
            }
        ],
        "stride_windows": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "n": "int",
                    "noverlap": "int",
                    "axis": "int"
                }
            }
        ],
        "detrend_linear": [
            {
                "type": "func",
                "args": {
                    "y": "np.ndarray"
                }
            }
        ],
        "detrend": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "key": "str",
                    "axis": "int"
                }
            }
        ],
        "apply_window": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "window": "Callable",
                    "axis": "int",
                    "return_window": "bool"
                }
            }
        ],
        "_spectral_helper": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "detrend_func": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "mode": "str"
                }
            }
        ],
        "specgram": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "mode": "str"
                }
            }
        ],
        "csd": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool"
                }
            }
        ],
        "psd": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool"
                }
            }
        ],
        "cohere": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool"
                }
            }
        ],
        "_single_spectrum_helper": [
            {
                "type": "func",
                "args": {
                    "mode": "str",
                    "x": "np.ndarray",
                    "Fs": "float",
                    "window": "Callable",
                    "pad_to": "int",
                    "sides": "str"
                }
            }
        ],
        "phase_spectrum": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "angle_spectrum": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "magnitude_spectrum": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "complex_spectrum": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ]
    },
    "matplotlib.sankey": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "__author__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__credits__": [
            {
                "type": "var",
                "anno": "SimpleNamespace"
            }
        ],
        "__license__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RIGHT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "UP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DOWN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Sankey.diagrams": [
            {
                "type": "attr",
                "anno": "list[tuple[str, np.ndarray]]"
            }
        ],
        "Sankey.ax": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "Sankey.unit": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Sankey.format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Sankey.scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Sankey.gap": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Sankey.radius": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Sankey.shoulder": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Sankey.offset": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Sankey.margin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Sankey.pitch": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Sankey.tolerance": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Sankey.extent": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Sankey._revert": [
            {
                "type": "method",
                "args": {
                    "path": "list[tuple[str, np.ndarray]]",
                    "first_action": "Path"
                }
            }
        ],
        "Sankey._arc": [
            {
                "type": "method",
                "args": {
                    "quadrant": "int",
                    "cw": "bool",
                    "radius": "float",
                    "center": "tuple"
                }
            }
        ],
        "Sankey._add_output": [
            {
                "type": "method",
                "args": {
                    "path": "list[tuple[str, np.ndarray]]",
                    "angle": "float",
                    "flow": "float",
                    "length": "float"
                }
            }
        ],
        "Sankey._add_input": [
            {
                "type": "method",
                "args": {
                    "path": "list[tuple[str, np.ndarray]]",
                    "angle": "float",
                    "flow": "float",
                    "length": "float"
                }
            }
        ],
        "Sankey.add": [
            {
                "type": "method",
                "args": {
                    "patchlabel": "str",
                    "flows": "np.ndarray",
                    "orientations": "np.ndarray",
                    "labels": "str",
                    "trunklength": "float",
                    "pathlengths": "float",
                    "prior": "int",
                    "connect": "tuple",
                    "rotation": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Sankey.finish": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sankey.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "scale": "float",
                    "unit": "str",
                    "format": "str",
                    "gap": "float",
                    "radius": "float",
                    "shoulder": "float",
                    "offset": "float",
                    "head_angle": "float",
                    "margin": "float",
                    "tolerance": "float",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "matplotlib.units": {
        "_is_natively_supported": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "AxisInfo.majloc": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AxisInfo.minloc": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AxisInfo.majfmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AxisInfo.minfmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AxisInfo.label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AxisInfo.default_limits": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AxisInfo.__init__": [
            {
                "type": "method",
                "args": {
                    "majloc": "str",
                    "minloc": "str",
                    "majfmt": "str",
                    "minfmt": "str",
                    "label": "str",
                    "default_limits": "tuple"
                }
            }
        ],
        "ConversionInterface.axisinfo": [
            {
                "type": "method",
                "args": {
                    "unit": "str",
                    "axis": "AxisInfo"
                }
            }
        ],
        "ConversionInterface.default_units": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "axis": "AxisInfo"
                }
            }
        ],
        "ConversionInterface.convert": [
            {
                "type": "method",
                "args": {
                    "obj": "object",
                    "unit": "str",
                    "axis": "AxisInfo"
                }
            }
        ],
        "ConversionInterface.is_numlike": [
            {
                "type": "method",
                "args": {
                    "x": "object"
                }
            }
        ],
        "DecimalConverter.convert": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "unit": "Decimal",
                    "axis": "AxisInfo"
                }
            }
        ],
        "DecimalConverter.axisinfo": [
            {
                "type": "method",
                "args": {
                    "unit": "str",
                    "axis": "AxisInfo"
                }
            }
        ],
        "DecimalConverter.default_units": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "axis": "AxisInfo"
                }
            }
        ],
        "registry": [
            {
                "type": "var",
                "anno": "Registry[conversionInterface]"
            }
        ],
        "Registry.get_converter": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ]
    },
    "matplotlib.afm": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_to_int": [
            {
                "type": "func",
                "args": {
                    "x": "bytes"
                }
            }
        ],
        "_to_float": [
            {
                "type": "func",
                "args": {
                    "x": "bytes"
                }
            }
        ],
        "_to_str": [
            {
                "type": "func",
                "args": {
                    "x": "bytes"
                }
            }
        ],
        "_to_bool": [
            {
                "type": "func",
                "args": {
                    "s": "bytes"
                }
            }
        ],
        "CharMetrics": [
            {
                "type": "var",
                "anno": "CharMetrics"
            }
        ],
        "_parse_kern_pairs": [
            {
                "type": "func",
                "args": {
                    "fh": "bytes"
                }
            }
        ],
        "CompositePart": [
            {
                "type": "var",
                "anno": "CompositePart"
            }
        ],
        "_parse_composites": [
            {
                "type": "func",
                "args": {
                    "fh": "bytes"
                }
            }
        ],
        "_parse_optional": [
            {
                "type": "func",
                "args": {
                    "fh": "bytes"
                }
            }
        ],
        "AFM._header": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AFM.get_fontname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_weight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_angle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_capheight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_xheight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_underline_thickness": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_to_list_of_floats": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_parse_char_metrics": [
            {
                "type": "func",
                "args": {
                    "fh": "bytes"
                }
            }
        ],
        "_to_list_of_ints": [
            {
                "type": "func",
                "args": {
                    "s": "bytes"
                }
            }
        ],
        "_parse_header": [
            {
                "type": "func",
                "args": {
                    "fh": "bytes"
                }
            }
        ],
        "AFM.__init__": [
            {
                "type": "method",
                "args": {
                    "fh": "bytes"
                }
            }
        ],
        "AFM.get_width_from_char_name": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "AFM.get_width_char": [
            {
                "type": "method",
                "args": {
                    "c": "str",
                    "isord": "bool"
                }
            }
        ],
        "AFM.get_name_char": [
            {
                "type": "method",
                "args": {
                    "c": "str",
                    "isord": "bool"
                }
            }
        ],
        "AFM.get_height_char": [
            {
                "type": "method",
                "args": {
                    "c": "str",
                    "isord": "bool"
                }
            }
        ],
        "AFM.get_bbox_char": [
            {
                "type": "method",
                "args": {
                    "c": "str",
                    "isord": "bool"
                }
            }
        ],
        "AFM.get_str_bbox_and_descent": [
            {
                "type": "method",
                "args": {
                    "s": "bytes"
                }
            }
        ],
        "AFM.get_kern_dist_from_name": [
            {
                "type": "method",
                "args": {
                    "name1": "str",
                    "name2": "str"
                }
            }
        ],
        "AFM.get_kern_dist": [
            {
                "type": "method",
                "args": {
                    "c1": "str",
                    "c2": "str"
                }
            }
        ],
        "AFM.get_vertical_stem_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_horizontal_stem_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_fullname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_familyname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.family_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AFM.get_str_bbox": [
            {
                "type": "method",
                "args": {
                    "s": "bytes"
                }
            }
        ],
        "AFM.string_width_height": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ]
    },
    "matplotlib.blocking_input": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "BlockingInput.fig": [
            {
                "type": "attr",
                "anno": "plt.figure"
            }
        ],
        "BlockingInput.eventslist": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BlockingInput.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure",
                    "eventslist": "list"
                }
            }
        ],
        "BlockingInput.post_event": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlockingInput.callbacks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BlockingInput.n": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BlockingInput.events": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BlockingInput.add_event": [
            {
                "type": "method",
                "args": {
                    "event": "int"
                }
            }
        ],
        "BlockingMouseInput.marks": [
            {
                "type": "attr",
                "anno": "list[mlines.Line2D]"
            }
        ],
        "BlockingMouseInput.show_clicks": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BlockingMouseInput.clicks": [
            {
                "type": "attr",
                "anno": "list[tuple[int, int]]"
            }
        ],
        "BlockingContourLabeler.cs": [
            {
                "type": "attr",
                "anno": "BlockingInput"
            }
        ],
        "BlockingContourLabeler.inline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BlockingContourLabeler.inline_spacing": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BlockingKeyMouseInput.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure"
                }
            }
        ],
        "BlockingKeyMouseInput.keyormouse": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BlockingMouseInput.button_add": [
            {
                "type": "attr",
                "anno": "MouseButton"
            }
        ],
        "BlockingMouseInput.button_stop": [
            {
                "type": "attr",
                "anno": "MouseButton"
            }
        ],
        "BlockingMouseInput.button_pop": [
            {
                "type": "attr",
                "anno": "MouseButton"
            }
        ],
        "BlockingMouseInput.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure",
                    "mouse_add": "MouseButton",
                    "mouse_pop": "MouseButton",
                    "mouse_stop": "MouseButton"
                }
            }
        ],
        "BlockingInput.cleanup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlockingInput.on_event": [
            {
                "type": "method",
                "args": {
                    "event": "int"
                }
            }
        ],
        "BlockingKeyMouseInput.post_event": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlockingMouseInput.pop_click": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton",
                    "index": "int"
                }
            }
        ],
        "BlockingMouseInput.pop": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton",
                    "index": "int"
                }
            }
        ],
        "BlockingInput.pop_event": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "BlockingInput.pop": [
            {
                "type": "attr",
                "anno": "Callable[[], None]"
            }
        ],
        "BlockingMouseInput.mouse_event_pop": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton"
                }
            }
        ],
        "BlockingMouseInput.mouse_event_stop": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton"
                }
            }
        ],
        "BlockingContourLabeler.__init__": [
            {
                "type": "method",
                "args": {
                    "cs": "BlockingInput"
                }
            }
        ],
        "BlockingInput.__call__": [
            {
                "type": "method",
                "args": {
                    "n": "int",
                    "timeout": "int"
                }
            }
        ],
        "BlockingKeyMouseInput.__call__": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "BlockingMouseInput.__call__": [
            {
                "type": "method",
                "args": {
                    "n": "int",
                    "timeout": "int",
                    "show_clicks": "bool"
                }
            }
        ],
        "BlockingContourLabeler.__call__": [
            {
                "type": "method",
                "args": {
                    "inline": "bool",
                    "inline_spacing": "int",
                    "n": "int",
                    "timeout": "int"
                }
            }
        ],
        "BlockingContourLabeler.button3": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton"
                }
            }
        ],
        "BlockingContourLabeler.pop_click": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton",
                    "index": "int"
                }
            }
        ],
        "BlockingContourLabeler.button1": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton"
                }
            }
        ],
        "BlockingContourLabeler.add_click": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton"
                }
            }
        ],
        "BlockingMouseInput.cleanup": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "BlockingMouseInput.add_click": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton"
                }
            }
        ],
        "BlockingMouseInput.mouse_event_add": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton"
                }
            }
        ],
        "BlockingMouseInput.key_event": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlockingMouseInput.mouse_event": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlockingMouseInput.post_event": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.colors": {
        "_ColorMapping.cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_ColorMapping.__init__": [
            {
                "type": "method",
                "args": {
                    "mapping": "dict"
                }
            }
        ],
        "_colors_full_map": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "get_named_colors_mapping": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_sanitize_extrema": [
            {
                "type": "func",
                "args": {
                    "ex": "float"
                }
            }
        ],
        "_is_nth_color": [
            {
                "type": "func",
                "args": {
                    "c": "Union[Number, str]"
                }
            }
        ],
        "hexColorPattern": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "ColorConverter.colors": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ColorConverter.cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Colormap.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Colormap.N": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Colormap._rgba_bad": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Colormap._rgba_under": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Colormap._rgba_over": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Colormap._i_under": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Colormap._i_over": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Colormap._i_bad": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Colormap._isinit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Colormap.colorbar_extend": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Colormap.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "N": "int"
                }
            }
        ],
        "Colormap._init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Colormap._resample": [
            {
                "type": "method",
                "args": {
                    "lutsize": "int"
                }
            }
        ],
        "Colormap.reversed": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "LinearSegmentedColormap.monochrome": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LinearSegmentedColormap._segmentdata": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LinearSegmentedColormap._gamma": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LinearSegmentedColormap.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "segmentdata": "dict",
                    "N": "int",
                    "gamma": "float"
                }
            }
        ],
        "LinearSegmentedColormap._lut": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "LinearSegmentedColormap._isinit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LinearSegmentedColormap._resample": [
            {
                "type": "method",
                "args": {
                    "lutsize": "int"
                }
            }
        ],
        "LinearSegmentedColormap._reverser": [
            {
                "type": "method",
                "args": {
                    "func": "Callable",
                    "x": "float"
                }
            }
        ],
        "ListedColormap.monochrome": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ListedColormap.colors": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ListedColormap.__init__": [
            {
                "type": "method",
                "args": {
                    "colors": "list",
                    "name": "str",
                    "N": "int"
                }
            }
        ],
        "ListedColormap._lut": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Colormap.is_gray": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Colormap._set_extremes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ListedColormap._isinit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ListedColormap._resample": [
            {
                "type": "method",
                "args": {
                    "lutsize": "int"
                }
            }
        ],
        "ListedColormap.reversed": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Normalize.vmin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Normalize.vmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Normalize.clip": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Normalize.__init__": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "clip": "float"
                }
            }
        ],
        "Normalize.scaled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TwoSlopeNorm.vcenter": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TwoSlopeNorm.vmin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TwoSlopeNorm.vmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TwoSlopeNorm.__init__": [
            {
                "type": "method",
                "args": {
                    "vcenter": "float",
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LogNorm._check_vmin_vmax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogNorm.inverse": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "SymLogNorm._base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymLogNorm._log_base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymLogNorm.linthresh": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymLogNorm._linscale_adj": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymLogNorm._transform": [
            {
                "type": "method",
                "args": {
                    "a": "np.ndarray"
                }
            }
        ],
        "SymLogNorm._inv_transform": [
            {
                "type": "method",
                "args": {
                    "a": "np.ma.ndarray"
                }
            }
        ],
        "SymLogNorm._transform_vmin_vmax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SymLogNorm.__init__": [
            {
                "type": "method",
                "args": {
                    "linthresh": "float",
                    "linscale": "float",
                    "vmin": "float",
                    "vmax": "float",
                    "clip": "bool",
                    "base": "float"
                }
            }
        ],
        "SymLogNorm.inverse": [
            {
                "type": "method",
                "args": {
                    "value": "np.ma.ndarray"
                }
            }
        ],
        "PowerNorm.gamma": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PowerNorm.__init__": [
            {
                "type": "method",
                "args": {
                    "gamma": "float",
                    "vmin": "float",
                    "vmax": "float",
                    "clip": "bool"
                }
            }
        ],
        "PowerNorm.inverse": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "BoundaryNorm.clip": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BoundaryNorm.vmin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoundaryNorm.vmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoundaryNorm.boundaries": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BoundaryNorm.N": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BoundaryNorm.Ncmap": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BoundaryNorm._interp": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BoundaryNorm.__init__": [
            {
                "type": "method",
                "args": {
                    "boundaries": "np.ndarray",
                    "ncolors": "int",
                    "clip": "bool"
                }
            }
        ],
        "BoundaryNorm.inverse": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "NoNorm.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "float",
                    "clip": "float"
                }
            }
        ],
        "NoNorm.inverse": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "LightSource.azdeg": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LightSource.altdeg": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LightSource.hsv_min_val": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LightSource.hsv_max_val": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LightSource.hsv_min_sat": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LightSource.hsv_max_sat": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LightSource.__init__": [
            {
                "type": "method",
                "args": {
                    "azdeg": "float",
                    "altdeg": "float",
                    "hsv_min_val": "float",
                    "hsv_max_val": "float",
                    "hsv_min_sat": "float",
                    "hsv_max_sat": "float"
                }
            }
        ],
        "LightSource.direction": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LightSource.blend_soft_light": [
            {
                "type": "method",
                "args": {
                    "rgb": "np.ndarray",
                    "intensity": "float"
                }
            }
        ],
        "LightSource.blend_overlay": [
            {
                "type": "method",
                "args": {
                    "rgb": "float",
                    "intensity": "float"
                }
            }
        ],
        "Normalize.process_value": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "Normalize.inverse": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "cnames": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_vector_magnitude": [
            {
                "type": "func",
                "args": {
                    "arr": "np.ndarray"
                }
            }
        ],
        "hsv_to_rgb": [
            {
                "type": "func",
                "args": {
                    "hsv": "np.ndarray"
                }
            }
        ],
        "_create_lookup_table": [
            {
                "type": "func",
                "args": {
                    "N": "int",
                    "data": "list",
                    "gamma": "float"
                }
            }
        ],
        "LinearSegmentedColormap._init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinearSegmentedColormap.set_gamma": [
            {
                "type": "method",
                "args": {
                    "gamma": "float"
                }
            }
        ],
        "makeMappingArray": [
            {
                "type": "func",
                "args": {
                    "N": "int",
                    "data": "list",
                    "gamma": "float"
                }
            }
        ],
        "rgb_to_hsv": [
            {
                "type": "func",
                "args": {
                    "arr": "np.ndarray"
                }
            }
        ],
        "LightSource.blend_hsv": [
            {
                "type": "method",
                "args": {
                    "rgb": "np.ndarray",
                    "intensity": "float",
                    "hsv_max_sat": "float",
                    "hsv_max_val": "float",
                    "hsv_min_val": "float",
                    "hsv_min_sat": "float"
                }
            }
        ],
        "LightSource.shade_normals": [
            {
                "type": "method",
                "args": {
                    "normals": "np.ndarray",
                    "fraction": "float"
                }
            }
        ],
        "LightSource.hillshade": [
            {
                "type": "method",
                "args": {
                    "elevation": "np.ndarray",
                    "vert_exag": "float",
                    "dx": "float",
                    "dy": "float",
                    "fraction": "float"
                }
            }
        ],
        "LightSource.shade_rgb": [
            {
                "type": "method",
                "args": {
                    "rgb": "np.ndarray",
                    "elevation": "np.ndarray",
                    "fraction": "float",
                    "blend_mode": "Callable[[np.ndarray, np.ndarray], float]",
                    "vert_exag": "float",
                    "dx": "float",
                    "dy": "float",
                    "kwargs": "float"
                }
            }
        ],
        "LightSource.shade": [
            {
                "type": "method",
                "args": {
                    "data": "np.ndarray",
                    "cmap": "Callable",
                    "norm": "Normalize",
                    "blend_mode": "Callable[[np.ndarray, np.ndarray], float]",
                    "vmin": "float",
                    "vmax": "float",
                    "vert_exag": "float",
                    "dx": "float",
                    "dy": "float",
                    "fraction": "float",
                    "kwargs": "float"
                }
            }
        ],
        "Normalize.autoscale": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "_warn_if_global_cmap_modified": [
            {
                "type": "func",
                "args": {
                    "cmap": "Colormap"
                }
            }
        ],
        "Normalize.autoscale_None": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "BoundaryNorm.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray",
                    "clip": "bool"
                }
            }
        ],
        "Colormap.__call__": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "alpha": "np.ndarray",
                    "bytes": "bool"
                }
            }
        ],
        "_ColorMapping.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "_ColorMapping.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "TwoSlopeNorm.autoscale_None": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "LogNorm.autoscale_None": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "SymLogNorm.autoscale_None": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "TwoSlopeNorm.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray",
                    "clip": "np.ndarray"
                }
            }
        ],
        "LinearSegmentedColormap.reversed": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_to_rgba_no_colorcycle": [
            {
                "type": "func",
                "args": {
                    "c": "Union[Number, str]",
                    "alpha": "float"
                }
            }
        ],
        "to_rgba": [
            {
                "type": "func",
                "args": {
                    "c": "Union[Number, str]",
                    "alpha": "float"
                }
            }
        ],
        "LinearSegmentedColormap.from_list": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "colors": "Sized",
                    "N": "int",
                    "gamma": "float"
                }
            }
        ],
        "Colormap.set_over": [
            {
                "type": "method",
                "args": {
                    "color": "Union[Number, str]",
                    "alpha": "float"
                }
            }
        ],
        "Colormap.set_under": [
            {
                "type": "method",
                "args": {
                    "color": "Union[Number, str]",
                    "alpha": "float"
                }
            }
        ],
        "from_levels_and_colors": [
            {
                "type": "func",
                "args": {
                    "levels": "list",
                    "colors": "list",
                    "extend": "str"
                }
            }
        ],
        "Colormap.set_bad": [
            {
                "type": "method",
                "args": {
                    "color": "Union[Number, str]",
                    "alpha": "float"
                }
            }
        ],
        "ColorConverter.to_rgba": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "to_rgb": [
            {
                "type": "func",
                "args": {
                    "c": "Union[Number, str]"
                }
            }
        ],
        "ColorConverter.to_rgb": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "hex2color": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "to_rgba_array": [
            {
                "type": "func",
                "args": {
                    "c": "Union[Number, str]",
                    "alpha": "float"
                }
            }
        ],
        "ListedColormap._init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorConverter.to_rgba_array": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "colorConverter": [
            {
                "type": "var",
                "anno": "ColorConverter"
            }
        ],
        "same_color": [
            {
                "type": "func",
                "args": {
                    "c1": "Union[Number, str]",
                    "c2": "Union[Number, str]"
                }
            }
        ],
        "is_color_like": [
            {
                "type": "func",
                "args": {
                    "c": "str"
                }
            }
        ],
        "PowerNorm.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray",
                    "clip": "float"
                }
            }
        ],
        "SymLogNorm.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray",
                    "clip": "float"
                }
            }
        ],
        "LogNorm.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray",
                    "clip": "float"
                }
            }
        ],
        "Normalize.__call__": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray",
                    "clip": "float"
                }
            }
        ],
        "to_hex": [
            {
                "type": "func",
                "args": {
                    "c": "Union[Number, str]",
                    "keep_alpha": "bool"
                }
            }
        ],
        "rgb2hex": [
            {
                "type": "var",
                "anno": "Callable[[Union[Number, str]], str]"
            }
        ],
        "Colormap.__copy__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogNorm.autoscale": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "SymLogNorm.autoscale": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ]
    },
    "matplotlib.legend": {
        "DraggableLegend.legend": [
            {
                "type": "attr",
                "anno": "Legend"
            }
        ],
        "DraggableLegend._update": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Legend.codes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Legend.zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Legend.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.prop": [
            {
                "type": "attr",
                "anno": "FontProperties"
            }
        ],
        "Legend._fontsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Legend.texts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Legend.legendHandles": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Legend._legend_title_box": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Legend._custom_handler_map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Legend._ncol": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Legend._scatteryoffsets": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Legend._legend_box": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Legend.isaxes": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Legend.axes": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "Legend.parent": [
            {
                "type": "attr",
                "anno": "Legend"
            }
        ],
        "Legend._loc_used_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Legend._mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Legend.legendPatch": [
            {
                "type": "attr",
                "anno": "Shadow"
            }
        ],
        "Legend._draggable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Legend._loc_real": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Legend.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Legend._get_loc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.get_legend_handler": [
            {
                "type": "method",
                "args": {
                    "legend_handler_map": "dict",
                    "orig_handle": "str"
                }
            }
        ],
        "Legend._legend_handle_box": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Legend.get_frame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.get_lines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.get_frame_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend._bbox_to_anchor": [
            {
                "type": "attr",
                "anno": "tuple | None"
            }
        ],
        "Legend.get_draggable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.get_title": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.get_bbox_to_anchor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.get_texts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.get_patches": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Legend.contains": [
            {
                "type": "method",
                "args": {
                    "event": "Artist"
                }
            }
        ],
        "Legend.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Legend.set_frame_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Legend.draw_frame": [
            {
                "type": "attr",
                "anno": "Callable[[bool], None]"
            }
        ],
        "Legend.set_title": [
            {
                "type": "method",
                "args": {
                    "title": "str",
                    "prop": "dict | None"
                }
            }
        ],
        "Legend.set_bbox_to_anchor": [
            {
                "type": "method",
                "args": {
                    "bbox": "tuple | None",
                    "transform": "tuple"
                }
            }
        ],
        "Legend._get_anchored_bbox": [
            {
                "type": "method",
                "args": {
                    "loc": "int",
                    "bbox": "Bbox",
                    "parentbbox": "Bbox",
                    "renderer": "Renderer"
                }
            }
        ],
        "DraggableLegend._update_bbox_to_anchor": [
            {
                "type": "method",
                "args": {
                    "loc_in_canvas": "np.ndarray"
                }
            }
        ],
        "Legend._default_handler_map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Legend.set_default_handler_map": [
            {
                "type": "method",
                "args": {
                    "cls": "Legend",
                    "handler_map": "dict"
                }
            }
        ],
        "Legend.get_default_handler_map": [
            {
                "type": "method",
                "args": {
                    "cls": "Legend"
                }
            }
        ],
        "_get_legend_handles": [
            {
                "type": "func",
                "args": {
                    "axs": "list",
                    "legend_handler_map": "dict"
                }
            }
        ],
        "_get_legend_handles_labels": [
            {
                "type": "func",
                "args": {
                    "axs": "list",
                    "legend_handler_map": "dict"
                }
            }
        ],
        "_parse_legend_args": [
            {
                "type": "func",
                "args": {
                    "axs": "list",
                    "args": "tuple",
                    "handles": "tuple",
                    "labels": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "Legend.get_legend_handler_map": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend.update_default_handler_map": [
            {
                "type": "method",
                "args": {
                    "cls": "Legend",
                    "handler_map": "dict"
                }
            }
        ],
        "Legend._auto_legend_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Legend._find_best_position": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float",
                    "renderer": "Renderer",
                    "consider": "list"
                }
            }
        ],
        "Legend.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Legend._set_loc": [
            {
                "type": "method",
                "args": {
                    "loc": "str"
                }
            }
        ],
        "Legend._loc": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Legend._findoffset": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float",
                    "xdescent": "float",
                    "ydescent": "float",
                    "renderer": "Renderer"
                }
            }
        ],
        "DraggableLegend._update_loc": [
            {
                "type": "method",
                "args": {
                    "loc_in_canvas": "tuple"
                }
            }
        ],
        "Legend._set_artist_props": [
            {
                "type": "method",
                "args": {
                    "a": "Artist"
                }
            }
        ],
        "Legend._init_legend_box": [
            {
                "type": "method",
                "args": {
                    "handles": "list",
                    "labels": "list",
                    "markerfirst": "bool"
                }
            }
        ],
        "Legend.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "Legend",
                    "handles": "list",
                    "labels": "list",
                    "loc": "str",
                    "numpoints": "int",
                    "markerscale": "float",
                    "markerfirst": "bool",
                    "scatterpoints": "int",
                    "scatteryoffsets": "int",
                    "prop": "dict | None",
                    "fontsize": "int | None",
                    "labelcolor": "str | None",
                    "borderpad": "float",
                    "labelspacing": "float",
                    "handlelength": "float",
                    "handleheight": "float",
                    "handletextpad": "float",
                    "borderaxespad": "float",
                    "columnspacing": "float",
                    "ncol": "int",
                    "mode": "str",
                    "fancybox": "bool",
                    "shadow": "bool",
                    "title": "str",
                    "title_fontsize": "int",
                    "framealpha": "float",
                    "edgecolor": "str",
                    "facecolor": "str",
                    "bbox_to_anchor": "tuple",
                    "bbox_transform": "tuple",
                    "frameon": "bool",
                    "handler_map": "dict"
                }
            }
        ],
        "DraggableLegend.__init__": [
            {
                "type": "method",
                "args": {
                    "legend": "Legend",
                    "use_blit": "bool",
                    "update": "str"
                }
            }
        ],
        "Legend.set_draggable": [
            {
                "type": "method",
                "args": {
                    "state": "bool",
                    "use_blit": "bool",
                    "update": "str"
                }
            }
        ],
        "DraggableLegend.finalize_offset": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.dates": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "UTC": [
            {
                "type": "var",
                "anno": "datetime.timezone"
            }
        ],
        "EPOCH_OFFSET": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "JULIAN_OFFSET": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MICROSECONDLY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "HOURS_PER_DAY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MIN_PER_HOUR": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "SEC_PER_MIN": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MONTHS_PER_YEAR": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "DAYS_PER_WEEK": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "DAYS_PER_MONTH": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "DAYS_PER_YEAR": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MINUTES_PER_DAY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "SEC_PER_HOUR": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "SEC_PER_DAY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "SEC_PER_WEEK": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "MUSECONDS_PER_DAY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "WEEKDAYS": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "_epoch": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_reset_epoch_test_example": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "set_epoch": [
            {
                "type": "func",
                "args": {
                    "epoch": "str"
                }
            }
        ],
        "_dateutil_parser_parse_np_vectorized": [
            {
                "type": "var",
                "anno": "np.vectorize"
            }
        ],
        "julian2num": [
            {
                "type": "func",
                "args": {
                    "j": "float"
                }
            }
        ],
        "num2julian": [
            {
                "type": "func",
                "args": {
                    "n": "float"
                }
            }
        ],
        "_ordinalf_to_timedelta_np_vectorized": [
            {
                "type": "var",
                "anno": "np.vectorize"
            }
        ],
        "num2timedelta": [
            {
                "type": "func",
                "args": {
                    "x": "int"
                }
            }
        ],
        "DateFormatter.illegal_s": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DateFormatter.fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DateFormatter.tz": [
            {
                "type": "attr",
                "anno": "datetime.timezone"
            }
        ],
        "DateFormatter.set_tzinfo": [
            {
                "type": "method",
                "args": {
                    "tz": "datetime.timezone"
                }
            }
        ],
        "IndexDateFormatter.t": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "IndexDateFormatter.fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "IndexDateFormatter.tz": [
            {
                "type": "attr",
                "anno": "datetime.timezone"
            }
        ],
        "ConciseDateFormatter._locator": [
            {
                "type": "attr",
                "anno": "DateLocator"
            }
        ],
        "ConciseDateFormatter._tz": [
            {
                "type": "attr",
                "anno": "datetime.timezone"
            }
        ],
        "ConciseDateFormatter.defaultfmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConciseDateFormatter.formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "ConciseDateFormatter.zero_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "ConciseDateFormatter.offset_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "ConciseDateFormatter.offset_string": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConciseDateFormatter.show_offset": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConciseDateFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "locator": "DateLocator",
                    "tz": "datetime.timezone",
                    "formats": "list[str]",
                    "offset_formats": "list[str]",
                    "zero_formats": "list[str]",
                    "show_offset": "bool"
                }
            }
        ],
        "ConciseDateFormatter.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AutoDateFormatter._locator": [
            {
                "type": "attr",
                "anno": "DateLocator"
            }
        ],
        "AutoDateFormatter._tz": [
            {
                "type": "attr",
                "anno": "datetime.timezone"
            }
        ],
        "AutoDateFormatter.defaultfmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AutoDateFormatter._formatter": [
            {
                "type": "attr",
                "anno": "DateFormatter"
            }
        ],
        "AutoDateFormatter.scaled": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AutoDateFormatter._set_locator": [
            {
                "type": "method",
                "args": {
                    "locator": "DateLocator"
                }
            }
        ],
        "rrulewrapper._base_tzinfo": [
            {
                "type": "attr",
                "anno": "datetime.timezone"
            }
        ],
        "rrulewrapper._construct": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "rrulewrapper._tzinfo": [
            {
                "type": "attr",
                "anno": "datetime.timezone"
            }
        ],
        "rrulewrapper._rrule": [
            {
                "type": "attr",
                "anno": "rrule"
            }
        ],
        "rrulewrapper._attach_tzinfo": [
            {
                "type": "method",
                "args": {
                    "dt": "datetime.datetime",
                    "tzinfo": "datetime.timezone"
                }
            }
        ],
        "DateLocator.hms0d": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DateLocator.tz": [
            {
                "type": "attr",
                "anno": "datetime.timezone"
            }
        ],
        "DateLocator.set_tzinfo": [
            {
                "type": "method",
                "args": {
                    "tz": "datetime.timezone"
                }
            }
        ],
        "DateLocator._get_unit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DateLocator._get_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RRuleLocator.rule": [
            {
                "type": "attr",
                "anno": "rrule"
            }
        ],
        "RRuleLocator.get_unit_generic": [
            {
                "type": "method",
                "args": {
                    "freq": "tuple"
                }
            }
        ],
        "AutoDateLocator._freq": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RRuleLocator._get_unit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AutoDateLocator._freqs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AutoDateLocator.minticks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AutoDateLocator.maxticks": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AutoDateLocator.interval_multiples": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AutoDateLocator.intervald": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AutoDateLocator._byranges": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AutoDateLocator._get_unit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YearLocator.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "YearLocator.replaced": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MicrosecondLocator._interval": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MicrosecondLocator._wrapped_locator": [
            {
                "type": "attr",
                "anno": "ticker.Locator"
            }
        ],
        "MicrosecondLocator.tz": [
            {
                "type": "attr",
                "anno": "datetime.timezone"
            }
        ],
        "MicrosecondLocator._get_unit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MicrosecondLocator._get_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "epoch2num": [
            {
                "type": "func",
                "args": {
                    "e": "np.ndarray"
                }
            }
        ],
        "num2epoch": [
            {
                "type": "func",
                "args": {
                    "d": "float"
                }
            }
        ],
        "mx2num": [
            {
                "type": "func",
                "args": {
                    "mxdates": "np.ndarray"
                }
            }
        ],
        "ConciseDateConverter._formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "ConciseDateConverter._zero_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "ConciseDateConverter._offset_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "ConciseDateConverter._show_offset": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConciseDateConverter.__init__": [
            {
                "type": "method",
                "args": {
                    "formats": "list[str]",
                    "zero_formats": "list[str]",
                    "offset_formats": "list[str]",
                    "show_offset": "bool"
                }
            }
        ],
        "rrulewrapper._aware_return_wrapper": [
            {
                "type": "method",
                "args": {
                    "f": "Callable",
                    "returns_list": "bool"
                }
            }
        ],
        "rrulewrapper.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "DateConverter.default_units": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "axis": "units.Axis"
                }
            }
        ],
        "MicrosecondLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "interval": "tuple",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "RRuleLocator._get_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MicrosecondLocator.set_axis": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.Axes"
                }
            }
        ],
        "rrulewrapper._update_rrule": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "rrulewrapper.__init__": [
            {
                "type": "method",
                "args": {
                    "freq": "dateutil.rrule",
                    "tzinfo": "datetime.timezone",
                    "kwargs": "dict"
                }
            }
        ],
        "get_epoch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_dt64_to_ordinalf": [
            {
                "type": "func",
                "args": {
                    "d": "np.ndarray"
                }
            }
        ],
        "_to_ordinalf": [
            {
                "type": "func",
                "args": {
                    "dt": "np.ndarray"
                }
            }
        ],
        "_to_ordinalf_np_vectorized": [
            {
                "type": "var",
                "anno": "np.ndarray"
            }
        ],
        "date2num": [
            {
                "type": "func",
                "args": {
                    "d": "np.ndarray"
                }
            }
        ],
        "DateConverter.convert": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "unit": "units.UnitData",
                    "axis": "int"
                }
            }
        ],
        "YearLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "np.ndarray",
                    "vmax": "np.ndarray"
                }
            }
        ],
        "AutoDateLocator.nonsingular": [
            {
                "type": "method",
                "args": {
                    "vmin": "np.ndarray",
                    "vmax": "np.ndarray"
                }
            }
        ],
        "DateLocator.nonsingular": [
            {
                "type": "method",
                "args": {
                    "vmin": "np.ndarray",
                    "vmax": "np.ndarray"
                }
            }
        ],
        "drange": [
            {
                "type": "func",
                "args": {
                    "dstart": "np.ndarray",
                    "dend": "np.ndarray",
                    "delta": "datetime.timedelta"
                }
            }
        ],
        "datestr2num": [
            {
                "type": "func",
                "args": {
                    "d": "np.ndarray",
                    "default": "np.ndarray"
                }
            }
        ],
        "_get_rc_timezone": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "DateLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "tz": "datetime.timezone"
                }
            }
        ],
        "YearLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "tuple",
                    "month": "tuple",
                    "day": "tuple",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "RRuleLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "o": "rrule",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "SecondLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "bysecond": "int",
                    "interval": "int",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "MinuteLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "byminute": "tuple",
                    "interval": "int",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "HourLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "byhour": "tuple",
                    "interval": "int",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "IndexDateFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "t": "list",
                    "fmt": "str",
                    "tz": "str"
                }
            }
        ],
        "DateFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "fmt": "str",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "AutoDateFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "locator": "DateLocator",
                    "tz": "datetime.timezone",
                    "defaultfmt": "str"
                }
            }
        ],
        "ConciseDateFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "_from_ordinalf": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "_from_ordinalf_np_vectorized": [
            {
                "type": "var",
                "anno": "np.ndarray"
            }
        ],
        "num2date": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "ConciseDateFormatter.format_data_short": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "ConciseDateFormatter.format_ticks": [
            {
                "type": "method",
                "args": {
                    "values": "list[np.ndarray]"
                }
            }
        ],
        "IndexDateFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "pos": "int"
                }
            }
        ],
        "DateFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "pos": "int"
                }
            }
        ],
        "AutoDateFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "MicrosecondLocator.set_data_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "DateLocator.datalim_to_dt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YearLocator.autoscale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MicrosecondLocator.set_view_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "DayLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "bymonthday": "tuple",
                    "interval": "int",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "WeekdayLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "byweekday": "tuple",
                    "interval": "int",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "MonthLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "bymonth": "tuple",
                    "bymonthday": "tuple",
                    "interval": "int",
                    "tz": "datetime.timezone"
                }
            }
        ],
        "date_ticker_factory": [
            {
                "type": "func",
                "args": {
                    "span": "float",
                    "tz": "datetime.timezone",
                    "numticks": "int"
                }
            }
        ],
        "AutoDateLocator.get_locator": [
            {
                "type": "method",
                "args": {
                    "dmin": "np.ndarray",
                    "dmax": "np.ndarray"
                }
            }
        ],
        "DateLocator.viewlim_to_dt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YearLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AutoDateLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AutoDateLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "tz": "datetime.timezone",
                    "minticks": "int",
                    "maxticks": "dict",
                    "interval_multiples": "bool"
                }
            }
        ],
        "ConciseDateConverter.axisinfo": [
            {
                "type": "method",
                "args": {
                    "unit": "str",
                    "axis": "units.Axis"
                }
            }
        ],
        "DateConverter.axisinfo": [
            {
                "type": "method",
                "args": {
                    "unit": "str",
                    "axis": "units.Axis"
                }
            }
        ],
        "rrulewrapper.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "rrulewrapper.set": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "RRuleLocator.autoscale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AutoDateLocator.autoscale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RRuleLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "np.ndarray",
                    "vmax": "np.ndarray"
                }
            }
        ],
        "RRuleLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AutoDateLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "np.ndarray",
                    "vmax": "np.ndarray"
                }
            }
        ],
        "MicrosecondLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "np.ndarray",
                    "vmax": "np.ndarray"
                }
            }
        ],
        "MicrosecondLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.tri.tritools": {
        "TriAnalyzer._triangulation": [
            {
                "type": "attr",
                "anno": "Triangulation"
            }
        ],
        "TriAnalyzer._total_to_compress_renum": [
            {
                "type": "method",
                "args": {
                    "mask": "np.ndarray",
                    "n": "int"
                }
            }
        ],
        "TriAnalyzer._get_compressed_triangulation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TriAnalyzer.scale_factors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TriAnalyzer.circle_ratios": [
            {
                "type": "method",
                "args": {
                    "rescale": "bool"
                }
            }
        ],
        "TriAnalyzer.get_flat_tri_mask": [
            {
                "type": "method",
                "args": {
                    "min_circle_ratio": "float",
                    "rescale": "bool"
                }
            }
        ],
        "TriAnalyzer.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation"
                }
            }
        ]
    },
    "matplotlib.tri.trifinder": {
        "TriFinder._triangulation": [
            {
                "type": "attr",
                "anno": "Triangulation"
            }
        ],
        "TrapezoidMapTriFinder._cpp_trifinder": [
            {
                "type": "attr",
                "anno": "_tri.TrapezoidMapTriFinder"
            }
        ],
        "TrapezoidMapTriFinder._get_tree_stats": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TrapezoidMapTriFinder._print_tree": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TrapezoidMapTriFinder.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "TrapezoidMapTriFinder._initialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TriFinder.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation"
                }
            }
        ],
        "TrapezoidMapTriFinder.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation"
                }
            }
        ]
    },
    "matplotlib.tri.triinterpolate": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "TriInterpolator._triangulation": [
            {
                "type": "attr",
                "anno": "Triangulation"
            }
        ],
        "TriInterpolator._z": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TriInterpolator._trifinder": [
            {
                "type": "attr",
                "anno": "TriFinder"
            }
        ],
        "TriInterpolator._unit_x": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TriInterpolator._unit_y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TriInterpolator._tri_renum": [
            {
                "type": "attr",
                "anno": "TriAnalyzer"
            }
        ],
        "TriInterpolator._docstring__call__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TriInterpolator._docstringgradient": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TriInterpolator._interpolate_single_key": [
            {
                "type": "method",
                "args": {
                    "return_key": "str",
                    "tri_index": "int",
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "LinearTriInterpolator._plane_coefficients": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "LinearTriInterpolator._interpolate_single_key": [
            {
                "type": "method",
                "args": {
                    "return_key": "str",
                    "tri_index": "int",
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "CubicTriInterpolator._triangles": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._tri_renum": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._z": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._unit_x": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._unit_y": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._pts": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._tris_pts": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._eccs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._dof": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CubicTriInterpolator._ReferenceElement": [
            {
                "type": "attr",
                "anno": "_ReducedHCT_Element"
            }
        ],
        "_ReducedHCT_Element.M": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.M0": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.M1": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.M2": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.rotate_dV": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.rotate_d2V": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.n_gauss": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_ReducedHCT_Element.gauss_pts": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.gauss_w": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.E": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.J0_to_J1": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ReducedHCT_Element.J0_to_J2": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_DOF_estimator._pts": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_DOF_estimator._tris_pts": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_DOF_estimator.z": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_DOF_estimator._triangles": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_DOF_estimator.dz": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_DOF_estimator.compute_dz": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "_DOF_estimator_user.compute_dz": [
            {
                "type": "method",
                "args": {
                    "dz": "np.ndarray"
                }
            }
        ],
        "_DOF_estimator_geom.compute_geom_weights": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DOF_estimator_min_E._eccs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_Sparse_Matrix_coo.vals": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_Sparse_Matrix_coo.rows": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_Sparse_Matrix_coo.cols": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_Sparse_Matrix_coo.compress_csr": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_scalar_vectorized": [
            {
                "type": "func",
                "args": {
                    "scalar": "np.ndarray",
                    "M": "np.ndarray"
                }
            }
        ],
        "_transpose_vectorized": [
            {
                "type": "func",
                "args": {
                    "M": "np.ndarray"
                }
            }
        ],
        "_Sparse_Matrix_coo.diag": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Sparse_Matrix_coo.compress_csc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Sparse_Matrix_coo.__init__": [
            {
                "type": "method",
                "args": {
                    "vals": "np.ndarray",
                    "rows": "np.ndarray",
                    "cols": "np.ndarray",
                    "shape": "tuple[int, int]"
                }
            }
        ],
        "_extract_submatrices": [
            {
                "type": "func",
                "args": {
                    "M": "np.ndarray",
                    "block_indices": "np.ndarray",
                    "block_size": "int",
                    "axis": "int"
                }
            }
        ],
        "_to_matrix_vectorized": [
            {
                "type": "func",
                "args": {
                    "M": "np.ndarray"
                }
            }
        ],
        "CubicTriInterpolator._get_jacobian": [
            {
                "type": "method",
                "args": {
                    "tris_pts": "np.ndarray"
                }
            }
        ],
        "_roll_vectorized": [
            {
                "type": "func",
                "args": {
                    "M": "np.ndarray",
                    "roll_indices": "np.ndarray",
                    "axis": "int"
                }
            }
        ],
        "_prod_vectorized": [
            {
                "type": "func",
                "args": {
                    "M1": "np.ndarray",
                    "M2": "np.ndarray"
                }
            }
        ],
        "_ReducedHCT_Element.get_d2Sidksij2": [
            {
                "type": "method",
                "args": {
                    "alpha": "np.ndarray",
                    "ecc": "np.ndarray"
                }
            }
        ],
        "_ReducedHCT_Element.get_function_values": [
            {
                "type": "method",
                "args": {
                    "alpha": "np.ndarray",
                    "ecc": "np.ndarray",
                    "dofs": "np.ndarray"
                }
            }
        ],
        "CubicTriInterpolator._compute_tri_eccentricities": [
            {
                "type": "method",
                "args": {
                    "tris_pts": "np.ndarray"
                }
            }
        ],
        "_pseudo_inv22sym_vectorized": [
            {
                "type": "func",
                "args": {
                    "M": "np.ndarray"
                }
            }
        ],
        "CubicTriInterpolator._get_alpha_vec": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "tris_pts": "np.ndarray"
                }
            }
        ],
        "_safe_inv22_vectorized": [
            {
                "type": "func",
                "args": {
                    "M": "np.ndarray"
                }
            }
        ],
        "_DOF_estimator_geom.compute_geom_grads": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DOF_estimator_geom.compute_dz": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ReducedHCT_Element.get_Hrot_from_J": [
            {
                "type": "method",
                "args": {
                    "J": "np.ndarray",
                    "return_area": "bool"
                }
            }
        ],
        "_ReducedHCT_Element.get_bending_matrices": [
            {
                "type": "method",
                "args": {
                    "J": "np.ndarray",
                    "ecc": "np.ndarray"
                }
            }
        ],
        "_ReducedHCT_Element.get_Kff_and_Ff": [
            {
                "type": "method",
                "args": {
                    "J": "np.ndarray",
                    "ecc": "np.ndarray",
                    "triangles": "np.ndarray",
                    "Uc": "np.ndarray"
                }
            }
        ],
        "_ReducedHCT_Element.get_function_hessians": [
            {
                "type": "method",
                "args": {
                    "alpha": "np.ndarray",
                    "J": "np.ndarray",
                    "ecc": "np.ndarray",
                    "dofs": "np.ndarray"
                }
            }
        ],
        "_ReducedHCT_Element.get_function_derivatives": [
            {
                "type": "method",
                "args": {
                    "alpha": "np.ndarray",
                    "J": "np.ndarray",
                    "ecc": "np.ndarray",
                    "dofs": "np.ndarray"
                }
            }
        ],
        "CubicTriInterpolator._interpolate_single_key": [
            {
                "type": "method",
                "args": {
                    "return_key": "str",
                    "tri_index": "int",
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "_Sparse_Matrix_coo.dot": [
            {
                "type": "method",
                "args": {
                    "V": "np.ndarray"
                }
            }
        ],
        "_DOF_estimator.get_dof_vec": [
            {
                "type": "method",
                "args": {
                    "tri_z": "np.ndarray",
                    "tri_dz": "np.ndarray",
                    "J": "np.ndarray"
                }
            }
        ],
        "_DOF_estimator.compute_dof_from_df": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TriInterpolator._interpolate_multikeys": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "tri_index": "int",
                    "return_keys": "tuple"
                }
            }
        ],
        "CubicTriInterpolator.gradient": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "CubicTriInterpolator.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "LinearTriInterpolator.gradient": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "LinearTriInterpolator.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "_cg": [
            {
                "type": "func",
                "args": {
                    "A": "np.ndarray",
                    "b": "np.ndarray",
                    "x0": "np.ndarray",
                    "tol": "float",
                    "maxiter": "int"
                }
            }
        ],
        "_Sparse_Matrix_coo.to_dense": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Sparse_Matrix_coo.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DOF_estimator_min_E.compute_dz": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DOF_estimator.__init__": [
            {
                "type": "method",
                "args": {
                    "interpolator": "TriInterpolator",
                    "kwargs": "object"
                }
            }
        ],
        "_DOF_estimator_min_E.__init__": [
            {
                "type": "method",
                "args": {
                    "Interpolator": "TriInterpolator"
                }
            }
        ],
        "CubicTriInterpolator._compute_dof": [
            {
                "type": "method",
                "args": {
                    "kind": "str",
                    "dz": "np.ndarray"
                }
            }
        ],
        "TriInterpolator.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation",
                    "z": "np.ndarray",
                    "trifinder": "TriFinder"
                }
            }
        ],
        "LinearTriInterpolator.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation",
                    "z": "np.ndarray",
                    "trifinder": "TriFinder"
                }
            }
        ],
        "CubicTriInterpolator.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation",
                    "z": "np.ndarray",
                    "kind": "str",
                    "trifinder": "TriFinder",
                    "dz": "np.ndarray"
                }
            }
        ]
    },
    "matplotlib.tri.tricontour": {
        "TriContourSet.levels": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TriContourSet._mins": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TriContourSet._maxs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TriContourSet.cppContourGenerator": [
            {
                "type": "attr",
                "anno": "_tri.TriContourGenerator"
            }
        ],
        "TriContourSet.zmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TriContourSet.zmin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TriContourSet._get_allsegs_and_allkinds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TriContourSet._contour_args": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "TriContourSet._process_args": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "TriContourSet.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "args": "tuple[np.ndarray, ...]",
                    "kwargs": "dict"
                }
            }
        ],
        "tricontourf": [
            {
                "type": "func",
                "args": {
                    "ax": "mpl.Axes",
                    "args": "tuple[np.ndarray, ...]",
                    "kwargs": "dict"
                }
            }
        ],
        "tricontour": [
            {
                "type": "func",
                "args": {
                    "ax": "mpl.Axes",
                    "args": "tuple[np.ndarray, ...]",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "matplotlib.tri.trirefine": {
        "TriRefiner._triangulation": [
            {
                "type": "attr",
                "anno": "Triangulation"
            }
        ],
        "UniformTriRefiner._refine_triangulation_once": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation",
                    "ancestors": "np.ndarray"
                }
            }
        ],
        "UniformTriRefiner.refine_triangulation": [
            {
                "type": "method",
                "args": {
                    "return_tri_index": "bool",
                    "subdiv": "int"
                }
            }
        ],
        "UniformTriRefiner.refine_field": [
            {
                "type": "method",
                "args": {
                    "z": "np.ndarray",
                    "triinterpolator": "Triinterpolator",
                    "subdiv": "int"
                }
            }
        ],
        "TriRefiner.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation"
                }
            }
        ],
        "UniformTriRefiner.__init__": [
            {
                "type": "method",
                "args": {
                    "triangulation": "Triangulation"
                }
            }
        ]
    },
    "matplotlib.tri.triangulation": {
        "Triangulation.x": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Triangulation.y": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Triangulation.mask": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Triangulation._edges": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Triangulation._neighbors": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Triangulation.is_delaunay": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Triangulation.triangles": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Triangulation._cpp_triangulation": [
            {
                "type": "attr",
                "anno": "Triangulation"
            }
        ],
        "Triangulation._trifinder": [
            {
                "type": "attr",
                "anno": "Triangulation"
            }
        ],
        "Triangulation.get_cpp_triangulation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Triangulation.edges": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Triangulation.calculate_plane_coefficients": [
            {
                "type": "method",
                "args": {
                    "z": "np.ndarray"
                }
            }
        ],
        "Triangulation.get_masked_triangles": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Triangulation.neighbors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Triangulation.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "triangles": "np.ndarray",
                    "mask": "np.ndarray"
                }
            }
        ],
        "Triangulation.set_mask": [
            {
                "type": "method",
                "args": {
                    "mask": "np.ndarray"
                }
            }
        ],
        "Triangulation.get_from_args_and_kwargs": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "Triangulation.get_trifinder": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib._cm": {
        "_binary_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_autumn_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_bone_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_cool_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_copper_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_flag_red": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_flag_green": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_flag_blue": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_flag_data": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_prism_red": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_prism_green": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_prism_blue": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_prism_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_ch_helper": [
            {
                "type": "func",
                "args": {
                    "gamma": "float",
                    "s": "float",
                    "r": "float",
                    "h": "float",
                    "p0": "float",
                    "p1": "float",
                    "x": "float"
                }
            }
        ],
        "cubehelix": [
            {
                "type": "func",
                "args": {
                    "gamma": "float",
                    "s": "float",
                    "r": "float",
                    "h": "float"
                }
            }
        ],
        "_cubehelix_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_bwr_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_brg_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_g0": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g1": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g2": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g3": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g4": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g5": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g6": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g7": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g8": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g9": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g10": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g11": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_g12": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g13": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g14": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g15": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g16": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g17": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g18": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g19": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g20": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g21": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g22": [
            {
                "type": "func",
                "args": {
                    "x": "int"
                }
            }
        ],
        "_g23": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g24": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g25": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g26": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g27": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g28": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g29": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g30": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g31": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g32": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g33": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g34": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g35": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_g36": [
            {
                "type": "func",
                "args": {
                    "x": "int"
                }
            }
        ],
        "_seismic_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_terrain_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_gray_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_hot_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_hsv_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_jet_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_pink_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_spring_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_summer_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_winter_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_nipy_spectral_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_Blues_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_BrBG_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_BuGn_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_BuPu_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_GnBu_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Greens_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Greys_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Oranges_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_OrRd_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_PiYG_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_PRGn_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_PuBu_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_PuBuGn_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_PuOr_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_PuRd_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Purples_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_RdBu_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_RdGy_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_RdPu_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_RdYlBu_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_RdYlGn_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Reds_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Spectral_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_YlGn_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_YlGnBu_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_YlOrBr_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_YlOrRd_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Accent_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Dark2_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Paired_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Pastel1_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Pastel2_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Set1_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Set2_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_Set3_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_gist_earth_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_gist_heat_red": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_gist_heat_green": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_gist_heat_blue": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_gist_heat_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_gist_ncar_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_gist_rainbow_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_gist_stern_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_gist_yarg": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_gist_yarg_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_coolwarm_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_CMRmap_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_wistia_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_tab10_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_tab20_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_tab20b_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "_tab20c_data": [
            {
                "type": "var",
                "anno": "tuple[float, ...]"
            }
        ],
        "gfunc": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_gist_gray_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_rainbow_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_afmhot_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_ocean_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "_gnuplot2_data": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_gnuplot_data": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ],
        "datad": [
            {
                "type": "var",
                "anno": "dict[str, tuple[float, ...]]"
            }
        ]
    },
    "matplotlib.cm": {
        "_reverser": [
            {
                "type": "func",
                "args": {
                    "f": "Callable[[float], float]",
                    "x": "float"
                }
            }
        ],
        "_DeprecatedCmapDictWrapper._cmap_registry": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_DeprecatedCmapDictWrapper.__init__": [
            {
                "type": "method",
                "args": {
                    "cmap_registry": "dict"
                }
            }
        ],
        "_DeprecatedCmapDictWrapper._warn_deprecated": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DeprecatedCmapDictWrapper.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "val": "mpl.cm.cmap.cmap"
                }
            }
        ],
        "_DeprecatedCmapDictWrapper.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DeprecatedCmapDictWrapper.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DeprecatedCmapDictWrapper.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "_DeprecatedCmapDictWrapper.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "ScalarMappable._A": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ScalarMappable.norm": [
            {
                "type": "attr",
                "anno": "colors.Normalize"
            }
        ],
        "ScalarMappable.cmap": [
            {
                "type": "attr",
                "anno": "colors.Colormap"
            }
        ],
        "ScalarMappable.colorbar": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "ScalarMappable.callbacksSM": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "ScalarMappable._update_dict": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, bool]"
            }
        ],
        "ScalarMappable.set_array": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "ScalarMappable.get_array": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarMappable.get_cmap": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarMappable.get_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarMappable._add_checker": [
            {
                "type": "method",
                "args": {
                    "checker": "str"
                }
            }
        ],
        "ScalarMappable._check_update": [
            {
                "type": "method",
                "args": {
                    "checker": "str"
                }
            }
        ],
        "ScalarMappable.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScalarMappable.update_dict": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, float]"
            }
        ],
        "ScalarMappable.add_checker": [
            {
                "type": "method",
                "args": {
                    "checker": "str"
                }
            }
        ],
        "ScalarMappable.check_update": [
            {
                "type": "method",
                "args": {
                    "checker": "str"
                }
            }
        ],
        "ScalarMappable.to_rgba": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "alpha": "float",
                    "bytes": "bool",
                    "norm": "bool"
                }
            }
        ],
        "ScalarMappable.get_clim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DeprecatedCmapDictWrapper.get": [
            {
                "type": "method",
                "args": {
                    "key": "object",
                    "default": "object"
                }
            }
        ],
        "LUTSIZE": [
            {
                "type": "var",
                "anno": "mpl.rcParams"
            }
        ],
        "ScalarMappable.changed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarMappable.autoscale_None": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarMappable.set_clim": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "ScalarMappable._scale_norm": [
            {
                "type": "method",
                "args": {
                    "norm": "Normalize",
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "_gen_cmap_registry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_cmap_registry": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "get_cmap": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "lut": "LUTSIZE"
                }
            }
        ],
        "ScalarMappable.set_cmap": [
            {
                "type": "method",
                "args": {
                    "cmap": "str"
                }
            }
        ],
        "cmap_d": [
            {
                "type": "var",
                "anno": "mpl.cm.cmap.cmap_registry"
            }
        ],
        "revcmap": [
            {
                "type": "func",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "ScalarMappable.set_norm": [
            {
                "type": "method",
                "args": {
                    "norm": "colors.Normalize"
                }
            }
        ],
        "ScalarMappable.__init__": [
            {
                "type": "method",
                "args": {
                    "norm": "colors.Normalize",
                    "cmap": "colors.Colormap"
                }
            }
        ],
        "register_cmap": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "cmap": "colors.Colormap",
                    "data": "dict",
                    "lut": "LUTSIZE"
                }
            }
        ],
        "ScalarMappable.autoscale": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_figure": {
        "test_figaspect": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_figure_repr": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_savefig_backend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_savefig": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invalid_figure_add_axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invalid_figure_size": [
            {
                "type": "func",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "test_change_dpi": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_set_fig_size": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_iterability_axes_argument": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_too_many_figures": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_add_subplot_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_gca": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fignum_exists": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_figure_label": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_add_artist": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.Figure",
                    "fig_ref": "plt.Figure"
                }
            }
        ],
        "test_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_align_labels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_picking_does_not_stale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_removed_axis": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes_removal": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tightbbox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_warn_cl_plus_tl": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_subplots_shareax_loglabels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_autofmt_xdate": [
            {
                "type": "func",
                "args": {
                    "which": "str"
                }
            }
        ],
        "test_axes_remove": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_suptitle_fontproperties": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_suptitle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_figure_legend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_clf_keyword": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_figure": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fspath": [
            {
                "type": "func",
                "args": {
                    "fmt": "str",
                    "tmpdir": "str"
                }
            }
        ]
    },
    "matplotlib.tests.test_style": {
        "PARAM": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "VALUE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DUMMY_SETTINGS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "test_alias": [
            {
                "type": "func",
                "args": {
                    "equiv_styles": "tuple"
                }
            }
        ],
        "test_context_with_badparam": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_context_with_dict": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_single_path": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "TemporaryDirectory"
                }
            }
        ],
        "temp_style": [
            {
                "type": "func",
                "args": {
                    "style_name": "str",
                    "settings": "dict"
                }
            }
        ],
        "test_context_with_union_of_dict_and_namedstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_context_with_dict_before_namedstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_context_with_dict_after_namedstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_context": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_use_url": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "TemporaryDirectory"
                }
            }
        ],
        "test_use": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_available": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invalid_rc_warning_includes_filename": [
            {
                "type": "func",
                "args": {
                    "capsys": "pytest.CapSys"
                }
            }
        ],
        "test_xkcd_cm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_xkcd_no_cm": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_animation": {
        "NullMovieWriter.fig": [
            {
                "type": "attr",
                "anno": "plt.figure.Figure"
            }
        ],
        "NullMovieWriter.outfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NullMovieWriter.dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "NullMovieWriter.args": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "NullMovieWriter._count": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NullMovieWriter.setup": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure.Figure",
                    "outfile": "str",
                    "dpi": "float",
                    "args": "tuple"
                }
            }
        ],
        "NullMovieWriter.savefig_kwargs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "NullMovieWriter.grab_frame": [
            {
                "type": "method",
                "args": {
                    "savefig_kwargs": "object"
                }
            }
        ],
        "NullMovieWriter.finish": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RegisteredNullMovieWriter.__init__": [
            {
                "type": "method",
                "args": {
                    "fps": "int",
                    "codec": "str",
                    "bitrate": "int",
                    "extra_args": "tuple",
                    "metadata": "dict"
                }
            }
        ],
        "RegisteredNullMovieWriter.isAvailable": [
            {
                "type": "method",
                "args": {
                    "cls": "animation.AbstractMovieWriter"
                }
            }
        ],
        "WRITER_OUTPUT": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_movie_writer_registry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_movie_writer_dpi_default": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_funcanimation_cache_frame_data": [
            {
                "type": "func",
                "args": {
                    "cache_frame_data": "bool"
                }
            }
        ],
        "test_save_animation_smoketest": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "mpl.tmpdir.TempDir",
                    "writer": "str",
                    "output": "str"
                }
            }
        ],
        "make_animation": [
            {
                "type": "func",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "test_failing_ffmpeg": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "mpl.rc.TempDir",
                    "monkeypatch": "pytest.MonkeyPatch"
                }
            }
        ],
        "test_cleanup_temporaries": [
            {
                "type": "func",
                "args": {
                    "method_name": "str",
                    "tmpdir": "mpl.rc.TempDir"
                }
            }
        ],
        "test_embed_limit": [
            {
                "type": "func",
                "args": {
                    "method_name": "str",
                    "caplog": "mpl.rc.Caplog",
                    "tmpdir": "mpl.TempDir"
                }
            }
        ],
        "test_no_length_frames": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_null_movie_writer": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_testing": {
        "test_warn_to_fail": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wrap_failure": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_parametrize_with_check_figure_equal": [
            {
                "type": "func",
                "args": {
                    "a": "int",
                    "fig_ref": "int",
                    "b": "int",
                    "fig_test": "int"
                }
            }
        ]
    },
    "matplotlib.tests.test_backends_interactive": {
        "_test_script": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_test_timeout": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_get_testable_interactive_backends": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_interactive_backend": [
            {
                "type": "func",
                "args": {
                    "backend": "str",
                    "toolbar": "str"
                }
            }
        ],
        "test_webagg": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_rcparams": {
        "legend_color_test_ids": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_backend_fallback_headless": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "Path"
                }
            }
        ],
        "test_backend_fallback_headful": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "Path"
                }
            }
        ],
        "test_validate_fontweight": [
            {
                "type": "func",
                "args": {
                    "weight": "str",
                    "parsed_weight": "int"
                }
            }
        ],
        "test_rcparams_init": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_keymaps": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "legend_color_tests": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_rcparams_update": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_Issue_1713": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "str"
                }
            }
        ],
        "test_rcparams_reset_after_fail": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_Bug_2543": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rcparams": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "str"
                }
            }
        ],
        "test_RcParams_class": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "generate_validator_testcases": [
            {
                "type": "func",
                "args": {
                    "valid": "Any"
                }
            }
        ],
        "test_validator_invalid": [
            {
                "type": "func",
                "args": {
                    "validator": "Any",
                    "arg": "Any",
                    "exception_type": "Any"
                }
            }
        ],
        "test_validator_valid": [
            {
                "type": "func",
                "args": {
                    "validator": "Any",
                    "arg": "Any",
                    "target": "Any"
                }
            }
        ],
        "test_mec_rcparams": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mfc_rcparams": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes_titlecolor_rcparams": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_colors": [
            {
                "type": "func",
                "args": {
                    "color_type": "str",
                    "param_dict": "dict",
                    "target": "str"
                }
            }
        ]
    },
    "matplotlib.tests.test_category": {
        "TestUnitData.test_cases": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestUnitData.failing_test_cases": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FakeAxis.units": [
            {
                "type": "attr",
                "anno": "UnitData"
            }
        ],
        "FakeAxis.__init__": [
            {
                "type": "method",
                "args": {
                    "units": "UnitData"
                }
            }
        ],
        "TestStrCategoryConverter.test_cases": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "TestStrCategoryConverter.failing_test_cases": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestStrCategoryConverter.cc": [
            {
                "type": "attr",
                "anno": "cat.StrCategoryConverter"
            }
        ],
        "TestStrCategoryConverter.unit": [
            {
                "type": "attr",
                "anno": "cat.UnitData"
            }
        ],
        "TestStrCategoryConverter.ax": [
            {
                "type": "attr",
                "anno": "FakeAxis"
            }
        ],
        "PLOT_LIST": [
            {
                "type": "var",
                "anno": "list[Axes]"
            }
        ],
        "PLOT_IDS": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "TestStrCategoryFormatter.test_cases": [
            {
                "type": "attr",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "TestPlotBytes.bytes_cases": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestPlotNumlike.numlike_cases": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestPlotTypes.x": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "TestPlotTypes.xy": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "TestPlotTypes.y": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "TestPlotTypes.yx": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "TestPlotTypes.test_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestPlotTypes.failing_test_cases": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestPlotTypes.plotters": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "axis_test": [
            {
                "type": "func",
                "args": {
                    "axis": "Axes",
                    "labels": "list[str]"
                }
            }
        ],
        "TestStrCategoryConverter.mock_axis": [
            {
                "type": "method",
                "args": {
                    "request": "pytest.Request"
                }
            }
        ],
        "TestUnitData.test_non_string_update_fails": [
            {
                "type": "method",
                "args": {
                    "fdata": "dict"
                }
            }
        ],
        "TestUnitData.test_non_string_fails": [
            {
                "type": "method",
                "args": {
                    "fdata": "dict"
                }
            }
        ],
        "TestUnitData.test_update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestUnitData.test_unit": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "locs": "list"
                }
            }
        ],
        "TestStrCategoryConverter.test_convert_fail": [
            {
                "type": "method",
                "args": {
                    "fvals": "list"
                }
            }
        ],
        "TestStrCategoryConverter.test_convert_float_array": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestStrCategoryConverter.test_convert_one_number": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestStrCategoryConverter.test_convert_one_string": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "TestStrCategoryConverter.test_convert": [
            {
                "type": "method",
                "args": {
                    "vals": "np.ndarray"
                }
            }
        ],
        "TestStrCategoryConverter.test_default_units": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestStrCategoryConverter.test_axisinfo": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestStrCategoryLocator.test_StrCategoryLocator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ax": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestPlotTypes.test_mixed_type_update_exception": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "plotter": "plt.Axes",
                    "xdata": "np.ndarray"
                }
            }
        ],
        "TestPlotTypes.test_mixed_type_exception": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "plotter": "plt.Axes",
                    "xdata": "np.ndarray"
                }
            }
        ],
        "TestPlotTypes.test_update_plot": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "plotter": "plt.Axes"
                }
            }
        ],
        "TestPlotTypes.test_plot_xyaxis": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "test_data": "TestUnitData",
                    "plotter": "plt.Axes"
                }
            }
        ],
        "TestPlotTypes.test_plot_yaxis": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "test_data": "TestUnitData",
                    "plotter": "plt.Axes"
                }
            }
        ],
        "TestPlotTypes.test_plot_xaxis": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "test_data": "TestUnitData",
                    "plotter": "plt.Axes"
                }
            }
        ],
        "TestPlotTypes.test_plot_unicode": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "plotter": "plt.Axes"
                }
            }
        ],
        "TestPlotNumlike.test_plot_numlike": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "plotter": "plt.Axes",
                    "ndata": "int"
                }
            }
        ],
        "TestPlotBytes.test_plot_bytes": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "plotter": "plt.Axes",
                    "bdata": "bytes"
                }
            }
        ],
        "TestStrCategoryFormatter.test_StrCategoryFormatterPlot": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "ydata": "list[str]",
                    "plotter": "plt.Plotter"
                }
            }
        ],
        "TestStrCategoryFormatter.test_StrCategoryFormatter": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "ydata": "list"
                }
            }
        ],
        "TestStrCategoryLocator.test_StrCategoryLocatorPlot": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "plotter": "plt.Axes"
                }
            }
        ]
    },
    "matplotlib.tests.test_pickle": {
        "TransformBlob.identity": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "TransformBlob.identity2": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "TransformBlob.composite": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "TransformBlob.wrapper": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "TransformBlob.composite2": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "test_cmap": [
            {
                "type": "func",
                "args": {
                    "cmap": "cm.CMap"
                }
            }
        ],
        "test_renderer": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rrulewrapper": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TransformBlob.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_transform": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_unpickle_canvas": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_no_pyplot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shared": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_complete": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_simple": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_patches": {
        "on_win": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "test_patch_color_none": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wedge_movement": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_Polygon_close": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_datetime_datetime_fails": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_negative_rect": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rotate_rect": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contains_points": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contains_point": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patch_str": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patch_linestyle_accents": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shadow": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_connection_patch_fig": [
            {
                "type": "func",
                "args": {
                    "fig_test": "FancyArrowPatch",
                    "fig_ref": "FancyArrowPatch"
                }
            }
        ],
        "test_large_arc": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_clip_to_bbox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fancyarrow_units": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_datetime_rectangle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_connection_patch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_units_rectangle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_multi_color_hatch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wedge_range": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patch_custom_linestyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patch_alpha_override": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patch_alpha_coloring": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_offsetbox": {
        "_Params": [
            {
                "type": "var",
                "anno": "namedtuple"
            }
        ],
        "test_get_packed_offsets_equal_total_none_sep_none": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_packed_offsets_equal": [
            {
                "type": "func",
                "args": {
                    "wd_list": "list",
                    "total": "float",
                    "sep": "float",
                    "expected": "tuple"
                }
            }
        ],
        "test_get_packed_offsets_expand": [
            {
                "type": "func",
                "args": {
                    "wd_list": "list",
                    "total": "float",
                    "sep": "float",
                    "expected": "tuple"
                }
            }
        ],
        "test_get_packed_offsets_fixed": [
            {
                "type": "func",
                "args": {
                    "wd_list": "list",
                    "total": "float",
                    "sep": "float",
                    "expected": "tuple"
                }
            }
        ],
        "test_get_packed_offsets": [
            {
                "type": "func",
                "args": {
                    "wd_list": "list",
                    "total": "float",
                    "sep": "float",
                    "mode": "str"
                }
            }
        ],
        "test_picking": [
            {
                "type": "func",
                "args": {
                    "child_type": "str",
                    "boxcoords": "str"
                }
            }
        ],
        "test_offsetbox_loc_codes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_offsetbox_clip_children": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_offsetbox_clipping": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_expand_with_tight_layout": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_cbook": {
        "Test_boxplot_stats.nrows": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Test_boxplot_stats.ncols": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Test_boxplot_stats.data": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Test_boxplot_stats.known_keys": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Test_boxplot_stats.std_results": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Test_boxplot_stats.known_nonbootstrapped_res": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Test_boxplot_stats.known_bootstrapped_ci": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Test_boxplot_stats.known_whis3_res": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Test_boxplot_stats.known_res_percentiles": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Test_boxplot_stats.known_res_range": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Test_boxplot_stats.test_form_main_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_form_each_dict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_form_dict_keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_results_baseline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_callback_registry.signal": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Test_callback_registry.callbacks": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "Test_callback_registry.dummy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "fail_mapping": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "pass_mapping": [
            {
                "type": "var",
                "anno": "Mock"
            }
        ],
        "test_make_keyword_only": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_delete_parameter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_step_fails": [
            {
                "type": "func",
                "args": {
                    "args": "Mock"
                }
            }
        ],
        "test_to_prestep": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_to_poststep": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_to_midstep": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_safe_first_element_pandas_series": [
            {
                "type": "func",
                "args": {
                    "pd": "Mock"
                }
            }
        ],
        "test_flatiter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_to_midstep_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_to_poststep_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_to_prestep_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_array_patch_perimeters": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Test_callback_registry.is_not_empty": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_callback_registry.is_empty": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_contiguous_regions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_sanitize_sequence": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Test_callback_registry.test_pickling": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_callback_registry.setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_delete_masked_points.test_datetime": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_delete_masked_points.test_string_seq": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_delete_masked_points.test_bad_first_arg": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_warn_external": [
            {
                "type": "func",
                "args": {
                    "recwarn": "Mock"
                }
            }
        ],
        "test_warn_external_frame_embedded_python": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_normalize_kwargs_pass": [
            {
                "type": "func",
                "args": {
                    "inp": "Mock",
                    "expected": "Mock",
                    "kwargs_to_norm": "Mock"
                }
            }
        ],
        "test_normalize_kwargs_fail": [
            {
                "type": "func",
                "args": {
                    "inp": "Mock",
                    "kwargs_to_norm": "Mock"
                }
            }
        ],
        "test_check_shape": [
            {
                "type": "func",
                "args": {
                    "target": "tuple",
                    "test_shape": "tuple"
                }
            }
        ],
        "Test_callback_registry.connect": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "func": "Callable"
                }
            }
        ],
        "raising_cb_reg": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "test_callbackregistry_custom_exception_handler": [
            {
                "type": "func",
                "args": {
                    "monkeypatch": "Mock",
                    "cb": "Mock",
                    "excp": "Mock"
                }
            }
        ],
        "test_callbackregistry_default_exception_handler": [
            {
                "type": "func",
                "args": {
                    "monkeypatch": "Mock"
                }
            }
        ],
        "Test_callback_registry.test_callback_complete": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_reshape2d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_boxplot_stats_autorange_false": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_bad_dims": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_label_error": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_results_withlabels": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_results_whiskers_percentiles": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_results_whiskers_range": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_results_whiskers_float": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.test_results_bootstrapped": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Test_boxplot_stats.setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_grouper_private": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Test_delete_masked_points.test_rgba": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_grouper": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_backend_webagg": {
        "test_webagg_fallback": [
            {
                "type": "func",
                "args": {
                    "backend": "str"
                }
            }
        ]
    },
    "matplotlib.tests.test_font_manager": {
        "has_fclist": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "test_score_weight": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_fontconfig_fonts": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_otf": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_utf16m_sfnt": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hinting_factor": [
            {
                "type": "func",
                "args": {
                    "factor": "int"
                }
            }
        ],
        "test_font_priority": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_user_fonts_win32": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_user_fonts_linux": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "Path",
                    "monkeypatch": "pytest.MonkeyPatch"
                }
            }
        ],
        "test_json_serialization": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "Path"
                }
            }
        ],
        "_model_handler": [
            {
                "type": "func",
                "args": {
                    "_": "int"
                }
            }
        ],
        "test_fork": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_find_ttc": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_skew": {
        "SkewXAxes.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SkewXAxes.xaxis": [
            {
                "type": "attr",
                "anno": "maxis.XAxis"
            }
        ],
        "SkewXAxes.yaxis": [
            {
                "type": "attr",
                "anno": "maxis.YAxis"
            }
        ],
        "SkewXAxes.transDataToAxes": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "SkewXAxes.transData": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "SkewXAxes._xaxis_transform": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "SkewXTick.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "SkewXAxes._set_lim_and_transforms": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SkewXAxes._gen_axes_spines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SkewXAxes.upper_xlim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SkewXAxes.lower_xlim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SkewSpine._adjust_location": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SkewXAxis.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SkewXTick.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SkewXAxis._get_tick": [
            {
                "type": "method",
                "args": {
                    "major": "bool"
                }
            }
        ],
        "SkewXAxes._init_axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_set_line_coll_dash_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_skew_rectangle": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_streamplot": {
        "on_win": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "on_mac": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "velocity_field": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "swirl_velocity_field": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_maxlength": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_masks_and_nans": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_linewidth": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_direction": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_startpoints": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colormap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_streamplot_limits": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_triangulation": {
        "test_delaunay_duplicate_points": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_delaunay_points_in_line": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_delaunay_insufficient_points": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "test_triinterp_transformations": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "meshgrid_triangles": [
            {
                "type": "func",
                "args": {
                    "n": "int"
                }
            }
        ],
        "test_qhull_triangle_orientation": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_qhull_large_offset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_triinterpcubic_C1_continuity": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_triinterp": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_triinterpcubic_cg_solver": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_no_modify": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_internal_cpp_api": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_delaunay_robust": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_delaunay": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_trirefiner_fortran_contiguous_triangles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_trianalyzer_mismatched_indices": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tritools": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_triinterpcubic_geom_weights": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_trirefine": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_triinterp_colinear": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_trifinder": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_triplot_return": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tricontour_non_finite_z": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tricontourf_decreasing_levels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tri_smooth_contouring": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tri_smooth_gradient": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tripcolor": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_colors": {
        "test_colormap_dict_deprecate": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_LogNorm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_PowerNorm_translation_invariance": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_scale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_Even": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_Odd": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_VminEqualsVcenter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_VmaxEqualsVcenter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_VminGTVcenter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_TwoSlopeNorm_VminGTVmax": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_VcenterGTVmax": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_sph2cart": [
            {
                "type": "func",
                "args": {
                    "theta": "float",
                    "phi": "float"
                }
            }
        ],
        "_azimuth2math": [
            {
                "type": "func",
                "args": {
                    "azimuth": "float",
                    "elevation": "float"
                }
            }
        ],
        "test_grey_gray": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tableau_order": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_DivergingNorm_deprecated": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_scalar_tester": [
            {
                "type": "func",
                "args": {
                    "norm_instance": "mcolors.Normalize",
                    "vals": "np.ndarray"
                }
            }
        ],
        "_inverse_tester": [
            {
                "type": "func",
                "args": {
                    "norm_instance": "mcolors.Normalize",
                    "vals": "np.ndarray"
                }
            }
        ],
        "test_TwoSlopeNorm_premature_scaling": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_PowerNorm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_lognorm_invalid": [
            {
                "type": "func",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "_mask_tester": [
            {
                "type": "func",
                "args": {
                    "norm_instance": "mcolors.Normalize",
                    "vals": "np.ndarray"
                }
            }
        ],
        "test_SymLogNorm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_BoundaryNorm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_create_lookup_table": [
            {
                "type": "func",
                "args": {
                    "N": "int",
                    "result": "list"
                }
            }
        ],
        "test_rgb_hsv_round_trip": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_Normalize": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_light_source_planar_hillshading": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_light_source_hillshading": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_light_source_masked_shading": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_light_source_shading_default": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_scaleout_center_max": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_scaleout_center": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pandas_iterable": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_TwoSlopeNorm_autoscale_None_vmax": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_autoscale_None_vmin": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_failed_conversions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colormap_return_types": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colormap_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colormap_endian": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colormap_copy": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_resample": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_to_rgba_array_single_str": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_conversions_masked": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cmap_and_norm_from_levels_and_colors2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hex_shorthand_notation": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_same_color": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colormap_global_set_warn": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_register_cmap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_conversions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_color_names": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cn": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_TwoSlopeNorm_autoscale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colormap_reversing": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "test_SymLogNorm_single_zero": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_SymLogNorm_colorbar": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_ndarray_subclass_norm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_light_source_topo_surface": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cmap_and_norm_from_levels_and_colors": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_autoscale_masked": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_determinism": {
        "test_determinism_source_date_epoch": [
            {
                "type": "func",
                "args": {
                    "fmt": "str",
                    "string": "str"
                }
            }
        ],
        "needs_ghostscript": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "needs_usetex": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "test_determinism_check": [
            {
                "type": "func",
                "args": {
                    "objects": "str",
                    "fmt": "str",
                    "usetex": "bool"
                }
            }
        ],
        "_save_figure": [
            {
                "type": "func",
                "args": {
                    "objects": "str",
                    "fmt": "str",
                    "usetex": "bool"
                }
            }
        ]
    },
    "matplotlib.tests.tinypages.conf": {
        "extensions": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "templates_path": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "source_suffix": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "master_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "project": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "copyright": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "release": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "exclude_patterns": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "pygments_style": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "html_theme": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "html_static_path": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "htmlhelp_basename": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "latex_elements": [
            {
                "type": "var",
                "anno": "set[str]"
            }
        ],
        "latex_documents": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "man_pages": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "texinfo_documents": [
            {
                "type": "var",
                "anno": "list"
            }
        ]
    },
    "matplotlib.tests.tinypages.range6": {
        "range4": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "range6": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_path": {
        "_test_path_extents": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_full_arc": [
            {
                "type": "func",
                "args": {
                    "offset": "int"
                }
            }
        ],
        "test_intersect_zero_length_segment": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_disjoint_zero_length_segment": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_path_deepcopy": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_test_paths": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_path_exceptions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_empty_closed_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_readonly_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_make_compound_path_stops": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_make_compound_path_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_path_intersect_path": [
            {
                "type": "func",
                "args": {
                    "phi": "float"
                }
            }
        ],
        "test_path_to_polygons": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_path_no_doubled_point_in_to_polygon": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_point_in_path_nan": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contains_points_negative_radius": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_point_in_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_exact_extents": [
            {
                "type": "func",
                "args": {
                    "path": "Path",
                    "extents": "np.ndarray"
                }
            }
        ],
        "test_path_clipping": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nan_isolated_points": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_xkcd_marker": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_xkcd": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_transform_with_zero": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_arrow_contains_point": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nonlinear_containment": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_paths_pdf": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_marker": {
        "UnsnappedMarkerStyle._snap_threshold": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "test_markers_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_markers_valid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "UnsnappedMarkerStyle._recache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_asterisk_marker": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure",
                    "request": "pytest.Request"
                }
            }
        ],
        "test_poly_marker": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_star_marker": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_afm": {
        "AFM_TEST_DATA": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "test_nonascii_str": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_malformed_header": [
            {
                "type": "func",
                "args": {
                    "afm_data": "bytes",
                    "caplog": "logging.Logger"
                }
            }
        ],
        "test_bad_afm": [
            {
                "type": "func",
                "args": {
                    "afm_data": "bytes"
                }
            }
        ],
        "test_parse_char_metrics": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_parse_header": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_familyname_guessed": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_font_manager_weight_normalization": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_mathtext": {
        "digits": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "uppercase": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "lowercase": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "uppergreek": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "lowergreek": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "all": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "font_test_specs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "font_tests": [
            {
                "type": "var",
                "anno": "list[tuple[int, str]]"
            }
        ],
        "baseline_images": [
            {
                "type": "func",
                "args": {
                    "request": "mpl.rc.Request",
                    "fontset": "str",
                    "index": "int"
                }
            }
        ],
        "test_fontinfo": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mathtext_fallback_to_cm_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mathtext_fallback_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mathtext_fallback_valid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "wrapper": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "math_tests": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_mathtext_exceptions": [
            {
                "type": "func",
                "args": {
                    "math": "str",
                    "msg": "str"
                }
            }
        ],
        "test_mathtext_to_png": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "pytest.TempDir"
                }
            }
        ],
        "test_math_to_image": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "pytest.TempDir"
                }
            }
        ],
        "test_spaces": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_mathfont_rendering": [
            {
                "type": "func",
                "args": {
                    "baseline_images": "list[str]",
                    "fontset": "str",
                    "index": "int",
                    "test": "str"
                }
            }
        ],
        "test_mathtext_rendering": [
            {
                "type": "func",
                "args": {
                    "baseline_images": "int",
                    "fontset": "str",
                    "index": "int",
                    "test": "str"
                }
            }
        ],
        "test_mathtext_fallback": [
            {
                "type": "func",
                "args": {
                    "fallback": "str",
                    "fontlist": "list[str]"
                }
            }
        ],
        "test_single_minus_sign": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_contour": {
        "test_internal_cpp_api": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "cls": "type[mpl._contour.QuadContourGenerator]",
                    "message": "str"
                }
            }
        ],
        "test_internal_cpp_api_2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_linewidth": [
            {
                "type": "func",
                "args": {
                    "rc_lines_linewidth": "float",
                    "rc_contour_linewidth": "float",
                    "call_linewidths": "float",
                    "expected": "float"
                }
            }
        ],
        "test_contour_uneven": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_addlines": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_clabel_zorder": [
            {
                "type": "func",
                "args": {
                    "use_clabeltext": "bool",
                    "contour_zorder": "int",
                    "clabel_zorder": "int"
                }
            }
        ],
        "test_labels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_uniform_z": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_badlevel_fmt": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_Nlevels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_empty_levels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_shape_error": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "message": "str"
                }
            }
        ],
        "test_contour_shape_2d_valid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_shape_1d_valid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contourf_symmetric_locator": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contourf_decreasing_levels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_corner_mask": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_circular_contour_warning": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_labels_size_color": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_manual_labels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contourf_log_extension": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_given_colors_levels_and_extends": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_datetime_axis": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_dates": {
        "_new_epoch_decorator": [
            {
                "type": "func",
                "args": {
                    "thefunc": "object"
                }
            }
        ],
        "test_tz_utc": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_num2timedelta": [
            {
                "type": "func",
                "args": {
                    "x": "int",
                    "tdelta": "datetime.timedelta"
                }
            }
        ],
        "_test_rrulewrapper": [
            {
                "type": "func",
                "args": {
                    "attach_tz": "Callable[[datetime.datetime], datetime.datetime]",
                    "get_tz": "Callable[[], str]"
                }
            }
        ],
        "test_rrulewrapper_pytz": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rrulewrapper": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_change_epoch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_datetime64_in_list": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_test_date2num_dst": [
            {
                "type": "func",
                "args": {
                    "date_range": "Callable[[datetime.datetime, int], datetime.datetime]",
                    "tz_convert": "Callable[[datetime.datetime, int], datetime.datetime]"
                }
            }
        ],
        "test_date2num_dst_pandas": [
            {
                "type": "func",
                "args": {
                    "pd": "pd.DataFrame"
                }
            }
        ],
        "test_date2num_dst": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date2num_NaT_scalar": [
            {
                "type": "func",
                "args": {
                    "units": "str"
                }
            }
        ],
        "test_date2num_NaT": [
            {
                "type": "func",
                "args": {
                    "dtype": "str"
                }
            }
        ],
        "test_date_date2num_numpy": [
            {
                "type": "func",
                "args": {
                    "t0": "datetime.datetime",
                    "dtype": "str"
                }
            }
        ],
        "test_date_formatter_callable": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_drange": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_DayLocator": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_yearlocator_pytz": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_auto_date_locator_intmult": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_auto_date_locator": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_auto_date_locator_intmult_tz": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_RRuleLocator_dayrange": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_too_many_date_ticks": [
            {
                "type": "func",
                "args": {
                    "caplog": "mticker.LogScale"
                }
            }
        ],
        "test_date_numpyx": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date_inverted_limit": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date_axvline": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date_axhline": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date_axvspan": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date_axhspan": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_concise_formatter_tz": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_concise_formatter_zformats": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_concise_formatter_formats": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_concise_formatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_locator_set_formatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_DateFormatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_RRuleLocator": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_preprocess_data": {
        "all_func_ids": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_docstring_addition": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_more_args_than_pos_parameter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_no_label_replacements": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_function_call_replace_all": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_compiletime_checks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "plot_func": [
            {
                "type": "func",
                "args": {
                    "ax": "np.ndarray",
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "ls": "str",
                    "label": "str",
                    "w": "str"
                }
            }
        ],
        "all_funcs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_function_call_with_pandas_data": [
            {
                "type": "func",
                "args": {
                    "func": "_preprocess_data",
                    "pd": "pd.DataFrame"
                }
            }
        ],
        "test_function_call_with_dict_data_not_in_data": [
            {
                "type": "func",
                "args": {
                    "func": "_preprocess_data"
                }
            }
        ],
        "test_function_call_with_dict_data": [
            {
                "type": "func",
                "args": {
                    "func": "_preprocess_data"
                }
            }
        ],
        "test_function_call_without_data": [
            {
                "type": "func",
                "args": {
                    "func": "_preprocess_data"
                }
            }
        ]
    },
    "matplotlib.tests.test_backend_qt": {
        "qt_core": [
            {
                "type": "func",
                "args": {
                    "request": "Any"
                }
            }
        ],
        "test_dpi_ratio_change": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_correct_key": [
            {
                "type": "func",
                "args": {
                    "backend": "Any",
                    "qt_core": "Any",
                    "qt_key": "str",
                    "qt_mods": "list",
                    "answer": "str"
                }
            }
        ],
        "test_fig_signals": [
            {
                "type": "func",
                "args": {
                    "qt_core": "Any"
                }
            }
        ],
        "test_fig_close": [
            {
                "type": "func",
                "args": {
                    "backend": "Any"
                }
            }
        ],
        "test_canvas_reinit": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_double_resize": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_figureoptions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_subplottool": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_widgets": {
        "polygon_place_vertex": [
            {
                "type": "func",
                "args": {
                    "xdata": "int",
                    "ydata": "int"
                }
            }
        ],
        "test_slider_horizontal_vertical": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_slider_valmin_valmax": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_slider_slidermin_slidermax": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_slider_slidermin_slidermax_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "check_polygon_selector": [
            {
                "type": "func",
                "args": {
                    "event_sequence": "widgets.Sequence[widgets.Event]",
                    "expected_result": "list",
                    "selections_count": "int"
                }
            }
        ],
        "test_polygon_selector": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_CheckButtons": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "check_lasso_selector": [
            {
                "type": "func",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "test_lasso_selector": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "check_span": [
            {
                "type": "func",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "test_span_selector": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rectangle_handles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_ellipse": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "check_rectangle": [
            {
                "type": "func",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "test_rectangle_selector": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_check_bunch_of_radio_buttons": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_check_radio_buttons_image": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_backend_nbagg": {
        "nbformat": [
            {
                "type": "var",
                "anno": "pytest.Importorskip"
            }
        ],
        "test_ipynb": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_basic": {
        "test_simple": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_override_builtins": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_lazy_imports": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_backend_pgf": {
        "check_for": [
            {
                "type": "func",
                "args": {
                    "texsystem": "str"
                }
            }
        ],
        "needs_xelatex": [
            {
                "type": "var",
                "anno": "pytest.Mark"
            }
        ],
        "needs_pdflatex": [
            {
                "type": "var",
                "anno": "pytest.Mark"
            }
        ],
        "needs_lualatex": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_has_sfmath": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_common_texification": [
            {
                "type": "func",
                "args": {
                    "plain_text": "str",
                    "escaped_text": "str"
                }
            }
        ],
        "test_tex_restart_after_error": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pdf_pages_lualatex": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pdf_pages_metadata": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pdf_pages": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_inches_tight": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "TemporaryDirectory"
                }
            }
        ],
        "test_mixedmode": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "create_figure": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pdflatex": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_xelatex": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pathclip": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "compare_figure": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "savefig_kwargs": "dict",
                    "tol": "float"
                }
            }
        ],
        "test_rcupdate": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_inches": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_transforms": {
        "NonAffineForTest.is_affine": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NonAffineForTest.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NonAffineForTest.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NonAffineForTest.real_trans": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "TestBasicTransform.ta1": [
            {
                "type": "attr",
                "anno": "NonAffineForTest"
            }
        ],
        "TestBasicTransform.ta2": [
            {
                "type": "attr",
                "anno": "NonAffineForTest"
            }
        ],
        "TestBasicTransform.ta3": [
            {
                "type": "attr",
                "anno": "NonAffineForTest"
            }
        ],
        "TestBasicTransform.tn1": [
            {
                "type": "attr",
                "anno": "NonAffineForTest"
            }
        ],
        "TestBasicTransform.tn2": [
            {
                "type": "attr",
                "anno": "NonAffineForTest"
            }
        ],
        "TestBasicTransform.tn3": [
            {
                "type": "attr",
                "anno": "NonAffineForTest"
            }
        ],
        "TestBasicTransform.stack1": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "TestBasicTransform.stack2": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "TestBasicTransform.stack2_subset": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "NonAffineForTest.__init__": [
            {
                "type": "method",
                "args": {
                    "real_trans": "mtransforms.Transform",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "TestBasicTransform.test_transform_depth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestBasicTransform.test_contains_branch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestBasicTransform.test_left_to_right_iteration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_nonsingular": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestBasicTransform.setup_method": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_invalid_arguments": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "NonAffineForTest.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "values": "np.ndarray"
                }
            }
        ],
        "test_Affine2D_from_values": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_transform_angles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "assert_bbox_eq": [
            {
                "type": "func",
                "args": {
                    "bbox1": "mtransforms.Bbox",
                    "bbox2": "mtransforms.Bbox"
                }
            }
        ],
        "test_transform_single_point": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_as_strings": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_intersection": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "NonAffineForTest.transform_path_non_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "test_clipping_of_log": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestBasicTransform.test_transform_shortcuts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_affine_inverted_invalidated": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_lockable_bbox": [
            {
                "type": "func",
                "args": {
                    "locked_element": "str"
                }
            }
        ],
        "TestBasicTransform.test_affine_simplification": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_transformed_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nan_overlap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_transformed_patch_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_transform": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_str_transform": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_line_extents_for_non_affine_transData": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_pathc_extents_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_pathc_extents_non_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_line_extents_non_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_line_extents_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_line_extent_compound_coords2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_line_extent_predata_transform_coords": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_line_extent_compound_coords1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_line_extent_data_coords": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestTransformPlotInterface.test_line_extent_axes_coords": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_pcolormesh_pre_transform_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pcolor_pre_transform_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_pre_transform_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pre_transform_plotting": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_external_transform_api": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_non_affine_caching": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_ticker": {
        "TestMaxNLocator.basic_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestMaxNLocator.integer_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestAutoMinorLocator.params": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestAutoMinorLocator.majorstep_minordivisions": [
            {
                "type": "attr",
                "anno": "list[tuple]"
            }
        ],
        "TestAutoMinorLocator.limits": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestAutoMinorLocator.reference": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestAutoMinorLocator.additional_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_LogitHelper.isclose": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "_LogitHelper.assert_almost_equal": [
            {
                "type": "method",
                "args": {
                    "x": "tuple",
                    "y": "tuple"
                }
            }
        ],
        "TestLogitLocator.ref_basic_limits": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestLogitLocator.ref_basic_major_ticks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestLogitLocator.ref_maxn_limits": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestLogitLocator.acceptable_vmin_vmax": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestScalarFormatter.offset_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestScalarFormatter.use_offset_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestScalarFormatter.scilimits_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FakeAxis.vmin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FakeAxis.vmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FakeAxis.__init__": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "FakeAxis.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogFormatterExponent.param_data": [
            {
                "type": "attr",
                "anno": "list[tuple[bool, int, np.ndarray]]"
            }
        ],
        "TestLogFormatterExponent.base_data": [
            {
                "type": "attr",
                "anno": "list[float]"
            }
        ],
        "TestLogFormatterMathtext.test_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestLogFormatterSciNotation.test_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestLogFormatter.pprint_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestLogitFormatter.logit_deformatter": [
            {
                "type": "method",
                "args": {
                    "string": "str"
                }
            }
        ],
        "TestLogitFormatter.test_logit_deformater": [
            {
                "type": "method",
                "args": {
                    "fx": "str",
                    "x": "float"
                }
            }
        ],
        "TestLogitFormatter.decade_test": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestLogitFormatter.lims_minor_major": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestStrMethodFormatter.test_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestEngFormatter.raw_format_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestPercentFormatter.percent_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestPercentFormatter.percent_ids": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestPercentFormatter.latex_data": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestIndexFormatter.test_formatting": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "label": "str"
                }
            }
        ],
        "TestFormatStrFormatter.test_basic": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestStrMethodFormatter.test_basic": [
            {
                "type": "method",
                "args": {
                    "format": "str",
                    "input": "list",
                    "expected": "str"
                }
            }
        ],
        "TestLogitFormatter.test_use_overline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogitFormatter.test_one_half": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestEngFormatter.test_params": [
            {
                "type": "method",
                "args": {
                    "unicode_minus": "bool",
                    "input": "str",
                    "expected": "list"
                }
            }
        ],
        "TestLogFormatter.test_pprint": [
            {
                "type": "method",
                "args": {
                    "value": "float",
                    "domain": "str",
                    "expected": "str"
                }
            }
        ],
        "TestLogFormatterMathtext.fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "test_bad_locator_subs": [
            {
                "type": "func",
                "args": {
                    "sub": "np.ndarray"
                }
            }
        ],
        "TestSymmetricalLogLocator.test_set_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestIndexLocator.test_set_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestFixedLocator.test_set_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestNullLocator.test_set_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogLocator.test_set_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestMultipleLocator.test_set_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLinearLocator.test_set_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogitLocator.test_nonsingular_nok": [
            {
                "type": "method",
                "args": {
                    "okval": "float"
                }
            }
        ],
        "TestLogitLocator.test_nonsingular_ok": [
            {
                "type": "method",
                "args": {
                    "lims": "tuple"
                }
            }
        ],
        "TestLogitLocator.test_minor_attr": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogitFormatter.test_format_data_short": [
            {
                "type": "method",
                "args": {
                    "N": "int"
                }
            }
        ],
        "TestLogFormatter.test_LogFormatter_call": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "TestLogFormatterExponent.test_blank": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogFormatterExponent.test_basic": [
            {
                "type": "method",
                "args": {
                    "labelOnlyBase": "bool",
                    "base": "float",
                    "exponent": "float",
                    "locs": "np.ndarray",
                    "positions": "np.ndarray",
                    "expected": "list[float]"
                }
            }
        ],
        "TestPercentFormatter.test_latex": [
            {
                "type": "method",
                "args": {
                    "is_latex": "bool",
                    "usetex": "bool",
                    "expected": "str"
                }
            }
        ],
        "TestPercentFormatter.test_basic": [
            {
                "type": "method",
                "args": {
                    "xmax": "float",
                    "decimals": "int",
                    "symbol": "str",
                    "x": "float",
                    "display_range": "float",
                    "expected": "str"
                }
            }
        ],
        "TestLogFormatterSciNotation.test_basic": [
            {
                "type": "method",
                "args": {
                    "base": "float",
                    "value": "float",
                    "expected": "float"
                }
            }
        ],
        "TestLogFormatterMathtext.test_min_exponent": [
            {
                "type": "method",
                "args": {
                    "min_exponent": "int",
                    "value": "int",
                    "expected": "str"
                }
            }
        ],
        "TestScalarFormatter.test_use_offset": [
            {
                "type": "method",
                "args": {
                    "use_offset": "bool"
                }
            }
        ],
        "TestAutoMinorLocator.test_using_all_default_major_steps": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogitFormatter.test_variablelength": [
            {
                "type": "method",
                "args": {
                    "x": "int"
                }
            }
        ],
        "TestLogitFormatter.test_invalid": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "TestLogitFormatter.test_basic": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "TestLogFormatter._sub_labels": [
            {
                "type": "method",
                "args": {
                    "axis": "mticker.Axis",
                    "subs": "np.ndarray"
                }
            }
        ],
        "TestMultipleLocator.test_view_limits_round_numbers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestMultipleLocator.test_view_limits": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogitFormatter.test_minor_number": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogitFormatter.test_minor_vs_major": [
            {
                "type": "method",
                "args": {
                    "method": "bool",
                    "lims": "list",
                    "cases": "list"
                }
            }
        ],
        "TestLogitLocator.test_minor": [
            {
                "type": "method",
                "args": {
                    "lims": "tuple",
                    "expected_low_ticks": "tuple"
                }
            }
        ],
        "TestLogitLocator.test_nbins_major": [
            {
                "type": "method",
                "args": {
                    "lims": "tuple"
                }
            }
        ],
        "TestLogitLocator.test_maxn_major": [
            {
                "type": "method",
                "args": {
                    "lims": "list"
                }
            }
        ],
        "TestLogitLocator.test_basic_major": [
            {
                "type": "method",
                "args": {
                    "lims": "tuple",
                    "expected_low_ticks": "tuple"
                }
            }
        ],
        "TestLogLocator.test_switch_to_autolocator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLogLocator.test_basic": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestMultipleLocator.test_basic": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLinearLocator.test_basic": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestMaxNLocator.test_integer": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "steps": "int",
                    "expected": "int"
                }
            }
        ],
        "TestMaxNLocator.test_basic": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "expected": "float"
                }
            }
        ],
        "test_minorticks_rc": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_remove_overlap": [
            {
                "type": "func",
                "args": {
                    "remove_overlapping_locs": "bool",
                    "expected_num": "int"
                }
            }
        ],
        "test_minlocator_type": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_majlocator_type": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_minformatter_type": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_majformatter_type": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_engformatter_usetex_useMathText": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestLogFormatter.test_sublabel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestScalarFormatter.test_cursor_precision": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestScalarFormatter.test_scilimits": [
            {
                "type": "method",
                "args": {
                    "sci_type": "bool",
                    "scilimits": "tuple",
                    "lim": "tuple",
                    "orderOfMag": "int",
                    "fewticks": "bool"
                }
            }
        ],
        "TestScalarFormatter.test_offset_value": [
            {
                "type": "method",
                "args": {
                    "left": "float",
                    "right": "float",
                    "offset": "float"
                }
            }
        ],
        "TestAutoMinorLocator.test_additional": [
            {
                "type": "method",
                "args": {
                    "lim": "float",
                    "ref": "float"
                }
            }
        ],
        "TestAutoMinorLocator.test_number_of_minor_ticks": [
            {
                "type": "method",
                "args": {
                    "major_step": "int",
                    "expected_nb_minordivisions": "int"
                }
            }
        ],
        "TestAutoMinorLocator.test_low_number_of_majorticks": [
            {
                "type": "method",
                "args": {
                    "nb_majorticks": "int",
                    "expected_nb_minorticks": "int"
                }
            }
        ],
        "TestAutoMinorLocator.test_basic": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestScalarFormatter.test_unicode_minus": [
            {
                "type": "method",
                "args": {
                    "unicode_minus": "bool",
                    "result": "str"
                }
            }
        ]
    },
    "matplotlib.tests.test_fontconfig_pattern": {
        "keys": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "test_fontconfig_str": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fontconfig_pattern": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_usetex": {
        "pytestmark": [
            {
                "type": "var",
                "anno": "pytest.Mark"
            }
        ],
        "test_minus_no_descent": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mathdefault": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_unicode_minus": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_empty": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_usetex": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_matplotlib": {
        "test_tmpconfigdir_warning": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "str"
                }
            }
        ],
        "test_use_doc_standard_backends": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_axes": {
        "contour_dat": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestScatter.params_test_scatter_c": [
            {
                "type": "attr",
                "anno": "SimpleNamespace"
            }
        ],
        "TestScatter.test_scatter_c": [
            {
                "type": "method",
                "args": {
                    "c_case": "str",
                    "re_key": "str"
                }
            }
        ],
        "_params": [
            {
                "type": "func",
                "args": {
                    "c": "str",
                    "xsize": "int",
                    "edgecolors": "str",
                    "kwargs": "str"
                }
            }
        ],
        "_result": [
            {
                "type": "var",
                "anno": "namedtuple"
            }
        ],
        "test_parse_scatter_color_args_error": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "generate_errorbar_inputs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cartopy_backcompat": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_parse_scatter_color_args": [
            {
                "type": "func",
                "args": {
                    "params": "tuple",
                    "expected_result": "mpl.axes.Axes"
                }
            }
        ],
        "test_parse_scatter_color_args_edgecolors": [
            {
                "type": "func",
                "args": {
                    "kwargs": "dict",
                    "expected_edgecolors": "str"
                }
            }
        ],
        "shared_axis_remover": [
            {
                "type": "func",
                "args": {
                    "request": "mpl.pyplot.Axes"
                }
            }
        ],
        "_rc_test_bxp_helper": [
            {
                "type": "func",
                "args": {
                    "ax": "plt.Axes",
                    "rc_dict": "dict"
                }
            }
        ],
        "color_boxes": [
            {
                "type": "func",
                "args": {
                    "fig": "plt.figure.Figure",
                    "axs": "plt.axes.Axes"
                }
            }
        ],
        "test_relim_visible_only": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_aspect_nonlinear_adjustable_datalim": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_aspect_nonlinear_adjustable_box": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_offset_text_visible": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_offset_label_color": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_none_kwargs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rc_major_minor_tick": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rc_tick": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text_labelsize": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vline_limit": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rcparam_grid_minor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mollweide_inverse_forward_closure": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mollweide_forward_inverse_closure": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_emptydata": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_stem_args": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_errorbar_shape": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_scales_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist2d_density": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_zorder": [
            {
                "type": "func",
                "args": {
                    "histtype": "str",
                    "zorder": "int"
                }
            }
        ],
        "test_structured_data": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_strmethodformatter_auto_formatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_funcformatter_auto_formatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_interpolation_steps_variable_r": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_axis_bool_arguments": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_markerfacecolor_none_alpha": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_plot_decimal": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_lines_with_colors": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure",
                    "data": "np.ndarray"
                }
            }
        ],
        "test_axline": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_errorbar_offsets": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_errorbar_cycle_ecolor": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_violinplot_pandas_series": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure",
                    "pd": "plt.Series"
                }
            }
        ],
        "test_violinplot_single_list_quantiles": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "TestScatter.test_scatter_different_shapes": [
            {
                "type": "method",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "TestScatter.test_scatter_single_point": [
            {
                "type": "method",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "TestScatter.test_scatter_norm_vminvmax": [
            {
                "type": "method",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "TestScatter.test_scatter_no_invalid_color": [
            {
                "type": "method",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "TestScatter.test_scatter_invalid_color": [
            {
                "type": "method",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "TestScatter.test_scatter_decimal": [
            {
                "type": "method",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_hist_log_2": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_barh_decimal_height": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_bar_decimal_width": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_barh_decimal_center": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_bar_decimal_center": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_pcolorauto": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.Axes",
                    "fig_ref": "plt.Axes"
                }
            }
        ],
        "test_pcolordropdata": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.Axes",
                    "fig_ref": "plt.Axes"
                }
            }
        ],
        "test_pcolornearest": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.Axes",
                    "fig_ref": "plt.Axes"
                }
            }
        ],
        "test_imshow_norm_vminvmax": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_shaped_data": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_sticky_shared_axes": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_minorticks_on_rcParams_both": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_matshow": [
            {
                "type": "func",
                "args": {
                    "fig_test": "matplotlib.figure.Figure",
                    "fig_ref": "matplotlib.figure.Figure"
                }
            }
        ],
        "test_spy": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_label_loc_rc": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_label_loc_horizontal": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_label_loc_vertical": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_axisbelow": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rc_grid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twin_spines_on_top": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twin_spines": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_spectrum": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_psd_csd": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_specgram_angle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_specgram_magnitude": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_specgram": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mixed_collection": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_eb_line_zorder": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vertex_markers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_styles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_eventplot_problem_kwargs": [
            {
                "type": "func",
                "args": {
                    "recwarn": "list[MatplotlibDeprecationWarning]"
                }
            }
        ],
        "test_eventplot_defaults": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_eventplot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mollweide_grid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_transparent_markers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_bar": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_step_bottom": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_step": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_stepfilled_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_weighted": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_step_horiz": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_step": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_offset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_stepfilled": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_with_CIarray": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_stackplot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_scales": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist2d_transpose": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist2d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_colorbar": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour_hatching": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_log": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_edges": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_markevery_line": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_markevery": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_arc_ellipse": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fill_units": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_basic_annotate": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twin_axis_locators_formatters": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_formatter_ticker": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_normalize_kwarg_pie": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_normalize_kwarg_warn_pie": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invisible_axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pi_get_negative_values": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_aspect_axes_init": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_box_aspect_custom_position": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_box_aspect": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_set_ticks_inverted": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_errbar_zorder": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_nan_data": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_datetime_masked": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axis_extent_arg": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_minor_accountedfor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tickdirs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_displaced_spine": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nodecorator": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_normal_axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_secondary_formatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_secondary_resize": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_secondary_fail": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_secondary_xy": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_annotate_across_transforms": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_gettightbbox_ignoreNaN": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_spines_properbbox_after_zoom": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_set_position": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_indicate_inset_inverted": [
            {
                "type": "func",
                "args": {
                    "x_inverted": "bool",
                    "y_inverted": "bool"
                }
            }
        ],
        "test_zoom_inset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_inset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tick_padding_tightbbox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_empty_errorbar_legend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twinx_knows_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_broadcast_args": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_color_length_mismatch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_margins": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fillbetween_cycle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tick_param_label_rotation": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_color_cycle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_units": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_barb_units": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_large_offset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_title_xticks_top_both": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_title_xticks_top": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_titlesetpos": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_titletwiny": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pandas_bar_align_center": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_pandas_indexing_hist": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.Series"
                }
            }
        ],
        "test_pandas_index_shape": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_pandas_errorbar_indexing": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_pandas_pcolormesh": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_broken_barh_timedelta": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_broken_barh_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_auto_numticks_log": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_auto_numticks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_adjust_numtick_aspect": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_remove_shared_axes_relim": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "shared_axes_generator": [
            {
                "type": "func",
                "args": {
                    "request": "mpl.pyplot.Axes"
                }
            }
        ],
        "test_remove_shared_axes": [
            {
                "type": "func",
                "args": {
                    "shared_axes_generator": "tuple",
                    "shared_axis_remover": "dict"
                }
            }
        ],
        "test_axes_margins": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_loglog_nonpos": [
            {
                "type": "func",
                "args": {
                    "new_api": "bool"
                }
            }
        ],
        "test_loglog": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_title_location_roundtrip": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_title_pad": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_dash_offset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shared_scale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pcolorfast": [
            {
                "type": "func",
                "args": {
                    "xy": "tuple",
                    "data": "tuple",
                    "cls": "type"
                }
            }
        ],
        "test_square_plot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rc_spines": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_move_offsetlabel": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_unicode_hist_label": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_numerical_hist_label": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_color_alias": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_color_None": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pathological_hexbin": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_length_one_hist": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_margins": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_o_marker_path_snap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tick_label_update": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mismatched_ticklabels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_set_get_ticklabels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pie_default": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twin_with_aspect": [
            {
                "type": "func",
                "args": {
                    "twin": "str"
                }
            }
        ],
        "test_shared_with_aspect_1": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_empty_shared_subplots": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_step_linestyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hlines": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vlines": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axline_args": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_markers_fillstyle_rcparams": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_eventplot_colors": [
            {
                "type": "func",
                "args": {
                    "colors": "tuple"
                }
            }
        ],
        "test_rgba_markers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_labels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_density": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_stem_dates": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_stem": [
            {
                "type": "func",
                "args": {
                    "use_line_collection": "bool"
                }
            }
        ],
        "test_errorbar_with_prop_cycle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_errorbar_colorcycle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_errorbar": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_not_single": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_manage_xticks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_mod_artist_after_plotting": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_marker_behavior": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_bad_ci_2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_zorder": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_bad_ci_1": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_bad_medians_2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_bad_medians_1": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_rc_parameters": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_autorange_whiskers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_sym": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_sym2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_bxp_test_helper": [
            {
                "type": "func",
                "args": {
                    "stats_kwargs": "dict",
                    "transform_stats": "Callable[[np.ndarray], np.ndarray]",
                    "bxp_kwargs": "dict"
                }
            }
        ],
        "test_bxp_bad_positions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_bad_widths": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_custompositions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_customwidths": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_scalarwidth": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_showmeanasline": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_showmean": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_no_flier_stats": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_nobox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_nocaps": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_shownotches": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_customwhisker": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_customcap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_custommedian": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_custombox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_showcustommean": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_customoutlier": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_custompatchartist": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_patchartist": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_with_ylabels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_horizontal": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_with_xlabels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_precentilewhis": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_rangewhis": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bxp_baseline": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_stackplot_baseline": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_scales_no_data": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestScatter.test_scatter_2D": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestScatter.test_scatter_marker": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestScatter.test_scatter_plot": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_hist_datetime_datasets_bins": [
            {
                "type": "func",
                "args": {
                    "bins_preprocess": "Callable[[np.ndarray], np.ndarray]"
                }
            }
        ],
        "test_hist_datetime_datasets": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_density": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_step_filled": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_pandas_indexed": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_bar_pandas": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_bar_timedelta": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_ticklabel_fail": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_arc_angles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_canonical": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pcolorargs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pcolormesh_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pcolormesh": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_symlog2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_symlog": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fill_between_interpolate_decreasing": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fill_between_interpolate": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fill_betweenx_input": [
            {
                "type": "func",
                "args": {
                    "y": "np.ndarray",
                    "x1": "np.ndarray",
                    "x2": "np.ndarray"
                }
            }
        ],
        "test_fill_between_input": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y1": "np.ndarray",
                    "y2": "np.ndarray"
                }
            }
        ],
        "test_polycollection_joinstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_clip": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nonfinite_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_inverted_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hexbin_pickable": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hexbin_extent": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_aitoff_proj": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_single_date": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_annotate_default_arrow": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_arrow_in_view": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_arrow_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_arrow_simple": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_annotate_parameter_warn": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_use_sticky_edges": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_autoscale_tight": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_autoscale_tiny_range": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twin_inherit_autoscale_setting": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_spy_invalid_kwargs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_acorr": [
            {
                "type": "func",
                "args": {
                    "fig_test": "mpl.Axes",
                    "fig_ref": "mpl.Axes"
                }
            }
        ],
        "test_get_labels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pandas_indexing_dates": [
            {
                "type": "func",
                "args": {
                    "pd": "pd.DataFrame"
                }
            }
        ],
        "test_errorbar_inputs_shotgun": [
            {
                "type": "func",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "test_pie_textprops": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pyplot_axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_step_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_bar_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_barh_tick_label": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_edgecolor_none_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_color_none_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_tick_label_multiple_old_alignment": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_tick_label_multiple": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar_tick_label_single": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hexbin_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axhspan_epoch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_violin_point_mass": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_specgram_fs_none": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_scatter_empty_data": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_scatter_series_non_zero_index": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.Series"
                }
            }
        ],
        "TestScatter.test_scatter_size_arg_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestScatter.test_scatter_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_zero_linewidth": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_ls_ds_conflict": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bad_plot_args": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_retain_tick_visibility": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pandas_minimal_plot": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_pcolorargs_5205": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_range_and_density": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_auto_bins": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_step_bottom_geometry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_stepfilled_bottom_geometry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_step_geometry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stacked_stepfilled_geometry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_step_bottom_geometry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stepfilled_bottom_geometry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_step_geometry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_stepfilled_geometry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hist_with_empty_input": [
            {
                "type": "func",
                "args": {
                    "data": "np.ndarray",
                    "expected_number_of_hists": "int"
                }
            }
        ],
        "test_hist_unequal_bins_density": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_eventplot_legend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_errobar_nonefmt": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_errorbar_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_dates_pandas": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.Series"
                }
            }
        ],
        "test_bar_uint8": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axvspan_epoch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pie_rotatelabels_true": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pie_frame_grid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pie_ccw_true": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pie_linewidth_2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pie_linewidth_0": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pie_center_radius": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pie_nolabel_but_legend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invalid_axis_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twinx_axis_scales": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hexbin_log": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_minorticks_on": [
            {
                "type": "func",
                "args": {
                    "xscale": "str",
                    "yscale": "str"
                }
            }
        ],
        "test_date_timezone_x_and_y": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date_timezone_y": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_date_timezone_x": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes_tick_params_xlabelside": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes_tick_params_ylabelside": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes_tick_params_gridlines": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axis_set_tick_params_labelsize_labelcolor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shared_axes_autoscale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shared_bool": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_subplot_key_hash": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_markevery_polar": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_markevery_log_scales": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_markevery_linear_scales_zoomed": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_markevery_linear_scales": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pcolor_datetime_axis": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pcolormesh_datetime_axis": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_single_point": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_inverted_cla": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_ytickcolor_is_not_markercolor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_xtickcolor_is_not_markercolor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_violinplot_outofrange_quantiles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_violinplot_bad_quantiles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_violinplot_bad_widths": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_violinplot_bad_positions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_horiz_violinplot_custompoints_200": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_horiz_violinplot_custompoints_10": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_horiz_violinplot_showall": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_horiz_violinplot_showextrema": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_horiz_violinplot_showmeans": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_horiz_violinplot_showmedians": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_horiz_violinplot_baseline": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vert_violinplot_custompoints_200": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vert_violinplot_custompoints_10": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vert_violinplot_showall": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vert_violinplot_showmedians": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vert_violinplot_showextrema": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vert_violinplot_showmeans": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_vert_violinplot_baseline": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxplot_no_weird_whisker": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_as_mpl_axes_api": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tick_space_size_0": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_secondary_minorloc": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_subsampled_ticklabels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shared_with_aspect_3": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shared_with_aspect_2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_eventplot_orientation": [
            {
                "type": "func",
                "args": {
                    "data": "np.ndarray",
                    "orientation": "str"
                }
            }
        ],
        "test_empty_eventplot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_autoscale_log_shared": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twinx_cla": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_units": {
        "Quantity.magnitude": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quantity.units": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Quantity.__init__": [
            {
                "type": "method",
                "args": {
                    "data": "float",
                    "units": "str"
                }
            }
        ],
        "Quantity.to": [
            {
                "type": "method",
                "args": {
                    "new_units": "str"
                }
            }
        ],
        "Quantity.__getattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str"
                }
            }
        ],
        "Quantity.__getitem__": [
            {
                "type": "method",
                "args": {
                    "item": "float"
                }
            }
        ],
        "Quantity.__array__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "quantity_converter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_subclass": [
            {
                "type": "func",
                "args": {
                    "fig_test": "MagicMock",
                    "fig_ref": "MagicMock"
                }
            }
        ],
        "test_scatter_element0_masked": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_jpl_barh_units": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_jpl_bar_units": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_empty_set_limits_with_units": [
            {
                "type": "func",
                "args": {
                    "quantity_converter": "munits.ConversionInterface"
                }
            }
        ],
        "test_plot_masked_units": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_numpy_facade": [
            {
                "type": "func",
                "args": {
                    "quantity_converter": "munits.ConversionInterface"
                }
            }
        ],
        "test_empty_arrays": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_mlab": {
        "TestStride.calc_window_target": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "NFFT": "int",
                    "noverlap": "int",
                    "axis": "int"
                }
            }
        ],
        "TestWindow.sig_rand": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TestWindow.sig_ones": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TestWindow.setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.check_window_apply_repeat": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "window": "np.ndarray",
                    "NFFT": "int",
                    "noverlap": "int"
                }
            }
        ],
        "TestWindow.test_window_none_rand": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_window_none_ones": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_window_hanning_rand": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_window_hanning_ones": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.sig_zeros": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TestDetrend.sig_off": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TestDetrend.sig_slope": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TestDetrend.sig_slope_mean": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TestDetrend.sig_base": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TestDetrend.atol": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TestDetrend.setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_0D_zeros": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_0D_zeros_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_0D_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_1D_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_1D_slope": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_1D_base": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_1D_base_slope_off_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_2D": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_none_2D_T": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_0D_zeros": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_0D_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_zeros": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_base": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_base_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_base_slope": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_base_slope_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_base_slope_off_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_base_slope_off_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_base_slope_off_list_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_2D_default": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_2D_none": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_2D_none_T": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_2D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_2D_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_2D_axism1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_0D_d0_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_1D_d1_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_mean_2D_d2_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.check_freqs": [
            {
                "type": "method",
                "args": {
                    "vals": "np.ndarray",
                    "targfreqs": "np.ndarray",
                    "resfreqs": "np.ndarray",
                    "fstims": "np.ndarray"
                }
            }
        ],
        "TestGaussianKDEEvaluate.test_evaluate_equal_dim_and_num_lt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDEEvaluate.test_evaluate_point_dim_not_one": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDEEvaluate.test_evaluate_dim_and_num": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDEEvaluate.test_evaluate_inv_dim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDEEvaluate.test_evaluate_diff_dim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_wrong_bw_method": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_callable_singledim_dataset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_callable_covariance_dataset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_scalar_covariance_dataset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_scalar_empty_dataset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_scott_singledim_dataset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_scott_multidim_dataset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_silverman_singledim_dataset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_silverman_multidim_dataset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_single_dataset_element": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDECustom.test_no_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDE.test_kde_bandwidth_method": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDE.test_gaussian_kde_covariance_caching": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestGaussianKDE.test_kde_integer_input": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_stride_repeat": [
            {
                "type": "func",
                "args": {
                    "args": "np.ndarray",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "TestStride.test_stride_repeat_n_lt_1_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestStride.test_stride_repeat_invalid_axis": [
            {
                "type": "method",
                "args": {
                    "axis": "int"
                }
            }
        ],
        "TestStride.test_stride_repeat_invalid_input_shape": [
            {
                "type": "method",
                "args": {
                    "shape": "tuple"
                }
            }
        ],
        "TestStride.test_stride_ensure_integer_type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestStride.test_stride_windows_n32_noverlap0_unflatten": [
            {
                "type": "method",
                "args": {
                    "axis": "int"
                }
            }
        ],
        "TestStride.test_stride_windows_invalid_params": [
            {
                "type": "method",
                "args": {
                    "n": "int",
                    "noverlap": "int"
                }
            }
        ],
        "TestStride.test_stride_windows_invalid_input_shape": [
            {
                "type": "method",
                "args": {
                    "shape": "tuple"
                }
            }
        ],
        "TestDetrend.test_detrend_linear_2D_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_linear_1d_slope_off_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_linear_1d_slope_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_linear_1d_slope": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_linear_1d_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_linear_0D_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_linear_0D_zeros": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_detrend_linear_1d_slope_off_axis1_notranspose": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_linear_2d_slope_off_axis0_notranspose": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_detrend_linear_1d_slope_off_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_linear_2d_slope_off_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_detrend_linear_1d_slope_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_linear_1d_slope_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_detrend_linear_0D_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_linear_0D_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_2D_d2_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_1D_d1_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_0D_d0_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_bad_key_var_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_bad_key_str_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_detrend_mean_2D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_default_2D_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_constant_2D_none_T": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_mean_2D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_2D_none": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_2D_default": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_detrend_mean_0D_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_mean_0D_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_detrend_mean_0D_zeros": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_mean_0D_zeros": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_detrend_none_0D_zeros": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestDetrend.test_detrend_str_none_0D_zeros": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestStride.get_base": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "TestStride.test_stride_windows": [
            {
                "type": "method",
                "args": {
                    "n": "int",
                    "noverlap": "int",
                    "axis": "int"
                }
            }
        ],
        "TestStride.test_stride_repeat": [
            {
                "type": "method",
                "args": {
                    "n": "int",
                    "axis": "int"
                }
            }
        ],
        "TestSpectral.check_maxfreq": [
            {
                "type": "method",
                "args": {
                    "spec": "np.ndarray",
                    "fsp": "np.ndarray",
                    "fstims": "np.ndarray"
                }
            }
        ],
        "_apply_window": [
            {
                "type": "func",
                "args": {
                    "args": "np.ndarray",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "TestWindow.test_apply_window_hanning_2D_stack_windows_axis1_unflatten": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_2D_stack_windows_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_2D_stack_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_stride_windows_hanning_2D_n13_noverlapn3_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_2D_els3_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_2D_els2_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_2D__els1_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_2D_axis1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_els3_2D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_els2_2D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_els1_2D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_2D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_els_1D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_1D_axis0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_hanning_1D": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_3D_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_0D_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_1D_els_wrongsize_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestWindow.test_apply_window_1D_axis1_ValueError": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_psd_oversampling": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_psd_onesided_norm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestSpectral.test_psd_window_hanning_detrend_linear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_psd_window_hanning": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_psd_detrend": [
            {
                "type": "method",
                "args": {
                    "make_data": "Callable",
                    "detrend": "str"
                }
            }
        ],
        "test_cohere": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestSpectral.test_psd_windowarray_equal": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_specgram_complex_equivalent": [
            {
                "type": "method",
                "args": {
                    "mode": "str",
                    "conv": "Callable"
                }
            }
        ],
        "TestSpectral.test_specgram_auto_default_psd_equal": [
            {
                "type": "method",
                "args": {
                    "mode": "str"
                }
            }
        ],
        "TestSpectral.test_psd_csd_equal": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_specgram_warn_only1seg": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_specgram": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "TestSpectral.test_spectrum": [
            {
                "type": "method",
                "args": {
                    "kind": "str"
                }
            }
        ],
        "TestSpectral.test_psd_windowarray_scale_by_freq": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_psd_windowarray": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_psd": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_csd_padding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_csd": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.test_spectral_helper_psd": [
            {
                "type": "method",
                "args": {
                    "mode": "str",
                    "case": "str"
                }
            }
        ],
        "TestSpectral.test_single_spectrum_helper_unsupported_modes": [
            {
                "type": "method",
                "args": {
                    "mode": "str"
                }
            }
        ],
        "TestSpectral.test_spectral_helper_raises": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSpectral.stim": [
            {
                "type": "method",
                "args": {
                    "request": "mpab.Request",
                    "fstims": "list[float]",
                    "iscomplex": "bool",
                    "sides": "str",
                    "len_x": "int",
                    "NFFT_density": "int",
                    "nover_density": "int",
                    "pad_to_density": "int",
                    "pad_to_spectrum": "int"
                }
            }
        ]
    },
    "matplotlib.backends.backend_webagg": {
        "webagg_server_thread": [
            {
                "type": "var",
                "anno": "ServerThread"
            }
        ],
        "FigureCanvasWebAgg._timer_cls": [
            {
                "type": "attr",
                "anno": "type[TimerTornado]"
            }
        ],
        "FigureCanvasWebAgg.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WebAggApplication.initialized": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WebAggApplication.started": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WebAggApplication.SingleFigurePage.url_prefix": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "WebAggApplication.SingleFigurePage.__init__": [
            {
                "type": "method",
                "args": {
                    "application": "WebAggApplication",
                    "request": "tornado.web.Request",
                    "url_prefix": "str",
                    "kwargs": "tornado.web.Request"
                }
            }
        ],
        "WebAggApplication.AllFiguresPage.url_prefix": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "WebAggApplication.AllFiguresPage.__init__": [
            {
                "type": "method",
                "args": {
                    "application": "WebAggApplication",
                    "request": "tornado.web.Request",
                    "url_prefix": "str",
                    "kwargs": "tornado.web.Request"
                }
            }
        ],
        "WebAggApplication.WebSocket.supports_binary": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WebAggApplication.WebSocket.fignum": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WebAggApplication.WebSocket.manager": [
            {
                "type": "attr",
                "anno": "Gcf"
            }
        ],
        "WebAggApplication.WebSocket.send_json": [
            {
                "type": "method",
                "args": {
                    "content": "dict"
                }
            }
        ],
        "_BackendWebAgg.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasWebAgg]"
            }
        ],
        "_BackendWebAgg.FigureManager": [
            {
                "type": "attr",
                "anno": "core.FigureManager"
            }
        ],
        "WebAggApplication.WebSocket.send_binary": [
            {
                "type": "method",
                "args": {
                    "blob": "str"
                }
            }
        ],
        "WebAggApplication.WebSocket.on_message": [
            {
                "type": "method",
                "args": {
                    "message": "str"
                }
            }
        ],
        "WebAggApplication.SingleFigurePage.get": [
            {
                "type": "method",
                "args": {
                    "fignum": "int"
                }
            }
        ],
        "WebAggApplication.MplJs.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WebAggApplication.Download.get": [
            {
                "type": "method",
                "args": {
                    "fignum": "int",
                    "fmt": "str"
                }
            }
        ],
        "WebAggApplication.initialize": [
            {
                "type": "method",
                "args": {
                    "cls": "type[backend_agg.FigureManagerBase]",
                    "url_prefix": "str",
                    "port": "int",
                    "address": "str"
                }
            }
        ],
        "WebAggApplication.__init__": [
            {
                "type": "method",
                "args": {
                    "url_prefix": "str"
                }
            }
        ],
        "WebAggApplication.FavIcon.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WebAggApplication.AllFiguresPage.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WebAggApplication.start": [
            {
                "type": "method",
                "args": {
                    "cls": "type[backend_agg.FigureManagerBase]"
                }
            }
        ],
        "_BackendWebAgg.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ipython_inline_display": [
            {
                "type": "func",
                "args": {
                    "figure": "plt.figure.Figure"
                }
            }
        ],
        "ServerThread.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WebAggApplication.WebSocket.on_close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WebAggApplication.WebSocket.open": [
            {
                "type": "method",
                "args": {
                    "fignum": "int"
                }
            }
        ],
        "_BackendWebAgg.trigger_manager_draw": [
            {
                "type": "method",
                "args": {
                    "manager": "Gcf"
                }
            }
        ]
    },
    "matplotlib.backends.backend_gtk3cairo": {
        "FigureCanvasGTK3Cairo._renderer": [
            {
                "type": "attr",
                "anno": "RendererGTK3Cairo"
            }
        ],
        "_BackendGTK3Cairo.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[backend_gtk3.FigureCanvas]"
            }
        ],
        "RendererGTK3Cairo.set_context": [
            {
                "type": "method",
                "args": {
                    "ctx": "Gtk.Context"
                }
            }
        ],
        "FigureCanvasGTK3Cairo._renderer_init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasGTK3Cairo._render_figure": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float"
                }
            }
        ],
        "FigureCanvasGTK3Cairo.on_draw_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "ctx": "Gtk.Context"
                }
            }
        ]
    },
    "matplotlib.backends.backend_qt5": {
        "backend_version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SPECIAL_KEYS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "SUPER": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ALT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CTRL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SHIFT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MODIFIER_KEYS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "cursord": [
            {
                "type": "var",
                "anno": "typing.Dict[QtCore.Qt.Cursor, QtCore.Qt.Cursor]"
            }
        ],
        "qApp": [
            {
                "type": "var",
                "anno": "QtWidgets.QApplication"
            }
        ],
        "TimerQT._timer": [
            {
                "type": "attr",
                "anno": "QtCore.QTimer"
            }
        ],
        "FigureCanvasQT.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasQT._timer_cls": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "FigureCanvasQT._dpi_ratio_prev": [
            {
                "type": "attr",
                "anno": "QtCore.Qt.FloatRatio"
            }
        ],
        "FigureCanvasQT._draw_pending": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasQT._is_drawing": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasQT._draw_rect_callback": [
            {
                "type": "attr",
                "anno": "typing.Callable"
            }
        ],
        "FigureCanvasQT._dpi_ratio": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT.minumumSizeHint": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT.flush_events": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT._event_loop": [
            {
                "type": "attr",
                "anno": "QtCore.QEventLoop"
            }
        ],
        "FigureCanvasQT.start_event_loop": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "FigureCanvasQT.stop_event_loop": [
            {
                "type": "method",
                "args": {
                    "event": "int"
                }
            }
        ],
        "MainWindow.closing": [
            {
                "type": "attr",
                "anno": "QtCore.Signal"
            }
        ],
        "MainWindow.closeEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtCore.QEvent"
                }
            }
        ],
        "FigureManagerQT.window": [
            {
                "type": "attr",
                "anno": "MainWindow"
            }
        ],
        "FigureManagerQT.toolbar": [
            {
                "type": "attr",
                "anno": "backend_tools.ToolBar"
            }
        ],
        "FigureManagerQT.full_screen_toggle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerQT.get_window_title": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerQT.set_window_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "NavigationToolbar2QT.message": [
            {
                "type": "attr",
                "anno": "QtCore.Signal"
            }
        ],
        "NavigationToolbar2QT._parent": [
            {
                "type": "attr",
                "anno": "QtWidgets.QWidget"
            }
        ],
        "NavigationToolbar2QT.coordinates": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NavigationToolbar2QT._actions": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "NavigationToolbar2QT.locLabel": [
            {
                "type": "attr",
                "anno": "QtWidgets.QLabel"
            }
        ],
        "NavigationToolbar2QT.parent": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NavigationToolbar2QT.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "SubplotToolQt._figure": [
            {
                "type": "attr",
                "anno": "FigureCanvasBase"
            }
        ],
        "SubplotToolQt._attrs": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "SubplotToolQt._defaults": [
            {
                "type": "attr",
                "anno": "dict[str, QtWidgets.QPushButton]"
            }
        ],
        "ToolbarQt._message_action": [
            {
                "type": "attr",
                "anno": "QtWidgets.QWidget"
            }
        ],
        "ToolbarQt._toolitems": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "ToolbarQt._groups": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "ToolbarQt.remove_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_BackendQT5.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasQT]"
            }
        ],
        "_BackendQT5.FigureManager": [
            {
                "type": "attr",
                "anno": "QtCore.QT"
            }
        ],
        "_BackendQT5.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotToolQt._reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_allow_super_init": [
            {
                "type": "func",
                "args": {
                    "__init__": "typing.Callable"
                }
            }
        ],
        "TimerQT._timer_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerQT.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerQT._timer_set_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerQT._timer_set_single_shot": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT.buttond": [
            {
                "type": "attr",
                "anno": "QtCore.Qt.Button"
            }
        ],
        "NavigationToolbar2QT.toolitems": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "NavigationToolbar2QT.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "QtCore.Qt.Cursor"
                }
            }
        ],
        "ToolCopyToClipboardQT.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "QtCore.Qt.QMessageBox",
                    "kwargs": "QtCore.Qt.QMessageBox"
                }
            }
        ],
        "SetCursorQt.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "QtCore.Qt.Cursor"
                }
            }
        ],
        "NavigationToolbar2QT._update_buttons_checked": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT.get_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT.sizeHint": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2QT.set_history_buttons": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotToolQt._tight_layout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotToolQt.__init__": [
            {
                "type": "method",
                "args": {
                    "targetfig": "FigureCanvasBase",
                    "parent": "QtWidgets.QDialog"
                }
            }
        ],
        "NavigationToolbar2QT.configure_subplots": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigureSubplotsQt.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "QtCore.Qt.QModelIndex"
                }
            }
        ],
        "FigureCanvasQT.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT._draw_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT.draw_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT._update_figure_dpi": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2QT.basedir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT.leaveEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtGui.QEvent"
                }
            }
        ],
        "TimerQT._timer_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolbarQt.toggle_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "toggled": "bool"
                }
            }
        ],
        "_create_qApp": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "FigureCanvasQT.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure"
                }
            }
        ],
        "FigureCanvasQT.drawRectangle": [
            {
                "type": "method",
                "args": {
                    "rect": "typing.List[int]"
                }
            }
        ],
        "NavigationToolbar2QT.remove_rubberband": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RubberbandQt.remove_rubberband": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQT.mouseEventCoords": [
            {
                "type": "method",
                "args": {
                    "pos": "QtCore.Qt.MousePosition"
                }
            }
        ],
        "FigureCanvasQT.mouseReleaseEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtCore.Qt.MouseEvent"
                }
            }
        ],
        "FigureCanvasQT.mouseMoveEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtCore.Qt.MousePosition"
                }
            }
        ],
        "FigureCanvasQT.mouseDoubleClickEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtCore.Qt.MouseEvent"
                }
            }
        ],
        "FigureCanvasQT.mousePressEvent": [
            {
                "type": "method",
                "args": {
                    "event": "MouseEvent"
                }
            }
        ],
        "FigureCanvasQT.enterEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtGui.QEvent"
                }
            }
        ],
        "FigureCanvasQT._get_key": [
            {
                "type": "method",
                "args": {
                    "event": "QtCore.Qt.Event"
                }
            }
        ],
        "FigureCanvasQT.keyReleaseEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtCore.Qt.Event"
                }
            }
        ],
        "FigureCanvasQT.keyPressEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtCore.Qt.Event"
                }
            }
        ],
        "HelpQt.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "QtCore.Qt.QMessageBox"
                }
            }
        ],
        "TimerQT.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "QtCore.Qt.Arguments",
                    "kwargs": "QtCore.Qt.Kwargs"
                }
            }
        ],
        "NavigationToolbar2QT.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "event": "QtWidgets.QWidget",
                    "x0": "int",
                    "y0": "int",
                    "x1": "int",
                    "y1": "int"
                }
            }
        ],
        "RubberbandQt.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "x0": "int",
                    "y0": "int",
                    "x1": "int",
                    "y1": "int"
                }
            }
        ],
        "FigureCanvasQT.wheelEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtCore.Qt.Event"
                }
            }
        ],
        "FigureManagerQT.resize": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "FigureCanvasQT.resizeEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtGui.QResizeEvent"
                }
            }
        ],
        "FigureCanvasQT._update_dpi": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BackendQT5.trigger_manager_draw": [
            {
                "type": "method",
                "args": {
                    "manager": "FigureManager"
                }
            }
        ],
        "SubplotToolQt._on_value_changed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2QT.save_figure": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "SaveFigureQt.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "SubplotToolQt._export_values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2QT.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "parent": "QtWidgets.QWidget",
                    "coordinates": "bool"
                }
            }
        ],
        "NavigationToolbar2QT._icon": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "FigureManagerQT.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerQT.destroy": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FigureManagerQT._widgetclosed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StatusbarQt.__init__": [
            {
                "type": "method",
                "args": {
                    "window": "QtWidgets.QMainWindow",
                    "args": "QtCore.Qt.QArgs",
                    "kwargs": "QtCore.Qt.QKwargs"
                }
            }
        ],
        "StatusbarQt.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "ToolbarQt.__init__": [
            {
                "type": "method",
                "args": {
                    "toolmanager": "ToolManager",
                    "parent": "QtWidgets.QWidget"
                }
            }
        ],
        "ToolbarQt.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "ToolbarQt._add_to_group": [
            {
                "type": "method",
                "args": {
                    "group": "str",
                    "name": "str",
                    "button": "QtWidgets.QToolButton",
                    "position": "int"
                }
            }
        ],
        "ToolbarQt.add_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "group": "str",
                    "position": "int",
                    "image_file": "str",
                    "description": "str",
                    "toggle": "bool"
                }
            }
        ],
        "FigureManagerQT._get_toolbar": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "parent": "QtWidgets.QWidget"
                }
            }
        ],
        "NavigationToolbar2QT.zoom": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2QT.pan": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2QT.edit_parameters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerQT.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "num": "int"
                }
            }
        ]
    },
    "matplotlib.backends.backend_template": {
        "RendererTemplate.dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererTemplate.__init__": [
            {
                "type": "method",
                "args": {
                    "dpi": "float"
                }
            }
        ],
        "RendererTemplate.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Path",
                    "rgbFace": "int"
                }
            }
        ],
        "RendererTemplate.draw_image": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "im": "np.ndarray"
                }
            }
        ],
        "RendererTemplate.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "Gcf",
                    "x": "float",
                    "y": "float",
                    "s": "float",
                    "prop": "float",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "Text"
                }
            }
        ],
        "RendererTemplate.flipy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererTemplate.get_canvas_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererTemplate.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str",
                    "ismath": "bool"
                }
            }
        ],
        "RendererTemplate.points_to_pixels": [
            {
                "type": "method",
                "args": {
                    "points": "float"
                }
            }
        ],
        "draw_if_interactive": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "FigureCanvasTemplate.print_foo": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FigureCanvasTemplate.get_default_filetype": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvas": [
            {
                "type": "var",
                "anno": "FigureCanvasTemplate"
            }
        ],
        "FigureManager": [
            {
                "type": "var",
                "anno": "FigureManager"
            }
        ],
        "FigureCanvasTemplate.filetypes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "show": [
            {
                "type": "func",
                "args": {
                    "block": "str"
                }
            }
        ],
        "FigureCanvasTemplate.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererTemplate.new_gc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "new_figure_manager_given_figure": [
            {
                "type": "func",
                "args": {
                    "num": "int",
                    "figure": "Figure"
                }
            }
        ],
        "new_figure_manager": [
            {
                "type": "func",
                "args": {
                    "num": "int",
                    "args": "str",
                    "FigureClass": "Figure",
                    "kwargs": "str"
                }
            }
        ]
    },
    "matplotlib.backends._backend_pdf_ps": {
        "CharacterTracker.used": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CharacterTracker.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPDFPSBase.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererPDFPSBase.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererPDFPSBase.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float"
                }
            }
        ],
        "RendererPDFPSBase.flipy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPDFPSBase.option_scale_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPDFPSBase.get_canvas_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CharacterTracker.used_characters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_cached_get_afm_from_fname": [
            {
                "type": "func",
                "args": {
                    "fname": "str"
                }
            }
        ],
        "RendererPDFPSBase.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str",
                    "ismath": "bool"
                }
            }
        ],
        "RendererPDFPSBase.option_image_nocomposite": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPDFPSBase._get_font_afm": [
            {
                "type": "method",
                "args": {
                    "prop": "str"
                }
            }
        ],
        "CharacterTracker.merge": [
            {
                "type": "method",
                "args": {
                    "other": "CharacterTracker"
                }
            }
        ],
        "CharacterTracker.track": [
            {
                "type": "method",
                "args": {
                    "font": "Union[Font, str]",
                    "s": "str"
                }
            }
        ],
        "RendererPDFPSBase._get_font_ttf": [
            {
                "type": "method",
                "args": {
                    "prop": "str"
                }
            }
        ]
    },
    "matplotlib.backends.backend_tkcairo": {
        "FigureCanvasTkCairo._renderer": [
            {
                "type": "attr",
                "anno": "RendererCairo"
            }
        ],
        "_BackendTkCairo.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasCairo]"
            }
        ],
        "FigureCanvasTkCairo.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasTkCairo.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ]
    },
    "matplotlib.backends.backend_svg": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "escape_cdata": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_escape_xml_comment": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "escape_attrib": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "XMLWriter.__write": [
            {
                "type": "attr",
                "anno": "Callable[[str], str]"
            }
        ],
        "XMLWriter.__open": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "XMLWriter.__tags": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "XMLWriter.__data": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "XMLWriter.__indentation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XMLWriter.data": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "XMLWriter.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_capstyle_d": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "RendererSVG.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererSVG.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererSVG.writer": [
            {
                "type": "attr",
                "anno": "XMLWriter"
            }
        ],
        "RendererSVG.image_dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererSVG._groupd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererSVG.basename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RendererSVG._image_counter": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererSVG._clipd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererSVG._markers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererSVG._path_collection_id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererSVG._hatchd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererSVG._has_gouraud": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RendererSVG._n_gradients": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererSVG._fonts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererSVG.mathtext_parser": [
            {
                "type": "attr",
                "anno": "MathTextParser"
            }
        ],
        "RendererSVG._glyph_map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererSVG._start_id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererSVG._convert_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "transform": "Affine2D",
                    "clip": "float",
                    "simplify": "bool",
                    "sketch": "int"
                }
            }
        ],
        "RendererSVG.option_scale_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererSVG.get_image_magnification": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererSVG._adjust_char_id": [
            {
                "type": "method",
                "args": {
                    "char_id": "str"
                }
            }
        ],
        "RendererSVG.flipy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererSVG.get_canvas_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasSVG.filetypes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FigureCanvasSVG.fixed_dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureCanvasSVG.get_default_filetype": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerSVG": [
            {
                "type": "var",
                "anno": "FigureManagerBase"
            }
        ],
        "svgProlog": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_BackendSVG.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasSVG]"
            }
        ],
        "short_float_fmt": [
            {
                "type": "func",
                "args": {
                    "x": "float"
                }
            }
        ],
        "escape_comment": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "backend_version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RendererSVG._make_flip_transform": [
            {
                "type": "method",
                "args": {
                    "transform": "Affine2D"
                }
            }
        ],
        "RendererSVG.option_image_nocomposite": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XMLWriter.__flush": [
            {
                "type": "method",
                "args": {
                    "indent": "bool"
                }
            }
        ],
        "XMLWriter.comment": [
            {
                "type": "method",
                "args": {
                    "comment": "str"
                }
            }
        ],
        "XMLWriter.start": [
            {
                "type": "method",
                "args": {
                    "tag": "str",
                    "attrib": "dict",
                    "extra": "str"
                }
            }
        ],
        "RendererSVG.open_group": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "gid": "int"
                }
            }
        ],
        "XMLWriter.end": [
            {
                "type": "method",
                "args": {
                    "tag": "str",
                    "indent": "bool"
                }
            }
        ],
        "XMLWriter.element": [
            {
                "type": "method",
                "args": {
                    "tag": "str",
                    "text": "str",
                    "attrib": "dict",
                    "extra": "str"
                }
            }
        ],
        "XMLWriter.close": [
            {
                "type": "method",
                "args": {
                    "id": "str"
                }
            }
        ],
        "generate_css": [
            {
                "type": "func",
                "args": {
                    "attrib": "dict"
                }
            }
        ],
        "XMLWriter.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "TextIOWrapper"
                }
            }
        ],
        "RendererSVG.close_group": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "RendererSVG._write_clips": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererSVG._write_default_style": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererSVG.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float",
                    "svgwriter": "TextIOWrapper",
                    "basename": "str",
                    "image_dpi": "float"
                }
            }
        ],
        "RendererSVG._update_glyph_map_defs": [
            {
                "type": "method",
                "args": {
                    "glyph_map_new": "dict"
                }
            }
        ],
        "RendererSVG._make_id": [
            {
                "type": "method",
                "args": {
                    "type": "str",
                    "content": "str"
                }
            }
        ],
        "RendererSVG._get_hatch": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "rgbFace": "tuple"
                }
            }
        ],
        "generate_transform": [
            {
                "type": "func",
                "args": {
                    "transform_list": "list"
                }
            }
        ],
        "RendererSVG.draw_gouraud_triangle": [
            {
                "type": "method",
                "args": {
                    "gc": "str",
                    "points": "np.ndarray",
                    "colors": "np.ndarray",
                    "trans": "Affine2D"
                }
            }
        ],
        "RendererSVG._write_hatches": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererSVG._get_font": [
            {
                "type": "method",
                "args": {
                    "prop": "FontProperties"
                }
            }
        ],
        "RendererSVG._get_clip": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase"
                }
            }
        ],
        "RendererSVG.draw_image": [
            {
                "type": "method",
                "args": {
                    "gc": "mpl.rcsetup.Context",
                    "x": "float",
                    "y": "float",
                    "im": "np.ndarray",
                    "transform": "np.ndarray"
                }
            }
        ],
        "RendererSVG.draw_gouraud_triangles": [
            {
                "type": "method",
                "args": {
                    "gc": "str",
                    "triangles_array": "np.ndarray",
                    "colors_array": "np.ndarray",
                    "transform": "Affine2D"
                }
            }
        ],
        "RendererSVG.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str",
                    "ismath": "bool"
                }
            }
        ],
        "RendererSVG._draw_text_as_text": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "TextIOWrapper"
                }
            }
        ],
        "RendererSVG._get_style_dict": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "rgbFace": "tuple"
                }
            }
        ],
        "RendererSVG._get_style": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "rgbFace": "tuple"
                }
            }
        ],
        "RendererSVG.draw_path_collection": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "master_transform": "Affine2D",
                    "paths": "Path",
                    "all_transforms": "Path",
                    "offsets": "np.ndarray",
                    "offsetTrans": "np.ndarray",
                    "facecolors": "np.ndarray",
                    "edgecolors": "np.ndarray",
                    "linewidths": "tuple",
                    "linestyles": "tuple",
                    "antialiaseds": "tuple",
                    "urls": "tuple",
                    "offset_position": "str"
                }
            }
        ],
        "RendererSVG.draw_markers": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "marker_path": "str",
                    "marker_trans": "str",
                    "path": "Path",
                    "trans": "Affine2D",
                    "rgbFace": "str"
                }
            }
        ],
        "RendererSVG.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Affine2D",
                    "rgbFace": "int"
                }
            }
        ],
        "RendererSVG.finalize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasSVG._print_svg": [
            {
                "type": "method",
                "args": {
                    "filename": "TextIOWrapper",
                    "fh": "TextIOWrapper",
                    "dpi": "float",
                    "bbox_inches_restore": "float",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasSVG.print_svg": [
            {
                "type": "method",
                "args": {
                    "filename": "TextIOWrapper",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasSVG.print_svgz": [
            {
                "type": "method",
                "args": {
                    "filename": "TextIOWrapper",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "RendererSVG._draw_text_as_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "TextIOWrapper"
                }
            }
        ],
        "RendererSVG.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "TextIOWrapper"
                }
            }
        ],
        "RendererSVG.draw_tex": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "TextIOWrapper"
                }
            }
        ]
    },
    "matplotlib.backends.backend_mixed": {
        "MixedModeRenderer._raster_renderer_class": [
            {
                "type": "attr",
                "anno": "RendererAgg"
            }
        ],
        "MixedModeRenderer._width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MixedModeRenderer._height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MixedModeRenderer.dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MixedModeRenderer._vector_renderer": [
            {
                "type": "attr",
                "anno": "RendererAgg"
            }
        ],
        "MixedModeRenderer._raster_renderer": [
            {
                "type": "attr",
                "anno": "RendererAgg"
            }
        ],
        "MixedModeRenderer._rasterizing": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MixedModeRenderer.figure": [
            {
                "type": "attr",
                "anno": "Figure"
            }
        ],
        "MixedModeRenderer._figdpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MixedModeRenderer._bbox_inches_restore": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MixedModeRenderer._renderer": [
            {
                "type": "attr",
                "anno": "RendererAgg"
            }
        ],
        "MixedModeRenderer.__getattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str"
                }
            }
        ],
        "MixedModeRenderer.start_rasterizing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MixedModeRenderer.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure",
                    "width": "int",
                    "height": "int",
                    "dpi": "int",
                    "vector_renderer": "RendererAgg",
                    "raster_renderer_class": "RendererAgg",
                    "bbox_inches_restore": "float"
                }
            }
        ],
        "MixedModeRenderer.stop_rasterizing": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.backends.backend_gtk3agg": {
        "FigureCanvasGTK3Agg._bbox_queue": [
            {
                "type": "attr",
                "anno": "list[transforms.Bbox]"
            }
        ],
        "FigureCanvasGTK3Agg._renderer_init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BackendGTK3Cairo.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[backend_agg.FigureCanvas]"
            }
        ],
        "_BackendGTK3Cairo.FigureManager": [
            {
                "type": "attr",
                "anno": "backend_gtk3.FigureManager"
            }
        ],
        "FigureCanvasGTK3Agg._render_figure": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float"
                }
            }
        ],
        "FigureCanvasGTK3Agg.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasGTK3Agg.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure"
                }
            }
        ],
        "FigureCanvasGTK3Agg.blit": [
            {
                "type": "method",
                "args": {
                    "bbox": "transforms.Bbox"
                }
            }
        ],
        "FigureCanvasGTK3Agg.on_draw_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.QWidget",
                    "ctx": "backend_agg.FigureCanvasGTK3"
                }
            }
        ],
        "FigureCanvasGTK3Agg.print_png": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "args": "tuple[int, ...]",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ]
    },
    "matplotlib.backends.backend_tkagg": {
        "_BackendTkAgg.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasAgg]"
            }
        ],
        "FigureCanvasTkAgg.blit": [
            {
                "type": "method",
                "args": {
                    "bbox": "tk.Bbox"
                }
            }
        ],
        "FigureCanvasTkAgg.draw": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.backends.backend_qt5cairo": {
        "FigureCanvasQTCairo._renderer": [
            {
                "type": "attr",
                "anno": "RendererCairo"
            }
        ],
        "_BackendQT5Cairo.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasQT]"
            }
        ],
        "FigureCanvasQTCairo.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasQTCairo.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "FigureCanvasQT"
                }
            }
        ],
        "FigureCanvasQTCairo.paintEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtGui.QPainter"
                }
            }
        ]
    },
    "matplotlib.backends.backend_cairo": {
        "backend_version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_to_context": [
            {
                "type": "func",
                "args": {
                    "ctx": "GraphicsContextBase"
                }
            }
        ],
        "_cairo_font_args_from_font_prop": [
            {
                "type": "func",
                "args": {
                    "prop": "ttfFontProperty"
                }
            }
        ],
        "RendererCairo.fontweights": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererCairo.fontangles": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererCairo.dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererCairo.gc": [
            {
                "type": "attr",
                "anno": "GraphicsContextCairo"
            }
        ],
        "RendererCairo.text_ctx": [
            {
                "type": "attr",
                "anno": "cairo.Context"
            }
        ],
        "RendererCairo.mathtext_parser": [
            {
                "type": "attr",
                "anno": "MathTextParser"
            }
        ],
        "RendererCairo.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererCairo.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererCairo.set_width_height": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float"
                }
            }
        ],
        "RendererCairo.get_canvas_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererCairo.points_to_pixels": [
            {
                "type": "method",
                "args": {
                    "points": "float"
                }
            }
        ],
        "GraphicsContextCairo._joind": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "GraphicsContextCairo._capd": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "GraphicsContextCairo.renderer": [
            {
                "type": "attr",
                "anno": "RendererBase"
            }
        ],
        "GraphicsContextCairo._capstyle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GraphicsContextCairo._dashes": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GraphicsContextCairo._joinstyle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GraphicsContextCairo._linewidth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_BackendCairo.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasBase]"
            }
        ],
        "_BackendCairo.FigureManager": [
            {
                "type": "attr",
                "anno": "FigureManagerBase"
            }
        ],
        "RendererCairo.set_ctx_from_surface": [
            {
                "type": "method",
                "args": {
                    "surface": "cairo.Surface"
                }
            }
        ],
        "RendererCairo.new_gc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_append_path": [
            {
                "type": "func",
                "args": {
                    "ctx": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Affine2D",
                    "clip": "float"
                }
            }
        ],
        "GraphicsContextCairo.set_clip_rectangle": [
            {
                "type": "method",
                "args": {
                    "rectangle": "tuple"
                }
            }
        ],
        "GraphicsContextCairo.__init__": [
            {
                "type": "method",
                "args": {
                    "renderer": "RendererBase"
                }
            }
        ],
        "GraphicsContextCairo.set_linewidth": [
            {
                "type": "method",
                "args": {
                    "w": "float"
                }
            }
        ],
        "GraphicsContextCairo.set_joinstyle": [
            {
                "type": "method",
                "args": {
                    "js": "str"
                }
            }
        ],
        "GraphicsContextCairo.set_foreground": [
            {
                "type": "method",
                "args": {
                    "fg": "tuple",
                    "isRGBA": "bool"
                }
            }
        ],
        "GraphicsContextCairo.set_dashes": [
            {
                "type": "method",
                "args": {
                    "offset": "float",
                    "dashes": "float"
                }
            }
        ],
        "GraphicsContextCairo.set_capstyle": [
            {
                "type": "method",
                "args": {
                    "cs": "str"
                }
            }
        ],
        "GraphicsContextCairo.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "GraphicsContextCairo.restore": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererCairo.draw_image": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "im": "np.ndarray"
                }
            }
        ],
        "RendererCairo._fill_and_stroke": [
            {
                "type": "method",
                "args": {
                    "ctx": "GraphicsContextBase",
                    "fill_c": "str",
                    "alpha": "float",
                    "alpha_overrides": "bool"
                }
            }
        ],
        "RendererCairo.draw_markers": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "marker_path": "str",
                    "marker_trans": "str",
                    "path": "Path",
                    "transform": "Path",
                    "rgbFace": "str"
                }
            }
        ],
        "RendererCairo.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Affine2D",
                    "rgbFace": "int"
                }
            }
        ],
        "RendererCairo.__init__": [
            {
                "type": "method",
                "args": {
                    "dpi": "int"
                }
            }
        ],
        "RendererCairo.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str",
                    "ismath": "bool"
                }
            }
        ],
        "GraphicsContextCairo.set_clip_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "RendererCairo._draw_mathtext": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContext",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "ttfFontProperty",
                    "angle": "float"
                }
            }
        ],
        "RendererCairo.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContext",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "ttfFontProperty",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "Text"
                }
            }
        ],
        "GraphicsContextCairo.get_rgb": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasCairo._get_printed_image_surface": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasCairo.print_rgba": [
            {
                "type": "method",
                "args": {
                    "fobj": "Path",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FigureCanvasCairo.print_raw": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "FigureCanvasCairo.print_png": [
            {
                "type": "method",
                "args": {
                    "fobj": "Path",
                    "args": "tuple[int, ...]",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "FigureCanvasCairo._save": [
            {
                "type": "method",
                "args": {
                    "fo": "Union[str, Path]",
                    "fmt": "str",
                    "orientation": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FigureCanvasCairo.print_svgz": [
            {
                "type": "method",
                "args": {
                    "fobj": "Union[str, Path]",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FigureCanvasCairo.print_svg": [
            {
                "type": "method",
                "args": {
                    "fobj": "Union[str, Path]",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FigureCanvasCairo.print_ps": [
            {
                "type": "method",
                "args": {
                    "fobj": "Union[str, Path]",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FigureCanvasCairo.print_pdf": [
            {
                "type": "method",
                "args": {
                    "fobj": "Union[str, Path]",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "matplotlib.backends.backend_macosx": {
        "FigureCanvasMac.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasMac._timer_cls": [
            {
                "type": "attr",
                "anno": "type[TimerMac]"
            }
        ],
        "FigureCanvasMac._dpi_ratio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FigureManagerMac.toolbar": [
            {
                "type": "attr",
                "anno": "SubplotTool | None"
            }
        ],
        "NavigationToolbar2Mac.canvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasBase"
            }
        ],
        "NavigationToolbar2Mac.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "event": "SubplotTool",
                    "x0": "int",
                    "y0": "int",
                    "x1": "int",
                    "y1": "int"
                }
            }
        ],
        "NavigationToolbar2Mac.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "Gdk.Cursor"
                }
            }
        ],
        "NavigationToolbar2Mac.set_message": [
            {
                "type": "method",
                "args": {
                    "message": "str"
                }
            }
        ],
        "_BackendMac.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvas]"
            }
        ],
        "_BackendMac.FigureManager": [
            {
                "type": "attr",
                "anno": "Type[FigureManagerMac]"
            }
        ],
        "_BackendMac.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasMac.blit": [
            {
                "type": "method",
                "args": {
                    "bbox": "tuple"
                }
            }
        ],
        "FigureCanvasMac.invalidate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasMac.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasMac.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure"
                }
            }
        ],
        "FigureCanvasMac._set_device_scale": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "NavigationToolbar2Mac.release": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "FigureCanvasMac.resize": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "_BackendMac.trigger_manager_draw": [
            {
                "type": "method",
                "args": {
                    "manager": "FigureManager"
                }
            }
        ],
        "NavigationToolbar2Mac.save_figure": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2Mac.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase"
                }
            }
        ],
        "FigureCanvasMac._draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerMac.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2Mac.prepare_configure_subplots": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerMac.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "num": "int"
                }
            }
        ]
    },
    "matplotlib.backends.qt_compat": {
        "QT_API_PYQT5": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "QT_API_PYSIDE2": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "QT_API_PYQTv2": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "QT_API_PYSIDE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "QT_API_PYQT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "QT_API_ENV": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_ETS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "QT_API": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_setup_pyqt5": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_setup_pyqt4": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_candidates": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "ETS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "QT_RC_MAJOR_VERSION": [
            {
                "type": "var",
                "anno": "LooseVersion"
            }
        ]
    },
    "matplotlib.backends.qt_editor.figureoptions": {
        "LINESTYLES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DRAWSTYLES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "MARKERS": [
            {
                "type": "var",
                "anno": "markers.MarkerStyle"
            }
        ],
        "figure_edit": [
            {
                "type": "func",
                "args": {
                    "axes": "maxes.Axes",
                    "parent": "QtWidgets.QWidget"
                }
            }
        ]
    },
    "matplotlib.backends.qt_editor._formsubplottool": {
        "UiSubplotTool._widgets": [
            {
                "type": "attr",
                "anno": "dict[str, QtWidgets.QPushButton]"
            }
        ],
        "UiSubplotTool.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "QtWidgets.QDialog",
                    "kwargs": "QtWidgets.QDialog"
                }
            }
        ]
    },
    "matplotlib.backends.qt_editor._formlayout": {
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__license__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "BLACKLIST": [
            {
                "type": "var",
                "anno": "set[str]"
            }
        ],
        "ColorButton.colorChanged": [
            {
                "type": "attr",
                "anno": "QtCore.Signal[QtGui.QColor]"
            }
        ],
        "ColorButton._color": [
            {
                "type": "attr",
                "anno": "QtGui.QColor"
            }
        ],
        "ColorButton.get_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorLayout.lineedit": [
            {
                "type": "attr",
                "anno": "QtWidgets.QLineEdit"
            }
        ],
        "ColorLayout.colorbtn": [
            {
                "type": "attr",
                "anno": "ColorButton"
            }
        ],
        "font_is_installed": [
            {
                "type": "func",
                "args": {
                    "font": "str"
                }
            }
        ],
        "tuple_to_qfont": [
            {
                "type": "func",
                "args": {
                    "tup": "tuple"
                }
            }
        ],
        "FontLayout.family": [
            {
                "type": "attr",
                "anno": "QtWidgets.QFontComboBox"
            }
        ],
        "FontLayout.size": [
            {
                "type": "attr",
                "anno": "QtWidgets.QComboBox"
            }
        ],
        "FontLayout.italic": [
            {
                "type": "attr",
                "anno": "QtWidgets.QCheckBox"
            }
        ],
        "FontLayout.bold": [
            {
                "type": "attr",
                "anno": "QtWidgets.QCheckBox"
            }
        ],
        "FontLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "value": "tuple",
                    "parent": "QtWidgets.QWidget"
                }
            }
        ],
        "qfont_to_tuple": [
            {
                "type": "func",
                "args": {
                    "font": "QtGui.QFont"
                }
            }
        ],
        "FontLayout.get_font": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormWidget.update_buttons": [
            {
                "type": "attr",
                "anno": "QtCore.Signal"
            }
        ],
        "FormWidget.data": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "FormWidget.widgets": [
            {
                "type": "attr",
                "anno": "list[QtWidgets.QField]"
            }
        ],
        "FormWidget.formlayout": [
            {
                "type": "attr",
                "anno": "QtWidgets.QFormLayout"
            }
        ],
        "FormWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "data": "tuple",
                    "comment": "str",
                    "with_margin": "bool",
                    "parent": "QtWidgets.QWidget"
                }
            }
        ],
        "FormComboWidget.update_buttons": [
            {
                "type": "attr",
                "anno": "QtCore.Signal"
            }
        ],
        "FormComboWidget.combobox": [
            {
                "type": "attr",
                "anno": "QtWidgets.QComboBox"
            }
        ],
        "FormComboWidget.stackwidget": [
            {
                "type": "attr",
                "anno": "QtWidgets.QStackedWidget"
            }
        ],
        "FormComboWidget.widgetlist": [
            {
                "type": "attr",
                "anno": "QtWidgets.QWidgetList"
            }
        ],
        "FormTabWidget.update_buttons": [
            {
                "type": "attr",
                "anno": "QtCore.Signal"
            }
        ],
        "FormTabWidget.tabwidget": [
            {
                "type": "attr",
                "anno": "QtWidgets.QTabWidget"
            }
        ],
        "FormTabWidget.widgetlist": [
            {
                "type": "attr",
                "anno": "list[FormWidget]"
            }
        ],
        "FormDialog.apply_callback": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "FormDialog.formwidget": [
            {
                "type": "attr",
                "anno": "FormWidget"
            }
        ],
        "FormDialog.float_fields": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FormDialog.bbox": [
            {
                "type": "attr",
                "anno": "QtWidgets.QDialogButtonBox"
            }
        ],
        "FormDialog.register_float_field": [
            {
                "type": "method",
                "args": {
                    "field": "QtGui.QField"
                }
            }
        ],
        "FormDialog.data": [
            {
                "type": "attr",
                "anno": "QtWidgets.QWidget"
            }
        ],
        "FormDialog.reject": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormDialog.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "create_datalist_example": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "create_datagroup_example": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "datalist": [
            {
                "type": "var",
                "anno": "QtWidgets.QFormLayout"
            }
        ],
        "apply_test": [
            {
                "type": "func",
                "args": {
                    "data": "QtGui.QWidget"
                }
            }
        ],
        "datagroup": [
            {
                "type": "var",
                "anno": "QtWidgets.QFormLayout"
            }
        ],
        "FormWidget.get_dialog": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorLayout.text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormWidget.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormComboWidget.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormTabWidget.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormDialog.apply": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormDialog.accept": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormComboWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "datalist": "tuple",
                    "comment": "str",
                    "parent": "QtWidgets.QWidget"
                }
            }
        ],
        "FormTabWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "datalist": "tuple",
                    "comment": "str",
                    "parent": "QtWidgets.QWidget"
                }
            }
        ],
        "to_qcolor": [
            {
                "type": "func",
                "args": {
                    "color": "str"
                }
            }
        ],
        "ColorButton.set_color": [
            {
                "type": "method",
                "args": {
                    "color": "QtGui.QColor"
                }
            }
        ],
        "ColorButton.color": [
            {
                "type": "attr",
                "anno": "QtGui.QColor"
            }
        ],
        "ColorButton.choose_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorButton.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "QtWidgets.QWidget"
                }
            }
        ],
        "ColorLayout.update_text": [
            {
                "type": "method",
                "args": {
                    "color": "QtGui.QColor"
                }
            }
        ],
        "is_edit_valid": [
            {
                "type": "func",
                "args": {
                    "edit": "QtGui.QEdit"
                }
            }
        ],
        "FormDialog.update_buttons": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorLayout.update_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "color": "QtGui.QColor",
                    "parent": "QtWidgets.QWidget"
                }
            }
        ],
        "FormWidget.setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormComboWidget.setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormTabWidget.setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FormDialog.__init__": [
            {
                "type": "method",
                "args": {
                    "data": "tuple",
                    "title": "str",
                    "comment": "str",
                    "icon": "QtGui.QIcon",
                    "parent": "QtWidgets.QWidget",
                    "apply": "QtDialog"
                }
            }
        ],
        "fedit": [
            {
                "type": "func",
                "args": {
                    "data": "tuple",
                    "title": "str",
                    "comment": "str",
                    "icon": "QtGui.QIcon",
                    "parent": "QtWidgets.QWidget",
                    "apply": "QtGui.QDialog"
                }
            }
        ]
    },
    "matplotlib.backends.qt_editor.formsubplottool": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ]
    },
    "matplotlib.backends.backend_qt4agg": {
        "_BackendQT4Agg.FigureCanvas.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "matplotlib.backends.backend_wxcairo": {
        "FigureCanvasWxCairo._renderer": [
            {
                "type": "attr",
                "anno": "RendererCairo"
            }
        ],
        "FigureCanvasWxCairo.bitmap": [
            {
                "type": "attr",
                "anno": "wxcairo.Bitmap"
            }
        ],
        "FigureCanvasWxCairo._isDrawn": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_BackendWxCairo.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasWxCairo]"
            }
        ],
        "_BackendWxCairo._frame_class": [
            {
                "type": "attr",
                "anno": "type[FigureFrameWx]"
            }
        ],
        "FigureCanvasWxCairo.draw": [
            {
                "type": "method",
                "args": {
                    "drawDC": "wx.PaintDC"
                }
            }
        ],
        "FigureCanvasWxCairo.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "wx.Panel",
                    "id": "wx.ID",
                    "figure": "FigureCanvasBase"
                }
            }
        ],
        "FigureFrameWxCairo.get_canvas": [
            {
                "type": "method",
                "args": {
                    "fig": "FigureCanvasBase"
                }
            }
        ]
    },
    "matplotlib.backends._backend_tk": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "backend_version": [
            {
                "type": "var",
                "anno": "tk.TkVersion"
            }
        ],
        "cursord": [
            {
                "type": "var",
                "anno": "tk.Cursor"
            }
        ],
        "TimerTk._timer": [
            {
                "type": "attr",
                "anno": "tk.Timer"
            }
        ],
        "TimerTk.parent": [
            {
                "type": "attr",
                "anno": "tk.Timer"
            }
        ],
        "TimerTk._timer_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasTk.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasTk.keyvald": [
            {
                "type": "attr",
                "anno": "tk.KeyCode"
            }
        ],
        "FigureCanvasTk._keycode_lookup": [
            {
                "type": "attr",
                "anno": "tk.KeyCode"
            }
        ],
        "FigureCanvasTk._idle": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasTk._idle_callback": [
            {
                "type": "attr",
                "anno": "tk.IdleCallback"
            }
        ],
        "FigureCanvasTk._tkcanvas": [
            {
                "type": "attr",
                "anno": "tk.Canvas"
            }
        ],
        "FigureCanvasTk._tkphoto": [
            {
                "type": "attr",
                "anno": "tk.PhotoImage"
            }
        ],
        "FigureCanvasTk._resize_callback": [
            {
                "type": "attr",
                "anno": "tk.ResizeCallback"
            }
        ],
        "FigureCanvasTk._master": [
            {
                "type": "attr",
                "anno": "tk.Canvas"
            }
        ],
        "FigureCanvasTk.get_tk_widget": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerTk.window": [
            {
                "type": "attr",
                "anno": "tk.Window"
            }
        ],
        "FigureManagerTk.toolbar": [
            {
                "type": "attr",
                "anno": "Toolbar"
            }
        ],
        "FigureManagerTk._shown": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureManagerTk.get_window_title": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerTk.set_window_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "FigureManagerTk.full_screen_toggle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2Tk.window": [
            {
                "type": "attr",
                "anno": "tk.Window"
            }
        ],
        "NavigationToolbar2Tk._buttons": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "NavigationToolbar2Tk.message": [
            {
                "type": "attr",
                "anno": "tk.StringVar"
            }
        ],
        "NavigationToolbar2Tk._message_label": [
            {
                "type": "attr",
                "anno": "tk.Label"
            }
        ],
        "NavigationToolbar2Tk.destroy": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2Tk.lastrect": [
            {
                "type": "attr",
                "anno": "tk.Rectangle"
            }
        ],
        "NavigationToolbar2Tk._Button": [
            {
                "type": "method",
                "args": {
                    "text": "tk.Text",
                    "image_file": "tk.Text",
                    "toggle": "bool",
                    "command": "tk.Command"
                }
            }
        ],
        "NavigationToolbar2Tk._Spacer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolTip.widget": [
            {
                "type": "attr",
                "anno": "tk.Widget"
            }
        ],
        "ToolTip.tipwindow": [
            {
                "type": "attr",
                "anno": "tk.Toplevel"
            }
        ],
        "ToolTip.id": [
            {
                "type": "attr",
                "anno": "tk.Toplevel"
            }
        ],
        "ToolTip.x": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ToolTip.y": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ToolTip.__init__": [
            {
                "type": "method",
                "args": {
                    "widget": "tk.Widget"
                }
            }
        ],
        "ToolTip.text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RubberbandTk.lastrect": [
            {
                "type": "attr",
                "anno": "tk.Rectangle"
            }
        ],
        "ToolbarTk._icon_extension": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolbarTk._message": [
            {
                "type": "attr",
                "anno": "tk.StringVar"
            }
        ],
        "ToolbarTk._message_label": [
            {
                "type": "attr",
                "anno": "tk.Label"
            }
        ],
        "ToolbarTk._toolitems": [
            {
                "type": "attr",
                "anno": "tk.Dict[str, tk.Frame]"
            }
        ],
        "ToolbarTk._groups": [
            {
                "type": "attr",
                "anno": "tk.Dict[str, tk.Frame]"
            }
        ],
        "ToolbarTk._add_separator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolbarTk._get_groupframe": [
            {
                "type": "method",
                "args": {
                    "group": "str"
                }
            }
        ],
        "ToolbarTk.remove_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "StatusbarTk._message": [
            {
                "type": "attr",
                "anno": "tk.StringVar"
            }
        ],
        "StatusbarTk._message_label": [
            {
                "type": "attr",
                "anno": "tk.Label"
            }
        ],
        "ConfigureSubplotsTk.window": [
            {
                "type": "attr",
                "anno": "tk.Tk"
            }
        ],
        "Toolbar": [
            {
                "type": "var",
                "anno": "tk.Widget"
            }
        ],
        "_BackendTk.FigureManager": [
            {
                "type": "attr",
                "anno": "tk.Type[FigureManagerTk]"
            }
        ],
        "ToolbarTk.toggle_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "toggled": "bool"
                }
            }
        ],
        "FigureCanvasTk.draw_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerTk.resize": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "NavigationToolbar2Tk.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "int"
                }
            }
        ],
        "FigureCanvasTk._get_key": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "blit": [
            {
                "type": "func",
                "args": {
                    "photoimage": "tk.PhotoImage",
                    "aggimage": "tk.Image",
                    "offsets": "tuple",
                    "bbox": "tk.Bbox"
                }
            }
        ],
        "RubberbandTk.remove_rubberband": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SetCursorTk.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "int"
                }
            }
        ],
        "ToolTip.showtip": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "NavigationToolbar2Tk.set_history_buttons": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BackendTk.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolbarTk._button_click": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "TimerTk.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "tk.Timer",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FigureCanvasTk.new_timer": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "_restore_foreground_window_at_end": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "ConfigureSubplotsTk.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FigureCanvasTk.key_release": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "FigureCanvasTk.key_press": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "FigureCanvasTk.flush_events": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasTk.scroll_event": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "FigureCanvasTk.button_release_event": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "FigureCanvasTk.button_press_event": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event",
                    "dblclick": "bool"
                }
            }
        ],
        "FigureCanvasTk.button_dblclick_event": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "FigureCanvasTk.enter_notify_event": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "FigureCanvasTk.motion_notify_event": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "StatusbarTk.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "tk.StringVar"
                }
            }
        ],
        "ToolbarTk.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "tk.StringVar"
                }
            }
        ],
        "NavigationToolbar2Tk.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "tk.StringVar"
                }
            }
        ],
        "HelpTk.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "TimerTk._on_timer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerTk._timer_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RubberbandTk.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "x1": "float",
                    "y1": "float"
                }
            }
        ],
        "NavigationToolbar2Tk.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event",
                    "x0": "float",
                    "y0": "float",
                    "x1": "float",
                    "y1": "float"
                }
            }
        ],
        "FigureCanvasTk.scroll_event_windows": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "FigureCanvasTk.resize": [
            {
                "type": "method",
                "args": {
                    "event": "tk.Event"
                }
            }
        ],
        "FigureCanvasTk.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure",
                    "master": "tk.Canvas",
                    "resize_callback": "tk.ResizeCallback"
                }
            }
        ],
        "NavigationToolbar2Tk.release_zoom": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2Tk.save_figure": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "SaveFigureTk.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FigureManagerTk.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BackendTk.trigger_manager_draw": [
            {
                "type": "method",
                "args": {
                    "manager": "FigureManager"
                }
            }
        ],
        "_BackendTk.new_figure_manager_given_figure": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FigureManagerWx]",
                    "num": "int",
                    "figure": "Figure"
                }
            }
        ],
        "FigureManagerTk.destroy": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ConfigureSubplotsTk.destroy": [
            {
                "type": "method",
                "args": {
                    "args": "tk.Any",
                    "kwargs": "tk.Any"
                }
            }
        ],
        "ToolTip.hidetip": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolTip.createToolTip": [
            {
                "type": "method",
                "args": {
                    "widget": "tk.Widget",
                    "text": "str"
                }
            }
        ],
        "ToolbarTk.add_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "group": "str",
                    "position": "tk.Position",
                    "image_file": "tk.Text",
                    "description": "tk.Text",
                    "toggle": "bool"
                }
            }
        ],
        "NavigationToolbar2Tk.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "window": "tk.Window",
                    "pack_toolbar": "bool"
                }
            }
        ],
        "StatusbarTk.__init__": [
            {
                "type": "method",
                "args": {
                    "window": "tk.Widget",
                    "args": "tk.Any",
                    "kwargs": "tk.Any"
                }
            }
        ],
        "ToolbarTk.__init__": [
            {
                "type": "method",
                "args": {
                    "toolmanager": "ToolManager",
                    "window": "tk.Window"
                }
            }
        ],
        "FigureManagerTk._get_toolbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigureSubplotsTk.init_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigureSubplotsTk.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2Tk.configure_subplots": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerTk.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "num": "int",
                    "window": "tk.Window"
                }
            }
        ]
    },
    "matplotlib.backends.backend_wx": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_DEBUG": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_DEBUG_lvls": [
            {
                "type": "var",
                "anno": "set"
            }
        ],
        "DEBUG_MSG": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "lvl": "int",
                    "o": "object"
                }
            }
        ],
        "PIXELS_PER_INCH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "IDLE_DELAY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TimerWx._timer": [
            {
                "type": "attr",
                "anno": "wx.Timer"
            }
        ],
        "TimerWx._timer_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerWx._timer_set_single_shot": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererWx.fontweights": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererWx.fontangles": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererWx.fontnames": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererWx.width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererWx.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererWx.bitmap": [
            {
                "type": "attr",
                "anno": "wx.Bitmap"
            }
        ],
        "RendererWx.fontd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererWx.dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererWx.gc": [
            {
                "type": "attr",
                "anno": "GraphicsContextWx"
            }
        ],
        "RendererWx.flipy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererWx.offset_text_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererWx.get_canvas_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererWx.get_gc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererWx.points_to_pixels": [
            {
                "type": "method",
                "args": {
                    "points": "float"
                }
            }
        ],
        "GraphicsContextWx._capd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GraphicsContextWx._joind": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GraphicsContextWx._cache": [
            {
                "type": "attr",
                "anno": "weakref.WeakKeyDictionary"
            }
        ],
        "GraphicsContextWx.bitmap": [
            {
                "type": "attr",
                "anno": "wx.Bitmap"
            }
        ],
        "GraphicsContextWx.dc": [
            {
                "type": "attr",
                "anno": "wx.MemoryDC"
            }
        ],
        "GraphicsContextWx.gfx_ctx": [
            {
                "type": "attr",
                "anno": "wx.GraphicsContext"
            }
        ],
        "GraphicsContextWx._pen": [
            {
                "type": "attr",
                "anno": "wx.Pen"
            }
        ],
        "GraphicsContextWx.renderer": [
            {
                "type": "attr",
                "anno": "RendererWx"
            }
        ],
        "GraphicsContextWx.IsSelected": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GraphicsContextWx.select": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextWx.unselect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextWx.get_wxcolour": [
            {
                "type": "method",
                "args": {
                    "color": "tuple"
                }
            }
        ],
        "_FigureCanvasWxBase.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_FigureCanvasWxBase._timer_cls": [
            {
                "type": "attr",
                "anno": "type[TimerWx]"
            }
        ],
        "_FigureCanvasWxBase.keyvald": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_FigureCanvasWxBase.bitmap": [
            {
                "type": "attr",
                "anno": "wx.Bitmap"
            }
        ],
        "_FigureCanvasWxBase._isDrawn": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_FigureCanvasWxBase.Copy_to_Clipboard": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase.flush_events": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_FigureCanvasWxBase._event_loop": [
            {
                "type": "attr",
                "anno": "wx.GUIEventLoop"
            }
        ],
        "_FigureCanvasWxBase.stop_event_loop": [
            {
                "type": "method",
                "args": {
                    "event": "MouseButton"
                }
            }
        ],
        "_FigureCanvasWxBase._skipwheelevent": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasWx.renderer": [
            {
                "type": "attr",
                "anno": "RendererWx"
            }
        ],
        "FigureCanvasWx._isDrawn": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasWx.bitmap": [
            {
                "type": "attr",
                "anno": "wx.Bitmap"
            }
        ],
        "FigureFrameWx.num": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureFrameWx.canvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasWx"
            }
        ],
        "FigureFrameWx.sizer": [
            {
                "type": "attr",
                "anno": "wx.BoxSizer"
            }
        ],
        "FigureFrameWx.figmgr": [
            {
                "type": "attr",
                "anno": "FigureManagerWx"
            }
        ],
        "FigureFrameWx.toolbar": [
            {
                "type": "attr",
                "anno": "wx.ToolBar"
            }
        ],
        "FigureFrameWx.get_figure_manager": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureFrameWx.GetToolBar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerWx.frame": [
            {
                "type": "attr",
                "anno": "FigureFrameWx"
            }
        ],
        "FigureManagerWx.window": [
            {
                "type": "attr",
                "anno": "FigureWindowWx"
            }
        ],
        "FigureManagerWx.toolbar": [
            {
                "type": "method",
                "args": {
                    "value": "ToolContainerBase"
                }
            }
        ],
        "FigureManagerWx.destroy": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FigureManagerWx.get_window_title": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerWx.set_window_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "cursord": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "NavigationToolbar2Wx.wx_ids": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "NavigationToolbar2Wx._label_text": [
            {
                "type": "attr",
                "anno": "wx.StaticText"
            }
        ],
        "NavigationToolbar2Wx._idle": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NavigationToolbar2Wx._prevZoomRect": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "NavigationToolbar2Wx._retinaFix": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NavigationToolbar2Wx.prevZoomRect": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "NavigationToolbar2Wx.retinaFix": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "NavigationToolbar2Wx.savedRetinaImage": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NavigationToolbar2Wx.wxoverlay": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NavigationToolbar2Wx.zoomAxes": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "NavigationToolbar2Wx.zoomStartX": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "NavigationToolbar2Wx.zoomStartY": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "NavigationToolbar2Wx._wxoverlay": [
            {
                "type": "attr",
                "anno": "wx.Overlay"
            }
        ],
        "NavigationToolbar2Wx._savedRetinaImage": [
            {
                "type": "attr",
                "anno": "wx.Image"
            }
        ],
        "NavigationToolbar2Wx._zoomStartX": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "NavigationToolbar2Wx._zoomStartY": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "NavigationToolbar2Wx._zoomAxes": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "NavigationToolbar2Wx.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "StatusBarWx.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "wx.Widget",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "StatusBarWx.set_function": [
            {
                "type": "method",
                "args": {
                    "string": "str"
                }
            }
        ],
        "ToolbarWx._space": [
            {
                "type": "attr",
                "anno": "wx.StretchableSpace"
            }
        ],
        "ToolbarWx._label_text": [
            {
                "type": "attr",
                "anno": "wx.StaticText"
            }
        ],
        "ToolbarWx._toolitems": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ToolbarWx._groups": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ToolbarWx.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "RubberbandWx._rect": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "_HelpDialog._instance": [
            {
                "type": "attr",
                "anno": "wx.Dialog"
            }
        ],
        "_HelpDialog.headers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_HelpDialog.widths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_HelpDialog.OnClose": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_HelpDialog.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "wx.Widget",
                    "help_entries": "list"
                }
            }
        ],
        "_HelpDialog.show": [
            {
                "type": "method",
                "args": {
                    "cls": "type[HelpWx]",
                    "parent": "wx.Dialog",
                    "help_entries": "list"
                }
            }
        ],
        "_BackendWx.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasWx]"
            }
        ],
        "_BackendWx.FigureManager": [
            {
                "type": "attr",
                "anno": "type[FigureManagerWx]"
            }
        ],
        "_BackendWx._frame_class": [
            {
                "type": "attr",
                "anno": "type[FigureFrameWx]"
            }
        ],
        "_BackendWx.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_FigureCanvasWxBase._get_key": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "GraphicsContextWx.set_linewidth": [
            {
                "type": "method",
                "args": {
                    "w": "float"
                }
            }
        ],
        "TimerWx._timer_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerWx._timer_set_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_FigureCanvasWxBase.filetypes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FigureManagerWx.resize": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "NavigationToolbar2Wx.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "Gdk.Cursor"
                }
            }
        ],
        "NavigationToolbar2Wx.get_canvas": [
            {
                "type": "method",
                "args": {
                    "frame": "Figure",
                    "fig": "Figure"
                }
            }
        ],
        "FigureFrameWx.toolmanager": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RubberbandWx.remove_rubberband": [
            {
                "type": "method",
                "args": {
                    "dc": "wx.ClientDC"
                }
            }
        ],
        "RubberbandWx.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "x1": "float",
                    "y1": "float"
                }
            }
        ],
        "ConfigureSubplotsWx.get_canvas": [
            {
                "type": "method",
                "args": {
                    "frame": "wx.Frame",
                    "fig": "Figure"
                }
            }
        ],
        "SetCursorWx.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "Gdk.Cursor"
                }
            }
        ],
        "RendererWx.__init__": [
            {
                "type": "method",
                "args": {
                    "bitmap": "wx.Bitmap",
                    "dpi": "int"
                }
            }
        ],
        "FigureFrameWx.__init__": [
            {
                "type": "method",
                "args": {
                    "num": "int",
                    "fig": "Figure"
                }
            }
        ],
        "FigureFrameWx.Destroy": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "_FigureCanvasWxBase._onPaint": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "wx.Panel",
                    "id": "wx.ID",
                    "figure": "Figure"
                }
            }
        ],
        "FigureFrameWx.get_canvas": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "_FigureCanvasWxBase._set_capture": [
            {
                "type": "method",
                "args": {
                    "capture": "bool"
                }
            }
        ],
        "_FigureCanvasWxBase._onCaptureLost": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase.gui_repaint": [
            {
                "type": "method",
                "args": {
                    "drawDC": "wx.PaintDC",
                    "origin": "str"
                }
            }
        ],
        "_FigureCanvasWxBase.start_event_loop": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "_FigureCanvasWxBase.draw_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_FigureCanvasWxBase.print_figure": [
            {
                "type": "method",
                "args": {
                    "filename": "Union[str, os.PathLike]",
                    "args": "Any",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasWx.draw": [
            {
                "type": "method",
                "args": {
                    "drawDC": "wx.PaintDC"
                }
            }
        ],
        "_load_bitmap": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "_set_frame_icon": [
            {
                "type": "func",
                "args": {
                    "frame": "wx.Frame"
                }
            }
        ],
        "RendererWx.convert_path": [
            {
                "type": "method",
                "args": {
                    "gfx_ctx": "wx.GraphicsContext",
                    "path": "Path",
                    "transform": "Affine2D"
                }
            }
        ],
        "RendererWx.get_wx_font": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str"
                }
            }
        ],
        "RubberbandWx.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "RendererWx.draw_image": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "int",
                    "y": "int",
                    "im": "np.ndarray"
                }
            }
        ],
        "RendererWx.handle_clip_rectangle": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase"
                }
            }
        ],
        "RendererWx.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Affine2D",
                    "rgbFace": "int"
                }
            }
        ],
        "_FigureCanvasWxBase._onLeave": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase._get_imagesave_wildcards": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextWx.set_joinstyle": [
            {
                "type": "method",
                "args": {
                    "js": "str"
                }
            }
        ],
        "GraphicsContextWx.set_capstyle": [
            {
                "type": "method",
                "args": {
                    "cs": "str"
                }
            }
        ],
        "_FigureCanvasWxBase._onEnter": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase._onKeyUp": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase._onKeyDown": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase._onMotion": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase._onMouseButton": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "_FigureCanvasWxBase._onMouseWheel": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "GraphicsContextWx.set_foreground": [
            {
                "type": "method",
                "args": {
                    "fg": "tuple",
                    "isRGBA": "bool"
                }
            }
        ],
        "GraphicsContextWx.__init__": [
            {
                "type": "method",
                "args": {
                    "bitmap": "wx.Bitmap",
                    "renderer": "RendererWx"
                }
            }
        ],
        "RendererWx.new_gc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererWx.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str",
                    "ismath": "bool"
                }
            }
        ],
        "HelpWx.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "TimerWx.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "RendererWx.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContext",
                    "x": "int",
                    "y": "int",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "Text"
                }
            }
        ],
        "_FigureCanvasWxBase._onSize": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event"
                }
            }
        ],
        "NavigationToolbar2Wx.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "event": "wx.Event",
                    "x0": "int",
                    "y0": "int",
                    "x1": "int",
                    "y1": "int"
                }
            }
        ],
        "_BackendWx.new_figure_manager_given_figure": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FigureManagerWx]",
                    "num": "int",
                    "figure": "Figure"
                }
            }
        ],
        "_BackendWx.trigger_manager_draw": [
            {
                "type": "method",
                "args": {
                    "manager": "ToolManager"
                }
            }
        ],
        "NavigationToolbar2Wx.release_zoom": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2Wx.press_zoom": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2Wx.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase"
                }
            }
        ],
        "NavigationToolbar2Wx.set_history_buttons": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2Wx.statbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2Wx.set_status_bar": [
            {
                "type": "method",
                "args": {
                    "statbar": "StatusbarWx"
                }
            }
        ],
        "NavigationToolbar2Wx.pan": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2Wx.zoom": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ToolCopyToClipboardWx.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FigureManagerWx.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasWx._print_image": [
            {
                "type": "method",
                "args": {
                    "filename": "object",
                    "filetype": "int",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "FigureCanvasWx.print_xpm": [
            {
                "type": "method",
                "args": {
                    "filename": "object",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "FigureCanvasWx.print_tiff": [
            {
                "type": "method",
                "args": {
                    "filename": "object",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "FigureCanvasWx.print_tif": [
            {
                "type": "attr",
                "anno": "Callable[[str, object], None]"
            }
        ],
        "FigureCanvasWx.print_png": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "args": "tuple[int, ...]",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "FigureCanvasWx.print_pcx": [
            {
                "type": "method",
                "args": {
                    "filename": "object",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "FigureCanvasWx.print_jpeg": [
            {
                "type": "method",
                "args": {
                    "filename": "object",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "FigureCanvasWx.print_jpg": [
            {
                "type": "attr",
                "anno": "Callable[[object], None]"
            }
        ],
        "FigureCanvasWx.print_bmp": [
            {
                "type": "method",
                "args": {
                    "filename": "object",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "FigureFrameWx._onClose": [
            {
                "type": "method",
                "args": {
                    "event": "int"
                }
            }
        ],
        "StatusbarWx.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "wx.Widget",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "StatusbarWx.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "ToolbarWx.__init__": [
            {
                "type": "method",
                "args": {
                    "toolmanager": "ToolManager",
                    "parent": "wx.ToolBar",
                    "style": "int"
                }
            }
        ],
        "ToolbarWx.remove_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ToolbarWx.toggle_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "toggled": "bool"
                }
            }
        ],
        "ToolbarWx._get_tool_pos": [
            {
                "type": "method",
                "args": {
                    "tool": "int"
                }
            }
        ],
        "ToolbarWx.add_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "group": "str",
                    "position": "int",
                    "image_file": "str",
                    "description": "str",
                    "toggle": "bool"
                }
            }
        ],
        "FigureFrameWx._get_toolbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigureSubplotsWx.configure_subplots": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2Wx.configure_subplots": [
            {
                "type": "method",
                "args": {
                    "args": "int"
                }
            }
        ],
        "ConfigureSubplotsWx.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "int"
                }
            }
        ],
        "error_msg_wx": [
            {
                "type": "func",
                "args": {
                    "msg": "str",
                    "parent": "wx.QWidget"
                }
            }
        ],
        "NavigationToolbar2Wx.save_figure": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "SaveFigureWx.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FigureManagerWx.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "num": "int",
                    "frame": "FigureFrameWx"
                }
            }
        ],
        "_BackendWx.new_figure_manager": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FigureManagerWx]",
                    "num": "int",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FigureFrameWx.statusbar": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.backends.backend_gtk3": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "backend_version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "cursord": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "TimerGTK3._timer": [
            {
                "type": "attr",
                "anno": "GLib.Timer"
            }
        ],
        "TimerGTK3._timer_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasGTK3.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasGTK3._timer_cls": [
            {
                "type": "attr",
                "anno": "Gtk.Timer"
            }
        ],
        "FigureCanvasGTK3.keyvald": [
            {
                "type": "attr",
                "anno": "dict[int, str]"
            }
        ],
        "FigureCanvasGTK3.event_mask": [
            {
                "type": "attr",
                "anno": "Gdk.EventMask"
            }
        ],
        "FigureCanvasGTK3._idle_draw_id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureCanvasGTK3._lastCursor": [
            {
                "type": "attr",
                "anno": "Gtk.Cursor"
            }
        ],
        "FigureCanvasGTK3.on_draw_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "ctx": "Gdk.Context"
                }
            }
        ],
        "FigureCanvasGTK3.flush_events": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerGTK3.window": [
            {
                "type": "attr",
                "anno": "Gtk.Window"
            }
        ],
        "FigureManagerGTK3.vbox": [
            {
                "type": "attr",
                "anno": "Gtk.Box"
            }
        ],
        "FigureManagerGTK3.toolbar": [
            {
                "type": "attr",
                "anno": "Toolbar"
            }
        ],
        "FigureManagerGTK3._destroying": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureManagerGTK3._full_screen_flag": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureManagerGTK3.full_screen_toggle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2GTK3.win": [
            {
                "type": "attr",
                "anno": "Gtk.Window"
            }
        ],
        "NavigationToolbar2GTK3._gtk_ids": [
            {
                "type": "attr",
                "anno": "dict[str, Gtk.ToolButton]"
            }
        ],
        "NavigationToolbar2GTK3.message": [
            {
                "type": "attr",
                "anno": "Gtk.Label"
            }
        ],
        "NavigationToolbar2GTK3.ctx": [
            {
                "type": "attr",
                "anno": "Gtk.Context"
            }
        ],
        "ToolbarGTK3._icon_extension": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolbarGTK3._message": [
            {
                "type": "attr",
                "anno": "Gtk.Label"
            }
        ],
        "ToolbarGTK3._groups": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ToolbarGTK3._toolitems": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StatusbarGTK3._context": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConfigureSubplotsGTK3._window": [
            {
                "type": "attr",
                "anno": "Gtk.Window"
            }
        ],
        "ConfigureSubplotsGTK3.window": [
            {
                "type": "attr",
                "anno": "Gtk.Window"
            }
        ],
        "ConfigureSubplotsGTK3.vbox": [
            {
                "type": "attr",
                "anno": "Gtk.Box"
            }
        ],
        "icon_filename": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "Toolbar": [
            {
                "type": "var",
                "anno": "backend_tools.Tool"
            }
        ],
        "_BackendGTK3.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvas]"
            }
        ],
        "_BackendGTK3.FigureManager": [
            {
                "type": "attr",
                "anno": "FigureManager"
            }
        ],
        "_BackendGTK3.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasGTK3._get_key": [
            {
                "type": "method",
                "args": {
                    "event": "Gdk.Event"
                }
            }
        ],
        "ConfigureSubplotsGTK3._get_canvas": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "SaveFigureGTK3.PseudoToolbar.canvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasBase"
            }
        ],
        "NavigationToolbar2GTK3.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "Gdk.Cursor"
                }
            }
        ],
        "SetCursorGTK3.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "Gdk.Cursor"
                }
            }
        ],
        "NavigationToolbar2GTK3.set_history_buttons": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolCopyToClipboardGTK3.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ToolbarGTK3._call_tool": [
            {
                "type": "method",
                "args": {
                    "btn": "Gtk.ToolButton",
                    "name": "str"
                }
            }
        ],
        "TimerGTK3.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FigureCanvasGTK3.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure"
                }
            }
        ],
        "FigureCanvasGTK3.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasGTK3.draw_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "window_icon": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FigureCanvasGTK3.leave_notify_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "FigureCanvasGTK3.destroy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HelpGTK3._normalize_shortcut": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "FigureManagerGTK3.get_window_title": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasGTK3.key_release_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "FigureCanvasGTK3.key_press_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "ToolbarGTK3.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "NavigationToolbar2GTK3.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "ToolbarGTK3.remove_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "TimerGTK3._on_timer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerGTK3._timer_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerGTK3._timer_set_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerGTK3.set_window_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "FigureManagerGTK3.resize": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "FigureCanvasGTK3.configure_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "_BackendGTK3.trigger_manager_draw": [
            {
                "type": "method",
                "args": {
                    "manager": "FigureManager"
                }
            }
        ],
        "FigureCanvasGTK3.size_allocate": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "allocation": "Gdk.Box"
                }
            }
        ],
        "FigureCanvasGTK3.enter_notify_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "FigureCanvasGTK3.motion_notify_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "FigureCanvasGTK3.button_release_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "FigureCanvasGTK3.button_press_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "FigureCanvasGTK3.scroll_event": [
            {
                "type": "method",
                "args": {
                    "widget": "Gtk.Widget",
                    "event": "Gdk.Event"
                }
            }
        ],
        "NavigationToolbar2GTK3.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "window": "Gtk.Window"
                }
            }
        ],
        "NavigationToolbar2GTK3.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "event": "Gtk.Event",
                    "x0": "int",
                    "y0": "int",
                    "x1": "int",
                    "y1": "int"
                }
            }
        ],
        "RubberbandGTK3.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "x0": "int",
                    "y0": "int",
                    "x1": "int",
                    "y1": "int"
                }
            }
        ],
        "FigureManagerGTK3.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HelpGTK3._show_shortcuts_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerGTK3.destroy": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ConfigureSubplotsGTK3.destroy": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "error_msg_gtk": [
            {
                "type": "func",
                "args": {
                    "msg": "str",
                    "parent": "Gtk.Window"
                }
            }
        ],
        "HelpGTK3._show_shortcuts_dialog": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HelpGTK3.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2GTK3.save_figure": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "SaveFigureGTK3.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "StatusbarGTK3.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "StatusbarGTK3.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "ToolbarGTK3.__init__": [
            {
                "type": "method",
                "args": {
                    "toolmanager": "ToolManager"
                }
            }
        ],
        "ToolbarGTK3._add_separator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolbarGTK3._add_button": [
            {
                "type": "method",
                "args": {
                    "button": "Gtk.ToolButton",
                    "group": "str",
                    "position": "int"
                }
            }
        ],
        "ToolbarGTK3.add_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "group": "str",
                    "position": "int",
                    "image_file": "str",
                    "description": "str",
                    "toggle": "bool"
                }
            }
        ],
        "FigureManagerGTK3._get_toolbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolbarGTK3.toggle_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "toggled": "bool"
                }
            }
        ],
        "NavigationToolbar2GTK3._update_buttons_checked": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2GTK3.zoom": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2GTK3.pan": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ConfigureSubplotsGTK3.init_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2GTK3.configure_subplots": [
            {
                "type": "method",
                "args": {
                    "button": "Gtk.Button"
                }
            }
        ],
        "ConfigureSubplotsGTK3.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FigureManagerGTK3.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "num": "int"
                }
            }
        ]
    },
    "matplotlib.backends.backend_qt5agg": {
        "FigureCanvasQTAgg.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure"
                }
            }
        ],
        "_BackendQT5Agg.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasQT]"
            }
        ],
        "FigureCanvasQTAgg.print_figure": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasQTAgg.blit": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox"
                }
            }
        ],
        "FigureCanvasQTAgg.paintEvent": [
            {
                "type": "method",
                "args": {
                    "event": "QtGui.QPainter"
                }
            }
        ]
    },
    "matplotlib.backends.backend_agg": {
        "backend_version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RendererAgg.lock": [
            {
                "type": "attr",
                "anno": "threading.RLock"
            }
        ],
        "RendererAgg.dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererAgg.width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererAgg.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererAgg._renderer": [
            {
                "type": "attr",
                "anno": "_RendererAgg"
            }
        ],
        "RendererAgg._filter_renderers": [
            {
                "type": "attr",
                "anno": "list[_RendererAgg]"
            }
        ],
        "RendererAgg.mathtext_parser": [
            {
                "type": "attr",
                "anno": "MathTextParser"
            }
        ],
        "RendererAgg.bbox": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "RendererAgg.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.draw_gouraud_triangle": [
            {
                "type": "attr",
                "anno": "_RendererAgg"
            }
        ],
        "RendererAgg.draw_gouraud_triangles": [
            {
                "type": "attr",
                "anno": "_RendererAgg"
            }
        ],
        "RendererAgg.draw_image": [
            {
                "type": "attr",
                "anno": "_RendererAgg"
            }
        ],
        "RendererAgg.draw_markers": [
            {
                "type": "attr",
                "anno": "_RendererAgg"
            }
        ],
        "RendererAgg.draw_quad_mesh": [
            {
                "type": "attr",
                "anno": "_RendererAgg"
            }
        ],
        "RendererAgg.copy_from_bbox": [
            {
                "type": "attr",
                "anno": "_RendererAgg"
            }
        ],
        "RendererAgg.get_content_extents": [
            {
                "type": "attr",
                "anno": "_RendererAgg"
            }
        ],
        "RendererAgg.tostring_rgba_minimized": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.get_canvas_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.points_to_pixels": [
            {
                "type": "method",
                "args": {
                    "points": "float"
                }
            }
        ],
        "RendererAgg.buffer_rgba": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.tostring_argb": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.tostring_rgb": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.option_image_nocomposite": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.option_scale_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasAgg.renderer": [
            {
                "type": "attr",
                "anno": "RendererAgg"
            }
        ],
        "FigureCanvasAgg._lastKey": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasAgg.tostring_rgb": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasAgg.tostring_argb": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasAgg.buffer_rgba": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BackendAgg.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasAgg]"
            }
        ],
        "_BackendAgg.FigureManager": [
            {
                "type": "attr",
                "anno": "FigureManagerBase"
            }
        ],
        "FigureCanvasAgg.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str",
                    "ismath": "bool"
                }
            }
        ],
        "RendererAgg.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Path",
                    "rgbFace": "int"
                }
            }
        ],
        "RendererAgg._update_methods": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.start_filter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererAgg.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int",
                    "dpi": "int"
                }
            }
        ],
        "FigureCanvasAgg.get_renderer": [
            {
                "type": "method",
                "args": {
                    "cleared": "bool"
                }
            }
        ],
        "FigureCanvasAgg.copy_from_bbox": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox"
                }
            }
        ],
        "RendererAgg.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "get_hinting_flag": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "RendererAgg.draw_mathtext": [
            {
                "type": "method",
                "args": {
                    "gc": "plt.gauge.Gauge",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float"
                }
            }
        ],
        "RendererAgg.draw_path_collection": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "master_transform": "Affine2D",
                    "paths": "Path",
                    "all_transforms": "Path",
                    "offsets": "np.ndarray",
                    "offsetTrans": "np.ndarray",
                    "facecolors": "np.ndarray",
                    "edgecolors": "np.ndarray",
                    "linewidths": "tuple",
                    "linestyles": "tuple",
                    "antialiaseds": "tuple",
                    "urls": "tuple",
                    "offset_position": "str"
                }
            }
        ],
        "RendererAgg.restore_region": [
            {
                "type": "method",
                "args": {
                    "region": "mpl.Region",
                    "bbox": "Bbox",
                    "xy": "tuple"
                }
            }
        ],
        "FigureCanvasAgg.restore_region": [
            {
                "type": "method",
                "args": {
                    "region": "mpl.Region",
                    "bbox": "Bbox",
                    "xy": "tuple"
                }
            }
        ],
        "RendererAgg.stop_filter": [
            {
                "type": "method",
                "args": {
                    "post_processing": "Callable[[np.ndarray], np.ndarray]"
                }
            }
        ],
        "RendererAgg._get_agg_font": [
            {
                "type": "method",
                "args": {
                    "prop": "str"
                }
            }
        ],
        "RendererAgg.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "plt.gauge.Gauge",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "Text"
                }
            }
        ],
        "RendererAgg.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "RendererAgg.draw_tex": [
            {
                "type": "method",
                "args": {
                    "gc": "mpl.draw.Graphics",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "str",
                    "mtext": "Text"
                }
            }
        ],
        "FigureCanvasAgg.print_tif": [
            {
                "type": "method",
                "args": {
                    "filename_or_obj": "str",
                    "args": "tuple",
                    "dryrun": "bool",
                    "pil_kwargs": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "FigureCanvasAgg.print_tiff": [
            {
                "type": "attr",
                "anno": "cbook.PrintTiff"
            }
        ],
        "FigureCanvasAgg.print_jpg": [
            {
                "type": "method",
                "args": {
                    "filename_or_obj": "str",
                    "args": "str",
                    "dryrun": "bool",
                    "pil_kwargs": "dict",
                    "kwargs": "str"
                }
            }
        ],
        "FigureCanvasAgg.print_jpeg": [
            {
                "type": "attr",
                "anno": "Callable[[str, str], Image.Image]"
            }
        ],
        "FigureCanvasAgg.print_to_buffer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasAgg.print_png": [
            {
                "type": "method",
                "args": {
                    "filename_or_obj": "str",
                    "args": "tuple[int, ...]",
                    "metadata": "dict",
                    "pil_kwargs": "dict",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "FigureCanvasAgg.print_raw": [
            {
                "type": "method",
                "args": {
                    "filename_or_obj": "str",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FigureCanvasAgg.print_rgba": [
            {
                "type": "attr",
                "anno": "Callable[[str], None]"
            }
        ]
    },
    "matplotlib.backends.backend_wxagg": {
        "FigureCanvasWxAgg.bitmap": [
            {
                "type": "attr",
                "anno": "wx.Bitmap"
            }
        ],
        "FigureCanvasWxAgg._isDrawn": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_BackendWxAgg.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasWxAgg]"
            }
        ],
        "_BackendWxAgg._frame_class": [
            {
                "type": "attr",
                "anno": "type[FigureFrameWx]"
            }
        ],
        "FigureFrameWxAgg.get_canvas": [
            {
                "type": "method",
                "args": {
                    "fig": "_FigureCanvasWxBase"
                }
            }
        ],
        "_convert_agg_to_wx_bitmap": [
            {
                "type": "func",
                "args": {
                    "agg": "FigureCanvasAgg",
                    "bbox": "FigureCanvasAgg"
                }
            }
        ],
        "FigureCanvasWxAgg.draw": [
            {
                "type": "method",
                "args": {
                    "drawDC": "wx.PaintDC"
                }
            }
        ],
        "FigureCanvasWxAgg.blit": [
            {
                "type": "method",
                "args": {
                    "bbox": "FigureCanvasAgg"
                }
            }
        ]
    },
    "matplotlib.backends.backend_nbagg": {
        "_FONT_AWESOME_CLASSES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "FigureManagerNbAgg.ToolbarCls": [
            {
                "type": "attr",
                "anno": "type[NavigationToolbar2WebAgg]"
            }
        ],
        "FigureManagerNbAgg._shown": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureManagerNbAgg.web_sockets": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "FigureManagerNbAgg.connected": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasNbAgg._timer_cls": [
            {
                "type": "attr",
                "anno": "type[TimerTornado]"
            }
        ],
        "CommSocket.supports_binary": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CommSocket.manager": [
            {
                "type": "attr",
                "anno": "FigureManager"
            }
        ],
        "CommSocket.uuid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CommSocket.comm": [
            {
                "type": "attr",
                "anno": "Comm"
            }
        ],
        "FigureManagerNbAgg.remove_comm": [
            {
                "type": "method",
                "args": {
                    "comm_id": "str"
                }
            }
        ],
        "CommSocket._ext_close": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CommSocket.send_json": [
            {
                "type": "method",
                "args": {
                    "content": "dict"
                }
            }
        ],
        "_BackendNbAgg.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvas]"
            }
        ],
        "_BackendNbAgg.FigureManager": [
            {
                "type": "attr",
                "anno": "type[FigureManager]"
            }
        ],
        "CommSocket.send_binary": [
            {
                "type": "method",
                "args": {
                    "blob": "bytes"
                }
            }
        ],
        "CommSocket.is_open": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerNbAgg.clearup_closed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerNbAgg.get_javascript": [
            {
                "type": "method",
                "args": {
                    "cls": "FigureCanvasBase",
                    "stream": "tornado.web.Stream"
                }
            }
        ],
        "FigureManagerNbAgg.display_js": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "connection_info": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "NavigationIPy.toolitems": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "CommSocket.on_close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CommSocket.on_message": [
            {
                "type": "method",
                "args": {
                    "message": "dict"
                }
            }
        ],
        "CommSocket.__init__": [
            {
                "type": "method",
                "args": {
                    "manager": "FigureManager"
                }
            }
        ],
        "FigureManagerNbAgg._create_comm": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerNbAgg.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerNbAgg.reshow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerNbAgg.destroy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_BackendNbAgg.show": [
            {
                "type": "method",
                "args": {
                    "block": "bool"
                }
            }
        ],
        "_BackendNbAgg.trigger_manager_draw": [
            {
                "type": "method",
                "args": {
                    "manager": "FigureManager"
                }
            }
        ],
        "FigureManagerNbAgg.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "num": "int"
                }
            }
        ],
        "_BackendNbAgg.new_figure_manager_given_figure": [
            {
                "type": "method",
                "args": {
                    "num": "int",
                    "figure": "Figure"
                }
            }
        ]
    },
    "matplotlib.backends.backend_pgf": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "latex_pt_to_in": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "latex_in_to_pt": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "mpl_pt_to_in": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "mpl_in_to_pt": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "NO_ESCAPE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "re_mathsep": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "LatexError.latex_output": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LatexError.__init__": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "latex_output": "str"
                }
            }
        ],
        "LatexManager._unclean_instances": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "LatexManager._get_cached_or_new_impl": [
            {
                "type": "method",
                "args": {
                    "cls": "type[LatexManager]",
                    "header": "str"
                }
            }
        ],
        "LatexManager.latex": [
            {
                "type": "attr",
                "anno": "subprocess.Popen"
            }
        ],
        "LatexManager._os_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "LatexManager._shutil": [
            {
                "type": "attr",
                "anno": "shutil.Shutil"
            }
        ],
        "LatexManager.tmpdir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LatexManager.texcommand": [
            {
                "type": "attr",
                "anno": "mpl.rcParams[pgf.texsystem]"
            }
        ],
        "LatexManager.latex_header": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LatexManager.str_cache": [
            {
                "type": "attr",
                "anno": "dict[str, tuple[float, float, float]]"
            }
        ],
        "LatexManager.latex_stdin_utf8": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPgf.dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererPgf.fh": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RendererPgf.figure": [
            {
                "type": "attr",
                "anno": "Figure"
            }
        ],
        "RendererPgf.image_counter": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererPgf._latexManager": [
            {
                "type": "attr",
                "anno": "LatexManager"
            }
        ],
        "RendererPgf.latexManager": [
            {
                "type": "attr",
                "anno": "LatexManager"
            }
        ],
        "RendererPgf.option_scale_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPgf.flipy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPgf.points_to_pixels": [
            {
                "type": "method",
                "args": {
                    "points": "float"
                }
            }
        ],
        "TmpDirCleaner.remaining_tmpdirs": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "FigureCanvasPgf.filetypes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FigureCanvasPgf.get_default_filetype": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerPgf": [
            {
                "type": "var",
                "anno": "FigureManagerBase"
            }
        ],
        "_BackendPgf.FigureCanvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasPgf"
            }
        ],
        "PdfPages.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "PdfPages._outputfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfPages._n_figures": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PdfPages.keep_empty": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PdfPages.metadata": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PdfPages._tmpdir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfPages._basename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfPages._fname_tex": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfPages._fname_pdf": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfPages._file": [
            {
                "type": "attr",
                "anno": "PdfFile"
            }
        ],
        "PdfPages.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "keep_empty": "bool",
                    "metadata": "dict"
                }
            }
        ],
        "PdfPages.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfPages.get_pagecount": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TmpDirCleaner.cleanup_remaining_tmpdirs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_replace_mathdefault": [
            {
                "type": "var",
                "anno": "mapspers.Mapping"
            }
        ],
        "_replace_escapetext": [
            {
                "type": "var",
                "anno": "mappers.Mapping"
            }
        ],
        "RendererPgf.get_canvas_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPgf.draw_image": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "im": "np.ndarray",
                    "transform": "np.ndarray"
                }
            }
        ],
        "RendererPgf.option_image_nocomposite": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "get_preamble": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "repl_mathdefault": [
            {
                "type": "func",
                "args": {
                    "m": "mpl.mathtext.Parser"
                }
            }
        ],
        "repl_escapetext": [
            {
                "type": "func",
                "args": {
                    "m": "Any"
                }
            }
        ],
        "LatexManager._expect": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "LatexManager._expect_prompt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_font_properties_str": [
            {
                "type": "func",
                "args": {
                    "prop": "fm.FontProperties"
                }
            }
        ],
        "common_texification": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "get_fontspec": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LatexManager._build_latex_header": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LatexManager._get_cached_or_new": [
            {
                "type": "method",
                "args": {
                    "cls": "type[LatexManager]"
                }
            }
        ],
        "RendererPgf.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure",
                    "fh": "str",
                    "dummy": "bool"
                }
            }
        ],
        "FigureCanvasPgf.get_renderer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LatexManager._cleanup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LatexManager.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LatexManager._cleanup_remaining_instances": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_cleanup_all": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LatexManager._stdin_writeln": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_get_image_inclusion_command": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LatexManager.get_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "prop": "fm.FontProperties"
                }
            }
        ],
        "RendererPgf.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "fm.FontProperties",
                    "ismath": "bool"
                }
            }
        ],
        "LatexManager._setup_latex_process": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "writeln": [
            {
                "type": "func",
                "args": {
                    "fh": "str",
                    "line": "str"
                }
            }
        ],
        "RendererPgf._pgf_path_draw": [
            {
                "type": "method",
                "args": {
                    "stroke": "bool",
                    "fill": "bool"
                }
            }
        ],
        "RendererPgf._print_pgf_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Path",
                    "rgbFace": "int"
                }
            }
        ],
        "PdfPages._write_header": [
            {
                "type": "method",
                "args": {
                    "width_inches": "np.ndarray",
                    "height_inches": "np.ndarray"
                }
            }
        ],
        "PdfPages._run_latex": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TmpDirCleaner.add": [
            {
                "type": "method",
                "args": {
                    "tmpdir": "str"
                }
            }
        ],
        "LatexManager.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPgf._print_pgf_clip": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase"
                }
            }
        ],
        "make_pdf_to_png_converter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "RendererPgf.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "fm.FontProperties",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "Text"
                }
            }
        ],
        "RendererPgf.draw_tex": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "fm.FontProperties",
                    "angle": "float",
                    "ismath": "str",
                    "mtext": "Text"
                }
            }
        ],
        "RendererPgf._print_pgf_path_styles": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "rgbFace": "int"
                }
            }
        ],
        "RendererPgf.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Path",
                    "rgbFace": "int"
                }
            }
        ],
        "RendererPgf.draw_markers": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "marker_path": "str",
                    "marker_trans": "str",
                    "path": "Path",
                    "trans": "Path",
                    "rgbFace": "int"
                }
            }
        ],
        "PdfPages.savefig": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasPgf._print_pgf_to_fh": [
            {
                "type": "method",
                "args": {
                    "fh": "str",
                    "args": "tuple[int, ...]",
                    "dryrun": "bool",
                    "bbox_inches_restore": "float",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "FigureCanvasPgf.print_pgf": [
            {
                "type": "method",
                "args": {
                    "fname_or_fh": "str",
                    "args": "tuple[int, ...]",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "FigureCanvasPgf._print_pdf_to_fh": [
            {
                "type": "method",
                "args": {
                    "fh": "str",
                    "args": "tuple[int, ...]",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "FigureCanvasPgf.print_pdf": [
            {
                "type": "method",
                "args": {
                    "fname_or_fh": "str",
                    "args": "tuple[int, ...]",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "FigureCanvasPgf._print_png_to_fh": [
            {
                "type": "method",
                "args": {
                    "fh": "str",
                    "args": "tuple[int, ...]",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "FigureCanvasPgf.print_png": [
            {
                "type": "method",
                "args": {
                    "fname_or_fh": "str",
                    "args": "tuple[int, ...]",
                    "kwargs": "tuple[int, ...]"
                }
            }
        ],
        "PdfPages.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfPages.__exit__": [
            {
                "type": "method",
                "args": {
                    "exc_type": "Exception",
                    "exc_val": "Exception",
                    "exc_tb": "Exception"
                }
            }
        ]
    },
    "matplotlib.backends.backend_qt4cairo": {
        "_BackendQT4Cairo.FigureCanvas.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "matplotlib.backends.backend_qt4": {
        "_BackendQT4.FigureCanvas.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "matplotlib.backends.backend_pdf": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_string_escape_regex": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "Reference.id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Reference.__init__": [
            {
                "type": "method",
                "args": {
                    "id": "int"
                }
            }
        ],
        "Reference.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Reference.pdfRepr": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Name.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Name._regex": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Name.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Name.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Name.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Name.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Name.pdfRepr": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Operator.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Operator.op": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Operator.__init__": [
            {
                "type": "method",
                "args": {
                    "op": "str"
                }
            }
        ],
        "Operator.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Operator.pdfRepr": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Verbatim._x": [
            {
                "type": "attr",
                "anno": "Affine2D"
            }
        ],
        "Verbatim.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "BlendedAffine2D"
                }
            }
        ],
        "Verbatim.pdfRepr": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stream.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Stream.id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Stream.len": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Stream.pdfFile": [
            {
                "type": "attr",
                "anno": "PdfFile"
            }
        ],
        "Stream.file": [
            {
                "type": "attr",
                "anno": "BytesIO"
            }
        ],
        "Stream.compressobj": [
            {
                "type": "attr",
                "anno": "zlib.compressobj"
            }
        ],
        "Stream.extra": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Stream.pos": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PdfFile._object_seq": [
            {
                "type": "attr",
                "anno": "tuple[Name, ...]"
            }
        ],
        "PdfFile.xrefTable": [
            {
                "type": "attr",
                "anno": "list[tuple[str, int]]"
            }
        ],
        "PdfFile.passed_in_file_object": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PdfFile.original_file_like": [
            {
                "type": "attr",
                "anno": "Optional[IO]"
            }
        ],
        "PdfFile.tell_base": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PdfFile.fh": [
            {
                "type": "attr",
                "anno": "IO"
            }
        ],
        "PdfFile.currentstream": [
            {
                "type": "attr",
                "anno": "Stream"
            }
        ],
        "PdfFile.rootObject": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfFile.pagesObject": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfFile.pageList": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "PdfFile.fontObject": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfFile._extGStateObject": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfFile.hatchObject": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfFile.gouraudObject": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfFile.XObjectObject": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfFile.resourceObject": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PdfFile.infoDict": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "PdfFile.fontNames": [
            {
                "type": "attr",
                "anno": "dict[str, Name]"
            }
        ],
        "PdfFile._internal_font_seq": [
            {
                "type": "attr",
                "anno": "tuple[Name, ...]"
            }
        ],
        "PdfFile.dviFontInfo": [
            {
                "type": "attr",
                "anno": "dict[str, types.SimpleNamespace]"
            }
        ],
        "PdfFile.type1Descriptors": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "PdfFile._character_tracker": [
            {
                "type": "attr",
                "anno": "_backend_pdf_ps.CharacterTracker"
            }
        ],
        "PdfFile.alphaStates": [
            {
                "type": "attr",
                "anno": "dict[str, tuple[Name, ...]]"
            }
        ],
        "PdfFile._alpha_state_seq": [
            {
                "type": "attr",
                "anno": "tuple[Name, ...]"
            }
        ],
        "PdfFile._soft_mask_states": [
            {
                "type": "attr",
                "anno": "dict[Name, ...]"
            }
        ],
        "PdfFile._soft_mask_seq": [
            {
                "type": "attr",
                "anno": "tuple[Name, ...]"
            }
        ],
        "PdfFile._soft_mask_groups": [
            {
                "type": "attr",
                "anno": "list[tuple[Name, ...]]"
            }
        ],
        "PdfFile.hatchPatterns": [
            {
                "type": "attr",
                "anno": "dict[str, Name]"
            }
        ],
        "PdfFile._hatch_pattern_seq": [
            {
                "type": "attr",
                "anno": "tuple[Name, ...]"
            }
        ],
        "PdfFile.gouraudTriangles": [
            {
                "type": "attr",
                "anno": "list[tuple[Name, Reference, np.ndarray]]"
            }
        ],
        "PdfFile._images": [
            {
                "type": "attr",
                "anno": "dict[int, tuple[Image, Name, Image]]"
            }
        ],
        "PdfFile._image_seq": [
            {
                "type": "attr",
                "anno": "tuple[Name, ...]"
            }
        ],
        "PdfFile.markers": [
            {
                "type": "attr",
                "anno": "dict[str, list[Name]]"
            }
        ],
        "PdfFile.multi_byte_charprocs": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "PdfFile.paths": [
            {
                "type": "attr",
                "anno": "list[tuple[Name, Path, Affine2D, str, ...]]"
            }
        ],
        "PdfFile.pageAnnotations": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "PdfFile._identityToUnicodeCMap": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "PdfFile.reserveObject": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "PdfFile.recordXref": [
            {
                "type": "method",
                "args": {
                    "id": "int"
                }
            }
        ],
        "PdfFile.startxref": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PdfFile.infoObject": [
            {
                "type": "attr",
                "anno": "Reference"
            }
        ],
        "RendererPdf._use_afm_rc_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RendererPdf.file": [
            {
                "type": "attr",
                "anno": "PdfFile"
            }
        ],
        "RendererPdf.gc": [
            {
                "type": "attr",
                "anno": "GraphicsContextPdf"
            }
        ],
        "RendererPdf.mathtext_parser": [
            {
                "type": "attr",
                "anno": "MathTextParser"
            }
        ],
        "RendererPdf.image_dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererPdf.get_image_magnification": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPdf.encode_string": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "fonttype": "int"
                }
            }
        ],
        "GraphicsContextPdf._fillcolor": [
            {
                "type": "attr",
                "anno": "tuple[float, float, float]"
            }
        ],
        "GraphicsContextPdf._effective_alphas": [
            {
                "type": "attr",
                "anno": "tuple[float, float]"
            }
        ],
        "GraphicsContextPdf.file": [
            {
                "type": "attr",
                "anno": "PdfFile"
            }
        ],
        "GraphicsContextPdf.parent": [
            {
                "type": "attr",
                "anno": "GraphicsContextBase"
            }
        ],
        "GraphicsContextPdf.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextPdf.capstyles": [
            {
                "type": "attr",
                "anno": "dict[str, int]"
            }
        ],
        "GraphicsContextPdf.joinstyles": [
            {
                "type": "attr",
                "anno": "dict[str, int]"
            }
        ],
        "PdfPages.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "PdfPages._file": [
            {
                "type": "attr",
                "anno": "PdfFile"
            }
        ],
        "PdfPages.keep_empty": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PdfPages.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfPages.infodict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfPages.get_pagecount": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasPdf.fixed_dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureCanvasPdf.filetypes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FigureCanvasPdf.get_default_filetype": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerPdf": [
            {
                "type": "var",
                "anno": "FigureManagerBase"
            }
        ],
        "_BackendPdf.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvasPdf]"
            }
        ],
        "GraphicsContextPdf.stroke": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextPdf.fill": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "PdfFile.used_characters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile._unpack": [
            {
                "type": "method",
                "args": {
                    "im": "np.ndarray"
                }
            }
        ],
        "GraphicsContextPdf.copy_properties": [
            {
                "type": "method",
                "args": {
                    "other": "GraphicsContextBase"
                }
            }
        ],
        "Name.__lt__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "Name.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "RendererPdf._afm_font_dir": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Name.hexify": [
            {
                "type": "method",
                "args": {
                    "match": "Any"
                }
            }
        ],
        "Name.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "PdfFile.pathCollectionObject": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "trans": "Affine2D",
                    "padding": "np.ndarray",
                    "filled": "bool",
                    "stroked": "bool"
                }
            }
        ],
        "PdfFile.addGouraudTriangles": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray",
                    "colors": "np.ndarray"
                }
            }
        ],
        "_string_escape": [
            {
                "type": "func",
                "args": {
                    "match": "re.Match"
                }
            }
        ],
        "PdfFile.imageObject": [
            {
                "type": "method",
                "args": {
                    "image": "Image"
                }
            }
        ],
        "PdfFile.hatchPattern": [
            {
                "type": "method",
                "args": {
                    "hatch_style": "tuple[str, ...]"
                }
            }
        ],
        "PdfFile.alphaState": [
            {
                "type": "method",
                "args": {
                    "alpha": "str"
                }
            }
        ],
        "PdfFile.fontName": [
            {
                "type": "method",
                "args": {
                    "fontprop": "str"
                }
            }
        ],
        "PdfFile._get_xobject_symbol_name": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "symbol_name": "str"
                }
            }
        ],
        "fill": [
            {
                "type": "func",
                "args": {
                    "strings": "list[bytes]",
                    "linelen": "int"
                }
            }
        ],
        "_pdfops": [
            {
                "type": "var",
                "anno": "dict[str, bytes]"
            }
        ],
        "Op": [
            {
                "type": "var",
                "anno": "types.SimpleNamespace"
            }
        ],
        "GraphicsContextPdf.pop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextPdf.finalize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextPdf.fillcolor_cmd": [
            {
                "type": "method",
                "args": {
                    "rgb": "tuple[float, float, float]"
                }
            }
        ],
        "GraphicsContextPdf.rgb_cmd": [
            {
                "type": "method",
                "args": {
                    "rgb": "tuple[float, float, float]"
                }
            }
        ],
        "GraphicsContextPdf.hatch_cmd": [
            {
                "type": "method",
                "args": {
                    "hatch": "bool",
                    "hatch_color": "str"
                }
            }
        ],
        "GraphicsContextPdf.alpha_cmd": [
            {
                "type": "method",
                "args": {
                    "alpha": "str",
                    "forced": "bool",
                    "effective_alphas": "str"
                }
            }
        ],
        "GraphicsContextPdf.dash_cmd": [
            {
                "type": "method",
                "args": {
                    "dashes": "tuple[float, ...]"
                }
            }
        ],
        "GraphicsContextPdf.linewidth_cmd": [
            {
                "type": "method",
                "args": {
                    "width": "float"
                }
            }
        ],
        "GraphicsContextPdf.joinstyle_cmd": [
            {
                "type": "method",
                "args": {
                    "style": "str"
                }
            }
        ],
        "GraphicsContextPdf.capstyle_cmd": [
            {
                "type": "method",
                "args": {
                    "style": "str"
                }
            }
        ],
        "GraphicsContextPdf.paint": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.pathOperations": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "transform": "Transform",
                    "clip": "float",
                    "simplify": "bool",
                    "sketch": "bool"
                }
            }
        ],
        "PdfFile._soft_mask_state": [
            {
                "type": "method",
                "args": {
                    "smask": "Name"
                }
            }
        ],
        "pdfRepr": [
            {
                "type": "func",
                "args": {
                    "obj": "Union[str, bytes, BboxBase]"
                }
            }
        ],
        "Reference.write": [
            {
                "type": "method",
                "args": {
                    "contents": "Union[str, bytes, BboxBase]",
                    "file": "PdfFile"
                }
            }
        ],
        "Stream.write": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "PdfFile.write": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "PdfFile.writeTrailer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.writeXref": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.writeObject": [
            {
                "type": "method",
                "args": {
                    "object": "Reference",
                    "contents": "bytes"
                }
            }
        ],
        "PdfFile.writeInfoDict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.writeExtGSTates": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile._write_afm_font": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "PdfFile.newTextnote": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "positionRect": "list[int]"
                }
            }
        ],
        "PdfPages.attach_note": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "positionRect": "list[int]"
                }
            }
        ],
        "Stream._flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stream._writeHeader": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stream.end": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.endStream": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stream.__init__": [
            {
                "type": "method",
                "args": {
                    "id": "int",
                    "len": "int",
                    "file": "PdfFile",
                    "extra": "dict",
                    "png": "str"
                }
            }
        ],
        "PdfFile.beginStream": [
            {
                "type": "method",
                "args": {
                    "id": "int",
                    "len": "int",
                    "extra": "dict",
                    "png": "str"
                }
            }
        ],
        "PdfFile.writeGouraudTriangles": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.createType1Descriptor": [
            {
                "type": "method",
                "args": {
                    "t1font": "type1font.Type1Font",
                    "fontfile": "str"
                }
            }
        ],
        "RendererPdf.merge_used_characters": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "RendererPdf.track_characters": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "PdfFile.output": [
            {
                "type": "method",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "RendererPdf._setup_textpos": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "angle": "float",
                    "oldx": "float",
                    "oldy": "float",
                    "oldangle": "float"
                }
            }
        ],
        "PdfFile.writePath": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "transform": "Transform",
                    "clip": "bool",
                    "sketch": "bool"
                }
            }
        ],
        "PdfFile._write_soft_mask_groups": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.newPage": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "PdfFile.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "metadata": "dict"
                }
            }
        ],
        "PdfPages.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "keep_empty": "bool",
                    "metadata": "dict"
                }
            }
        ],
        "GraphicsContextPdf.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "PdfFile"
                }
            }
        ],
        "GraphicsContextPdf.push": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPdf.new_gc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPdf.__init__": [
            {
                "type": "method",
                "args": {
                    "file": "PdfFile",
                    "image_dpi": "float",
                    "height": "float",
                    "width": "float"
                }
            }
        ],
        "PdfFile.writeHatches": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_paint_path": [
            {
                "type": "func",
                "args": {
                    "fill": "bool",
                    "stroke": "bool"
                }
            }
        ],
        "PdfFile.markerObject": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "trans": "Affine2D",
                    "fill": "bool",
                    "stroke": "bool",
                    "lw": "int",
                    "joinstyle": "str",
                    "capstyle": "str"
                }
            }
        ],
        "PdfFile.dviFontName": [
            {
                "type": "method",
                "args": {
                    "dvifont": "dviread.DviFont"
                }
            }
        ],
        "PdfFile.embedTTF": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "characters": "list[int]"
                }
            }
        ],
        "GraphicsContextPdf.clip_cmd": [
            {
                "type": "method",
                "args": {
                    "cliprect": "str",
                    "clippath": "str"
                }
            }
        ],
        "GraphicsContextPdf.commands": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "GraphicsContextPdf.delta": [
            {
                "type": "method",
                "args": {
                    "other": "GraphicsContextPdf"
                }
            }
        ],
        "RendererPdf.check_gc": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPdf",
                    "fillcolor": "tuple"
                }
            }
        ],
        "RendererPdf.draw_markers": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "marker_path": "str",
                    "marker_trans": "str",
                    "path": "Path",
                    "trans": "Affine2D",
                    "rgbFace": "str"
                }
            }
        ],
        "RendererPdf.draw_path_collection": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "master_transform": "Affine2D",
                    "paths": "Path",
                    "all_transforms": "Path",
                    "offsets": "np.ndarray",
                    "offsetTrans": "np.ndarray",
                    "facecolors": "np.ndarray",
                    "edgecolors": "np.ndarray",
                    "linewidths": "tuple",
                    "linestyles": "tuple",
                    "antialiaseds": "tuple",
                    "urls": "tuple",
                    "offset_position": "str"
                }
            }
        ],
        "RendererPdf.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPdf",
                    "path": "Path",
                    "transform": "Transform",
                    "rgbFace": "tuple"
                }
            }
        ],
        "PdfFile._embedTeXFont": [
            {
                "type": "method",
                "args": {
                    "fontinfo": "types.SimpleNamespace"
                }
            }
        ],
        "PdfFile.writeFonts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.writePathCollectionTemplates": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.writeMarkers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfPages.savefig": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure",
                    "kwargs": "object"
                }
            }
        ],
        "RendererPdf.draw_gouraud_triangles": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPdf",
                    "points": "np.ndarray",
                    "colors": "np.ndarray",
                    "trans": "Transform"
                }
            }
        ],
        "RendererPdf.draw_gouraud_triangle": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPdf",
                    "points": "np.ndarray",
                    "colors": "np.ndarray",
                    "trans": "Transform"
                }
            }
        ],
        "RendererPdf.draw_image": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPdf",
                    "x": "float",
                    "y": "float",
                    "im": "Image",
                    "transform": "Transform"
                }
            }
        ],
        "PdfFile._writePng": [
            {
                "type": "method",
                "args": {
                    "data": "np.ndarray"
                }
            }
        ],
        "PdfFile._writeImg": [
            {
                "type": "method",
                "args": {
                    "data": "np.ndarray",
                    "id": "int",
                    "smask": "Image"
                }
            }
        ],
        "PdfFile.writeImages": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.finalize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfFile.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PdfPages.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPdf.finalize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasPdf.print_pdf": [
            {
                "type": "method",
                "args": {
                    "filename": "Union[PdfPages, PdfFile]",
                    "dpi": "int",
                    "bbox_inches_restore": "float",
                    "metadata": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "PdfPages.__exit__": [
            {
                "type": "method",
                "args": {
                    "exc_type": "Any",
                    "exc_val": "Any",
                    "exc_tb": "Any"
                }
            }
        ],
        "RendererPdf.draw_tex": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPdf",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "dviread.FontProperties",
                    "angle": "float",
                    "ismath": "str",
                    "mtext": "Text"
                }
            }
        ],
        "RendererPdf.draw_mathtext": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPdf",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float"
                }
            }
        ],
        "RendererPdf.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPdf",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "Text"
                }
            }
        ]
    },
    "matplotlib.backends.backend_ps": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "backend_version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "debugPS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "PsBackendHelper._cached": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PsBackendHelper.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ps_backend_helper": [
            {
                "type": "var",
                "anno": "PsBackendHelper"
            }
        ],
        "papersize": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_get_papertype": [
            {
                "type": "func",
                "args": {
                    "w": "float",
                    "h": "float"
                }
            }
        ],
        "_num_to_str": [
            {
                "type": "func",
                "args": {
                    "val": "float"
                }
            }
        ],
        "RendererPS._use_afm_rc_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RendererPS._pswriter": [
            {
                "type": "attr",
                "anno": "TextIOWrapper"
            }
        ],
        "RendererPS.textcnt": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererPS.psfrag": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RendererPS.imagedpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererPS.color": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RendererPS.linewidth": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RendererPS.linejoin": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RendererPS.linecap": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RendererPS.linedash": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RendererPS.fontname": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RendererPS.fontsize": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RendererPS._hatches": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererPS.image_magnification": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RendererPS._clip_paths": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RendererPS._path_collection_id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RendererPS._character_tracker": [
            {
                "type": "attr",
                "anno": "_backend_pdf_ps.CharacterTracker"
            }
        ],
        "RendererPS.mathtext_parser": [
            {
                "type": "attr",
                "anno": "MathTextParser"
            }
        ],
        "RendererPS.get_image_magnification": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPS._convert_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "transform": "Affine2D",
                    "clip": "bool",
                    "simplify": "bool"
                }
            }
        ],
        "_is_transparent": [
            {
                "type": "func",
                "args": {
                    "rgb_or_rgba": "np.ndarray"
                }
            }
        ],
        "FigureCanvasPS.fixed_dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureCanvasPS.filetypes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FigureCanvasPS.get_default_filetype": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasPS._pswriter": [
            {
                "type": "attr",
                "anno": "TextIOWrapper"
            }
        ],
        "FigureCanvasPS.NullWriter.write": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "_try_distill": [
            {
                "type": "func",
                "args": {
                    "func": "Callable",
                    "args": "float",
                    "kwargs": "float"
                }
            }
        ],
        "FigureManagerPS": [
            {
                "type": "var",
                "anno": "FigureManagerBase"
            }
        ],
        "psDefs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "_BackendPS.FigureCanvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasPS"
            }
        ],
        "GraphicsContextPS.get_capstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextPS.get_joinstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPS.used_characters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Orientation.swap_if_landscape": [
            {
                "type": "method",
                "args": {
                    "shape": "tuple"
                }
            }
        ],
        "RendererPS.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int",
                    "pswriter": "TextIOWrapper",
                    "imagedpi": "int"
                }
            }
        ],
        "RendererPS._afm_font_dir": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "quote_ps_string": [
            {
                "type": "func",
                "args": {
                    "s": "bytes"
                }
            }
        ],
        "get_bbox_header": [
            {
                "type": "func",
                "args": {
                    "lbrt": "tuple",
                    "rotated": "bool"
                }
            }
        ],
        "_nums_to_str": [
            {
                "type": "func",
                "args": {
                    "args": "float"
                }
            }
        ],
        "pstoeps": [
            {
                "type": "func",
                "args": {
                    "tmpfile": "str",
                    "bbox": "tuple",
                    "rotated": "bool"
                }
            }
        ],
        "RendererPS.draw_gouraud_triangles": [
            {
                "type": "method",
                "args": {
                    "gc": "mpl.rcsetup.Context",
                    "points": "np.ndarray",
                    "colors": "np.ndarray",
                    "trans": "Affine2D"
                }
            }
        ],
        "RendererPS.draw_gouraud_triangle": [
            {
                "type": "method",
                "args": {
                    "gc": "mpl.rcsetup.Context",
                    "points": "np.ndarray",
                    "colors": "np.ndarray",
                    "trans": "Affine2D"
                }
            }
        ],
        "RendererPS._get_clip_path": [
            {
                "type": "method",
                "args": {
                    "clippath": "str",
                    "clippath_transform": "Affine2D"
                }
            }
        ],
        "RendererPS.set_font": [
            {
                "type": "method",
                "args": {
                    "fontname": "tuple",
                    "fontsize": "tuple",
                    "store": "bool"
                }
            }
        ],
        "RendererPS.set_linedash": [
            {
                "type": "method",
                "args": {
                    "offset": "float",
                    "seq": "tuple",
                    "store": "bool"
                }
            }
        ],
        "RendererPS.set_linecap": [
            {
                "type": "method",
                "args": {
                    "linecap": "tuple",
                    "store": "bool"
                }
            }
        ],
        "RendererPS.set_linejoin": [
            {
                "type": "method",
                "args": {
                    "linejoin": "tuple",
                    "store": "bool"
                }
            }
        ],
        "RendererPS.set_linewidth": [
            {
                "type": "method",
                "args": {
                    "linewidth": "float",
                    "store": "bool"
                }
            }
        ],
        "RendererPS.set_color": [
            {
                "type": "method",
                "args": {
                    "r": "tuple",
                    "g": "tuple",
                    "b": "tuple",
                    "store": "bool"
                }
            }
        ],
        "_move_path_to_path_or_stream": [
            {
                "type": "func",
                "args": {
                    "src": "str",
                    "dst": "str"
                }
            }
        ],
        "RendererPS.create_hatch": [
            {
                "type": "method",
                "args": {
                    "hatch": "np.ndarray"
                }
            }
        ],
        "RendererPS.merge_used_characters": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "RendererPS.track_characters": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "RendererPS.new_gc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererPS.draw_image": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "im": "np.ndarray",
                    "transform": "Affine2D"
                }
            }
        ],
        "xpdf_distill": [
            {
                "type": "func",
                "args": {
                    "tmpfile": "str",
                    "eps": "bool",
                    "ptype": "str",
                    "bbox": "tuple",
                    "rotated": "bool"
                }
            }
        ],
        "gs_distill": [
            {
                "type": "func",
                "args": {
                    "tmpfile": "str",
                    "eps": "bool",
                    "ptype": "str",
                    "bbox": "tuple",
                    "rotated": "bool"
                }
            }
        ],
        "RendererPS._draw_ps": [
            {
                "type": "method",
                "args": {
                    "ps": "str",
                    "gc": "GraphicsContextBase",
                    "rgbFace": "np.ndarray",
                    "fill": "bool",
                    "stroke": "bool",
                    "command": "str"
                }
            }
        ],
        "RendererPS.draw_path_collection": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "master_transform": "Affine2D",
                    "paths": "Path",
                    "all_transforms": "Path",
                    "offsets": "np.ndarray",
                    "offsetTrans": "np.ndarray",
                    "facecolors": "np.ndarray",
                    "edgecolors": "np.ndarray",
                    "linewidths": "tuple",
                    "linestyles": "tuple",
                    "antialiaseds": "tuple",
                    "urls": "tuple",
                    "offset_position": "str"
                }
            }
        ],
        "RendererPS.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Affine2D",
                    "rgbFace": "int"
                }
            }
        ],
        "RendererPS.draw_mathtext": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPS",
                    "x": "tuple",
                    "y": "tuple",
                    "s": "str",
                    "prop": "str",
                    "angle": "str"
                }
            }
        ],
        "RendererPS.draw_tex": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPS",
                    "x": "tuple",
                    "y": "tuple",
                    "s": "str",
                    "prop": "str",
                    "angle": "str",
                    "ismath": "str",
                    "mtext": "str"
                }
            }
        ],
        "RendererPS.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextPS",
                    "x": "tuple",
                    "y": "tuple",
                    "s": "str",
                    "prop": "str",
                    "angle": "str",
                    "ismath": "bool",
                    "mtext": "str"
                }
            }
        ],
        "RendererPS.draw_markers": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "marker_path": "str",
                    "marker_trans": "str",
                    "path": "Path",
                    "trans": "Affine2D",
                    "rgbFace": "np.ndarray"
                }
            }
        ],
        "convert_psfrags": [
            {
                "type": "func",
                "args": {
                    "tmpfile": "str",
                    "psfrags": "str",
                    "font_preamble": "str",
                    "custom_preamble": "str",
                    "paper_width": "int",
                    "paper_height": "int",
                    "orientation": "_Orientation"
                }
            }
        ],
        "FigureCanvasPS._print_figure_tex": [
            {
                "type": "method",
                "args": {
                    "outfile": "str",
                    "format": "str",
                    "dpi": "int",
                    "dsc_comments": "str",
                    "orientation": "_Orientation",
                    "papertype": "str",
                    "dryrun": "bool",
                    "bbox_inches_restore": "float",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasPS._print_figure": [
            {
                "type": "method",
                "args": {
                    "outfile": "str",
                    "format": "str",
                    "dpi": "int",
                    "dsc_comments": "str",
                    "orientation": "_Orientation",
                    "papertype": "str",
                    "dryrun": "bool",
                    "bbox_inches_restore": "float",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasPS._print_ps": [
            {
                "type": "method",
                "args": {
                    "outfile": "str",
                    "format": "str",
                    "args": "tuple",
                    "dpi": "int",
                    "metadata": "dict",
                    "papertype": "str",
                    "orientation": "_Orientation",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasPS.print_eps": [
            {
                "type": "method",
                "args": {
                    "outfile": "str",
                    "args": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasPS.print_ps": [
            {
                "type": "method",
                "args": {
                    "outfile": "str",
                    "args": "tuple",
                    "kwargs": "object"
                }
            }
        ]
    },
    "matplotlib.backends.backend_webagg_core": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_SHIFT_LUT": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_LUT": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_handle_key": [
            {
                "type": "func",
                "args": {
                    "key": "str"
                }
            }
        ],
        "FigureCanvasWebAggCore.supports_blit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasWebAggCore._png_is_old": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasWebAggCore._force_full": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasWebAggCore._current_image_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasWebAggCore._dpi_ratio": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureCanvasWebAggCore._renderer": [
            {
                "type": "attr",
                "anno": "backend_agg.RendererAgg"
            }
        ],
        "FigureCanvasWebAggCore._last_renderer": [
            {
                "type": "attr",
                "anno": "backend_agg.RendererAgg"
            }
        ],
        "FigureCanvasWebAggCore._lastKey": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasWebAggCore.handle_ack": [
            {
                "type": "method",
                "args": {
                    "event": "backend_agg.Event"
                }
            }
        ],
        "_ALLOWED_TOOL_ITEMS": [
            {
                "type": "var",
                "anno": "set[str]"
            }
        ],
        "NavigationToolbar2WebAgg.message": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NavigationToolbar2WebAgg.cursor": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NavigationToolbar2WebAgg.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "backend_agg.FigureCanvasAgg"
                }
            }
        ],
        "FigureManagerWebAgg.ToolbarCls": [
            {
                "type": "attr",
                "anno": "backend_agg.ToolbarCls"
            }
        ],
        "FigureManagerWebAgg.web_sockets": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "FigureManagerWebAgg.toolbar": [
            {
                "type": "attr",
                "anno": "backend_agg.FigureToolbar"
            }
        ],
        "FigureManagerWebAgg.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerWebAgg._get_toolbar": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase"
                }
            }
        ],
        "FigureManagerWebAgg.get_static_file_path": [
            {
                "type": "method",
                "args": {
                    "cls": "type[backend_agg.FigureManagerBase]"
                }
            }
        ],
        "FigureManagerWebAgg._send_event": [
            {
                "type": "method",
                "args": {
                    "event_type": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "FigureManagerWebAgg.set_window_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "TimerTornado._timer": [
            {
                "type": "attr",
                "anno": "tornado.ioloop.PeriodicCallback"
            }
        ],
        "TimerTornado.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "_BackendWebAggCoreAgg.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[backend_agg.FigureCanvas]"
            }
        ],
        "_BackendWebAggCoreAgg.FigureManager": [
            {
                "type": "attr",
                "anno": "backend_bases.FigureManager"
            }
        ],
        "FigureCanvasWebAggCore.handle_unknown_event": [
            {
                "type": "method",
                "args": {
                    "event": "dict"
                }
            }
        ],
        "FigureCanvasWebAggCore.handle_event": [
            {
                "type": "method",
                "args": {
                    "event": "dict"
                }
            }
        ],
        "TimerTornado._timer_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasWebAggCore.send_event": [
            {
                "type": "method",
                "args": {
                    "event_type": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "FigureCanvasWebAggCore.handle_send_image_mode": [
            {
                "type": "method",
                "args": {
                    "event": "None"
                }
            }
        ],
        "FigureCanvasWebAggCore.draw_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasWebAggCore.handle_toolbar_button": [
            {
                "type": "method",
                "args": {
                    "event": "dict"
                }
            }
        ],
        "FigureManagerWebAgg.handle_json": [
            {
                "type": "method",
                "args": {
                    "content": "dict"
                }
            }
        ],
        "FigureManagerWebAgg.resize": [
            {
                "type": "method",
                "args": {
                    "w": "float",
                    "h": "float"
                }
            }
        ],
        "NavigationToolbar2WebAgg.save_figure": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2WebAgg.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "event": "str",
                    "x0": "float",
                    "y0": "float",
                    "x1": "float",
                    "y1": "float"
                }
            }
        ],
        "NavigationToolbar2WebAgg.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "int"
                }
            }
        ],
        "NavigationToolbar2WebAgg.set_message": [
            {
                "type": "method",
                "args": {
                    "message": "str"
                }
            }
        ],
        "NavigationToolbar2WebAgg.set_history_buttons": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasWebAggCore.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2WebAgg.toolitems": [
            {
                "type": "attr",
                "anno": "list[tuple]"
            }
        ],
        "FigureManagerWebAgg.get_javascript": [
            {
                "type": "method",
                "args": {
                    "cls": "FigureCanvasBase",
                    "stream": "tornado.web.Stream"
                }
            }
        ],
        "FigureCanvasWebAggCore.set_image_mode": [
            {
                "type": "method",
                "args": {
                    "mode": "str"
                }
            }
        ],
        "TimerTornado._timer_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerTornado._timer_set_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerWebAgg.remove_web_socket": [
            {
                "type": "method",
                "args": {
                    "web_socket": "tornado.websocket.WebSocketHandler"
                }
            }
        ],
        "FigureManagerWebAgg.add_web_socket": [
            {
                "type": "method",
                "args": {
                    "web_socket": "tornado.websocket.WebSocketHandler"
                }
            }
        ],
        "FigureCanvasWebAggCore._handle_key": [
            {
                "type": "method",
                "args": {
                    "event": "dict"
                }
            }
        ],
        "FigureCanvasWebAggCore.handle_key_release": [
            {
                "type": "attr",
                "anno": "backend_agg.FigureCanvasAgg"
            }
        ],
        "FigureCanvasWebAggCore.handle_key_press": [
            {
                "type": "attr",
                "anno": "backend_agg.FigureCanvasAgg"
            }
        ],
        "FigureCanvasWebAggCore.handle_set_dpi_ratio": [
            {
                "type": "method",
                "args": {
                    "event": "dict"
                }
            }
        ],
        "FigureCanvasWebAggCore.handle_resize": [
            {
                "type": "method",
                "args": {
                    "event": "tornado.web.Event"
                }
            }
        ],
        "FigureCanvasWebAggCore.get_renderer": [
            {
                "type": "method",
                "args": {
                    "cleared": "bool"
                }
            }
        ],
        "FigureCanvasWebAggCore._handle_mouse": [
            {
                "type": "method",
                "args": {
                    "event": "dict"
                }
            }
        ],
        "FigureCanvasWebAggCore.handle_scroll": [
            {
                "type": "attr",
                "anno": "backend_agg.FigureCanvasScroll"
            }
        ],
        "FigureCanvasWebAggCore.handle_figure_leave": [
            {
                "type": "attr",
                "anno": "backend_agg.FigureCanvasAgg"
            }
        ],
        "FigureCanvasWebAggCore.handle_figure_enter": [
            {
                "type": "attr",
                "anno": "backend_agg.FigureCanvasAgg"
            }
        ],
        "FigureCanvasWebAggCore.handle_motion_notify": [
            {
                "type": "attr",
                "anno": "backend_agg.Handler"
            }
        ],
        "FigureCanvasWebAggCore.handle_button_release": [
            {
                "type": "attr",
                "anno": "backend_agg.MouseHandler"
            }
        ],
        "FigureCanvasWebAggCore.handle_button_press": [
            {
                "type": "attr",
                "anno": "backend_agg.FigureCanvasAgg"
            }
        ],
        "NavigationToolbar2WebAgg.release_zoom": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "FigureCanvasWebAggCore.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FigureCanvasWebAggCore.handle_refresh": [
            {
                "type": "method",
                "args": {
                    "event": "backend_agg.Event"
                }
            }
        ],
        "FigureCanvasWebAggCore.get_diff_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerWebAgg.refresh_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasWebAggCore.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasWebAggCore.handle_draw": [
            {
                "type": "method",
                "args": {
                    "event": "backend_agg.DrawEvent"
                }
            }
        ],
        "NavigationToolbar2WebAgg.zoom": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2WebAgg.pan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerWebAgg.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "num": "int"
                }
            }
        ]
    },
    "matplotlib._layoutbox": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "LayoutBox.parent": [
            {
                "type": "attr",
                "anno": "kiwi.LayoutBox"
            }
        ],
        "LayoutBox.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LayoutBox.solver": [
            {
                "type": "attr",
                "anno": "kawi.Solver"
            }
        ],
        "LayoutBox.constrained_layout_called": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LayoutBox.artist": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LayoutBox.pos": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LayoutBox.subplot": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LayoutBox.top": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.bottom": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.left": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.right": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.width": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.height": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.h_center": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.v_center": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.min_width": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.min_height": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.pref_width": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.pref_height": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.left_margin": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.right_margin": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.bottom_margin": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.top_margin": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.left_margin_min": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.right_margin_min": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.bottom_margin_min": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.top_margin_min": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.tightheight": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LayoutBox.tightwidth": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LayoutBox.children": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LayoutBox.subplotspec": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LayoutBox.h_pad": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.w_pad": [
            {
                "type": "attr",
                "anno": "Variable"
            }
        ],
        "LayoutBox.add_child": [
            {
                "type": "method",
                "args": {
                    "child": "LayoutBox"
                }
            }
        ],
        "LayoutBox.hard_constraints": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox.soft_constraints": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox.constrain_geometry": [
            {
                "type": "method",
                "args": {
                    "left": "float",
                    "bottom": "float",
                    "right": "float",
                    "top": "float",
                    "strength": "int"
                }
            }
        ],
        "LayoutBox.edit_left_margin_min": [
            {
                "type": "method",
                "args": {
                    "margin": "int"
                }
            }
        ],
        "LayoutBox.edit_right_margin_min": [
            {
                "type": "method",
                "args": {
                    "margin": "float"
                }
            }
        ],
        "LayoutBox.edit_bottom_margin_min": [
            {
                "type": "method",
                "args": {
                    "margin": "int"
                }
            }
        ],
        "LayoutBox.edit_top_margin_min": [
            {
                "type": "method",
                "args": {
                    "margin": "int"
                }
            }
        ],
        "LayoutBox.update_variables": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox.edit_height": [
            {
                "type": "method",
                "args": {
                    "height": "float",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_height": [
            {
                "type": "method",
                "args": {
                    "height": "Variable",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_height_min": [
            {
                "type": "method",
                "args": {
                    "height": "int",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.edit_width": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_width": [
            {
                "type": "method",
                "args": {
                    "width": "Variable",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_width_min": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_left": [
            {
                "type": "method",
                "args": {
                    "left": "Variable",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_bottom": [
            {
                "type": "method",
                "args": {
                    "bottom": "Variable",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_right": [
            {
                "type": "method",
                "args": {
                    "right": "Variable",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_top": [
            {
                "type": "method",
                "args": {
                    "top": "Variable",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox._is_subplotspec_layoutbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox._is_gridspec_layoutbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox.find_child_subplots": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "align": [
            {
                "type": "func",
                "args": {
                    "boxes": "list",
                    "attr": "str",
                    "strength": "str"
                }
            }
        ],
        "_layoutboxobjnum": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "seq_id": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "print_children": [
            {
                "type": "func",
                "args": {
                    "lb": "LayoutBox"
                }
            }
        ],
        "LayoutBox.constrain_left_margin": [
            {
                "type": "method",
                "args": {
                    "margin": "int",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_bottom_margin": [
            {
                "type": "method",
                "args": {
                    "margin": "int",
                    "strength": "str"
                }
            }
        ],
        "hpack": [
            {
                "type": "func",
                "args": {
                    "boxes": "list[LayoutBox]",
                    "padding": "int",
                    "strength": "str"
                }
            }
        ],
        "hstack": [
            {
                "type": "func",
                "args": {
                    "boxes": "list",
                    "padding": "int",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_right_margin": [
            {
                "type": "method",
                "args": {
                    "margin": "int",
                    "strength": "str"
                }
            }
        ],
        "vpack": [
            {
                "type": "func",
                "args": {
                    "boxes": "list[LayoutBox]",
                    "padding": "int",
                    "strength": "str"
                }
            }
        ],
        "vstack": [
            {
                "type": "func",
                "args": {
                    "boxes": "list",
                    "padding": "int",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_top_margin": [
            {
                "type": "method",
                "args": {
                    "margin": "int",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.constrain_same": [
            {
                "type": "method",
                "args": {
                    "other": "LayoutBox",
                    "strength": "str"
                }
            }
        ],
        "LayoutBox.parent_constrain": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox.set_parent": [
            {
                "type": "method",
                "args": {
                    "parent": "kiwi.LayoutBox"
                }
            }
        ],
        "LayoutBox.add_constraints": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox.constrain_margins": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "kiwi.LayoutBox",
                    "name": "str",
                    "tightwidth": "bool",
                    "tightheight": "bool",
                    "artist": "str",
                    "lower_left": "tuple",
                    "upper_right": "tuple",
                    "pos": "bool",
                    "subplot": "bool",
                    "h_pad": "Variable",
                    "w_pad": "Variable"
                }
            }
        ],
        "nonechildren": [
            {
                "type": "func",
                "args": {
                    "lb": "LayoutBox"
                }
            }
        ],
        "match_heights": [
            {
                "type": "func",
                "args": {
                    "boxes": "list",
                    "height_ratios": "np.ndarray",
                    "strength": "str"
                }
            }
        ],
        "vstackeq": [
            {
                "type": "func",
                "args": {
                    "boxes": "list",
                    "padding": "int",
                    "height_ratios": "np.ndarray"
                }
            }
        ],
        "match_widths": [
            {
                "type": "func",
                "args": {
                    "boxes": "list",
                    "width_ratios": "np.ndarray",
                    "strength": "str"
                }
            }
        ],
        "hstackeq": [
            {
                "type": "func",
                "args": {
                    "boxes": "list",
                    "padding": "int",
                    "width_ratios": "np.ndarray"
                }
            }
        ],
        "LayoutBox.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutBox.get_rect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "print_tree": [
            {
                "type": "func",
                "args": {
                    "lb": "LayoutBox"
                }
            }
        ],
        "match_right_margins": [
            {
                "type": "func",
                "args": {
                    "boxes": "layoutbox.LayoutBox",
                    "levels": "int"
                }
            }
        ],
        "match_left_margins": [
            {
                "type": "func",
                "args": {
                    "boxes": "layoutbox.LayoutBox",
                    "levels": "int"
                }
            }
        ],
        "match_width_margins": [
            {
                "type": "func",
                "args": {
                    "boxes": "layoutbox.LayoutBox",
                    "levels": "int"
                }
            }
        ],
        "match_bottom_margins": [
            {
                "type": "func",
                "args": {
                    "boxes": "layoutbox.LayoutBox",
                    "levels": "int"
                }
            }
        ],
        "match_top_margins": [
            {
                "type": "func",
                "args": {
                    "boxes": "layoutbox.LayoutBox",
                    "levels": "int"
                }
            }
        ],
        "match_height_margins": [
            {
                "type": "func",
                "args": {
                    "boxes": "layoutbox.LayoutBox",
                    "levels": "int"
                }
            }
        ],
        "match_margins": [
            {
                "type": "func",
                "args": {
                    "boxes": "layoutbox.LayoutBox",
                    "levels": "int"
                }
            }
        ],
        "LayoutBox.layout_from_subplotspec": [
            {
                "type": "method",
                "args": {
                    "subspec": "SubplotSpec",
                    "name": "str",
                    "artist": "str",
                    "pos": "bool"
                }
            }
        ],
        "LayoutBox.remove_child": [
            {
                "type": "method",
                "args": {
                    "child": "object"
                }
            }
        ],
        "get_renderer": [
            {
                "type": "func",
                "args": {
                    "fig": "plt.Figure"
                }
            }
        ],
        "nonetree": [
            {
                "type": "func",
                "args": {
                    "lb": "LayoutBox"
                }
            }
        ],
        "plot_children": [
            {
                "type": "func",
                "args": {
                    "fig": "plt.figure.Figure",
                    "box": "LayoutBox",
                    "level": "int",
                    "printit": "bool"
                }
            }
        ]
    },
    "matplotlib.quiver": {
        "_quiver_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "QuiverKey.halign": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "QuiverKey.valign": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "QuiverKey.pivot": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "QuiverKey.Q": [
            {
                "type": "attr",
                "anno": "Quant"
            }
        ],
        "QuiverKey.X": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "QuiverKey.Y": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "QuiverKey.U": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "QuiverKey.angle": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "QuiverKey.coord": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "QuiverKey.color": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "QuiverKey.label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "QuiverKey._labelsep_inches": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "QuiverKey.labelsep": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "QuiverKey._cid": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "QuiverKey.labelpos": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "QuiverKey.labelcolor": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "QuiverKey.fontproperties": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "QuiverKey.kw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "QuiverKey.text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "QuiverKey._initialized": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "QuiverKey.zorder": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "QuiverKey.verts": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "QuiverKey.vector": [
            {
                "type": "attr",
                "anno": "mcollections.PolyCollection"
            }
        ],
        "QuiverKey._text_x": [
            {
                "type": "method",
                "args": {
                    "x": "int"
                }
            }
        ],
        "QuiverKey._text_y": [
            {
                "type": "method",
                "args": {
                    "y": "int"
                }
            }
        ],
        "QuiverKey.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Quiver._PIVOT_VALS": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Quiver._axes": [
            {
                "type": "attr",
                "anno": "matplotlib.Axes"
            }
        ],
        "Quiver.X": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Quiver.Y": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Quiver.XY": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Quiver.N": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Quiver.scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver.headwidth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver.headlength": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver.headaxislength": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver.minshaft": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver.minlength": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver.units": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Quiver.scale_units": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Quiver.angles": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Quiver.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver.pivot": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Quiver.transform": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "Quiver.polykw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Quiver._initialized": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Quiver._cid": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "Quiver.span": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver._new_UV": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Quiver.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Quiver.U": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Quiver.V": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Quiver.Umask": [
            {
                "type": "attr",
                "anno": "ma.masked_invalid"
            }
        ],
        "Quiver._trans_scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Quiver.quiver_doc": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_barbs_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "Barbs.sizes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Barbs.fill_empty": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Barbs.barb_increments": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Barbs.rounding": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Barbs.flip": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Barbs._pivot": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Barbs._length": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Barbs.x": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Barbs.y": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Barbs._find_tails": [
            {
                "type": "method",
                "args": {
                    "mag": "np.ndarray",
                    "rounding": "bool",
                    "half": "int",
                    "full": "int",
                    "flag": "int"
                }
            }
        ],
        "Barbs.u": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Barbs.v": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Barbs._offsets": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Barbs.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Barbs.barbs_doc": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_check_consistent_shapes": [
            {
                "type": "func",
                "args": {
                    "arrays": "np.ndarray"
                }
            }
        ],
        "_parse_args": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "caller_name": "str"
                }
            }
        ],
        "Quiver.set_UVC": [
            {
                "type": "method",
                "args": {
                    "U": "np.ndarray",
                    "V": "np.ndarray",
                    "C": "np.ndarray"
                }
            }
        ],
        "Barbs.set_offsets": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "QuiverKey._init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "QuiverKey.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "QuiverKey.set_figure": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "QuiverKey.remove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Quiver._h_arrows": [
            {
                "type": "method",
                "args": {
                    "length": "np.ndarray"
                }
            }
        ],
        "Quiver._angles_lengths": [
            {
                "type": "method",
                "args": {
                    "U": "np.ndarray",
                    "V": "np.ndarray",
                    "eps": "float"
                }
            }
        ],
        "Quiver._dots_per_unit": [
            {
                "type": "method",
                "args": {
                    "units": "str"
                }
            }
        ],
        "Quiver._set_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Quiver.ax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "QuiverKey._set_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Quiver.get_datalim": [
            {
                "type": "method",
                "args": {
                    "transData": "np.ndarray"
                }
            }
        ],
        "Quiver.remove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Quiver.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "matplotlib.Axes",
                    "args": "tuple",
                    "scale": "float",
                    "headwidth": "float",
                    "headlength": "float",
                    "headaxislength": "float",
                    "minshaft": "float",
                    "minlength": "float",
                    "units": "str",
                    "scale_units": "str",
                    "angles": "str",
                    "width": "float",
                    "color": "str",
                    "pivot": "str",
                    "kw": "dict"
                }
            }
        ],
        "QuiverKey.__init__": [
            {
                "type": "method",
                "args": {
                    "Q": "Quant",
                    "X": "int",
                    "Y": "int",
                    "U": "int",
                    "label": "str",
                    "angle": "int",
                    "coordinates": "str",
                    "color": "np.ndarray",
                    "labelsep": "float",
                    "labelpos": "str",
                    "labelcolor": "str",
                    "fontproperties": "dict",
                    "kw": "object"
                }
            }
        ],
        "QuiverKey.quiverkey_doc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Quiver._make_verts": [
            {
                "type": "method",
                "args": {
                    "U": "np.ndarray",
                    "V": "np.ndarray",
                    "angles": "dict"
                }
            }
        ],
        "Quiver._init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Quiver.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "QuiverKey.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "Barbs._make_barbs": [
            {
                "type": "method",
                "args": {
                    "u": "np.ndarray",
                    "v": "np.ndarray",
                    "nflags": "np.ndarray",
                    "nbarbs": "np.ndarray",
                    "half_barb": "np.ndarray",
                    "empty_flag": "np.ndarray",
                    "length": "int",
                    "pivot": "str",
                    "sizes": "dict",
                    "fill_empty": "bool",
                    "flip": "np.ndarray"
                }
            }
        ],
        "Barbs.set_UVC": [
            {
                "type": "method",
                "args": {
                    "U": "np.ndarray",
                    "V": "np.ndarray",
                    "C": "np.ndarray"
                }
            }
        ],
        "Barbs.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "args": "tuple",
                    "pivot": "str",
                    "length": "int",
                    "barbcolor": "str",
                    "flagcolor": "str",
                    "sizes": "dict",
                    "fill_empty": "bool",
                    "barb_increments": "dict",
                    "rounding": "bool",
                    "flip_barb": "bool",
                    "kw": "dict"
                }
            }
        ]
    },
    "matplotlib.cbook.deprecation": {
        "mplDeprecation": [
            {
                "type": "var",
                "anno": "type[MatplotlibDeprecationWarning]"
            }
        ],
        "_deprecate_privatize_attribute.deprecator": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_deprecate_privatize_attribute.__set_name__": [
            {
                "type": "method",
                "args": {
                    "owner": "object",
                    "name": "str"
                }
            }
        ],
        "_deprecated_parameter_class.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_deprecated_parameter": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_suppress_matplotlib_deprecation_warning": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_generate_deprecation_warning": [
            {
                "type": "func",
                "args": {
                    "since": "str",
                    "message": "str",
                    "name": "str",
                    "alternative": "str",
                    "pending": "bool",
                    "obj_type": "str",
                    "addendum": "str",
                    "removal": "str"
                }
            }
        ],
        "deprecated": [
            {
                "type": "func",
                "args": {
                    "since": "str",
                    "message": "str",
                    "name": "str",
                    "alternative": "str",
                    "pending": "bool",
                    "obj_type": "str",
                    "addendum": "str",
                    "removal": "str"
                }
            }
        ],
        "_deprecate_privatize_attribute.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "warn_deprecated": [
            {
                "type": "func",
                "args": {
                    "since": "str",
                    "message": "str",
                    "name": "str",
                    "alternative": "str",
                    "pending": "bool",
                    "obj_type": "str",
                    "addendum": "str",
                    "removal": "str"
                }
            }
        ],
        "_deprecate_method_override": [
            {
                "type": "func",
                "args": {
                    "method": "inspect.Callable",
                    "obj": "object",
                    "allow_empty": "bool",
                    "kwargs": "str"
                }
            }
        ],
        "_make_keyword_only": [
            {
                "type": "func",
                "args": {
                    "since": "str",
                    "name": "str",
                    "func": "Callable"
                }
            }
        ],
        "_delete_parameter": [
            {
                "type": "func",
                "args": {
                    "since": "str",
                    "name": "str",
                    "func": "object",
                    "kwargs": "object"
                }
            }
        ],
        "_rename_parameter": [
            {
                "type": "func",
                "args": {
                    "since": "str",
                    "old": "str",
                    "new": "str",
                    "func": "str"
                }
            }
        ]
    },
    "matplotlib.cbook": {
        "_StrongRef._obj": [
            {
                "type": "attr",
                "anno": "_StrongRef"
            }
        ],
        "_StrongRef.__init__": [
            {
                "type": "method",
                "args": {
                    "obj": "_StrongRef"
                }
            }
        ],
        "_StrongRef.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_StrongRef.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_StrongRef.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackRegistry.exception_handler": [
            {
                "type": "attr",
                "anno": "types.Callable[[Exception], None]"
            }
        ],
        "CallbackRegistry.callbacks": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CallbackRegistry._cid_gen": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CallbackRegistry._func_cid_map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CallbackRegistry.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackRegistry._remove_proxy": [
            {
                "type": "method",
                "args": {
                    "proxy": "_StrongRef",
                    "_is_finalizing": "bool"
                }
            }
        ],
        "CallbackRegistry.connect": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "func": "Callable"
                }
            }
        ],
        "CallbackRegistry.disconnect": [
            {
                "type": "method",
                "args": {
                    "cid": "str"
                }
            }
        ],
        "silent_list.type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "silent_list.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "strip_math": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "is_writable_file_like": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "to_filehandle": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "flag": "str",
                    "return_opened": "bool",
                    "encoding": "str"
                }
            }
        ],
        "open_file_cm": [
            {
                "type": "func",
                "args": {
                    "path_or_file": "str",
                    "mode": "str",
                    "encoding": "str"
                }
            }
        ],
        "is_scalar_or_string": [
            {
                "type": "func",
                "args": {
                    "val": "object"
                }
            }
        ],
        "flatten": [
            {
                "type": "func",
                "args": {
                    "seq": "list",
                    "scalarp": "Callable[[object], bool]"
                }
            }
        ],
        "get_realpath_and_stat": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "_find_dedent_regex": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_dedent_regex": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "maxdict.maxsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "maxdict._killkeys": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "maxdict.__init__": [
            {
                "type": "method",
                "args": {
                    "maxsize": "int"
                }
            }
        ],
        "maxdict.__setitem__": [
            {
                "type": "method",
                "args": {
                    "k": "str",
                    "v": "int"
                }
            }
        ],
        "Stack._default": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Stack._pos": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Stack.back": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stack._elements": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Stack.push": [
            {
                "type": "method",
                "args": {
                    "o": "object"
                }
            }
        ],
        "Stack.forward": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stack.__getitem__": [
            {
                "type": "method",
                "args": {
                    "ind": "int"
                }
            }
        ],
        "Stack.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stack.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stack.home": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stack.empty": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stack.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Stack.__init__": [
            {
                "type": "method",
                "args": {
                    "default": "float"
                }
            }
        ],
        "report_memory": [
            {
                "type": "func",
                "args": {
                    "i": "int"
                }
            }
        ],
        "safe_masked_invalid": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "copy": "bool"
                }
            }
        ],
        "Grouper._mapping": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Grouper.__contains__": [
            {
                "type": "method",
                "args": {
                    "item": "object"
                }
            }
        ],
        "_combine_masks": [
            {
                "type": "func",
                "args": {
                    "args": "np.ndarray"
                }
            }
        ],
        "ls_mapper": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ls_mapper_r": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "is_math_text": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "pts_to_prestep": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "args": "np.ndarray"
                }
            }
        ],
        "pts_to_poststep": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "args": "np.ndarray"
                }
            }
        ],
        "pts_to_midstep": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "args": "np.ndarray"
                }
            }
        ],
        "STEP_LOOKUP_MAP": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "safe_first_element": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "sanitize_sequence": [
            {
                "type": "func",
                "args": {
                    "data": "object"
                }
            }
        ],
        "_topmost_artist": [
            {
                "type": "func",
                "args": {
                    "artists": "list",
                    "_cached_max": "Callable[[], int]"
                }
            }
        ],
        "_str_equal": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "s": "object"
                }
            }
        ],
        "_str_lower_equal": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "s": "object"
                }
            }
        ],
        "_array_perimeter": [
            {
                "type": "func",
                "args": {
                    "arr": "np.ndarray"
                }
            }
        ],
        "_setattr_cm": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "kwargs": "object"
                }
            }
        ],
        "_OrderedSet._od": [
            {
                "type": "attr",
                "anno": "collections.OrderedDict"
            }
        ],
        "_OrderedSet.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_OrderedSet.__contains__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "_OrderedSet.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_OrderedSet.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_premultiplied_argb32_to_unmultiplied_rgba8888": [
            {
                "type": "func",
                "args": {
                    "buf": "np.ndarray"
                }
            }
        ],
        "_classproperty._fget": [
            {
                "type": "attr",
                "anno": "types.Type[object]"
            }
        ],
        "_classproperty.__init__": [
            {
                "type": "method",
                "args": {
                    "fget": "types.Type[object]"
                }
            }
        ],
        "_classproperty.__get__": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "owner": "types.Type[object]"
                }
            }
        ],
        "_backend_module_name": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_unfold": [
            {
                "type": "func",
                "args": {
                    "arr": "np.ndarray",
                    "axis": "int",
                    "size": "int",
                    "step": "int"
                }
            }
        ],
        "_array_patch_perimeters": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "rstride": "int",
                    "cstride": "int"
                }
            }
        ],
        "_check_1d": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "simple_linear_interpolation": [
            {
                "type": "func",
                "args": {
                    "a": "np.ndarray",
                    "steps": "int"
                }
            }
        ],
        "_unmultiplied_rgba8888_to_premultiplied_argb32": [
            {
                "type": "func",
                "args": {
                    "rgba8888": "np.ndarray"
                }
            }
        ],
        "contiguous_regions": [
            {
                "type": "func",
                "args": {
                    "mask": "np.ndarray"
                }
            }
        ],
        "_define_aliases": [
            {
                "type": "func",
                "args": {
                    "alias_d": "dict",
                    "cls": "types.BaseType"
                }
            }
        ],
        "index_of": [
            {
                "type": "func",
                "args": {
                    "y": "np.ndarray"
                }
            }
        ],
        "_get_running_interactive_framework": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_exception_printer": [
            {
                "type": "func",
                "args": {
                    "exc": "Exception"
                }
            }
        ],
        "CallbackRegistry.__init__": [
            {
                "type": "method",
                "args": {
                    "exception_handler": "types.Callable[[Exception], None]"
                }
            }
        ],
        "silent_list.__init__": [
            {
                "type": "method",
                "args": {
                    "type": "str",
                    "seq": "list"
                }
            }
        ],
        "_to_unmasked_float_array": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "delete_masked_points": [
            {
                "type": "func",
                "args": {
                    "args": "np.ndarray"
                }
            }
        ],
        "Stack.remove": [
            {
                "type": "method",
                "args": {
                    "o": "object"
                }
            }
        ],
        "Stack.bubble": [
            {
                "type": "method",
                "args": {
                    "o": "object"
                }
            }
        ],
        "_get_data_path": [
            {
                "type": "func",
                "args": {
                    "args": "str"
                }
            }
        ],
        "_warn_external": [
            {
                "type": "func",
                "args": {
                    "message": "str",
                    "category": "str"
                }
            }
        ],
        "normalize_kwargs": [
            {
                "type": "func",
                "args": {
                    "kw": "dict",
                    "alias_mapping": "Union[Artist, dict]",
                    "required": "tuple",
                    "forbidden": "tuple",
                    "allowed": "tuple"
                }
            }
        ],
        "CallbackRegistry.process": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "Grouper.clean": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grouper.joined": [
            {
                "type": "method",
                "args": {
                    "a": "mpl.Axes",
                    "b": "mpl.Axes"
                }
            }
        ],
        "Grouper.join": [
            {
                "type": "method",
                "args": {
                    "a": "object",
                    "args": "tuple"
                }
            }
        ],
        "_OrderedSet.discard": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "_OrderedSet.add": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "_local_over_kwdict": [
            {
                "type": "func",
                "args": {
                    "local_var": "object",
                    "kwargs": "dict",
                    "keys": "str",
                    "warning_cls": "type"
                }
            }
        ],
        "local_over_kwdict": [
            {
                "type": "func",
                "args": {
                    "local_var": "object",
                    "kwargs": "dict",
                    "keys": "str"
                }
            }
        ],
        "print_cycles": [
            {
                "type": "func",
                "args": {
                    "objects": "types.FrameType",
                    "outstream": "str",
                    "show_progress": "bool"
                }
            }
        ],
        "file_requires_unicode": [
            {
                "type": "func",
                "args": {
                    "x": "object"
                }
            }
        ],
        "_check_getitem": [
            {
                "type": "func",
                "args": {
                    "_mapping": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "_check_shape": [
            {
                "type": "func",
                "args": {
                    "_shape": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "_check_in_list": [
            {
                "type": "func",
                "args": {
                    "_values": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "_check_isinstance": [
            {
                "type": "func",
                "args": {
                    "_types": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "_reshape_2D": [
            {
                "type": "func",
                "args": {
                    "X": "np.ndarray",
                    "name": "str"
                }
            }
        ],
        "violin_stats": [
            {
                "type": "func",
                "args": {
                    "X": "np.ndarray",
                    "method": "Callable",
                    "points": "int",
                    "quantiles": "list"
                }
            }
        ],
        "boxplot_stats": [
            {
                "type": "func",
                "args": {
                    "X": "np.ndarray",
                    "whis": "float",
                    "bootstrap": "int",
                    "labels": "np.ndarray",
                    "autorange": "bool"
                }
            }
        ],
        "Grouper.get_siblings": [
            {
                "type": "method",
                "args": {
                    "a": "object"
                }
            }
        ],
        "Grouper.__init__": [
            {
                "type": "method",
                "args": {
                    "init": "tuple"
                }
            }
        ],
        "Grouper.remove": [
            {
                "type": "method",
                "args": {
                    "a": "object"
                }
            }
        ],
        "_pformat_subprocess": [
            {
                "type": "func",
                "args": {
                    "command": "tuple"
                }
            }
        ],
        "_check_and_log_subprocess": [
            {
                "type": "func",
                "args": {
                    "command": "tuple",
                    "logger": "logging.Logger",
                    "kwargs": "str"
                }
            }
        ],
        "_lock_path": [
            {
                "type": "func",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "get_sample_data": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "asfileobj": "bool"
                }
            }
        ],
        "Grouper.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.markers": {
        "MarkerStyle.markers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MarkerStyle.filled_markers": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MarkerStyle.fillstyles": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MarkerStyle._half_fillstyles": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MarkerStyle._point_size_reduction": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MarkerStyle._marker_function": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "MarkerStyle._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._transform": [
            {
                "type": "attr",
                "anno": "Affine2D"
            }
        ],
        "MarkerStyle._alt_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._alt_transform": [
            {
                "type": "attr",
                "anno": "Affine2D"
            }
        ],
        "MarkerStyle._snap_threshold": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MarkerStyle._joinstyle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MarkerStyle._capstyle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MarkerStyle._filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MarkerStyle.is_filled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._fillstyle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MarkerStyle.get_fillstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.get_joinstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.get_capstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._marker": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MarkerStyle.get_marker": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.get_alt_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.get_snap_threshold": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_nothing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._snap": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MarkerStyle._half_fill": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_tuple_marker": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.set_marker": [
            {
                "type": "method",
                "args": {
                    "marker": "str"
                }
            }
        ],
        "MarkerStyle.__init__": [
            {
                "type": "method",
                "args": {
                    "marker": "str",
                    "fillstyle": "str"
                }
            }
        ],
        "MarkerStyle._set_pixel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_custom_marker": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "MarkerStyle._set_path_marker": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.__bool__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.get_alt_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._x_filled_path_t": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._x_filled_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_x_filled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._plus_filled_path_t": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._plus_filled_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_plus_filled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._x_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._plus_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_plus": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._caret_path_base": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._caret_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_caretdown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_caretdownbase": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_caretrightbase": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_caretleftbase": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_caretupbase": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_caretright": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_caretleft": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_caretup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._tri_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_tri_down": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_tri_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_tri_left": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_tri_up": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._tickvert_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_tickdown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_tickup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._tickhoriz_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_tickright": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_tickleft": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._line_marker_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_vline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_hline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_octagon": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_hexagon2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_hexagon1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_pentagon": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_diamond": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_thin_diamond": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_square": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._triangle_path_r": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._triangle_path_l": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._triangle_path_d": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._triangle_path_u": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._triangle_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "MarkerStyle._set_triangle": [
            {
                "type": "method",
                "args": {
                    "rot": "float",
                    "skip": "int"
                }
            }
        ],
        "MarkerStyle._set_triangle_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_triangle_left": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_triangle_down": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_triangle_up": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_vertices": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_empty_path": [
            {
                "type": "var",
                "anno": "Path"
            }
        ],
        "MarkerStyle._recache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_circle": [
            {
                "type": "method",
                "args": {
                    "reduction": "float"
                }
            }
        ],
        "MarkerStyle._set_point": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle.set_fillstyle": [
            {
                "type": "method",
                "args": {
                    "fillstyle": "str"
                }
            }
        ],
        "MarkerStyle._set_star": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkerStyle._set_mathtext_path": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.style.core": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "STYLE_EXTENSION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "STYLE_FILE_PATTERN": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "STYLE_BLACKLIST": [
            {
                "type": "var",
                "anno": "set"
            }
        ],
        "is_style_file": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "library": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "available": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "USER_LIBRARY_PATHS": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "iter_user_libraries": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "BASE_LIBRARY_PATH": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "iter_style_files": [
            {
                "type": "func",
                "args": {
                    "style_dir": "str"
                }
            }
        ],
        "_remove_blacklisted_style_params": [
            {
                "type": "func",
                "args": {
                    "d": "dict",
                    "warn": "bool"
                }
            }
        ],
        "_apply_style": [
            {
                "type": "func",
                "args": {
                    "d": "dict",
                    "warn": "bool"
                }
            }
        ],
        "update_nested_dict": [
            {
                "type": "func",
                "args": {
                    "main_dict": "dict",
                    "new_dict": "dict"
                }
            }
        ],
        "use": [
            {
                "type": "func",
                "args": {
                    "style": "str"
                }
            }
        ],
        "context": [
            {
                "type": "func",
                "args": {
                    "style": "str",
                    "after_reset": "bool"
                }
            }
        ],
        "read_style_directory": [
            {
                "type": "func",
                "args": {
                    "style_dir": "str"
                }
            }
        ],
        "update_user_library": [
            {
                "type": "func",
                "args": {
                    "library": "dict"
                }
            }
        ],
        "load_base_library": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_base_library": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "reload_library": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.table": {
        "Cell.PAD": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Cell._edges": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Cell._edge_aliases": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Cell._loc": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Cell._text": [
            {
                "type": "attr",
                "anno": "Text"
            }
        ],
        "Cell.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Cell.set_transform": [
            {
                "type": "method",
                "args": {
                    "trans": "Transform"
                }
            }
        ],
        "Cell.get_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Cell._visible_edges": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CustomCell": [
            {
                "type": "var",
                "anno": "Cell"
            }
        ],
        "Table.codes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Table.FONTSIZE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Table.AXESPAD": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Table._axes": [
            {
                "type": "attr",
                "anno": "Artist"
            }
        ],
        "Table._loc": [
            {
                "type": "attr",
                "anno": "Text"
            }
        ],
        "Table._bbox": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "Table._cells": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Table._edges": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Table._autoColumns": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Table._autoFontsize": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Table.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Table.__getitem__": [
            {
                "type": "method",
                "args": {
                    "position": "int"
                }
            }
        ],
        "Table.edges": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "Table.auto_set_column_width": [
            {
                "type": "method",
                "args": {
                    "col": "Cell"
                }
            }
        ],
        "Table.auto_set_font_size": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "Table.get_celld": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Table._do_cell_alignment": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Cell.get_fontsize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Table._offset": [
            {
                "type": "method",
                "args": {
                    "ox": "float",
                    "oy": "float"
                }
            }
        ],
        "Table.scale": [
            {
                "type": "method",
                "args": {
                    "xscale": "float",
                    "yscale": "float"
                }
            }
        ],
        "Table.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Cell.set_figure": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "Cell.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "Table.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "Cell.get_text_bounds": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "Cell.get_required_width": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "Table._auto_set_column_width": [
            {
                "type": "method",
                "args": {
                    "col": "int",
                    "renderer": "Text"
                }
            }
        ],
        "Cell.auto_set_font_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "Table._auto_set_font_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "Table._update_positions": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "Table.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "Table._approx_text_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Cell.visible_edges": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "Cell.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Cell.set_text_props": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "Cell.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple[float, float]",
                    "width": "float",
                    "height": "float",
                    "edgecolor": "str",
                    "facecolor": "str",
                    "fill": "bool",
                    "text": "str",
                    "loc": "str",
                    "fontproperties": "FontProperties",
                    "visible_edges": "str"
                }
            }
        ],
        "Table.add_cell": [
            {
                "type": "method",
                "args": {
                    "row": "int",
                    "col": "int",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Cell._set_text_position": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "Table.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "Artist",
                    "loc": "Text",
                    "bbox": "Bbox",
                    "kwargs": "int"
                }
            }
        ],
        "table": [
            {
                "type": "func",
                "args": {
                    "ax": "Artist",
                    "cellText": "Text",
                    "cellColours": "Text",
                    "cellLoc": "str",
                    "colWidths": "Text",
                    "rowLabels": "Text",
                    "rowColours": "Text",
                    "rowLoc": "str",
                    "colLabels": "Text",
                    "colColours": "Text",
                    "colLoc": "str",
                    "loc": "str",
                    "bbox": "Bbox",
                    "edges": "Text",
                    "kwargs": "int"
                }
            }
        ],
        "Cell.set_fontsize": [
            {
                "type": "method",
                "args": {
                    "size": "float"
                }
            }
        ],
        "Table.set_fontsize": [
            {
                "type": "method",
                "args": {
                    "size": "float"
                }
            }
        ],
        "Table.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "Table._get_grid_bbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "Table.__setitem__": [
            {
                "type": "method",
                "args": {
                    "position": "tuple",
                    "cell": "Cell"
                }
            }
        ]
    },
    "matplotlib.axes._axes": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "Axes._autotitlepos": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes.legend_": [
            {
                "type": "attr",
                "anno": "mbange.Legend"
            }
        ],
        "Axes._remove_legend": [
            {
                "type": "method",
                "args": {
                    "legend": "mbange.Legend"
                }
            }
        ],
        "Axes.ignore_existing_data_limits": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes.tricontour": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes.tricontourf": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes.tripcolor": [
            {
                "type": "attr",
                "anno": "Callable[[int], np.ndarray]"
            }
        ],
        "Axes.triplot": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Axes._pcolorargs": [
            {
                "type": "method",
                "args": {
                    "funcname": "str",
                    "args": "np.ndarray",
                    "shading": "str"
                }
            }
        ],
        "Axes._convert_dx": [
            {
                "type": "method",
                "args": {
                    "dx": "np.ndarray",
                    "x0": "np.ndarray",
                    "xconv": "np.ndarray",
                    "convert": "Callable"
                }
            }
        ],
        "Axes.plot": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "scalex": "bool",
                    "scaley": "bool",
                    "data": "np.ndarray",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes.step": [
            {
                "type": "method",
                "args": {
                    "x": "tuple",
                    "y": "tuple",
                    "args": "tuple",
                    "where": "str",
                    "data": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ],
        "Axes.get_ylabel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes.get_xlabel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes.fill": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.get_title": [
            {
                "type": "method",
                "args": {
                    "loc": "str"
                }
            }
        ],
        "_make_inset_locator": [
            {
                "type": "func",
                "args": {
                    "bounds": "tuple",
                    "trans": "mtransforms.Transform",
                    "parent": "Axes"
                }
            }
        ],
        "Axes.set_ylabel": [
            {
                "type": "method",
                "args": {
                    "ylabel": "str",
                    "fontdict": "dict",
                    "labelpad": "int",
                    "loc": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Axes.set_xlabel": [
            {
                "type": "method",
                "args": {
                    "xlabel": "str",
                    "fontdict": "dict",
                    "labelpad": "int",
                    "loc": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Axes.arrow": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "dx": "np.ndarray",
                    "dy": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes._parse_scatter_color_args": [
            {
                "type": "method",
                "args": {
                    "c": "np.ndarray",
                    "edgecolors": "str",
                    "kwargs": "dict",
                    "xsize": "int",
                    "get_next_color_func": "Callable"
                }
            }
        ],
        "Axes.phase_spectrum": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "Fs": "float",
                    "Fc": "float",
                    "window": "float",
                    "pad_to": "float",
                    "sides": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.angle_spectrum": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "Fs": "float",
                    "Fc": "float",
                    "window": "float",
                    "pad_to": "float",
                    "sides": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.magnitude_spectrum": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "Fs": "float",
                    "Fc": "float",
                    "window": "float",
                    "pad_to": "float",
                    "sides": "str",
                    "scale": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.fill_betweenx": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes.fill_between": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes.annotate": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "xy": "np.ndarray",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "Axes.text": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "fontdict": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "Axes._quiver_units": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kw": "dict"
                }
            }
        ],
        "Axes.axvspan": [
            {
                "type": "method",
                "args": {
                    "xmin": "np.ndarray",
                    "xmax": "np.ndarray",
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.axhspan": [
            {
                "type": "method",
                "args": {
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "xmin": "float",
                    "xmax": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.stackplot": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes.get_legend_handles_labels": [
            {
                "type": "method",
                "args": {
                    "legend_handler_map": "dict"
                }
            }
        ],
        "Axes.indicate_inset": [
            {
                "type": "method",
                "args": {
                    "bounds": "tuple",
                    "inset_ax": "mtransforms.Bbox",
                    "transform": "transforms.Transform",
                    "facecolor": "str",
                    "edgecolor": "str",
                    "alpha": "float",
                    "zorder": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.indicate_inset_zoom": [
            {
                "type": "method",
                "args": {
                    "inset_ax": "mtransforms.Bbox",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.set_title": [
            {
                "type": "method",
                "args": {
                    "label": "str",
                    "fontdict": "dict",
                    "loc": "str",
                    "pad": "float",
                    "y": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.cohere": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "Fc": "float",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.csd": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "Fc": "int",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "return_line": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.psd": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "Fc": "int",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "return_line": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.secondary_yaxis": [
            {
                "type": "method",
                "args": {
                    "location": "tuple",
                    "functions": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes.secondary_xaxis": [
            {
                "type": "method",
                "args": {
                    "location": "tuple",
                    "functions": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes.table": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Axes.semilogy": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes.semilogx": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes.loglog": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes.plot_date": [
            {
                "type": "method",
                "args": {
                    "x": "tuple",
                    "y": "tuple",
                    "fmt": "str",
                    "tz": "str",
                    "xdate": "bool",
                    "ydate": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.pcolorfast": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "alpha": "float",
                    "norm": "float",
                    "cmap": "np.ndarray",
                    "vmin": "float",
                    "vmax": "float",
                    "kwargs": "dict"
                }
            }
        ],
        "Axes._fill_between_x_or_y": [
            {
                "type": "method",
                "args": {
                    "ind_dir": "str",
                    "ind": "np.ndarray",
                    "dep1": "np.ndarray",
                    "dep2": "np.ndarray",
                    "where": "np.ndarray",
                    "interpolate": "bool",
                    "step": "int",
                    "kwargs": "Any"
                }
            }
        ],
        "Axes.quiver": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kw": "dict"
                }
            }
        ],
        "Axes.scatter": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "s": "np.ndarray",
                    "c": "np.ndarray",
                    "marker": "np.ndarray",
                    "cmap": "float",
                    "norm": "float",
                    "vmin": "float",
                    "vmax": "float",
                    "alpha": "float",
                    "linewidths": "float",
                    "verts": "str",
                    "edgecolors": "str",
                    "plotnonfinite": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.stem": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "linefmt": "str",
                    "markerfmt": "str",
                    "basefmt": "str",
                    "bottom": "int",
                    "label": "str",
                    "use_line_collection": "bool"
                }
            }
        ],
        "Axes.broken_barh": [
            {
                "type": "method",
                "args": {
                    "xranges": "np.ndarray",
                    "yrange": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.eventplot": [
            {
                "type": "method",
                "args": {
                    "positions": "np.ndarray",
                    "orientation": "str",
                    "lineoffsets": "float",
                    "linelengths": "float",
                    "linewidths": "float",
                    "colors": "np.ndarray",
                    "linestyles": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.vlines": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "colors": "str",
                    "linestyles": "str",
                    "label": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.hlines": [
            {
                "type": "method",
                "args": {
                    "y": "np.ndarray",
                    "xmin": "np.ndarray",
                    "xmax": "np.ndarray",
                    "colors": "str",
                    "linestyles": "str",
                    "label": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.violin": [
            {
                "type": "method",
                "args": {
                    "vpstats": "list",
                    "positions": "list",
                    "vert": "bool",
                    "widths": "float",
                    "showmeans": "bool",
                    "showextrema": "bool",
                    "showmedians": "bool"
                }
            }
        ],
        "Axes.violinplot": [
            {
                "type": "method",
                "args": {
                    "dataset": "np.ndarray",
                    "positions": "list",
                    "vert": "bool",
                    "widths": "float",
                    "showmeans": "bool",
                    "showextrema": "bool",
                    "showmedians": "bool",
                    "quantiles": "list",
                    "points": "int",
                    "bw_method": "Callable"
                }
            }
        ],
        "Axes.streamplot": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes.quiverkey": [
            {
                "type": "method",
                "args": {
                    "Q": "Quant",
                    "X": "int",
                    "Y": "int",
                    "U": "int",
                    "label": "str",
                    "kw": "object"
                }
            }
        ],
        "Axes.bxp": [
            {
                "type": "method",
                "args": {
                    "bxpstats": "tuple",
                    "positions": "np.ndarray",
                    "widths": "np.ndarray",
                    "vert": "bool",
                    "patch_artist": "bool",
                    "shownotches": "bool",
                    "showmeans": "bool",
                    "showcaps": "bool",
                    "showbox": "bool",
                    "showfliers": "bool",
                    "boxprops": "int",
                    "whiskerprops": "int",
                    "flierprops": "int",
                    "medianprops": "int",
                    "capprops": "int",
                    "meanprops": "int",
                    "meanline": "bool",
                    "manage_ticks": "bool",
                    "zorder": "int"
                }
            }
        ],
        "Axes.boxplot": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "notch": "str",
                    "sym": "str",
                    "vert": "str",
                    "whis": "str",
                    "positions": "np.ndarray",
                    "widths": "np.ndarray",
                    "patch_artist": "int",
                    "bootstrap": "int",
                    "usermedians": "np.ndarray",
                    "conf_intervals": "np.ndarray",
                    "meanline": "bool",
                    "showmeans": "bool",
                    "showcaps": "bool",
                    "showbox": "bool",
                    "showfliers": "bool",
                    "boxprops": "int",
                    "labels": "int",
                    "flierprops": "int",
                    "medianprops": "int",
                    "meanprops": "int",
                    "capprops": "int",
                    "whiskerprops": "int",
                    "manage_ticks": "bool",
                    "autorange": "bool",
                    "zorder": "int"
                }
            }
        ],
        "Axes.pcolormesh": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "alpha": "float",
                    "norm": "float",
                    "cmap": "str",
                    "vmin": "float",
                    "vmax": "float",
                    "shading": "str",
                    "antialiased": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.hist2d": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "bins": "int",
                    "range": "float",
                    "density": "bool",
                    "weights": "np.ndarray",
                    "cmin": "float | None",
                    "cmax": "float | None",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.pcolor": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "shading": "str",
                    "alpha": "float",
                    "norm": "float",
                    "cmap": "str",
                    "vmin": "float",
                    "vmax": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.imshow": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "cmap": "cm.Colormap",
                    "norm": "cm.Colormap",
                    "aspect": "str",
                    "interpolation": "str",
                    "alpha": "float",
                    "vmin": "float",
                    "vmax": "float",
                    "origin": "str",
                    "extent": "tuple[float, float, float, float]",
                    "filternorm": "bool",
                    "filterrad": "float",
                    "resample": "bool",
                    "url": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.matshow": [
            {
                "type": "method",
                "args": {
                    "Z": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.specgram": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "Fc": "float",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "cmap": "cm.Colormap",
                    "xextent": "tuple",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "mode": "str",
                    "scale": "str",
                    "vmin": "float",
                    "vmax": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.hexbin": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "C": "np.ndarray",
                    "gridsize": "int",
                    "bins": "int",
                    "xscale": "str",
                    "yscale": "str",
                    "extent": "tuple",
                    "cmap": "str",
                    "norm": "float",
                    "vmin": "float",
                    "vmax": "float",
                    "alpha": "float",
                    "linewidths": "float",
                    "edgecolors": "str",
                    "reduce_C_function": "Callable",
                    "mincnt": "int",
                    "marginals": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.pie": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "explode": "list",
                    "labels": "list",
                    "colors": "list",
                    "autopct": "str",
                    "pctdistance": "float",
                    "shadow": "bool",
                    "labeldistance": "float",
                    "startangle": "float",
                    "radius": "float",
                    "counterclock": "bool",
                    "wedgeprops": "dict",
                    "textprops": "dict",
                    "center": "tuple",
                    "frame": "bool",
                    "rotatelabels": "bool",
                    "normalize": "bool"
                }
            }
        ],
        "Axes.contourf": [
            {
                "type": "method",
                "args": {
                    "args": "tuple[np.ndarray, ...]",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.contour": [
            {
                "type": "method",
                "args": {
                    "args": "tuple[np.ndarray, ...]",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.inset_axes": [
            {
                "type": "method",
                "args": {
                    "bounds": "tuple",
                    "transform": "mtransforms.Transform",
                    "zorder": "int",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes.legend": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.clabel": [
            {
                "type": "method",
                "args": {
                    "CS": "object",
                    "levels": "list",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.spy": [
            {
                "type": "method",
                "args": {
                    "Z": "np.ndarray",
                    "precision": "int",
                    "marker": "str",
                    "markersize": "float",
                    "aspect": "str",
                    "origin": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.errorbar": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "yerr": "np.ndarray",
                    "xerr": "np.ndarray",
                    "fmt": "str",
                    "ecolor": "str",
                    "elinewidth": "float",
                    "capsize": "float",
                    "barsabove": "bool",
                    "lolims": "bool",
                    "uplims": "bool",
                    "xlolims": "bool",
                    "xuplims": "bool",
                    "errorevery": "int",
                    "capthick": "int",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.bar": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "height": "np.ndarray",
                    "width": "float",
                    "bottom": "np.ndarray",
                    "align": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.barh": [
            {
                "type": "method",
                "args": {
                    "y": "np.ndarray",
                    "width": "np.ndarray",
                    "height": "float",
                    "left": "np.ndarray",
                    "align": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.hist": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "bins": "np.ndarray",
                    "range": "np.ndarray",
                    "density": "bool",
                    "weights": "np.ndarray",
                    "cumulative": "bool",
                    "bottom": "np.ndarray",
                    "histtype": "str",
                    "align": "str",
                    "orientation": "str",
                    "rwidth": "float",
                    "log": "bool",
                    "color": "tuple",
                    "label": "str",
                    "stacked": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.axline": [
            {
                "type": "method",
                "args": {
                    "xy1": "tuple",
                    "xy2": "tuple",
                    "slope": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.axvline": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.axhline": [
            {
                "type": "method",
                "args": {
                    "y": "np.ndarray",
                    "xmin": "float",
                    "xmax": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.xcorr": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "normed": "bool",
                    "detrend": "Callable",
                    "usevlines": "bool",
                    "maxlags": "int",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.acorr": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes.barbs": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kw": "dict"
                }
            }
        ]
    },
    "matplotlib.axes._base": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_axis_method_wrapper.attr_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_axis_method_wrapper.method_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_axis_method_wrapper.doc_sub": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_axis_method_wrapper.__init__": [
            {
                "type": "method",
                "args": {
                    "attr_name": "str",
                    "method_name": "str",
                    "doc_sub": "dict"
                }
            }
        ],
        "_axis_method_wrapper.__set_name__": [
            {
                "type": "method",
                "args": {
                    "owner": "type",
                    "name": "str"
                }
            }
        ],
        "_process_plot_var_args.axes": [
            {
                "type": "attr",
                "anno": "martist.Artist"
            }
        ],
        "_process_plot_var_args.command": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_process_plot_var_args.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_process_plot_var_args.__dict__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_process_plot_var_args.prop_cycler": [
            {
                "type": "attr",
                "anno": "Cycle"
            }
        ],
        "_process_plot_var_args._prop_keys": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "_process_plot_var_args.get_next_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase._position": [
            {
                "type": "attr",
                "anno": "mtransforms.Bbox"
            }
        ],
        "_AxesBase._originalPosition": [
            {
                "type": "attr",
                "anno": "mtransforms.Bbox"
            }
        ],
        "_AxesBase.axes": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "_AxesBase._aspect": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AxesBase._adjustable": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase._anchor": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase._stale_viewlim_x": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase._stale_viewlim_y": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase._sharex": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AxesBase._sharey": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AxesBase._axes_locator": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "_AxesBase.spines": [
            {
                "type": "attr",
                "anno": "OrderedSet"
            }
        ],
        "_AxesBase._facecolor": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase._frameon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase._rasterization_zorder": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AxesBase.fmt_xdata": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.fmt_ydata": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase._xcid": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AxesBase._ycid": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AxesBase._layoutbox": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "_AxesBase._poslayoutbox": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "_AxesBase.__dict__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_AxesBase._stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase.xaxis": [
            {
                "type": "attr",
                "anno": "maxis.XAxis"
            }
        ],
        "_AxesBase.yaxis": [
            {
                "type": "attr",
                "anno": "maxis.YAxis"
            }
        ],
        "_AxesBase.bbox": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformedBbox"
            }
        ],
        "_AxesBase.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "_AxesBase.dataLim": [
            {
                "type": "attr",
                "anno": "mtransforms.Bbox"
            }
        ],
        "_AxesBase._viewLim": [
            {
                "type": "attr",
                "anno": "mtransforms.Bbox"
            }
        ],
        "_AxesBase.transScale": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "_AxesBase._tight": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase._request_autoscale_view": [
            {
                "type": "method",
                "args": {
                    "tight": "bool",
                    "scalex": "bool",
                    "scaley": "bool"
                }
            }
        ],
        "_AxesBase.transAxes": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "_AxesBase.transLimits": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "_AxesBase.transData": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "_AxesBase._xaxis_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "_AxesBase._yaxis_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "_AxesBase.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase.set_axes_locator": [
            {
                "type": "method",
                "args": {
                    "locator": "mtransforms.TransformWrapper"
                }
            }
        ],
        "_AxesBase.get_axes_locator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.ignore_existing_data_limits": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase.callbacks": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "_AxesBase._autoscaleXon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase._autoscaleYon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase._xmargin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AxesBase._ymargin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AxesBase._use_sticky_edges": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase._get_lines": [
            {
                "type": "attr",
                "anno": "_process_plot_var_args"
            }
        ],
        "_AxesBase._get_patches_for_fill": [
            {
                "type": "attr",
                "anno": "_process_plot_var_args"
            }
        ],
        "_AxesBase._gridOn": [
            {
                "type": "attr",
                "anno": "mpl.rcParams"
            }
        ],
        "_AxesBase.lines": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase.patches": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase.texts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase.tables": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase.artists": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase.images": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase._mouseover_set": [
            {
                "type": "attr",
                "anno": "_OrderedSet"
            }
        ],
        "_AxesBase.child_axes": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase._current_image": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_AxesBase.legend_": [
            {
                "type": "attr",
                "anno": "maxis.Legend"
            }
        ],
        "_AxesBase.collections": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase.containers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_AxesBase._autotitlepos": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase.title": [
            {
                "type": "attr",
                "anno": "mtext.Text"
            }
        ],
        "_AxesBase._left_title": [
            {
                "type": "attr",
                "anno": "mtext.Text"
            }
        ],
        "_AxesBase._right_title": [
            {
                "type": "attr",
                "anno": "mtext.Text"
            }
        ],
        "_AxesBase.patch": [
            {
                "type": "attr",
                "anno": "maxis.AxesPatch"
            }
        ],
        "_AxesBase.titleOffsetTrans": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformWrapper"
            }
        ],
        "_AxesBase.get_aspect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_adjustable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_box_aspect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_anchor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_legend": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_xaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_yaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_xgridlines": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_xticklines": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_ygridlines": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_yticklines": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase._gci": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.has_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_autoscale_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_autoscalex_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_autoscaley_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.set_autoscale_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "_AxesBase.set_autoscalex_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "_AxesBase.set_autoscaley_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "_AxesBase.use_sticky_edges": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "_AxesBase.set_xmargin": [
            {
                "type": "method",
                "args": {
                    "m": "float"
                }
            }
        ],
        "_AxesBase.set_ymargin": [
            {
                "type": "method",
                "args": {
                    "m": "float"
                }
            }
        ],
        "_AxesBase.set_rasterization_zorder": [
            {
                "type": "method",
                "args": {
                    "z": "float"
                }
            }
        ],
        "_AxesBase.get_rasterization_zorder": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.autoscale": [
            {
                "type": "method",
                "args": {
                    "enable": "bool",
                    "axis": "str",
                    "tight": "bool"
                }
            }
        ],
        "_AxesBase._get_axis_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._get_axis_map": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_frame_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.set_frame_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "_AxesBase._axisbelow": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase.get_axisbelow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.axison": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase.set_axis_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.set_axis_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.xaxis_inverted": [
            {
                "type": "attr",
                "anno": "_axis_method_wrapper"
            }
        ],
        "_AxesBase._validate_converted_limits": [
            {
                "type": "method",
                "args": {
                    "limit": "float | None",
                    "convert": "Callable[[float], float]"
                }
            }
        ],
        "_AxesBase.get_xscale": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_xticks": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_AxesBase.set_xticks": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "_AxesBase.get_xmajorticklabels": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_xminorticklabels": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_xticklabels": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "_AxesBase.set_xticklabels": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_AxesBase.yaxis_inverted": [
            {
                "type": "attr",
                "anno": "_axis_method_wrapper"
            }
        ],
        "_AxesBase.get_yscale": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_yticks": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_AxesBase.set_yticks": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_AxesBase.get_ymajorticklabels": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_yminorticklabels": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.get_yticklabels": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_AxesBase.set_yticklabels": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_AxesBase.xaxis_date": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.yaxis_date": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AxesBase.can_zoom": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.can_pan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._navigate": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_AxesBase.set_navigate": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "_AxesBase.get_navigate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._navigate_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxesBase.set_navigate_mode": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "_AxesBase.get_navigate_mode": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._pan_start": [
            {
                "type": "attr",
                "anno": "types.SimpleNamespace"
            }
        ],
        "_AxesBase.end_pan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_renderer_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._sci": [
            {
                "type": "method",
                "args": {
                    "im": "np.ndarray"
                }
            }
        ],
        "_AxesBase.get_facecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.set_axisbelow": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "_AxesBase.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_lines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_images": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "inframe": "bool"
                }
            }
        ],
        "_AxesBase.draw_artist": [
            {
                "type": "method",
                "args": {
                    "a": "mpl.renderer.Renderer"
                }
            }
        ],
        "_AxesBase.contains_point": [
            {
                "type": "method",
                "args": {
                    "point": "tuple"
                }
            }
        ],
        "_AxesBase.set_xlim": [
            {
                "type": "method",
                "args": {
                    "left": "float | None",
                    "right": "float | None",
                    "emit": "bool",
                    "auto": "bool",
                    "xmin": "float",
                    "xmax": "float"
                }
            }
        ],
        "_AxesBase.set_figure": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "_AxesBase._set_artist_props": [
            {
                "type": "method",
                "args": {
                    "a": "mpl.Axes"
                }
            }
        ],
        "_AxesBase.add_line": [
            {
                "type": "method",
                "args": {
                    "line": "mpl.Axes"
                }
            }
        ],
        "_AxesBase.autoscale_view": [
            {
                "type": "method",
                "args": {
                    "tight": "bool | None",
                    "scalex": "bool",
                    "scaley": "bool"
                }
            }
        ],
        "_AxesBase._unstale_viewLim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.viewLim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._set_lim_and_transforms": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._update_patch_limits": [
            {
                "type": "method",
                "args": {
                    "patch": "maxis.AxesPatch"
                }
            }
        ],
        "_AxesBase.add_patch": [
            {
                "type": "method",
                "args": {
                    "p": "mpl.Axes"
                }
            }
        ],
        "_process_plot_var_args._setdefaults": [
            {
                "type": "method",
                "args": {
                    "defaults": "dict",
                    "kw": "dict"
                }
            }
        ],
        "_AxesBase.margins": [
            {
                "type": "method",
                "args": {
                    "margins": "float",
                    "x": "float",
                    "y": "float",
                    "tight": "bool"
                }
            }
        ],
        "_AxesBase.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_ylim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_ybound": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_xlim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._get_view": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.get_xbound": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.set_xbound": [
            {
                "type": "method",
                "args": {
                    "lower": "float | None",
                    "upper": "float | None"
                }
            }
        ],
        "_AxesBase.get_data_ratio_log": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "_process_plot_var_args._getdefaults": [
            {
                "type": "method",
                "args": {
                    "ignore": "set",
                    "kw": "dict"
                }
            }
        ],
        "_AxesBase.ticklabel_format": [
            {
                "type": "method",
                "args": {
                    "axis": "str",
                    "style": "str",
                    "scilimits": "tuple",
                    "useOffset": "bool",
                    "useLocale": "bool",
                    "useMathText": "bool"
                }
            }
        ],
        "_AxesBase._gen_axes_spines": [
            {
                "type": "method",
                "args": {
                    "locations": "list",
                    "offset": "float",
                    "units": "str"
                }
            }
        ],
        "_AxesBase.update_datalim": [
            {
                "type": "method",
                "args": {
                    "xys": "np.ndarray",
                    "updatex": "bool",
                    "updatey": "bool"
                }
            }
        ],
        "_AxesBase.get_yaxis_transform": [
            {
                "type": "method",
                "args": {
                    "which": "str"
                }
            }
        ],
        "_AxesBase.get_yaxis_text2_transform": [
            {
                "type": "method",
                "args": {
                    "pad_points": "float"
                }
            }
        ],
        "_AxesBase.get_yaxis_text1_transform": [
            {
                "type": "method",
                "args": {
                    "pad_points": "int"
                }
            }
        ],
        "_AxesBase.get_xaxis_transform": [
            {
                "type": "method",
                "args": {
                    "which": "str"
                }
            }
        ],
        "_AxesBase.get_xaxis_text2_transform": [
            {
                "type": "method",
                "args": {
                    "pad_points": "tuple"
                }
            }
        ],
        "_AxesBase.get_xaxis_text1_transform": [
            {
                "type": "method",
                "args": {
                    "pad_points": "tuple"
                }
            }
        ],
        "_AxesBase.start_pan": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "button": "int"
                }
            }
        ],
        "_AxesBase.locator_params": [
            {
                "type": "method",
                "args": {
                    "axis": "str",
                    "tight": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "_AxesBase.minorticks_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.minorticks_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._twinned_axes": [
            {
                "type": "attr",
                "anno": "cbook.Grouper"
            }
        ],
        "_AxesBase._shared_y_axes": [
            {
                "type": "attr",
                "anno": "cbook.Grouper"
            }
        ],
        "_AxesBase.get_shared_y_axes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._shared_x_axes": [
            {
                "type": "attr",
                "anno": "cbook.Grouper"
            }
        ],
        "_AxesBase.get_shared_x_axes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.set_anchor": [
            {
                "type": "method",
                "args": {
                    "anchor": "str",
                    "share": "bool"
                }
            }
        ],
        "_AxesBase.sharex": [
            {
                "type": "method",
                "args": {
                    "other": "float"
                }
            }
        ],
        "_process_plot_format": [
            {
                "type": "func",
                "args": {
                    "fmt": "str"
                }
            }
        ],
        "_AxesBase.redraw_in_frame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.set_facecolor": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "_AxesBase._update_image_limits": [
            {
                "type": "method",
                "args": {
                    "image": "mpl.AxesImage"
                }
            }
        ],
        "_AxesBase.format_ydata": [
            {
                "type": "method",
                "args": {
                    "y": "np.ndarray"
                }
            }
        ],
        "_AxesBase.format_xdata": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_AxesBase.format_coord": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "_AxesBase.get_default_bbox_extra_artists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.add_container": [
            {
                "type": "method",
                "args": {
                    "container": "mpl.Axes"
                }
            }
        ],
        "_AxesBase._add_text": [
            {
                "type": "method",
                "args": {
                    "txt": "mtext.Text"
                }
            }
        ],
        "_AxesBase.add_child_axes": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "_AxesBase._gen_axes_patch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.update_datalim_bounds": [
            {
                "type": "method",
                "args": {
                    "bounds": "list"
                }
            }
        ],
        "_AxesBase._set_position": [
            {
                "type": "method",
                "args": {
                    "pos": "mtransforms.Bbox",
                    "which": "str"
                }
            }
        ],
        "_AxesBase.set_position": [
            {
                "type": "method",
                "args": {
                    "pos": "mtransforms.Bbox",
                    "which": "str"
                }
            }
        ],
        "_process_plot_var_args._makefill": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "kw": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "_AxesBase.add_table": [
            {
                "type": "method",
                "args": {
                    "tab": "mpl.Axes"
                }
            }
        ],
        "_AxesBase._update_line_limits": [
            {
                "type": "method",
                "args": {
                    "line": "mpl.Axes"
                }
            }
        ],
        "_AxesBase.relim": [
            {
                "type": "method",
                "args": {
                    "visible_only": "bool"
                }
            }
        ],
        "_AxesBase._on_units_changed": [
            {
                "type": "method",
                "args": {
                    "scalex": "bool",
                    "scaley": "bool"
                }
            }
        ],
        "_AxesBase.get_data_ratio": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.set_adjustable": [
            {
                "type": "method",
                "args": {
                    "adjustable": "str",
                    "share": "bool"
                }
            }
        ],
        "_AxesBase.set_box_aspect": [
            {
                "type": "method",
                "args": {
                    "aspect": "float"
                }
            }
        ],
        "_AxesBase.set_aspect": [
            {
                "type": "method",
                "args": {
                    "aspect": "str",
                    "adjustable": "str",
                    "anchor": "str",
                    "share": "bool"
                }
            }
        ],
        "_AxesBase.axis": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "emit": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "_AxesBase._process_unit_info": [
            {
                "type": "method",
                "args": {
                    "xdata": "np.ndarray",
                    "ydata": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ],
        "_AxesBase.set_ylim": [
            {
                "type": "method",
                "args": {
                    "bottom": "float | None",
                    "top": "float | None",
                    "emit": "bool",
                    "auto": "bool",
                    "ymin": "float",
                    "ymax": "float"
                }
            }
        ],
        "_AxesBase.drag_pan": [
            {
                "type": "method",
                "args": {
                    "button": "int",
                    "key": "str",
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "_AxesBase._set_view": [
            {
                "type": "method",
                "args": {
                    "view": "tuple"
                }
            }
        ],
        "_AxesBase.set_ybound": [
            {
                "type": "method",
                "args": {
                    "lower": "float | None",
                    "upper": "float | None"
                }
            }
        ],
        "_AxesBase._set_view_from_bbox": [
            {
                "type": "method",
                "args": {
                    "bbox": "tuple",
                    "direction": "str",
                    "mode": "str",
                    "twinx": "bool",
                    "twiny": "bool"
                }
            }
        ],
        "_AxesBase.apply_aspect": [
            {
                "type": "method",
                "args": {
                    "position": "mtransforms.Bbox"
                }
            }
        ],
        "_AxesBase.get_position": [
            {
                "type": "method",
                "args": {
                    "original": "bool"
                }
            }
        ],
        "_AxesBase.sharey": [
            {
                "type": "method",
                "args": {
                    "other": "float"
                }
            }
        ],
        "_AxesBase._update_transScale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_process_plot_var_args.set_prop_cycle": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "_AxesBase.set_prop_cycle": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "_process_plot_var_args.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "_process_plot_var_args.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "martist.Artist",
                    "command": "str"
                }
            }
        ],
        "_AxesBase._make_twin_axes": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "dict"
                }
            }
        ],
        "_AxesBase.reset_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase._set_title_offset_trans": [
            {
                "type": "method",
                "args": {
                    "title_offset_points": "int"
                }
            }
        ],
        "_AxesBase.tick_params": [
            {
                "type": "method",
                "args": {
                    "axis": "str",
                    "kwargs": "tuple"
                }
            }
        ],
        "_AxesBase.twinx": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.twiny": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.grid": [
            {
                "type": "method",
                "args": {
                    "b": "bool",
                    "which": "str",
                    "axis": "str",
                    "kwargs": "object"
                }
            }
        ],
        "_AxesBase.set_yscale": [
            {
                "type": "method",
                "args": {
                    "value": "float",
                    "kwargs": "tuple"
                }
            }
        ],
        "_AxesBase.set_xscale": [
            {
                "type": "method",
                "args": {
                    "value": "float",
                    "kwargs": "tuple"
                }
            }
        ],
        "_AxesBase.add_image": [
            {
                "type": "method",
                "args": {
                    "image": "mpl.Axes"
                }
            }
        ],
        "_AxesBase.add_collection": [
            {
                "type": "method",
                "args": {
                    "collection": "mpl.Axes",
                    "autolim": "bool"
                }
            }
        ],
        "_AxesBase.add_artist": [
            {
                "type": "method",
                "args": {
                    "a": "mpl.Axes"
                }
            }
        ],
        "_AxesBase.invert_yaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.invert_xaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "_AxesBase.in_axes": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "_AxesBase._update_title_position": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "_AxesBase.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "call_axes_locator": "bool",
                    "bbox_extra_artists": "list",
                    "for_layout_only": "bool"
                }
            }
        ],
        "_AxesBase._init_axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesBase.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure",
                    "rect": "tuple",
                    "facecolor": "list",
                    "frameon": "bool",
                    "sharex": "float",
                    "sharey": "float",
                    "label": "str",
                    "xscale": "float",
                    "yscale": "float",
                    "box_aspect": "float",
                    "kwargs": "tuple"
                }
            }
        ],
        "_process_plot_var_args._makeline": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "kw": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "_process_plot_var_args._plot_args": [
            {
                "type": "method",
                "args": {
                    "tup": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "_process_plot_var_args.__call__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "data": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "matplotlib.axes._secondary_axes": {
        "SecondaryAxis._functions": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SecondaryAxis._parent": [
            {
                "type": "attr",
                "anno": "mart.Artist"
            }
        ],
        "SecondaryAxis._orientation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SecondaryAxis._ticks_set": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SecondaryAxis._axis": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "SecondaryAxis._locstrings": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SecondaryAxis._otherstrings": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SecondaryAxis._parentscale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SecondaryAxis._layoutbox": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SecondaryAxis._poslayoutbox": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SecondaryAxis._pos": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SecondaryAxis._loc": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SecondaryAxis.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_secax_docstring": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SecondaryAxis.set_aspect": [
            {
                "type": "method",
                "args": {
                    "args": "float",
                    "kwargs": "float"
                }
            }
        ],
        "_make_secondary_locator": [
            {
                "type": "func",
                "args": {
                    "rect": "tuple",
                    "parent": "SecondaryAxis"
                }
            }
        ],
        "SecondaryAxis.set_location": [
            {
                "type": "method",
                "args": {
                    "location": "tuple"
                }
            }
        ],
        "SecondaryAxis.set_ylabel": [
            {
                "type": "method",
                "args": {
                    "ylabel": "str",
                    "fontdict": "dict",
                    "labelpad": "int",
                    "kwargs": "object"
                }
            }
        ],
        "SecondaryAxis.set_xlabel": [
            {
                "type": "method",
                "args": {
                    "xlabel": "str",
                    "fontdict": "dict",
                    "labelpad": "int",
                    "kwargs": "object"
                }
            }
        ],
        "SecondaryAxis.set_ticks": [
            {
                "type": "method",
                "args": {
                    "ticks": "np.ndarray",
                    "minor": "bool"
                }
            }
        ],
        "SecondaryAxis._set_lims": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SecondaryAxis.apply_aspect": [
            {
                "type": "method",
                "args": {
                    "position": "mtransforms.Bbox"
                }
            }
        ],
        "SecondaryAxis.set_color": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "SecondaryAxis.set_alignment": [
            {
                "type": "method",
                "args": {
                    "align": "str"
                }
            }
        ],
        "SecondaryAxis._set_scale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SecondaryAxis.set_functions": [
            {
                "type": "method",
                "args": {
                    "functions": "tuple"
                }
            }
        ],
        "SecondaryAxis.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "mart.Artist",
                    "orientation": "str",
                    "location": "tuple",
                    "functions": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "SecondaryAxis.draw": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ]
    },
    "matplotlib.axes._subplots": {
        "SubplotBase.figure": [
            {
                "type": "attr",
                "anno": "Figure"
            }
        ],
        "SubplotBase._subplotspec": [
            {
                "type": "attr",
                "anno": "SubplotSpec"
            }
        ],
        "SubplotBase._layoutbox": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SubplotBase._poslayoutbox": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SubplotBase.get_subplotspec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.set_subplotspec": [
            {
                "type": "method",
                "args": {
                    "subplotspec": "SubplotSpec"
                }
            }
        ],
        "_subplot_classes": [
            {
                "type": "var",
                "anno": "dict[Subplot, SubplotBase]"
            }
        ],
        "SubplotBase.get_gridspec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.is_last_col": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.is_last_row": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.get_geometry": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.update_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "subplot_class_factory": [
            {
                "type": "func",
                "args": {
                    "axes_class": "Axes"
                }
            }
        ],
        "_picklable_subplot_class_constructor": [
            {
                "type": "func",
                "args": {
                    "axes_class": "Axes"
                }
            }
        ],
        "Subplot": [
            {
                "type": "var",
                "anno": "Subplot"
            }
        ],
        "SubplotBase.__reduce__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.is_first_col": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.is_first_row": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.colNum": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.rowNum": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.label_outer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotBase.change_geometry": [
            {
                "type": "method",
                "args": {
                    "numrows": "int",
                    "numcols": "int",
                    "num": "int"
                }
            }
        ],
        "SubplotBase._make_twin_axes": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ]
    },
    "matplotlib.legend_handler": {
        "HandlerBase._update_prop_func": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "HandlerBase.__init__": [
            {
                "type": "method",
                "args": {
                    "xpad": "float",
                    "ypad": "float",
                    "update_func": "None"
                }
            }
        ],
        "HandlerBase.adjust_drawing_area": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "str",
                    "xdescent": "float",
                    "ydescent": "float",
                    "width": "float",
                    "height": "float",
                    "fontsize": "int"
                }
            }
        ],
        "HandlerBase.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "str",
                    "xdescent": "float",
                    "ydescent": "float",
                    "width": "float",
                    "height": "float",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ],
        "HandlerNpoints._numpoints": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HandlerNpoints._marker_pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "HandlerNpoints.__init__": [
            {
                "type": "method",
                "args": {
                    "marker_pad": "float",
                    "numpoints": "int",
                    "kw": "Any"
                }
            }
        ],
        "HandlerNpoints.get_numpoints": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend"
                }
            }
        ],
        "HandlerNpoints.get_xdata": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int"
                }
            }
        ],
        "HandlerNpointsYoffsets._yoffsets": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "HandlerNpointsYoffsets.__init__": [
            {
                "type": "method",
                "args": {
                    "numpoints": "int",
                    "yoffsets": "np.ndarray",
                    "kw": "Any"
                }
            }
        ],
        "HandlerNpointsYoffsets.get_ydata": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int"
                }
            }
        ],
        "HandlerLine2D.__init__": [
            {
                "type": "method",
                "args": {
                    "marker_pad": "float",
                    "numpoints": "int",
                    "kw": "Any"
                }
            }
        ],
        "HandlerPatch._patch_func": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "HandlerPatch.__init__": [
            {
                "type": "method",
                "args": {
                    "patch_func": "None",
                    "kw": "object"
                }
            }
        ],
        "HandlerLineCollection.get_numpoints": [
            {
                "type": "method",
                "args": {
                    "legend": "HandlerNpoints"
                }
            }
        ],
        "HandlerRegularPolyCollection._sizes": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "HandlerRegularPolyCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "yoffsets": "np.ndarray",
                    "sizes": "np.ndarray",
                    "kw": "Any"
                }
            }
        ],
        "HandlerRegularPolyCollection.get_numpoints": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend"
                }
            }
        ],
        "HandlerRegularPolyCollection.get_sizes": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "HandlerBase",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int"
                }
            }
        ],
        "HandlerCircleCollection.create_collection": [
            {
                "type": "method",
                "args": {
                    "orig_handle": "HandlerCircleCollection",
                    "sizes": "np.ndarray",
                    "offsets": "np.ndarray",
                    "transOffset": "np.ndarray"
                }
            }
        ],
        "HandlerErrorbar._xerr_size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "HandlerErrorbar._yerr_size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "HandlerErrorbar.__init__": [
            {
                "type": "method",
                "args": {
                    "xerr_size": "float",
                    "yerr_size": "float",
                    "marker_pad": "float",
                    "numpoints": "int",
                    "kw": "Any"
                }
            }
        ],
        "HandlerErrorbar.get_err_size": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int"
                }
            }
        ],
        "HandlerStem._bottom": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "HandlerStem.__init__": [
            {
                "type": "method",
                "args": {
                    "marker_pad": "float",
                    "numpoints": "int",
                    "bottom": "float",
                    "yoffsets": "np.ndarray",
                    "kw": "Any"
                }
            }
        ],
        "HandlerStem.get_ydata": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int"
                }
            }
        ],
        "HandlerTuple._ndivide": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "HandlerTuple._pad": [
            {
                "type": "attr",
                "anno": "float | None"
            }
        ],
        "HandlerTuple.__init__": [
            {
                "type": "method",
                "args": {
                    "ndivide": "int | None",
                    "pad": "float | None",
                    "kwargs": "object"
                }
            }
        ],
        "HandlerPathCollection.create_collection": [
            {
                "type": "method",
                "args": {
                    "orig_handle": "HandlerRegularPolyCollection",
                    "sizes": "np.ndarray",
                    "offsets": "np.ndarray",
                    "transOffset": "np.ndarray"
                }
            }
        ],
        "HandlerRegularPolyCollection.create_collection": [
            {
                "type": "method",
                "args": {
                    "orig_handle": "HandlerBase",
                    "sizes": "np.ndarray",
                    "offsets": "np.ndarray",
                    "transOffset": "np.ndarray"
                }
            }
        ],
        "HandlerBase._default_update_prop": [
            {
                "type": "method",
                "args": {
                    "legend_handle": "plt.legend.Legend",
                    "orig_handle": "plt.legend.Legend"
                }
            }
        ],
        "HandlerBase._update_prop": [
            {
                "type": "method",
                "args": {
                    "legend_handle": "plt.legend.Legend",
                    "orig_handle": "plt.legend.Legend"
                }
            }
        ],
        "update_from_first_child": [
            {
                "type": "func",
                "args": {
                    "tgt": "HandlerBase",
                    "src": "HandlerBase"
                }
            }
        ],
        "HandlerPatch._create_patch": [
            {
                "type": "method",
                "args": {
                    "legend": "str",
                    "orig_handle": "str",
                    "xdescent": "float",
                    "ydescent": "float",
                    "width": "float",
                    "height": "float",
                    "fontsize": "int"
                }
            }
        ],
        "HandlerStem._copy_collection_props": [
            {
                "type": "method",
                "args": {
                    "legend_handle": "plt.legend.Legend",
                    "orig_handle": "cbook.Legend"
                }
            }
        ],
        "HandlerLineCollection._default_update_prop": [
            {
                "type": "method",
                "args": {
                    "legend_handle": "Line2D",
                    "orig_handle": "Line2D"
                }
            }
        ],
        "HandlerBase.update_prop": [
            {
                "type": "method",
                "args": {
                    "legend_handle": "plt.legend.Legend",
                    "orig_handle": "plt.legend.Legend",
                    "legend": "cbook.Legend"
                }
            }
        ],
        "HandlerPolyCollection.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ],
        "HandlerPatch.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "str",
                    "orig_handle": "str",
                    "xdescent": "float",
                    "ydescent": "float",
                    "width": "float",
                    "height": "float",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ],
        "HandlerPolyCollection._update_prop": [
            {
                "type": "method",
                "args": {
                    "legend_handle": "HandlerPolyCollection",
                    "orig_handle": "HandlerPolyCollection"
                }
            }
        ],
        "HandlerRegularPolyCollection.update_prop": [
            {
                "type": "method",
                "args": {
                    "legend_handle": "plt.legend.Legend",
                    "orig_handle": "plt.legend.Legend",
                    "legend": "cbook.Legend"
                }
            }
        ],
        "HandlerRegularPolyCollection.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "HandlerBase",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ],
        "HandlerBase.legend_artist": [
            {
                "type": "method",
                "args": {
                    "legend": "str",
                    "orig_handle": "str",
                    "fontsize": "int",
                    "handlebox": "DrawingArea"
                }
            }
        ],
        "HandlerStem.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ],
        "HandlerLineCollection.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ],
        "HandlerErrorbar.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ],
        "HandlerLine2D.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ],
        "HandlerTuple.create_artists": [
            {
                "type": "method",
                "args": {
                    "legend": "cbook.Legend",
                    "orig_handle": "cbook.Legend",
                    "xdescent": "int",
                    "ydescent": "int",
                    "width": "int",
                    "height": "int",
                    "fontsize": "int",
                    "trans": "np.ndarray"
                }
            }
        ]
    },
    "matplotlib.pylab": {
        "bytes": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ]
    },
    "matplotlib.testing.compare": {
        "__all__": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "make_test_filename": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "purpose": "str"
                }
            }
        ],
        "_find_unsafe_bytes": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_shlex_quote_bytes": [
            {
                "type": "func",
                "args": {
                    "b": "bytes"
                }
            }
        ],
        "_Converter._proc": [
            {
                "type": "attr",
                "anno": "subprocess.Popen"
            }
        ],
        "_GSConverter._proc": [
            {
                "type": "attr",
                "anno": "subprocess.Popen"
            }
        ],
        "_SVGConverter._tmpdir": [
            {
                "type": "attr",
                "anno": "TemporaryDirectory"
            }
        ],
        "_SVGConverter._proc": [
            {
                "type": "attr",
                "anno": "subprocess.Popen"
            }
        ],
        "converter": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "comparable_formats": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_cache_dir": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "calculate_rms": [
            {
                "type": "func",
                "args": {
                    "expected_image": "np.ndarray",
                    "actual_image": "np.ndarray"
                }
            }
        ],
        "crop_to_same": [
            {
                "type": "func",
                "args": {
                    "actual_path": "str",
                    "actual_image": "np.ndarray",
                    "expected_path": "str",
                    "expected_image": "np.ndarray"
                }
            }
        ],
        "_Converter._read_until": [
            {
                "type": "method",
                "args": {
                    "terminator": "bytes"
                }
            }
        ],
        "make_external_conversion_command": [
            {
                "type": "func",
                "args": {
                    "cmd": "Callable[[str, str], tuple]"
                }
            }
        ],
        "_SVGConverter.__call__": [
            {
                "type": "method",
                "args": {
                    "orig": "str",
                    "dest": "str"
                }
            }
        ],
        "_GSConverter.__call__": [
            {
                "type": "method",
                "args": {
                    "orig": "str",
                    "dest": "str"
                }
            }
        ],
        "get_file_hash": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "block_size": "int"
                }
            }
        ],
        "convert": [
            {
                "type": "func",
                "args": {
                    "filename": "str",
                    "cache": "bool"
                }
            }
        ],
        "save_diff_image": [
            {
                "type": "func",
                "args": {
                    "expected": "str",
                    "actual": "str",
                    "output": "str"
                }
            }
        ],
        "compare_images": [
            {
                "type": "func",
                "args": {
                    "expected": "str",
                    "actual": "str",
                    "tol": "float",
                    "in_decorator": "bool"
                }
            }
        ],
        "_Converter.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Converter.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_update_converter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_SVGConverter.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_backend_ps": {
        "needs_ghostscript": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "needs_usetex": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "test_transparency": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patheffects": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_savefig_to_stringio": [
            {
                "type": "func",
                "args": {
                    "format": "str",
                    "use_log": "bool",
                    "rcParams": "dict",
                    "orientation": "str",
                    "monkeypatch": "pytest.MonkeyPatch"
                }
            }
        ],
        "test_partial_usetex": [
            {
                "type": "func",
                "args": {
                    "caplog": "mpl.core.Caplog"
                }
            }
        ],
        "test_failing_latex": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tilde_in_tempfilename": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "str"
                }
            }
        ]
    },
    "matplotlib.testing.conftest": {
        "pytest_unconfigure": [
            {
                "type": "func",
                "args": {
                    "config": "dict"
                }
            }
        ],
        "pd": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "mpl_image_comparison_parameters": [
            {
                "type": "func",
                "args": {
                    "request": "matplotlib.pyplot.Request",
                    "extension": "str"
                }
            }
        ],
        "pytest_configure": [
            {
                "type": "func",
                "args": {
                    "config": "pytest.Config"
                }
            }
        ],
        "mpl_test_settings": [
            {
                "type": "func",
                "args": {
                    "request": "pytest.Request"
                }
            }
        ]
    },
    "matplotlib.testing.decorators": {
        "CleanupTestCase.tearDownClass": [
            {
                "type": "method",
                "args": {
                    "cls": "unittest.TestCase"
                }
            }
        ],
        "_ImageComparisonBase.func": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_ImageComparisonBase.tol": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_ImageComparisonBase.remove_text": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_ImageComparisonBase.savefig_kwargs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_skip_if_format_is_uncomparable": [
            {
                "type": "func",
                "args": {
                    "extension": "str"
                }
            }
        ],
        "_ImageComparisonBase.copy_baseline": [
            {
                "type": "method",
                "args": {
                    "baseline": "str",
                    "extension": "str"
                }
            }
        ],
        "_mark_skip_if_format_is_uncomparable": [
            {
                "type": "func",
                "args": {
                    "extension": "str | tuple[str, ...]"
                }
            }
        ],
        "check_freetype_version": [
            {
                "type": "func",
                "args": {
                    "ver": "str | tuple[StrictVersion, ...]"
                }
            }
        ],
        "_checked_on_freetype_version": [
            {
                "type": "func",
                "args": {
                    "required_freetype_version": "str | tuple[StrictVersion, ...]"
                }
            }
        ],
        "_image_directories": [
            {
                "type": "func",
                "args": {
                    "func": "str"
                }
            }
        ],
        "_ImageComparisonBase.__init__": [
            {
                "type": "method",
                "args": {
                    "func": "str",
                    "tol": "float",
                    "remove_text": "bool",
                    "savefig_kwargs": "dict"
                }
            }
        ],
        "remove_ticks_and_titles": [
            {
                "type": "func",
                "args": {
                    "figure": "plt.Figure"
                }
            }
        ],
        "_raise_on_image_difference": [
            {
                "type": "func",
                "args": {
                    "expected": "str",
                    "actual": "str",
                    "tol": "float"
                }
            }
        ],
        "_cleanup_cm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "cleanup": [
            {
                "type": "func",
                "args": {
                    "style": "str"
                }
            }
        ],
        "CleanupTestCase.setUpClass": [
            {
                "type": "method",
                "args": {
                    "cls": "unittest.TestCase"
                }
            }
        ],
        "check_figures_equal": [
            {
                "type": "func",
                "args": {
                    "extensions": "tuple",
                    "tol": "float"
                }
            }
        ],
        "_ImageComparisonBase.compare": [
            {
                "type": "method",
                "args": {
                    "idx": "int",
                    "baseline": "str",
                    "extension": "str",
                    "_lock": "bool"
                }
            }
        ],
        "_pytest_image_comparison": [
            {
                "type": "func",
                "args": {
                    "baseline_images": "list[str]",
                    "extensions": "list[str]",
                    "tol": "float",
                    "freetype_version": "str | tuple[StrictVersion, ...]",
                    "remove_text": "bool",
                    "savefig_kwargs": "dict",
                    "style": "tuple[str, ...]"
                }
            }
        ],
        "image_comparison": [
            {
                "type": "func",
                "args": {
                    "baseline_images": "list[str]",
                    "extensions": "list[str]",
                    "tol": "float",
                    "freetype_version": "str | tuple[StrictVersion, ...]",
                    "remove_text": "bool",
                    "savefig_kwarg": "dict",
                    "style": "tuple[str, ...]"
                }
            }
        ]
    },
    "matplotlib.testing.disable_internet": {
        "socket_original": [
            {
                "type": "var",
                "anno": "socket.socket"
            }
        ],
        "socket_create_connection": [
            {
                "type": "var",
                "anno": "socket.create_connection"
            }
        ],
        "socket_bind": [
            {
                "type": "var",
                "anno": "socket.bind"
            }
        ],
        "socket_connect": [
            {
                "type": "var",
                "anno": "socket.connect"
            }
        ],
        "INTERNET_OFF": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_orig_opener": [
            {
                "type": "var",
                "anno": "typing.Optional[urllib.request.Baseopener]"
            }
        ],
        "check_internet_off": [
            {
                "type": "func",
                "args": {
                    "original_function": "typing.Callable"
                }
            }
        ],
        "turn_off_internet": [
            {
                "type": "func",
                "args": {
                    "verbose": "bool"
                }
            }
        ],
        "turn_on_internet": [
            {
                "type": "func",
                "args": {
                    "verbose": "bool"
                }
            }
        ],
        "no_internet": [
            {
                "type": "func",
                "args": {
                    "verbose": "bool"
                }
            }
        ]
    },
    "matplotlib.testing": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "is_called_from_pytest": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "set_reproducibility_for_testing": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "set_font_settings_for_testing": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "setup": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.testing.jpl_units.UnitDbl": {
        "UnitDbl.allowed": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UnitDbl._types": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UnitDbl._value": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "UnitDbl._units": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UnitDbl.__bool__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnitDbl.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnitDbl.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnitDbl.type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnitDbl.checkUnits": [
            {
                "type": "method",
                "args": {
                    "units": "str"
                }
            }
        ],
        "UnitDbl.checkSameUnits": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl",
                    "func": "str"
                }
            }
        ],
        "UnitDbl._cmp": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl",
                    "op": "operator"
                }
            }
        ],
        "UnitDbl.__ge__": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl"
                }
            }
        ],
        "UnitDbl.__gt__": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl"
                }
            }
        ],
        "UnitDbl.__le__": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl"
                }
            }
        ],
        "UnitDbl.__lt__": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl"
                }
            }
        ],
        "UnitDbl.__ne__": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl"
                }
            }
        ],
        "UnitDbl.__eq__": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl"
                }
            }
        ],
        "UnitDbl.convert": [
            {
                "type": "method",
                "args": {
                    "units": "str"
                }
            }
        ],
        "UnitDbl.__init__": [
            {
                "type": "method",
                "args": {
                    "value": "float",
                    "units": "str"
                }
            }
        ],
        "UnitDbl.range": [
            {
                "type": "method",
                "args": {
                    "start": "float",
                    "stop": "float",
                    "step": "UnitDbl"
                }
            }
        ],
        "UnitDbl.__rmul__": [
            {
                "type": "method",
                "args": {
                    "lhs": "float"
                }
            }
        ],
        "UnitDbl.__mul__": [
            {
                "type": "method",
                "args": {
                    "rhs": "float"
                }
            }
        ],
        "UnitDbl.__sub__": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl"
                }
            }
        ],
        "UnitDbl.__add__": [
            {
                "type": "method",
                "args": {
                    "rhs": "UnitDbl"
                }
            }
        ],
        "UnitDbl.__neg__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnitDbl.__abs__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.testing.jpl_units.EpochConverter": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "EpochConverter.jdRef": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "EpochConverter.float2epoch": [
            {
                "type": "method",
                "args": {
                    "value": "float",
                    "unit": "str"
                }
            }
        ],
        "EpochConverter.duration2float": [
            {
                "type": "method",
                "args": {
                    "value": "U.Duration"
                }
            }
        ],
        "EpochConverter.default_units": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "axis": "units.Axis"
                }
            }
        ],
        "EpochConverter.epoch2float": [
            {
                "type": "method",
                "args": {
                    "value": "U.Epoch",
                    "unit": "str"
                }
            }
        ],
        "EpochConverter.convert": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "unit": "str",
                    "axis": "units.Axis"
                }
            }
        ],
        "EpochConverter.axisinfo": [
            {
                "type": "method",
                "args": {
                    "unit": "str",
                    "axis": "units.Axis"
                }
            }
        ]
    },
    "matplotlib.testing.jpl_units.StrConverter": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "StrConverter.axisinfo": [
            {
                "type": "method",
                "args": {
                    "unit": "str",
                    "axis": "units.Axis"
                }
            }
        ],
        "StrConverter.default_units": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray",
                    "axis": "units.Axis"
                }
            }
        ],
        "StrConverter.convert": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "unit": "str",
                    "axis": "np.ndarray"
                }
            }
        ]
    },
    "matplotlib.testing.jpl_units.Duration": {
        "Duration.allowed": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Duration._frame": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Duration._seconds": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Duration.frame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Duration.seconds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Duration.__bool__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Duration.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Duration.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Duration.checkSameFrame": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration",
                    "func": "str"
                }
            }
        ],
        "Duration._cmp": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration",
                    "op": "operator"
                }
            }
        ],
        "Duration.__ge__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration"
                }
            }
        ],
        "Duration.__gt__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration"
                }
            }
        ],
        "Duration.__le__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration"
                }
            }
        ],
        "Duration.__lt__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration"
                }
            }
        ],
        "Duration.__ne__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration"
                }
            }
        ],
        "Duration.__eq__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration"
                }
            }
        ],
        "Duration.__init__": [
            {
                "type": "method",
                "args": {
                    "frame": "str",
                    "seconds": "float"
                }
            }
        ],
        "Duration.__rmul__": [
            {
                "type": "method",
                "args": {
                    "lhs": "float"
                }
            }
        ],
        "Duration.__mul__": [
            {
                "type": "method",
                "args": {
                    "rhs": "float"
                }
            }
        ],
        "Duration.__sub__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration"
                }
            }
        ],
        "Duration.__add__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Duration"
                }
            }
        ],
        "Duration.__neg__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Duration.__abs__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.testing.jpl_units.UnitDblConverter": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "rad_fn": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "UnitDblConverter.defaults": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UnitDblConverter.default_units": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "axis": "units.Axis"
                }
            }
        ],
        "UnitDblConverter.convert": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "unit": "str",
                    "axis": "units.Axis"
                }
            }
        ],
        "UnitDblConverter.axisinfo": [
            {
                "type": "method",
                "args": {
                    "unit": "str | units.UnitData",
                    "axis": "units.Axis"
                }
            }
        ]
    },
    "matplotlib.testing.jpl_units.Epoch": {
        "Epoch.allowed": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Epoch._frame": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Epoch._jd": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Epoch._seconds": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Epoch.frame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Epoch.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Epoch.range": [
            {
                "type": "method",
                "args": {
                    "start": "int",
                    "stop": "int",
                    "step": "int"
                }
            }
        ],
        "Epoch.__init__": [
            {
                "type": "method",
                "args": {
                    "frame": "str",
                    "sec": "float",
                    "jd": "float",
                    "daynum": "float",
                    "dt": "DT.datetime"
                }
            }
        ],
        "Epoch.convert": [
            {
                "type": "method",
                "args": {
                    "frame": "str"
                }
            }
        ],
        "Epoch.__sub__": [
            {
                "type": "method",
                "args": {
                    "rhs": "U.Duration"
                }
            }
        ],
        "Epoch.__add__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Epoch"
                }
            }
        ],
        "Epoch._cmp": [
            {
                "type": "method",
                "args": {
                    "rhs": "Epoch",
                    "op": "operator"
                }
            }
        ],
        "Epoch.__ge__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Epoch"
                }
            }
        ],
        "Epoch.__gt__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Epoch"
                }
            }
        ],
        "Epoch.__le__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Epoch"
                }
            }
        ],
        "Epoch.__lt__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Epoch"
                }
            }
        ],
        "Epoch.__ne__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Epoch"
                }
            }
        ],
        "Epoch.__eq__": [
            {
                "type": "method",
                "args": {
                    "rhs": "Epoch"
                }
            }
        ],
        "Epoch.secondsPast": [
            {
                "type": "method",
                "args": {
                    "frame": "str",
                    "jd": "float"
                }
            }
        ],
        "Epoch.julianDate": [
            {
                "type": "method",
                "args": {
                    "frame": "str"
                }
            }
        ],
        "Epoch.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.testing.jpl_units": {
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "m": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "km": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "mile": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "deg": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "rad": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "sec": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "min": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "hr": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "day": [
            {
                "type": "var",
                "anno": "UnitDbl"
            }
        ],
        "register": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.testing.jpl_units.UnitDblFormatter": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "UnitDblFormatter.format_data": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "UnitDblFormatter.format_data_short": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "UnitDblFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ]
    },
    "matplotlib.font_manager": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "font_scalings": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "stretch_dict": [
            {
                "type": "var",
                "anno": "dict[str, int]"
            }
        ],
        "weight_dict": [
            {
                "type": "var",
                "anno": "set[int]"
            }
        ],
        "font_family_aliases": [
            {
                "type": "var",
                "anno": "set[str]"
            }
        ],
        "MSFolders": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "MSFontDirectories": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "MSUserFontDirectories": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "X11FontDirectories": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "OSXFontDirectories": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "get_fontext_synonyms": [
            {
                "type": "func",
                "args": {
                    "fontext": "str"
                }
            }
        ],
        "win32FontDirectory": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "FontEntry.fname": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_call_fc_list": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_fontconfig_fonts": [
            {
                "type": "func",
                "args": {
                    "fontext": "str"
                }
            }
        ],
        "FontEntry.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontEntry.style": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontEntry.variant": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontEntry.weight": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontEntry.stretch": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontEntry.size": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontEntry.__init__": [
            {
                "type": "method",
                "args": {
                    "fname": "str",
                    "name": "str",
                    "style": "str",
                    "variant": "str",
                    "weight": "str",
                    "stretch": "str",
                    "size": "str"
                }
            }
        ],
        "FontEntry.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties._family": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "FontProperties._slant": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontProperties._variant": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontProperties._weight": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FontProperties._stretch": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FontProperties._size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontProperties._file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontProperties._from_any": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "arg": "object"
                }
            }
        ],
        "FontProperties.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "FontProperties.get_family": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.get_style": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.get_slant": [
            {
                "type": "attr",
                "anno": "Callable[[], str]"
            }
        ],
        "FontProperties.get_variant": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.get_weight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.get_stretch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.get_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.get_size_in_points": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.get_file": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.set_file": [
            {
                "type": "method",
                "args": {
                    "file": "str"
                }
            }
        ],
        "_normalize_font_family": [
            {
                "type": "func",
                "args": {
                    "family": "str"
                }
            }
        ],
        "FontManager.__version__": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FontManager._version": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FontManager.__default_weight": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontManager.default_size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontManager.defaultFamily": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FontManager.afmlist": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FontManager.ttflist": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FontManager.get_default_weight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontManager.set_default_weight": [
            {
                "type": "method",
                "args": {
                    "weight": "str"
                }
            }
        ],
        "FontManager.score_style": [
            {
                "type": "method",
                "args": {
                    "style1": "str",
                    "style2": "str"
                }
            }
        ],
        "FontManager.score_variant": [
            {
                "type": "method",
                "args": {
                    "variant1": "str",
                    "variant2": "str"
                }
            }
        ],
        "FontManager.score_weight": [
            {
                "type": "method",
                "args": {
                    "weight1": "str",
                    "weight2": "str"
                }
            }
        ],
        "FontManager.score_size": [
            {
                "type": "method",
                "args": {
                    "size1": "str",
                    "size2": "str"
                }
            }
        ],
        "is_opentype_cff_font": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "_get_font": [
            {
                "type": "var",
                "anno": "ft2font.FT2Font"
            }
        ],
        "_fmcache": [
            {
                "type": "var",
                "anno": "Path"
            }
        ],
        "FontManager._findfont_cached": [
            {
                "type": "method",
                "args": {
                    "prop": "object",
                    "fontext": "str",
                    "directory": "str",
                    "fallback_to_default": "bool",
                    "rebuild_if_missing": "bool",
                    "rc_params": "rcParams"
                }
            }
        ],
        "FontManager.findfont": [
            {
                "type": "method",
                "args": {
                    "prop": "object",
                    "fontext": "str",
                    "directory": "str",
                    "fallback_to_default": "bool",
                    "rebuild_if_missing": "bool"
                }
            }
        ],
        "findfont": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "FontProperties.get_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.set_fontconfig_pattern": [
            {
                "type": "method",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "FontProperties.__init__": [
            {
                "type": "method",
                "args": {
                    "family": "str",
                    "style": "str",
                    "variant": "str",
                    "weight": "int",
                    "stretch": "int",
                    "size": "float",
                    "fname": "str"
                }
            }
        ],
        "FontProperties.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "get_font": [
            {
                "type": "func",
                "args": {
                    "filename": "str",
                    "hinting_factor": "int"
                }
            }
        ],
        "FontManager.get_default_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.set_stretch": [
            {
                "type": "method",
                "args": {
                    "stretch": "int"
                }
            }
        ],
        "FontProperties.set_weight": [
            {
                "type": "method",
                "args": {
                    "weight": "int"
                }
            }
        ],
        "FontProperties.set_family": [
            {
                "type": "method",
                "args": {
                    "family": "str"
                }
            }
        ],
        "FontProperties.set_name": [
            {
                "type": "attr",
                "anno": "Callable[[str], None]"
            }
        ],
        "list_fonts": [
            {
                "type": "func",
                "args": {
                    "directory": "str",
                    "extensions": "list"
                }
            }
        ],
        "FontProperties.set_variant": [
            {
                "type": "method",
                "args": {
                    "variant": "str"
                }
            }
        ],
        "FontProperties.set_style": [
            {
                "type": "method",
                "args": {
                    "style": "str"
                }
            }
        ],
        "FontProperties.set_slant": [
            {
                "type": "attr",
                "anno": "Callable[[str], None]"
            }
        ],
        "FontManager.score_family": [
            {
                "type": "method",
                "args": {
                    "families": "str",
                    "family2": "str"
                }
            }
        ],
        "FontProperties.set_size": [
            {
                "type": "method",
                "args": {
                    "size": "float"
                }
            }
        ],
        "FontProperties.get_fontconfig_pattern": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontProperties.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "json_dump": [
            {
                "type": "func",
                "args": {
                    "data": "object",
                    "filename": "Path"
                }
            }
        ],
        "FontManager.score_stretch": [
            {
                "type": "method",
                "args": {
                    "stretch1": "str",
                    "stretch2": "str"
                }
            }
        ],
        "ttfFontProperty": [
            {
                "type": "func",
                "args": {
                    "font": "ft2font.FT2Font"
                }
            }
        ],
        "_win32RegistryFonts": [
            {
                "type": "func",
                "args": {
                    "reg_domain": "str",
                    "base_dir": "str"
                }
            }
        ],
        "_JSONEncoder.default": [
            {
                "type": "method",
                "args": {
                    "o": "object"
                }
            }
        ],
        "win32InstalledFonts": [
            {
                "type": "func",
                "args": {
                    "directory": "str",
                    "fontext": "str"
                }
            }
        ],
        "findSystemFonts": [
            {
                "type": "func",
                "args": {
                    "fontpaths": "list",
                    "fontext": "str"
                }
            }
        ],
        "afmFontProperty": [
            {
                "type": "func",
                "args": {
                    "fontpath": "str",
                    "font": "afm.AFM"
                }
            }
        ],
        "FontManager.addfont": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "FontManager.__init__": [
            {
                "type": "method",
                "args": {
                    "size": "float",
                    "weight": "str"
                }
            }
        ],
        "_json_decode": [
            {
                "type": "func",
                "args": {
                    "o": "object"
                }
            }
        ],
        "json_load": [
            {
                "type": "func",
                "args": {
                    "filename": "Path"
                }
            }
        ],
        "fontManager": [
            {
                "type": "var",
                "anno": "FontManager"
            }
        ],
        "_rebuild": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "createFontList": [
            {
                "type": "func",
                "args": {
                    "fontfiles": "list",
                    "fontext": "str"
                }
            }
        ],
        "FontManager.defaultFont": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.text": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "Text.zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Text._cached": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Text._text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Text._multialignment": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Text._rotation": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Text._bbox_patch": [
            {
                "type": "attr",
                "anno": "Optional[FancyBboxPatch]"
            }
        ],
        "Text._renderer": [
            {
                "type": "attr",
                "anno": "artist.ArtistRenderer"
            }
        ],
        "Text._linespacing": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Text.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text._rotation_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Text.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Text.get_rotation_mode": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text._color": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Text._verticalalignment": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Text._horizontalalignment": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Text._get_multialignment": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text._fontproperties": [
            {
                "type": "attr",
                "anno": "FontProperties"
            }
        ],
        "Text._usetex": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Text._picker": [
            {
                "type": "attr",
                "anno": "Number"
            }
        ],
        "Text.get_bbox_patch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text._wrap": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Text.set_wrap": [
            {
                "type": "method",
                "args": {
                    "wrap": "Text"
                }
            }
        ],
        "Text.get_wrap": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_fontproperties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_fontfamily": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_fontstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_fontsize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_fontvariant": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_fontweight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_stretch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_horizontalalignment": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.get_verticalalignment": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.set_color": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "Text.set_linespacing": [
            {
                "type": "method",
                "args": {
                    "spacing": "float"
                }
            }
        ],
        "Text._x": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Text.set_x": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "Text._y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Text.set_y": [
            {
                "type": "method",
                "args": {
                    "y": "float"
                }
            }
        ],
        "Text.set_position": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple"
                }
            }
        ],
        "Text.get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.set_rotation": [
            {
                "type": "method",
                "args": {
                    "s": "int"
                }
            }
        ],
        "Text.set_text": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "Text.get_usetex": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text._preprocess_math": [
            {
                "type": "method",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "OffsetFrom._artist": [
            {
                "type": "attr",
                "anno": "Artist"
            }
        ],
        "OffsetFrom._ref_coord": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "OffsetFrom._unit": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OffsetFrom.get_unit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AnnotationBase.xy": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_AnnotationBase.xycoords": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_AnnotationBase._draggable": [
            {
                "type": "attr",
                "anno": "DraggableAnnotation"
            }
        ],
        "_AnnotationBase._annotation_clip": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_AnnotationBase.set_annotation_clip": [
            {
                "type": "method",
                "args": {
                    "b": "float"
                }
            }
        ],
        "_AnnotationBase.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray",
                    "xycoords": "str",
                    "annotation_clip": "float"
                }
            }
        ],
        "_AnnotationBase.get_annotation_clip": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Annotation.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Annotation._textcoords": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Annotation.arrowprops": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Annotation._arrow_relpos": [
            {
                "type": "attr",
                "anno": "tuple[float, float]"
            }
        ],
        "Annotation.arrow_patch": [
            {
                "type": "attr",
                "anno": "Optional[FancyArrowPatch]"
            }
        ],
        "Annotation._xycoords": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Annotation.xycoords": [
            {
                "type": "method",
                "args": {
                    "xycoords": "str"
                }
            }
        ],
        "Annotation.xyann": [
            {
                "type": "method",
                "args": {
                    "xytext": "tuple"
                }
            }
        ],
        "Annotation.get_anncoords": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Annotation.set_anncoords": [
            {
                "type": "method",
                "args": {
                    "coords": "str"
                }
            }
        ],
        "Annotation.anncoords": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Annotation._renderer": [
            {
                "type": "attr",
                "anno": "TextRenderer"
            }
        ],
        "get_rotation": [
            {
                "type": "func",
                "args": {
                    "rotation": "object"
                }
            }
        ],
        "Text.get_rotation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OffsetFrom._get_scale": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Text._draw_bbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "ArtistRenderer",
                    "posx": "float",
                    "posy": "float"
                }
            }
        ],
        "Text.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "TextRenderer"
                }
            }
        ],
        "Annotation.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "TextRenderer"
                }
            }
        ],
        "Annotation.set_figure": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "Text.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "Annotation.contains": [
            {
                "type": "method",
                "args": {
                    "event": "Artist"
                }
            }
        ],
        "_AnnotationBase._get_xy_transform": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D",
                    "s": "str"
                }
            }
        ],
        "_AnnotationBase._get_xy": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D",
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "s": "str"
                }
            }
        ],
        "_AnnotationBase._get_position_xy": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "Annotation.update_positions": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "Annotation.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "Text.get_fontname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "text": "str",
                    "color": "np.ndarray",
                    "verticalalignment": "str",
                    "horizontalalignment": "str",
                    "multialignment": "int",
                    "fontproperties": "FontProperties",
                    "rotation": "float",
                    "linespacing": "float",
                    "rotation_mode": "float",
                    "usetex": "bool",
                    "wrap": "Text",
                    "kwargs": "object"
                }
            }
        ],
        "Text.set_bbox": [
            {
                "type": "method",
                "args": {
                    "rectprops": "object"
                }
            }
        ],
        "Text.update": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "Text.set_fontproperties": [
            {
                "type": "method",
                "args": {
                    "fp": "object"
                }
            }
        ],
        "Text._update_clip_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.set_clip_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Text.set_clip_path": [
            {
                "type": "method",
                "args": {
                    "path": "Union[Path, Transformation, TransformedPath]",
                    "transform": "Transform"
                }
            }
        ],
        "Text.set_usetex": [
            {
                "type": "method",
                "args": {
                    "usetex": "bool"
                }
            }
        ],
        "Text.set_fontstretch": [
            {
                "type": "method",
                "args": {
                    "stretch": "int"
                }
            }
        ],
        "Text.set_fontweight": [
            {
                "type": "method",
                "args": {
                    "weight": "int"
                }
            }
        ],
        "Text.set_fontname": [
            {
                "type": "method",
                "args": {
                    "fontname": "str"
                }
            }
        ],
        "Text.set_fontfamily": [
            {
                "type": "method",
                "args": {
                    "fontname": "str"
                }
            }
        ],
        "Text._get_dist_to_box": [
            {
                "type": "method",
                "args": {
                    "rotation": "float",
                    "x0": "float",
                    "y0": "float",
                    "figure_box": "Bbox"
                }
            }
        ],
        "OffsetFrom.set_unit": [
            {
                "type": "method",
                "args": {
                    "unit": "str"
                }
            }
        ],
        "OffsetFrom.__init__": [
            {
                "type": "method",
                "args": {
                    "artist": "Artist",
                    "ref_coord": "np.ndarray",
                    "unit": "str"
                }
            }
        ],
        "Text.set_verticalalignment": [
            {
                "type": "method",
                "args": {
                    "align": "int"
                }
            }
        ],
        "Text.set_multialignment": [
            {
                "type": "method",
                "args": {
                    "align": "int"
                }
            }
        ],
        "Text.set_horizontalalignment": [
            {
                "type": "method",
                "args": {
                    "align": "int"
                }
            }
        ],
        "Text.set_rotation_mode": [
            {
                "type": "method",
                "args": {
                    "m": "str"
                }
            }
        ],
        "Text.set_fontvariant": [
            {
                "type": "method",
                "args": {
                    "variant": "str"
                }
            }
        ],
        "Text.set_fontstyle": [
            {
                "type": "method",
                "args": {
                    "fontstyle": "str"
                }
            }
        ],
        "Text.update_from": [
            {
                "type": "method",
                "args": {
                    "other": "Artist"
                }
            }
        ],
        "Text.get_unitless_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text._get_xy_display": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text.set_fontsize": [
            {
                "type": "method",
                "args": {
                    "fontsize": "float"
                }
            }
        ],
        "Annotation.__init__": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "xy": "np.ndarray",
                    "xytext": "str",
                    "xycoords": "str",
                    "textcoords": "str",
                    "arrowprops": "dict",
                    "annotation_clip": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Text._get_rendered_text_width": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "Text.set_backgroundcolor": [
            {
                "type": "method",
                "args": {
                    "color": "str"
                }
            }
        ],
        "Text.set_clip_box": [
            {
                "type": "method",
                "args": {
                    "clipbox": "Transform"
                }
            }
        ],
        "Text.get_prop_tup": [
            {
                "type": "method",
                "args": {
                    "renderer": "artist.ArtistRenderer"
                }
            }
        ],
        "Text._get_layout": [
            {
                "type": "method",
                "args": {
                    "renderer": "artist.ArtistRenderer"
                }
            }
        ],
        "Text.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D",
                    "dpi": "float"
                }
            }
        ],
        "_get_textbox": [
            {
                "type": "func",
                "args": {
                    "text": "Text",
                    "renderer": "ArtistRenderer"
                }
            }
        ],
        "Text.update_bbox_position_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "ArtistRenderer"
                }
            }
        ],
        "_AnnotationBase._check_xy": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "_AnnotationBase._get_ref_xy": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "OffsetFrom.__call__": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Text._get_wrap_line_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Text._get_wrapped_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_wrap_text": [
            {
                "type": "func",
                "args": {
                    "textobj": "Text"
                }
            }
        ],
        "_AnnotationBase.draggable": [
            {
                "type": "method",
                "args": {
                    "state": "bool",
                    "use_blit": "bool"
                }
            }
        ]
    },
    "matplotlib.docstring": {
        "Substitution.params": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Substitution.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Substitution.__call__": [
            {
                "type": "method",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "Substitution.from_params": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Substitution]",
                    "params": "dict"
                }
            }
        ],
        "copy": [
            {
                "type": "func",
                "args": {
                    "source": "object"
                }
            }
        ],
        "interpd": [
            {
                "type": "var",
                "anno": "Substitution"
            }
        ],
        "dedent_interpd": [
            {
                "type": "func",
                "args": {
                    "func": "object"
                }
            }
        ],
        "Substitution.update": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ]
    },
    "matplotlib.container": {
        "Container.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "Container.eventson": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Container._oid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Container._propobservers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Container._remove_method": [
            {
                "type": "attr",
                "anno": "Callable[[Artist], None]"
            }
        ],
        "Container.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Container.get_label": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Container.set_label": [
            {
                "type": "attr",
                "anno": "Callable[[str], None]"
            }
        ],
        "Container.__init__": [
            {
                "type": "method",
                "args": {
                    "kl": "int",
                    "label": "str"
                }
            }
        ],
        "Container.add_callback": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Container.remove_callback": [
            {
                "type": "attr",
                "anno": "Artist.remove_callback"
            }
        ],
        "Container.pchanged": [
            {
                "type": "attr",
                "anno": "Artist"
            }
        ],
        "BarContainer.patches": [
            {
                "type": "attr",
                "anno": "patches.Patch"
            }
        ],
        "BarContainer.errorbar": [
            {
                "type": "attr",
                "anno": "ErrorbarContainer"
            }
        ],
        "BarContainer.__init__": [
            {
                "type": "method",
                "args": {
                    "patches": "patches.Patch",
                    "errorbar": "ErrorbarContainer",
                    "kwargs": "object"
                }
            }
        ],
        "ErrorbarContainer.lines": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ErrorbarContainer.has_xerr": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ErrorbarContainer.has_yerr": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ErrorbarContainer.__init__": [
            {
                "type": "method",
                "args": {
                    "lines": "list",
                    "has_xerr": "bool",
                    "has_yerr": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "StemContainer.markerline": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StemContainer.stemlines": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "StemContainer.baseline": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StemContainer.__init__": [
            {
                "type": "method",
                "args": {
                    "markerline_stemlines_baseline": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "Container.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Container.remove": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.scale": {
        "ScaleBase.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "int",
                    "kwargs": "object"
                }
            }
        ],
        "ScaleBase.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScaleBase.set_default_locators_and_formatters": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.Axes"
                }
            }
        ],
        "ScaleBase.limit_range_for_scale": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "minpos": "np.ndarray"
                }
            }
        ],
        "LinearScale.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinearScale.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "int",
                    "kwargs": "object"
                }
            }
        ],
        "FuncTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FuncTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FuncTransform._forward": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "FuncTransform._inverse": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "FuncTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "forward": "Transform",
                    "inverse": "Transform"
                }
            }
        ],
        "FuncTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "values": "np.ndarray"
                }
            }
        ],
        "FuncTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FuncScale.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FuncScale._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "FuncScale.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "int",
                    "functions": "tuple"
                }
            }
        ],
        "FuncScale.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogTransform.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LogTransform._clip": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "InvertedLogTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InvertedLogTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InvertedLogTransform.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InvertedLogTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "a": "float"
                }
            }
        ],
        "LogScale.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogScale.LogTransform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogScale.InvertedLogTransform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogScale._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "LogScale.subs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "LogScale.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogScale.limit_range_for_scale": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "minpos": "np.ndarray"
                }
            }
        ],
        "FuncScaleLog.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FuncScaleLog.subs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "FuncScaleLog._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "FuncScaleLog.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SymmetricalLogTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SymmetricalLogTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SymmetricalLogTransform.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogTransform.linthresh": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogTransform.linscale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogTransform._linscale_adj": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogTransform._log_base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "a": "np.ndarray"
                }
            }
        ],
        "InvertedSymmetricalLogTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InvertedSymmetricalLogTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InvertedSymmetricalLogTransform.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InvertedSymmetricalLogTransform.linthresh": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InvertedSymmetricalLogTransform.invlinthresh": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InvertedSymmetricalLogTransform.linscale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InvertedSymmetricalLogTransform._linscale_adj": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InvertedSymmetricalLogTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "a": "np.ndarray"
                }
            }
        ],
        "SymmetricalLogScale.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SymmetricalLogScale.SymmetricalLogTransform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SymmetricalLogScale.InvertedSymmetricalLogTransform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SymmetricalLogScale._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "SymmetricalLogScale.subs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "SymmetricalLogScale.linthresh": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogScale.linscale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogScale.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogitTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogitTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogitTransform._nonpositive": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogitTransform._clip": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LogitTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "a": "np.ndarray"
                }
            }
        ],
        "LogisticTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogisticTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogisticTransform._nonpositive": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogisticTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "a": "float"
                }
            }
        ],
        "LogitScale.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogitScale._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "LogitScale._use_overline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LogitScale._one_half": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogitScale.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogitScale.limit_range_for_scale": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "minpos": "np.ndarray"
                }
            }
        ],
        "_scale_mapping": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "get_scale_names": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LogisticTransform.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogitTransform.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InvertedLogTransform.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogTransform.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogisticTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "nonpositive": "str"
                }
            }
        ],
        "LogitTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SymmetricalLogTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float",
                    "linthresh": "float",
                    "linscale": "float"
                }
            }
        ],
        "SymmetricalLogScale.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.axis.Axis",
                    "kwargs": "object"
                }
            }
        ],
        "InvertedSymmetricalLogTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InvertedLogTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float"
                }
            }
        ],
        "LogTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinearScale.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "register_scale": [
            {
                "type": "func",
                "args": {
                    "scale_class": "ScaleBase"
                }
            }
        ],
        "FuncScaleLog.base": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogScale.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogScale.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InvertedSymmetricalLogTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float",
                    "linthresh": "float",
                    "linscale": "float"
                }
            }
        ],
        "SymmetricalLogTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float",
                    "nonpositive": "str"
                }
            }
        ],
        "FuncScaleLog.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "int",
                    "functions": "tuple",
                    "base": "float"
                }
            }
        ],
        "LogScale.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.axis.Axis",
                    "kwargs": "Any"
                }
            }
        ],
        "InvertedLogTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "scale_factory": [
            {
                "type": "func",
                "args": {
                    "scale": "str",
                    "axis": "mpl.Axes",
                    "kwargs": "str"
                }
            }
        ],
        "LogitTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "nonpositive": "str"
                }
            }
        ],
        "LogitScale.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "int",
                    "nonpositive": "str",
                    "one_half": "str",
                    "use_overline": "bool"
                }
            }
        ],
        "LogisticTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogitScale.set_default_locators_and_formatters": [
            {
                "type": "method",
                "args": {
                    "axis": "Axis"
                }
            }
        ],
        "SymmetricalLogScale.set_default_locators_and_formatters": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.Axes"
                }
            }
        ],
        "LogScale.set_default_locators_and_formatters": [
            {
                "type": "method",
                "args": {
                    "axis": "Axis"
                }
            }
        ],
        "FuncScale.set_default_locators_and_formatters": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.Axes"
                }
            }
        ],
        "LinearScale.set_default_locators_and_formatters": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.Axes"
                }
            }
        ],
        "_get_scale_docs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LogTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "a": "np.ndarray"
                }
            }
        ]
    },
    "matplotlib.ticker": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_DummyAxis.dataLim": [
            {
                "type": "attr",
                "anno": "mtransforms.Bbox"
            }
        ],
        "_DummyAxis.viewLim": [
            {
                "type": "attr",
                "anno": "mtransforms.Bbox"
            }
        ],
        "_DummyAxis._minpos": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_DummyAxis.get_minpos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DummyAxis.get_tick_space": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TickHelper.axis": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "TickHelper.set_axis": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.Axes"
                }
            }
        ],
        "Formatter.locs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Formatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "pos": "np.ndarray"
                }
            }
        ],
        "Formatter.format_data": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "Formatter.format_data_short": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "Formatter.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Formatter.set_locs": [
            {
                "type": "method",
                "args": {
                    "locs": "list"
                }
            }
        ],
        "Formatter._set_locator": [
            {
                "type": "method",
                "args": {
                    "locator": "Locator"
                }
            }
        ],
        "IndexFormatter.labels": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "IndexFormatter.n": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "IndexFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "labels": "np.ndarray"
                }
            }
        ],
        "IndexFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "NullFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "FixedFormatter.seq": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "FixedFormatter.offset_string": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FixedFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "seq": "np.ndarray"
                }
            }
        ],
        "FixedFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "pos": "int"
                }
            }
        ],
        "FixedFormatter.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FixedFormatter.set_offset_string": [
            {
                "type": "method",
                "args": {
                    "ofs": "str"
                }
            }
        ],
        "FuncFormatter.func": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "FuncFormatter.offset_string": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FuncFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "FuncFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "pos": "int"
                }
            }
        ],
        "FuncFormatter.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FuncFormatter.set_offset_string": [
            {
                "type": "method",
                "args": {
                    "ofs": "str"
                }
            }
        ],
        "FormatStrFormatter.fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatStrFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "fmt": "str"
                }
            }
        ],
        "FormatStrFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "StrMethodFormatter.fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StrMethodFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "fmt": "str"
                }
            }
        ],
        "ScalarFormatter._offset_threshold": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScalarFormatter._usetex": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScalarFormatter.orderOfMagnitude": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScalarFormatter.format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StrMethodFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "ScalarFormatter._scientific": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScalarFormatter._powerlimits": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ScalarFormatter._useLocale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScalarFormatter.offset": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScalarFormatter._useOffset": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScalarFormatter.set_useOffset": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "ScalarFormatter.get_useOffset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarFormatter.useOffset": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "ScalarFormatter.get_useLocale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarFormatter._useMathText": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScalarFormatter.get_useMathText": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarFormatter.set_scientific": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "ScalarFormatter.set_powerlimits": [
            {
                "type": "method",
                "args": {
                    "lims": "tuple"
                }
            }
        ],
        "ScalarFormatter.locs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ScalarFormatter._formatSciNotation": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "LogFormatter._base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LogFormatter.labelOnlyBase": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LogFormatter.minor_thresholds": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LogFormatter._sublabels": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LogFormatter._linthresh": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LogFormatter.base": [
            {
                "type": "method",
                "args": {
                    "base": "float"
                }
            }
        ],
        "LogFormatter.label_minor": [
            {
                "type": "method",
                "args": {
                    "labelOnlyBase": "bool"
                }
            }
        ],
        "LogFormatter.format_data_short": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "LogFormatter._pprint_val": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "d": "float"
                }
            }
        ],
        "LogFormatter._num_to_string": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LogFormatterExponent._num_to_string": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LogFormatterMathtext._non_decade_format": [
            {
                "type": "method",
                "args": {
                    "sign_string": "str",
                    "base": "str",
                    "fx": "float",
                    "usetex": "int"
                }
            }
        ],
        "LogitFormatter._use_overline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LogitFormatter._one_half": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogitFormatter._minor": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LogitFormatter._labelled": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "LogitFormatter._minor_threshold": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogitFormatter._minor_number": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogitFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "use_overline": "bool",
                    "one_half": "str",
                    "minor": "bool",
                    "minor_threshold": "int",
                    "minor_number": "int"
                }
            }
        ],
        "LogitFormatter.use_overline": [
            {
                "type": "method",
                "args": {
                    "use_overline": "bool"
                }
            }
        ],
        "LogitFormatter.set_one_half": [
            {
                "type": "method",
                "args": {
                    "one_half": "str"
                }
            }
        ],
        "LogitFormatter.set_minor_threshold": [
            {
                "type": "method",
                "args": {
                    "minor_threshold": "int"
                }
            }
        ],
        "LogitFormatter.set_minor_number": [
            {
                "type": "method",
                "args": {
                    "minor_number": "int"
                }
            }
        ],
        "LogitFormatter.locs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "LogitFormatter._one_minus": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "LogitFormatter.format_data_short": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "EngFormatter.ENG_PREFIXES": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "EngFormatter.unit": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "EngFormatter.places": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "EngFormatter.sep": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "EngFormatter._usetex": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "EngFormatter.get_usetex": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EngFormatter._useMathText": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "EngFormatter.get_useMathText": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EngFormatter.format_eng": [
            {
                "type": "method",
                "args": {
                    "num": "float"
                }
            }
        ],
        "PercentFormatter.xmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PercentFormatter.decimals": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PercentFormatter._symbol": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PercentFormatter._is_latex": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PercentFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "xmax": "float",
                    "decimals": "int",
                    "symbol": "str",
                    "is_latex": "bool"
                }
            }
        ],
        "PercentFormatter.convert_to_pct": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "PercentFormatter.symbol": [
            {
                "type": "method",
                "args": {
                    "symbol": "str"
                }
            }
        ],
        "PercentFormatter.format_pct": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "display_range": "float"
                }
            }
        ],
        "Locator.MAXTICKS": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Locator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "Locator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Locator.raise_if_exceeds": [
            {
                "type": "method",
                "args": {
                    "locs": "np.ndarray"
                }
            }
        ],
        "Locator.refresh": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IndexLocator._base": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "IndexLocator.offset": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "IndexLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "int",
                    "offset": "int"
                }
            }
        ],
        "IndexLocator.set_params": [
            {
                "type": "method",
                "args": {
                    "base": "int",
                    "offset": "int"
                }
            }
        ],
        "IndexLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "FixedLocator.locs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "FixedLocator.nbins": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FixedLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "locs": "np.ndarray",
                    "nbins": "int"
                }
            }
        ],
        "FixedLocator.set_params": [
            {
                "type": "method",
                "args": {
                    "nbins": "int"
                }
            }
        ],
        "NullLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "NullLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinearLocator.presets": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LinearLocator._numticks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LinearLocator.numticks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LinearLocator.set_params": [
            {
                "type": "method",
                "args": {
                    "numticks": "int",
                    "presets": "dict"
                }
            }
        ],
        "LinearLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "numticks": "int",
                    "presets": "dict"
                }
            }
        ],
        "MultipleLocator._edge": [
            {
                "type": "attr",
                "anno": "_Edge_integer"
            }
        ],
        "scale_range": [
            {
                "type": "func",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "n": "int",
                    "threshold": "int"
                }
            }
        ],
        "_Edge_integer.step": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_Edge_integer._offset": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_Edge_integer.__init__": [
            {
                "type": "method",
                "args": {
                    "step": "int",
                    "offset": "int"
                }
            }
        ],
        "MultipleLocator.set_params": [
            {
                "type": "method",
                "args": {
                    "base": "int"
                }
            }
        ],
        "MultipleLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float"
                }
            }
        ],
        "_Edge_integer.closeto": [
            {
                "type": "method",
                "args": {
                    "ms": "float",
                    "edge": "float"
                }
            }
        ],
        "_Edge_integer.le": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "_Edge_integer.ge": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "MaxNLocator.default_params": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MaxNLocator._validate_steps": [
            {
                "type": "method",
                "args": {
                    "steps": "np.ndarray"
                }
            }
        ],
        "MaxNLocator._staircase": [
            {
                "type": "method",
                "args": {
                    "steps": "np.ndarray"
                }
            }
        ],
        "MaxNLocator._nbins": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MaxNLocator._symmetric": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MaxNLocator._prune": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MaxNLocator._min_n_ticks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MaxNLocator._steps": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "MaxNLocator._extended_steps": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "MaxNLocator._integer": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_decade_greater_equal": [
            {
                "type": "func",
                "args": {
                    "x": "int",
                    "base": "int"
                }
            }
        ],
        "_decade_less_equal": [
            {
                "type": "func",
                "args": {
                    "x": "int",
                    "base": "int"
                }
            }
        ],
        "_decade_greater": [
            {
                "type": "func",
                "args": {
                    "x": "int",
                    "base": "int"
                }
            }
        ],
        "_decade_less": [
            {
                "type": "func",
                "args": {
                    "x": "int",
                    "base": "int"
                }
            }
        ],
        "is_close_to_int": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "atol": "float"
                }
            }
        ],
        "is_decade": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "base": "float",
                    "rtol": "float"
                }
            }
        ],
        "LogitFormatter._format_value": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "locs": "np.ndarray",
                    "sci_notation": "bool"
                }
            }
        ],
        "LogitFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "LogFormatterSciNotation._non_decade_format": [
            {
                "type": "method",
                "args": {
                    "sign_string": "str",
                    "base": "float",
                    "fx": "float",
                    "usetex": "float"
                }
            }
        ],
        "LogLocator.numdecs": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogLocator.numticks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LogLocator._base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LogLocator.base": [
            {
                "type": "method",
                "args": {
                    "base": "float"
                }
            }
        ],
        "LogLocator._subs": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SymmetricalLogLocator._base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogLocator._linthresh": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SymmetricalLogLocator._subs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "SymmetricalLogLocator.numticks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SymmetricalLogLocator.set_params": [
            {
                "type": "method",
                "args": {
                    "subs": "np.ndarray",
                    "numticks": "int"
                }
            }
        ],
        "LogitLocator._minor": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AutoMinorLocator.ndivs": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AutoMinorLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "n": "int"
                }
            }
        ],
        "AutoMinorLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "OldAutoLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "OldAutoLocator.get_locator": [
            {
                "type": "method",
                "args": {
                    "d": "float"
                }
            }
        ],
        "_if_refresh_overridden_call_and_emit_deprec": [
            {
                "type": "func",
                "args": {
                    "locator": "Locator"
                }
            }
        ],
        "FixedLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "FixedLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinearLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "Locator.view_limits": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "Locator.nonsingular": [
            {
                "type": "method",
                "args": {
                    "v0": "float",
                    "v1": "float"
                }
            }
        ],
        "Formatter.format_ticks": [
            {
                "type": "method",
                "args": {
                    "values": "list"
                }
            }
        ],
        "SymmetricalLogLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "transform": "mtransforms.Transform",
                    "subs": "np.ndarray",
                    "linthresh": "float",
                    "base": "float"
                }
            }
        ],
        "SymmetricalLogLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LogitFormatter.set_locs": [
            {
                "type": "method",
                "args": {
                    "locs": "np.ndarray"
                }
            }
        ],
        "MultipleLocator.view_limits": [
            {
                "type": "method",
                "args": {
                    "dmin": "float",
                    "dmax": "float"
                }
            }
        ],
        "OldAutoLocator.view_limits": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "MaxNLocator._raw_ticks": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "MaxNLocator.view_limits": [
            {
                "type": "method",
                "args": {
                    "dmin": "float",
                    "dmax": "float"
                }
            }
        ],
        "SymmetricalLogLocator.view_limits": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LinearLocator.view_limits": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "EngFormatter.set_useMathText": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "EngFormatter.useMathText": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "EngFormatter.set_usetex": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "EngFormatter.usetex": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "EngFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "unit": "str",
                    "places": "int",
                    "sep": "str",
                    "usetex": "bool",
                    "useMathText": "bool"
                }
            }
        ],
        "LogFormatterMathtext.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "LogFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float",
                    "labelOnlyBase": "bool",
                    "minor_thresholds": "tuple",
                    "linthresh": "float"
                }
            }
        ],
        "ScalarFormatter.set_useMathText": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "ScalarFormatter.useMathText": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "ScalarFormatter.set_useLocale": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "ScalarFormatter.useLocale": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "ScalarFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "useOffset": "bool",
                    "useMathText": "bool",
                    "useLocale": "bool"
                }
            }
        ],
        "Formatter.fix_minus": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "EngFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "ScalarFormatter.format_data": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "ScalarFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "np.ndarray"
                }
            }
        ],
        "LogitLocator.nonsingular": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LogLocator.nonsingular": [
            {
                "type": "method",
                "args": {
                    "vmin": "np.ndarray",
                    "vmax": "np.ndarray"
                }
            }
        ],
        "Locator.set_params": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "_DummyAxis.set_data_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "TickHelper.set_data_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "_DummyAxis.get_data_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IndexLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DummyAxis.set_view_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "TickHelper.set_view_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "TickHelper.set_bounds": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "_DummyAxis.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_DummyAxis.__init__": [
            {
                "type": "method",
                "args": {
                    "minpos": "int"
                }
            }
        ],
        "TickHelper.create_dummy_axis": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "LogLocator.subs": [
            {
                "type": "method",
                "args": {
                    "subs": "np.ndarray"
                }
            }
        ],
        "LogLocator.set_params": [
            {
                "type": "method",
                "args": {
                    "base": "float",
                    "subs": "np.ndarray",
                    "numdecs": "int",
                    "numticks": "int"
                }
            }
        ],
        "LogLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float",
                    "subs": "np.ndarray",
                    "numdecs": "int",
                    "numticks": "int"
                }
            }
        ],
        "MaxNLocator.set_params": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "LogitLocator.set_params": [
            {
                "type": "method",
                "args": {
                    "minor": "bool",
                    "kwargs": "str"
                }
            }
        ],
        "LogitLocator.minor": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "MaxNLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "str"
                }
            }
        ],
        "AutoLocator.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogitLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "minor": "bool",
                    "nbins": "int"
                }
            }
        ],
        "OldAutoLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AutoMinorLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SymmetricalLogLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinearLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Locator.zoom": [
            {
                "type": "method",
                "args": {
                    "direction": "float"
                }
            }
        ],
        "Locator.pan": [
            {
                "type": "method",
                "args": {
                    "numsteps": "int"
                }
            }
        ],
        "Locator.autoscale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PercentFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "LogFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "LogFormatter.format_data": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "ScalarFormatter._set_format": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarFormatter._set_order_of_magnitude": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarFormatter._compute_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScalarFormatter.set_locs": [
            {
                "type": "method",
                "args": {
                    "locs": "np.ndarray"
                }
            }
        ],
        "OldScalarFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "int"
                }
            }
        ],
        "LogLocator.view_limits": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "ScalarFormatter.format_data_short": [
            {
                "type": "method",
                "args": {
                    "value": "np.ndarray"
                }
            }
        ],
        "ScalarFormatter.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MaxNLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LogitLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "MaxNLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogFormatter.set_locs": [
            {
                "type": "method",
                "args": {
                    "locs": "np.ndarray"
                }
            }
        ],
        "MultipleLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LogLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "LogLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultipleLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_text": {
        "test_get_rotation_mod360": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_rotation_none": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_rotation_raises": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_rotation_int": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_rotation_float": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_rotation_string": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text_size_binding": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "needs_usetex": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "test_afm_kerning": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wrap_no_wrap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_long_word_wrap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wrap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_usetex_is_copied": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hinting_factor_backends": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_buffer_size": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_annotation_units": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_antialiasing": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_large_subscript_title": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_annotation_update": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_single_artist_usetex": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nonfinite_pos": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_font_scaling": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_agg_text_clip": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text_stale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_annotation_negative_fig_coords": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_annotation_negative_ax_coords": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_null_rotation_with_rotation_mode": [
            {
                "type": "func",
                "args": {
                    "ha": "str",
                    "va": "str"
                }
            }
        ],
        "test_non_default_dpi": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "test_set_position": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_annotation_contains": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_multiline2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fontproperties_kwarg_precedence": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text_as_text_opacity": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text_as_path_opacity": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_two_2line_texts": [
            {
                "type": "func",
                "args": {
                    "spacing1": "float",
                    "spacing2": "float"
                }
            }
        ],
        "test_bbox_clipping": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text_repr": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes_titles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_alignment": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_titles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_multiline": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_font_styles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contains": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.widgets": {
        "LockDraw._owner": [
            {
                "type": "attr",
                "anno": "plt.widgets.LockDraw"
            }
        ],
        "LockDraw.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LockDraw.isowner": [
            {
                "type": "method",
                "args": {
                    "o": "plt.widgets.LockDraw"
                }
            }
        ],
        "LockDraw.locked": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LockDraw.available": [
            {
                "type": "method",
                "args": {
                    "o": "plt.widgets.LockDraw"
                }
            }
        ],
        "LockDraw.release": [
            {
                "type": "method",
                "args": {
                    "o": "plt.widgets.LockDraw"
                }
            }
        ],
        "LockDraw.__call__": [
            {
                "type": "method",
                "args": {
                    "o": "plt.widgets.LockDraw"
                }
            }
        ],
        "Widget.drawon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Widget.eventson": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Widget._active": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Widget.set_active": [
            {
                "type": "method",
                "args": {
                    "active": "bool"
                }
            }
        ],
        "Widget.get_active": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.active": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "Widget.ignore": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "AxesWidget.ax": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "AxesWidget.canvas": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "AxesWidget.cids": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Button.label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Button.cnt": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Button.observers": [
            {
                "type": "attr",
                "anno": "dict[str, mpl.Observer]"
            }
        ],
        "Button.color": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Button.hovercolor": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Button.on_clicked": [
            {
                "type": "method",
                "args": {
                    "func": "Callable[[], None]"
                }
            }
        ],
        "Button.disconnect": [
            {
                "type": "method",
                "args": {
                    "cid": "str"
                }
            }
        ],
        "Slider.orientation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Slider.closedmin": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Slider.closedmax": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Slider.slidermin": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "Slider.slidermax": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Slider.drag_active": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Slider.valmin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Slider.valmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Slider.valstep": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Slider.val": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Slider.valinit": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Slider.poly": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "Slider.hline": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "Slider.vline": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "Slider.valfmt": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Slider._fmt": [
            {
                "type": "attr",
                "anno": "ticker.Formatter"
            }
        ],
        "Slider.label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Slider.valtext": [
            {
                "type": "attr",
                "anno": "mpl.Text"
            }
        ],
        "Slider.cnt": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Slider.observers": [
            {
                "type": "attr",
                "anno": "dict[str, mpl.Observer]"
            }
        ],
        "Slider._value_in_bounds": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "Slider.on_changed": [
            {
                "type": "method",
                "args": {
                    "func": "Callable[[mpl.slider.SliderEvent], mpl.slider.SliderEvent]"
                }
            }
        ],
        "Slider.disconnect": [
            {
                "type": "method",
                "args": {
                    "cid": "str"
                }
            }
        ],
        "CheckButtons.labels": [
            {
                "type": "attr",
                "anno": "list[TextBox]"
            }
        ],
        "CheckButtons.lines": [
            {
                "type": "attr",
                "anno": "list[tuple[Line2D, Line2D]]"
            }
        ],
        "CheckButtons.rectangles": [
            {
                "type": "attr",
                "anno": "list[Rectangle]"
            }
        ],
        "CheckButtons.cnt": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CheckButtons.observers": [
            {
                "type": "attr",
                "anno": "dict[str, mpl.Observer]"
            }
        ],
        "CheckButtons.get_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CheckButtons.on_clicked": [
            {
                "type": "method",
                "args": {
                    "func": "mpl.Observer"
                }
            }
        ],
        "CheckButtons.disconnect": [
            {
                "type": "method",
                "args": {
                    "cid": "str"
                }
            }
        ],
        "TextBox.DIST_FROM_LEFT": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TextBox.label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TextBox.text_disp": [
            {
                "type": "attr",
                "anno": "Text"
            }
        ],
        "TextBox.cnt": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TextBox.change_observers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TextBox.submit_observers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TextBox.cursor_index": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TextBox.cursor": [
            {
                "type": "attr",
                "anno": "MultiCursor"
            }
        ],
        "TextBox.color": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TextBox.hovercolor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TextBox.capturekeystrokes": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextBox._on_stop_typing": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "TextBox.on_text_change": [
            {
                "type": "method",
                "args": {
                    "func": "plt.widgets.TextChange"
                }
            }
        ],
        "TextBox.on_submit": [
            {
                "type": "method",
                "args": {
                    "func": "Callable[[TextBox], int]"
                }
            }
        ],
        "TextBox.disconnect": [
            {
                "type": "method",
                "args": {
                    "cid": "str"
                }
            }
        ],
        "RadioButtons.activecolor": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RadioButtons.value_selected": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RadioButtons.labels": [
            {
                "type": "attr",
                "anno": "list[TextBox]"
            }
        ],
        "RadioButtons.circles": [
            {
                "type": "attr",
                "anno": "list[Circle]"
            }
        ],
        "RadioButtons.cnt": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RadioButtons.observers": [
            {
                "type": "attr",
                "anno": "dict[int, mpl.Observer]"
            }
        ],
        "RadioButtons.on_clicked": [
            {
                "type": "method",
                "args": {
                    "func": "mpl.Axes"
                }
            }
        ],
        "RadioButtons.disconnect": [
            {
                "type": "method",
                "args": {
                    "cid": "int"
                }
            }
        ],
        "SubplotTool.targetfig": [
            {
                "type": "attr",
                "anno": "mpl.Figure"
            }
        ],
        "SubplotTool._sliders": [
            {
                "type": "attr",
                "anno": "list[Slider]"
            }
        ],
        "SubplotTool.buttonreset": [
            {
                "type": "attr",
                "anno": "Button"
            }
        ],
        "Cursor.visible": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Cursor.horizOn": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Cursor.vertOn": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Cursor.useblit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Cursor.lineh": [
            {
                "type": "attr",
                "anno": "Line2D"
            }
        ],
        "Cursor.linev": [
            {
                "type": "attr",
                "anno": "Line2D"
            }
        ],
        "Cursor.background": [
            {
                "type": "attr",
                "anno": "plt.Region"
            }
        ],
        "Cursor.needclear": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MultiCursor.canvas": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "MultiCursor.axes": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "MultiCursor.horizOn": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MultiCursor.vertOn": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MultiCursor.visible": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MultiCursor.useblit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MultiCursor.background": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "MultiCursor.needclear": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MultiCursor.vlines": [
            {
                "type": "attr",
                "anno": "list[mpl.Axes]"
            }
        ],
        "MultiCursor.hlines": [
            {
                "type": "attr",
                "anno": "list[mpl.Axes]"
            }
        ],
        "MultiCursor._cidmotion": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "MultiCursor._ciddraw": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "_SelectorWidget.visible": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_SelectorWidget.onselect": [
            {
                "type": "attr",
                "anno": "Callable[[float, float], None]"
            }
        ],
        "_SelectorWidget.useblit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_SelectorWidget.state_modifier_keys": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_SelectorWidget.background": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "_SelectorWidget.artists": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_SelectorWidget.validButtons": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_SelectorWidget.eventpress": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "_SelectorWidget.eventrelease": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "_SelectorWidget._prev_event": [
            {
                "type": "attr",
                "anno": "cbook.Event"
            }
        ],
        "_SelectorWidget.state": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "_SelectorWidget._press": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "_SelectorWidget._release": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "_SelectorWidget._onmove": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "_SelectorWidget._on_scroll": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "_SelectorWidget._on_key_press": [
            {
                "type": "method",
                "args": {
                    "event": "plt.event.KeyPress"
                }
            }
        ],
        "_SelectorWidget._on_key_release": [
            {
                "type": "method",
                "args": {
                    "event": "plt.event.KeyRelease"
                }
            }
        ],
        "SpanSelector.direction": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SpanSelector.rect": [
            {
                "type": "attr",
                "anno": "Rectangle"
            }
        ],
        "SpanSelector.pressv": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SpanSelector.rectprops": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SpanSelector.onmove_callback": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "SpanSelector.minspan": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SpanSelector.span_stays": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SpanSelector.prev": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SpanSelector.canvas": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "SpanSelector.ax": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "SpanSelector.stay_rect": [
            {
                "type": "attr",
                "anno": "Rectangle"
            }
        ],
        "SpanSelector.artists": [
            {
                "type": "attr",
                "anno": "list[Rectangle]"
            }
        ],
        "ToolHandles.ax": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "ToolHandles._markers": [
            {
                "type": "attr",
                "anno": "Line2D"
            }
        ],
        "ToolHandles.artist": [
            {
                "type": "attr",
                "anno": "AxesWidget"
            }
        ],
        "ToolHandles.set_animated": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "RectangleSelector._shape_klass": [
            {
                "type": "attr",
                "anno": "type[Rectangle]"
            }
        ],
        "RectangleSelector.to_draw": [
            {
                "type": "attr",
                "anno": "Rectangle"
            }
        ],
        "RectangleSelector.visible": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RectangleSelector.interactive": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RectangleSelector.rectprops": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "RectangleSelector.lineprops": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "RectangleSelector.minspanx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RectangleSelector.minspany": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RectangleSelector.spancoords": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RectangleSelector.drawtype": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RectangleSelector.maxdist": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RectangleSelector._corner_order": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "RectangleSelector._corner_handles": [
            {
                "type": "attr",
                "anno": "ToolHandles"
            }
        ],
        "RectangleSelector._edge_order": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "RectangleSelector._edge_handles": [
            {
                "type": "attr",
                "anno": "ToolHandles"
            }
        ],
        "RectangleSelector._center_handle": [
            {
                "type": "attr",
                "anno": "ToolHandles"
            }
        ],
        "RectangleSelector.active_handle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RectangleSelector.artists": [
            {
                "type": "attr",
                "anno": "list[Rectangle]"
            }
        ],
        "RectangleSelector._extents_on_press": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "EllipseSelector._shape_klass": [
            {
                "type": "attr",
                "anno": "type[Shape]"
            }
        ],
        "LassoSelector.verts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LassoSelector.line": [
            {
                "type": "attr",
                "anno": "Line2D"
            }
        ],
        "LassoSelector.artists": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PolygonSelector._polygon_completed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PolygonSelector.line": [
            {
                "type": "attr",
                "anno": "Line2D"
            }
        ],
        "PolygonSelector._polygon_handles": [
            {
                "type": "attr",
                "anno": "ToolHandles"
            }
        ],
        "PolygonSelector._active_handle_idx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PolygonSelector.vertex_select_radius": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PolygonSelector.artists": [
            {
                "type": "attr",
                "anno": "list[AxesWidget]"
            }
        ],
        "PolygonSelector.verts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Lasso.useblit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Lasso.background": [
            {
                "type": "attr",
                "anno": "mpl.Region"
            }
        ],
        "Lasso.verts": [
            {
                "type": "attr",
                "anno": "list[tuple[np.ndarray, np.ndarray]]"
            }
        ],
        "Lasso.line": [
            {
                "type": "attr",
                "anno": "Line2D"
            }
        ],
        "Lasso.callback": [
            {
                "type": "attr",
                "anno": "Callable[[list], None]"
            }
        ],
        "MultiCursor.disconnect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesWidget.disconnect_events": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextBox._release": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "CheckButtons.set_active": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "MultiCursor._update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultiCursor.onmove": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "MultiCursor.connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_SelectorWidget.update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_SelectorWidget.update_background": [
            {
                "type": "method",
                "args": {
                    "event": "plt.Event"
                }
            }
        ],
        "_SelectorWidget.set_active": [
            {
                "type": "method",
                "args": {
                    "active": "bool"
                }
            }
        ],
        "Cursor.clear": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "_SelectorWidget.ignore": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "SpanSelector.ignore": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "_SelectorWidget.on_scroll": [
            {
                "type": "method",
                "args": {
                    "event": "plt.Event"
                }
            }
        ],
        "Button._release": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "Button._click": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "ToolHandles.set_data": [
            {
                "type": "method",
                "args": {
                    "pts": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "PolygonSelector._draw_polygon": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolygonSelector._on_key_press": [
            {
                "type": "method",
                "args": {
                    "event": "plt.widgets.KeyPressEvent"
                }
            }
        ],
        "RectangleSelector.extents": [
            {
                "type": "method",
                "args": {
                    "extents": "np.ndarray"
                }
            }
        ],
        "_SelectorWidget.set_visible": [
            {
                "type": "method",
                "args": {
                    "visible": "bool"
                }
            }
        ],
        "ToolHandles.set_visible": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "MultiCursor.clear": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "TextBox.params_to_disable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextBox.text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_SelectorWidget._get_data": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "LassoSelector._onmove": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.axis.LocationEvent"
                }
            }
        ],
        "LassoSelector._release": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.axis.LocationEvent"
                }
            }
        ],
        "LassoSelector._press": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.axis.LocationEvent"
                }
            }
        ],
        "SpanSelector._set_span_xy": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.axis.LocationEvent"
                }
            }
        ],
        "SpanSelector._onmove": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.axis.LocationEvent"
                }
            }
        ],
        "_SelectorWidget._clean_event": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "_SelectorWidget.onmove": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "RectangleSelector.draw_shape": [
            {
                "type": "method",
                "args": {
                    "extents": "np.ndarray"
                }
            }
        ],
        "_SelectorWidget.on_key_release": [
            {
                "type": "method",
                "args": {
                    "event": "plt.event.KeyRelease"
                }
            }
        ],
        "_SelectorWidget.release": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "LassoSelector.onrelease": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "ToolHandles.y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RectangleSelector._rect_bbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RectangleSelector.center": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EllipseSelector._rect_bbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EllipseSelector.draw_shape": [
            {
                "type": "method",
                "args": {
                    "extents": "tuple"
                }
            }
        ],
        "RectangleSelector.edge_centers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RectangleSelector.corners": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolHandles.x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolHandles.closest": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "SubplotTool.axhspace": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "SubplotTool.axwspace": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "SubplotTool.axtop": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "SubplotTool.axbottom": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "SubplotTool.axright": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "SubplotTool.axleft": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "Slider._format": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "Lasso.onrelease": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "AxesWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes"
                }
            }
        ],
        "_SelectorWidget.on_key_press": [
            {
                "type": "method",
                "args": {
                    "event": "plt.event.KeyPress"
                }
            }
        ],
        "_SelectorWidget.press": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "LassoSelector.onpress": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "TextBox._notify_change_observers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextBox._notify_submit_observers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RectangleSelector.geometry": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RectangleSelector._set_active_handle": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "RectangleSelector._onmove": [
            {
                "type": "method",
                "args": {
                    "event": "plt.Event"
                }
            }
        ],
        "RectangleSelector._release": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "RectangleSelector._press": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "PolygonSelector._onmove": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "PolygonSelector.onmove": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "SpanSelector._release": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.axis.LocationEvent"
                }
            }
        ],
        "Lasso.onmove": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "Slider.set_val": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "Slider.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slider._update": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "CheckButtons._clicked": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "TextBox.begin_typing": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "AxesWidget.connect_event": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget",
                    "callback": "mpl.Observer"
                }
            }
        ],
        "_SelectorWidget.connect_default_events": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpanSelector.new_axes": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes"
                }
            }
        ],
        "_SelectorWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "onselect": "Callable[[float, float], None]",
                    "useblit": "bool",
                    "button": "int",
                    "state_modifier_keys": "dict"
                }
            }
        ],
        "SpanSelector.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "onselect": "Callable[[float, float], None]",
                    "direction": "str",
                    "minspan": "float",
                    "useblit": "bool",
                    "rectprops": "dict",
                    "onmove_callback": "None",
                    "span_stays": "bool",
                    "button": "int"
                }
            }
        ],
        "Cursor._update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpanSelector._press": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.axis.LocationEvent"
                }
            }
        ],
        "Cursor.onmove": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "SubplotTool.funchspace": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "SubplotTool.funcwspace": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "SubplotTool.functop": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "SubplotTool.funcbottom": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "SubplotTool.funcright": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "SubplotTool.funcleft": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "SubplotTool._on_reset": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.slider.SliderEvent"
                }
            }
        ],
        "SubplotTool._on_slider_changed": [
            {
                "type": "method",
                "args": {
                    "_": "mpl.slider.SliderEvent"
                }
            }
        ],
        "RadioButtons.set_active": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "RadioButtons._clicked": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "RadioButtons.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "labels": "tuple[TextBox, ...]",
                    "active": "int",
                    "activecolor": "str"
                }
            }
        ],
        "TextBox._motion": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "TextBox.stop_typing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextBox._resize": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "TextBox._rendercursor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextBox.position_cursor": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "TextBox._click": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "TextBox.set_val": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "TextBox._keypress": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "TextBox.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "label": "str",
                    "initial": "str",
                    "color": "float",
                    "hovercolor": "float",
                    "label_pad": "float"
                }
            }
        ],
        "MultiCursor.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "mpl.Axes",
                    "axes": "mpl.Axes",
                    "useblit": "bool",
                    "horizOn": "bool",
                    "vertOn": "bool",
                    "lineprops": "object"
                }
            }
        ],
        "Cursor.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "horizOn": "bool",
                    "vertOn": "bool",
                    "useblit": "bool",
                    "lineprops": "object"
                }
            }
        ],
        "Slider.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "label": "str",
                    "valmin": "float",
                    "valmax": "float",
                    "valinit": "float",
                    "valfmt": "str | None",
                    "closedmin": "bool",
                    "closedmax": "bool",
                    "slidermin": "int | None",
                    "slidermax": "int | None",
                    "dragging": "bool",
                    "valstep": "float",
                    "orientation": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Lasso.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "xy": "tuple[np.ndarray, np.ndarray]",
                    "callback": "Callable[[], None]",
                    "useblit": "bool"
                }
            }
        ],
        "LassoSelector.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "onselect": "Callable[[float, float], None]",
                    "useblit": "bool",
                    "lineprops": "dict",
                    "button": "int"
                }
            }
        ],
        "ToolHandles.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "marker": "str",
                    "marker_props": "dict",
                    "useblit": "bool"
                }
            }
        ],
        "PolygonSelector.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "onselect": "Callable[[float, float], None]",
                    "useblit": "bool",
                    "lineprops": "dict",
                    "markerprops": "dict",
                    "vertex_select_radius": "int"
                }
            }
        ],
        "PolygonSelector._on_key_release": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "PolygonSelector._release": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "PolygonSelector._press": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "RectangleSelector.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "onselect": "Callable[[float, float], None]",
                    "drawtype": "str",
                    "minspanx": "float",
                    "minspany": "float",
                    "useblit": "bool",
                    "lineprops": "dict[str, str]",
                    "rectprops": "dict",
                    "spancoords": "str",
                    "button": "int",
                    "maxdist": "int",
                    "marker_props": "dict",
                    "interactive": "bool",
                    "state_modifier_keys": "dict"
                }
            }
        ],
        "CheckButtons.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "labels": "tuple[TextBox, ...]",
                    "actives": "list[bool]"
                }
            }
        ],
        "Button._motion": [
            {
                "type": "method",
                "args": {
                    "event": "AxesWidget"
                }
            }
        ],
        "Button.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "label": "str",
                    "image": "np.ndarray",
                    "color": "str",
                    "hovercolor": "str"
                }
            }
        ],
        "SubplotTool.__init__": [
            {
                "type": "method",
                "args": {
                    "targetfig": "mpl.Figure",
                    "toolfig": "mpl.Figure"
                }
            }
        ]
    },
    "matplotlib._animation_data": {
        "JS_INCLUDE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "STYLE_INCLUDE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DISPLAY_TEMPLATE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "INCLUDED_FRAMES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "matplotlib.sphinxext.plot_directive": {
        "align": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_option_boolean": [
            {
                "type": "func",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "_option_context": [
            {
                "type": "func",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "_option_format": [
            {
                "type": "func",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "_option_align": [
            {
                "type": "func",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "PlotDirective.has_content": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PlotDirective.required_arguments": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlotDirective.optional_arguments": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlotDirective.final_argument_whitespace": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PlotDirective.option_spec": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "contains_doctest": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "TEMPLATE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "exception_template": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "plot_context": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ImageFile.basename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageFile.dirname": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageFile.formats": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ImageFile.__init__": [
            {
                "type": "method",
                "args": {
                    "basename": "str",
                    "dirname": "str"
                }
            }
        ],
        "ImageFile.filename": [
            {
                "type": "method",
                "args": {
                    "format": "str"
                }
            }
        ],
        "out_of_date": [
            {
                "type": "func",
                "args": {
                    "original": "str",
                    "derived": "str"
                }
            }
        ],
        "ImageFile.filenames": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "unescape_doctest": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "get_plot_formats": [
            {
                "type": "func",
                "args": {
                    "config": "matplotlib.config.Config"
                }
            }
        ],
        "split_code_at_show": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "clear_state": [
            {
                "type": "func",
                "args": {
                    "plot_rcparams": "dict",
                    "close": "bool"
                }
            }
        ],
        "mark_plot_labels": [
            {
                "type": "func",
                "args": {
                    "app": "matplotlib.Application",
                    "document": "matplotlib.Document"
                }
            }
        ],
        "setup": [
            {
                "type": "func",
                "args": {
                    "app": "matplotlib.Application"
                }
            }
        ],
        "run_code": [
            {
                "type": "func",
                "args": {
                    "code": "str",
                    "code_path": "str",
                    "ns": "dict",
                    "function_name": "str"
                }
            }
        ],
        "render_figures": [
            {
                "type": "func",
                "args": {
                    "code": "str",
                    "code_path": "str",
                    "output_dir": "str",
                    "output_base": "str",
                    "context": "bool",
                    "function_name": "str",
                    "config": "matplotlib.config.Config",
                    "context_reset": "bool",
                    "close_figs": "bool"
                }
            }
        ],
        "run": [
            {
                "type": "func",
                "args": {
                    "arguments": "tuple",
                    "content": "list",
                    "options": "dict",
                    "state_machine": "matplotlib.StateMachine",
                    "state": "matplotlib.State",
                    "lineno": "int"
                }
            }
        ],
        "PlotDirective.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.sphinxext.mathmpl": {
        "MathDirective.has_content": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MathDirective.required_arguments": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MathDirective.optional_arguments": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MathDirective.final_argument_whitespace": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "fontset_choice": [
            {
                "type": "func",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "MathDirective.option_spec": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "mathtext_parser": [
            {
                "type": "var",
                "anno": "MathTextParser"
            }
        ],
        "math_role": [
            {
                "type": "func",
                "args": {
                    "role": "str",
                    "rawtext": "str",
                    "text": "str",
                    "lineno": "int",
                    "inliner": "int",
                    "options": "dict",
                    "content": "list"
                }
            }
        ],
        "MathDirective.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "latex2png": [
            {
                "type": "func",
                "args": {
                    "latex": "str",
                    "filename": "str",
                    "fontset": "str"
                }
            }
        ],
        "latex2html": [
            {
                "type": "func",
                "args": {
                    "node": "nodes.Element",
                    "source": "str"
                }
            }
        ],
        "setup": [
            {
                "type": "func",
                "args": {
                    "app": "sphinx.Application"
                }
            }
        ]
    },
    "matplotlib.image": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_interpd_": [
            {
                "type": "var",
                "anno": "dict[str, _image.Interpolation]"
            }
        ],
        "interpolations_names": [
            {
                "type": "var",
                "anno": "set[str]"
            }
        ],
        "_ImageBase.zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_ImageBase.origin": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.ImageOrigin"
            }
        ],
        "_ImageBase.axes": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.AxesImage"
            }
        ],
        "_ImageBase._imcache": [
            {
                "type": "attr",
                "anno": "cm.ScalarMappable"
            }
        ],
        "_ImageBase.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ImageBase._alpha": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_ImageBase.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_ImageBase.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "_ImageBase._get_scalar_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ImageBase._rgbacache": [
            {
                "type": "attr",
                "anno": "cm.ScalarMappable"
            }
        ],
        "_ImageBase.make_image": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "magnification": "float",
                    "unsampled": "bool"
                }
            }
        ],
        "_ImageBase._check_unsampled_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ImageBase._A": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_ImageBase._interpolation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_ImageBase.get_interpolation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ImageBase._resample": [
            {
                "type": "attr",
                "anno": "cm.ScalarMappable"
            }
        ],
        "_ImageBase.get_resample": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ImageBase._filternorm": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_ImageBase.set_filternorm": [
            {
                "type": "method",
                "args": {
                    "filternorm": "bool"
                }
            }
        ],
        "_ImageBase.get_filternorm": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ImageBase._filterrad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_ImageBase.set_filterrad": [
            {
                "type": "method",
                "args": {
                    "filterrad": "float"
                }
            }
        ],
        "_ImageBase.get_filterrad": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesImage._extent": [
            {
                "type": "attr",
                "anno": "tuple[float, float, float, float]"
            }
        ],
        "AxesImage.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "plt.gca",
                    "cmap": "cm.Colormap",
                    "norm": "cm.Colormap",
                    "interpolation": "str",
                    "origin": "str",
                    "extent": "tuple[float, float, float, float]",
                    "filternorm": "bool",
                    "filterrad": "float",
                    "resample": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "AxesImage._check_unsampled_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesImage.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NonUniformImage._check_unsampled_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NonUniformImage.is_grayscale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NonUniformImage._is_grayscale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NonUniformImage._A": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "NonUniformImage._Ax": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "NonUniformImage._Ay": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "NonUniformImage._imcache": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "NonUniformImage.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NonUniformImage.set_array": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "NonUniformImage.get_extent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NonUniformImage.set_filternorm": [
            {
                "type": "method",
                "args": {
                    "s": "cm.ScalarMappable"
                }
            }
        ],
        "NonUniformImage.set_filterrad": [
            {
                "type": "method",
                "args": {
                    "s": "float"
                }
            }
        ],
        "PcolorImage.is_grayscale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PcolorImage._rgbacache": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "PcolorImage._is_grayscale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PcolorImage._check_unsampled_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PcolorImage._A": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "PcolorImage._Ax": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "PcolorImage._Ay": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "PcolorImage.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PcolorImage.set_array": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "FigureImage.zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureImage._interpolation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureImage.figure": [
            {
                "type": "attr",
                "anno": "Figure"
            }
        ],
        "FigureImage.ox": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FigureImage.oy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FigureImage.magnification": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FigureImage.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure",
                    "cmap": "cm.Colormap",
                    "norm": "float",
                    "offsetx": "float",
                    "offsety": "float",
                    "origin": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "FigureImage.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureImage.set_data": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "BboxImage.bbox": [
            {
                "type": "attr",
                "anno": "BboxBase"
            }
        ],
        "BboxImage._transform": [
            {
                "type": "attr",
                "anno": "BboxTransform"
            }
        ],
        "BboxImage.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxImage.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "PcolorImage.get_cursor_data": [
            {
                "type": "method",
                "args": {
                    "event": "MouseEvent"
                }
            }
        ],
        "NonUniformImage.set_data": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "A": "np.ndarray"
                }
            }
        ],
        "_ImageBase.get_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureImage.get_extent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesImage.get_extent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_rgb_to_rgba": [
            {
                "type": "func",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "BboxImage.__init__": [
            {
                "type": "method",
                "args": {
                    "bbox": "BboxBase",
                    "cmap": "cm.Colormap",
                    "norm": "cm.Colormap",
                    "interpolation": "str",
                    "origin": "str",
                    "filternorm": "bool",
                    "filterrad": "float",
                    "resample": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "PcolorImage.set_data": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "A": "np.ndarray"
                }
            }
        ],
        "PcolorImage.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "plt.gca",
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "A": "np.ndarray",
                    "cmap": "cm.Colormap",
                    "norm": "cm.Colormap",
                    "kwargs": "object"
                }
            }
        ],
        "_draw_list_compositing_images": [
            {
                "type": "func",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "parent": "martist.Artist",
                    "artists": "list",
                    "suppress_composite": "bool"
                }
            }
        ],
        "_ImageBase.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "BboxImage.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "pil_to_array": [
            {
                "type": "func",
                "args": {
                    "pilImage": "PIL.Image.Image"
                }
            }
        ],
        "_ImageBase.set_data": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "_ImageBase.set_resample": [
            {
                "type": "method",
                "args": {
                    "v": "cm.ScalarMappable"
                }
            }
        ],
        "_resample": [
            {
                "type": "func",
                "args": {
                    "image_obj": "_ImageBase",
                    "data": "np.ndarray",
                    "out_shape": "tuple",
                    "transform": "Transform",
                    "resample": "cm.ScalarMappable",
                    "alpha": "float"
                }
            }
        ],
        "AxesImage.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesImage.get_cursor_data": [
            {
                "type": "method",
                "args": {
                    "event": "MouseEvent"
                }
            }
        ],
        "_ImageBase.changed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ImageBase.set_interpolation": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "NonUniformImage.set_interpolation": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "NonUniformImage.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes",
                    "interpolation": "str",
                    "kwargs": "object"
                }
            }
        ],
        "NonUniformImage.set_cmap": [
            {
                "type": "method",
                "args": {
                    "cmap": "str"
                }
            }
        ],
        "_ImageBase.can_composite": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_pil_png_to_float_array": [
            {
                "type": "func",
                "args": {
                    "pil_png": "PIL.Image.Image"
                }
            }
        ],
        "imread": [
            {
                "type": "func",
                "args": {
                    "fname": "object",
                    "format": "str"
                }
            }
        ],
        "NonUniformImage.set_norm": [
            {
                "type": "method",
                "args": {
                    "norm": "plt.Normalize"
                }
            }
        ],
        "_ImageBase.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.rcParams.AxesImage",
                    "cmap": "cm.Colormap",
                    "norm": "colors.Normalize",
                    "interpolation": "str",
                    "origin": "mpl.rcParams.ImageOrigin",
                    "filternorm": "bool",
                    "filterrad": "float",
                    "resample": "bool",
                    "kwargs": "str"
                }
            }
        ],
        "AxesImage.format_cursor_data": [
            {
                "type": "method",
                "args": {
                    "data": "np.ndarray"
                }
            }
        ],
        "_ImageBase._make_image": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray",
                    "in_bbox": "Bbox",
                    "out_bbox": "Bbox",
                    "clip_bbox": "Bbox",
                    "magnification": "float",
                    "unsampled": "bool",
                    "round_to_pixel_border": "bool"
                }
            }
        ],
        "BboxImage.make_image": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "magnification": "float",
                    "unsampled": "bool"
                }
            }
        ],
        "AxesImage.make_image": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "magnification": "float",
                    "unsampled": "bool"
                }
            }
        ],
        "AxesImage.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "FigureImage.make_image": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "magnification": "float",
                    "unsampled": "bool"
                }
            }
        ],
        "_ImageBase.set_array": [
            {
                "type": "method",
                "args": {
                    "A": "np.ndarray"
                }
            }
        ],
        "PcolorImage.make_image": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "magnification": "float",
                    "unsampled": "bool"
                }
            }
        ],
        "NonUniformImage.make_image": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "magnification": "float",
                    "unsampled": "bool"
                }
            }
        ],
        "composite_images": [
            {
                "type": "func",
                "args": {
                    "images": "list",
                    "renderer": "mpl.renderer.Renderer",
                    "magnification": "float"
                }
            }
        ],
        "AxesImage.set_extent": [
            {
                "type": "method",
                "args": {
                    "extent": "tuple[float, float, float, float]"
                }
            }
        ],
        "_ImageBase.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "_ImageBase.write_png": [
            {
                "type": "method",
                "args": {
                    "fname": "str"
                }
            }
        ],
        "imsave": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "arr": "np.ndarray",
                    "vmin": "float",
                    "vmax": "float",
                    "cmap": "cm.Colormap",
                    "format": "str",
                    "origin": "str",
                    "dpi": "int",
                    "metadata": "dict",
                    "pil_kwargs": "dict"
                }
            }
        ],
        "thumbnail": [
            {
                "type": "func",
                "args": {
                    "infile": "object",
                    "thumbfile": "object",
                    "scale": "float",
                    "interpolation": "str",
                    "preview": "bool"
                }
            }
        ]
    },
    "matplotlib.patheffects": {
        "AbstractPathEffect._offset": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AbstractPathEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "offset": "tuple"
                }
            }
        ],
        "PathEffectRenderer._path_effects": [
            {
                "type": "attr",
                "anno": "list[AbstractPathEffect]"
            }
        ],
        "PathEffectRenderer._renderer": [
            {
                "type": "attr",
                "anno": "RendererBase"
            }
        ],
        "PathEffectRenderer.__init__": [
            {
                "type": "method",
                "args": {
                    "path_effects": "list[AbstractPathEffect]",
                    "renderer": "RendererBase"
                }
            }
        ],
        "PathEffectRenderer.copy_with_path_effect": [
            {
                "type": "method",
                "args": {
                    "path_effects": "list[AbstractPathEffect]"
                }
            }
        ],
        "PathEffectRenderer.__getattribute__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Stroke._gc": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Stroke.__init__": [
            {
                "type": "method",
                "args": {
                    "offset": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "SimplePatchShadow._shadow_rgbFace": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SimplePatchShadow._alpha": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SimplePatchShadow._rho": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SimplePatchShadow._gc": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SimpleLineShadow._shadow_color": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SimpleLineShadow._alpha": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SimpleLineShadow._rho": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SimpleLineShadow._gc": [
            {
                "type": "attr",
                "anno": "mcolors.Gaussian"
            }
        ],
        "PathPatchEffect.patch": [
            {
                "type": "attr",
                "anno": "mpatches.PathPatch"
            }
        ],
        "PathPatchEffect.draw_path": [
            {
                "type": "method",
                "args": {
                    "renderer": "RendererBase",
                    "gc": "mcolors.Gaussian",
                    "tpath": "mcolors.Bbox",
                    "affine": "mcolors.Bbox",
                    "rgbFace": "int"
                }
            }
        ],
        "AbstractPathEffect.draw_path": [
            {
                "type": "method",
                "args": {
                    "renderer": "RendererBase",
                    "gc": "mcolors.Gaussian",
                    "tpath": "mcolors.Bbox",
                    "affine": "mcolors.Bbox",
                    "rgbFace": "int"
                }
            }
        ],
        "PathEffectRenderer.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "mcolors.Gaussian",
                    "tpath": "mcolors.Bbox",
                    "affine": "mcolors.Bbox",
                    "rgbFace": "int"
                }
            }
        ],
        "Stroke.draw_path": [
            {
                "type": "method",
                "args": {
                    "renderer": "RendererBase",
                    "gc": "mcolors.Gaussian",
                    "tpath": "mcolors.Bbox",
                    "affine": "mcolors.Bbox",
                    "rgbFace": "int"
                }
            }
        ],
        "SimplePatchShadow.draw_path": [
            {
                "type": "method",
                "args": {
                    "renderer": "RendererBase",
                    "gc": "mcolors.Gaussian",
                    "tpath": "mcolors.Bbox",
                    "affine": "mcolors.Bbox",
                    "rgbFace": "int"
                }
            }
        ],
        "SimpleLineShadow.draw_path": [
            {
                "type": "method",
                "args": {
                    "renderer": "RendererBase",
                    "gc": "mcolors.Gaussian",
                    "tpath": "mcolors.Bbox",
                    "affine": "mcolors.Bbox",
                    "rgbFace": "int"
                }
            }
        ],
        "AbstractPathEffect._offset_transform": [
            {
                "type": "method",
                "args": {
                    "renderer": "RendererBase"
                }
            }
        ],
        "SimpleLineShadow.__init__": [
            {
                "type": "method",
                "args": {
                    "offset": "tuple",
                    "shadow_color": "str",
                    "alpha": "float",
                    "rho": "float",
                    "kwargs": "object"
                }
            }
        ],
        "SimplePatchShadow.__init__": [
            {
                "type": "method",
                "args": {
                    "offset": "tuple",
                    "shadow_rgbFace": "int",
                    "alpha": "float",
                    "rho": "float",
                    "kwargs": "dict"
                }
            }
        ],
        "AbstractPathEffect._update_gc": [
            {
                "type": "method",
                "args": {
                    "gc": "mcolors.Gaussian",
                    "new_gc_dict": "dict"
                }
            }
        ],
        "PathPatchEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "offset": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "PathEffectRenderer.draw_markers": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "marker_path": "str",
                    "marker_trans": "str",
                    "path": "Path",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "PathEffectRenderer.draw_path_collection": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "master_transform": "Affine2D",
                    "paths": "Path",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "_subclass_with_normal": [
            {
                "type": "func",
                "args": {
                    "effect_class": "AbstractPathEffect"
                }
            }
        ],
        "withSimplePatchShadow": [
            {
                "type": "var",
                "anno": "AbstractPathEffect"
            }
        ],
        "withStroke": [
            {
                "type": "var",
                "anno": "AbstractPathEffect"
            }
        ],
        "PathEffectRenderer._draw_text_as_path": [
            {
                "type": "method",
                "args": {
                    "gc": "mcolors.Gaussian",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "str",
                    "angle": "float",
                    "ismath": "bool"
                }
            }
        ]
    },
    "matplotlib.figure": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_AxesStack._ind": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_AxesStack.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesStack.as_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesStack.current_key_axes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesStack.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxesStack.__contains__": [
            {
                "type": "method",
                "args": {
                    "a": "object"
                }
            }
        ],
        "SubplotParams.validate": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SubplotParams.left": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SubplotParams.right": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SubplotParams.bottom": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SubplotParams.top": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SubplotParams.wspace": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SubplotParams.hspace": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SubplotParams.update": [
            {
                "type": "method",
                "args": {
                    "left": "float",
                    "bottom": "float",
                    "right": "float",
                    "top": "float",
                    "wspace": "float",
                    "hspace": "float"
                }
            }
        ],
        "Figure.callbacks": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "Figure.bbox_inches": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "Figure.dpi_scale_trans": [
            {
                "type": "attr",
                "anno": "Affine2D"
            }
        ],
        "Figure._dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Figure.bbox": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "Figure.transFigure": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "Figure.patch": [
            {
                "type": "attr",
                "anno": "Rectangle"
            }
        ],
        "Figure._suptitle": [
            {
                "type": "attr",
                "anno": "Text"
            }
        ],
        "Figure.subplotpars": [
            {
                "type": "attr",
                "anno": "SubplotParams"
            }
        ],
        "Figure._layoutbox": [
            {
                "type": "attr",
                "anno": "layoutbox.LayoutBox"
            }
        ],
        "Figure._axstack": [
            {
                "type": "attr",
                "anno": "AxesStack"
            }
        ],
        "Figure._cachedRenderer": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "Figure._align_xlabel_grp": [
            {
                "type": "attr",
                "anno": "cbook.Grouper"
            }
        ],
        "Figure._align_ylabel_grp": [
            {
                "type": "attr",
                "anno": "cbook.Grouper"
            }
        ],
        "Figure._gridspecs": [
            {
                "type": "attr",
                "anno": "list[GridSpec]"
            }
        ],
        "Figure.get_axes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.axes": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "Figure._get_dpi": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure._tight": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Figure.get_tight_layout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure._tight_parameters": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Figure.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Figure._constrained_layout_pads": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Figure._constrained": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Figure.get_constrained_layout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "Figure.canvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasBase"
            }
        ],
        "Figure.set_canvas": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase"
                }
            }
        ],
        "Figure.get_frameon": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure._make_key": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "Figure.suppressComposite": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Figure.artists": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Figure.lines": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Figure.patches": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Figure.texts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Figure.images": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Figure.legends": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Figure.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure._axobservers": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "Figure._gci": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.__dict__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Figure.waitforbuttonpress": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "Figure.init_layoutbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.ginput": [
            {
                "type": "method",
                "args": {
                    "n": "int",
                    "timeout": "int",
                    "show_clicks": "bool",
                    "mouse_add": "MouseButton",
                    "mouse_pop": "MouseButton",
                    "mouse_stop": "MouseButton"
                }
            }
        ],
        "_AxesStack._entry_from_axes": [
            {
                "type": "method",
                "args": {
                    "e": "int"
                }
            }
        ],
        "Figure.get_figheight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.get_figwidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.get_facecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.get_edgecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.colorbar": [
            {
                "type": "method",
                "args": {
                    "mappable": "martist.Artist",
                    "cax": "np.ndarray",
                    "ax": "Axes",
                    "use_gridspec": "bool",
                    "kw": "object"
                }
            }
        ],
        "Figure.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Figure.clf": [
            {
                "type": "method",
                "args": {
                    "keep_observers": "bool"
                }
            }
        ],
        "Figure.clear": [
            {
                "type": "method",
                "args": {
                    "keep_observers": "bool"
                }
            }
        ],
        "Figure.draw_artist": [
            {
                "type": "method",
                "args": {
                    "a": "Artist"
                }
            }
        ],
        "Figure.text": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "fontdict": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "Figure.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "bbox_extra_artists": "list"
                }
            }
        ],
        "Figure.savefig": [
            {
                "type": "method",
                "args": {
                    "fname": "object",
                    "transparent": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Figure.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "_AxesStack.bubble": [
            {
                "type": "method",
                "args": {
                    "a": "tuple"
                }
            }
        ],
        "Figure.set_frameon": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Figure.frameon": [
            {
                "type": "attr",
                "anno": "Text"
            }
        ],
        "Figure._set_dpi": [
            {
                "type": "method",
                "args": {
                    "dpi": "int",
                    "forward": "bool"
                }
            }
        ],
        "Figure.dpi": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "figaspect": [
            {
                "type": "func",
                "args": {
                    "arg": "np.ndarray"
                }
            }
        ],
        "Figure.set_constrained_layout_pads": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "Figure.set_constrained_layout": [
            {
                "type": "method",
                "args": {
                    "constrained": "bool"
                }
            }
        ],
        "Figure.set_tight_layout": [
            {
                "type": "method",
                "args": {
                    "tight": "dict"
                }
            }
        ],
        "SubplotParams.__init__": [
            {
                "type": "method",
                "args": {
                    "left": "float",
                    "bottom": "float",
                    "right": "float",
                    "top": "float",
                    "wspace": "float",
                    "hspace": "float"
                }
            }
        ],
        "_AxesStack.get": [
            {
                "type": "method",
                "args": {
                    "key": "object"
                }
            }
        ],
        "Figure.get_size_inches": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.sca": [
            {
                "type": "method",
                "args": {
                    "a": "Axes"
                }
            }
        ],
        "_AxesStack.remove": [
            {
                "type": "method",
                "args": {
                    "a": "int"
                }
            }
        ],
        "Figure._repr_html_": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.add_gridspec": [
            {
                "type": "method",
                "args": {
                    "nrows": "int",
                    "ncols": "int",
                    "kwargs": "object"
                }
            }
        ],
        "Figure.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.set_facecolor": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "Figure.set_edgecolor": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "Figure.get_default_bbox_extra_artists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.align_ylabels": [
            {
                "type": "method",
                "args": {
                    "axs": "list"
                }
            }
        ],
        "Figure.align_xlabels": [
            {
                "type": "method",
                "args": {
                    "axs": "list"
                }
            }
        ],
        "Figure.align_labels": [
            {
                "type": "method",
                "args": {
                    "axs": "list"
                }
            }
        ],
        "_stale_figure_callback": [
            {
                "type": "func",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "_AxesStack.add": [
            {
                "type": "method",
                "args": {
                    "key": "object",
                    "a": "Axes"
                }
            }
        ],
        "Figure.delaxes": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "Figure._add_axes_internal": [
            {
                "type": "method",
                "args": {
                    "key": "object",
                    "ax": "Axes"
                }
            }
        ],
        "Figure._process_projection_requirements": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "polar": "bool",
                    "projection": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Figure.add_subplot": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "object"
                }
            }
        ],
        "Figure.gca": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Figure.add_axes": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "Figure.subplots_adjust": [
            {
                "type": "method",
                "args": {
                    "left": "float",
                    "bottom": "float",
                    "right": "float",
                    "top": "float",
                    "wspace": "float",
                    "hspace": "float"
                }
            }
        ],
        "Figure.autofmt_xdate": [
            {
                "type": "method",
                "args": {
                    "bottom": "float",
                    "rotation": "int",
                    "ha": "str",
                    "which": "str"
                }
            }
        ],
        "Figure.set_dpi": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "Figure.get_dpi": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Figure.set_size_inches": [
            {
                "type": "method",
                "args": {
                    "w": "float",
                    "h": "float",
                    "forward": "bool"
                }
            }
        ],
        "Figure.set_figheight": [
            {
                "type": "method",
                "args": {
                    "val": "float",
                    "forward": "bool"
                }
            }
        ],
        "Figure.set_figwidth": [
            {
                "type": "method",
                "args": {
                    "val": "float",
                    "forward": "bool"
                }
            }
        ],
        "Figure.subplots": [
            {
                "type": "method",
                "args": {
                    "nrows": "int",
                    "ncols": "int",
                    "sharex": "Union[bool, str]",
                    "sharey": "Union[bool, str]",
                    "squeeze": "bool",
                    "subplot_kw": "dict",
                    "gridspec_kw": "dict"
                }
            }
        ],
        "Figure.get_constrained_layout_pads": [
            {
                "type": "method",
                "args": {
                    "relative": "bool"
                }
            }
        ],
        "Figure.suptitle": [
            {
                "type": "method",
                "args": {
                    "t": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Figure.figimage": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "xo": "int",
                    "yo": "int",
                    "alpha": "float",
                    "norm": "float",
                    "cmap": "cm.Colormap",
                    "vmin": "float",
                    "vmax": "float",
                    "origin": "np.ndarray",
                    "resize": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Figure._set_artist_props": [
            {
                "type": "method",
                "args": {
                    "a": "Figure"
                }
            }
        ],
        "Figure.show": [
            {
                "type": "method",
                "args": {
                    "warn": "bool"
                }
            }
        ],
        "Figure.tight_layout": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "pad": "float",
                    "h_pad": "float",
                    "w_pad": "float",
                    "rect": "tuple"
                }
            }
        ],
        "Figure.execute_constrained_layout": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Figure.add_artist": [
            {
                "type": "method",
                "args": {
                    "artist": "Artist",
                    "clip": "bool"
                }
            }
        ],
        "Figure.legend": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "Figure.add_axobserver": [
            {
                "type": "method",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "Figure.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "Figure.__init__": [
            {
                "type": "method",
                "args": {
                    "figsize": "tuple",
                    "dpi": "int",
                    "facecolor": "int",
                    "edgecolor": "int",
                    "linewidth": "float",
                    "frameon": "bool",
                    "subplotpars": "SubplotParams",
                    "tight_layout": "dict",
                    "constrained_layout": "bool"
                }
            }
        ]
    },
    "matplotlib._constrained_layout": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "layoutcolorbarsingle": [
            {
                "type": "func",
                "args": {
                    "ax": "axis.Axes",
                    "cax": "str",
                    "shrink": "float",
                    "aspect": "float",
                    "location": "str",
                    "pad": "float"
                }
            }
        ],
        "_getmaxminrowcolumn": [
            {
                "type": "func",
                "args": {
                    "axs": "list"
                }
            }
        ],
        "layoutcolorbargridspec": [
            {
                "type": "func",
                "args": {
                    "parents": "list",
                    "cax": "str",
                    "shrink": "float",
                    "aspect": "float",
                    "location": "str",
                    "pad": "float"
                }
            }
        ],
        "_arrange_subplotspecs": [
            {
                "type": "func",
                "args": {
                    "gs": "GridSpec",
                    "hspace": "int",
                    "wspace": "int"
                }
            }
        ],
        "_spans_overlap": [
            {
                "type": "func",
                "args": {
                    "span0": "Span",
                    "span1": "Span"
                }
            }
        ],
        "_align_spines": [
            {
                "type": "func",
                "args": {
                    "fig": "plt.Figure",
                    "gs": "GridSpec"
                }
            }
        ],
        "_axes_all_finite_sized": [
            {
                "type": "func",
                "args": {
                    "fig": "plt.Figure"
                }
            }
        ],
        "_make_ghost_gridspec_slots": [
            {
                "type": "func",
                "args": {
                    "fig": "plt.Figure",
                    "gs": "GridSpec"
                }
            }
        ],
        "_make_layout_margins": [
            {
                "type": "func",
                "args": {
                    "ax": "mpl.axis.Axes",
                    "renderer": "mpl.renderer.Renderer",
                    "h_pad": "int",
                    "w_pad": "int"
                }
            }
        ],
        "do_constrained_layout": [
            {
                "type": "func",
                "args": {
                    "fig": "plt.Figure",
                    "renderer": "mpl.renderer.Renderer",
                    "h_pad": "int",
                    "w_pad": "int",
                    "hspace": "int",
                    "wspace": "int"
                }
            }
        ]
    },
    "matplotlib.stackplot": {
        "__all__": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "stackplot": [
            {
                "type": "func",
                "args": {
                    "axes": "np.ndarray",
                    "x": "np.ndarray",
                    "args": "tuple",
                    "labels": "tuple",
                    "colors": "str",
                    "baseline": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "matplotlib.backend_tools": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "cursors": [
            {
                "type": "var",
                "anno": "IntEnum"
            }
        ],
        "_views_positions": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ToolBase.default_keymap": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolBase.description": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ToolBase.image": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ToolBase._name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolBase._toolmanager": [
            {
                "type": "attr",
                "anno": "mpl.toolmanager.ToolManager"
            }
        ],
        "ToolBase._figure": [
            {
                "type": "attr",
                "anno": "mpl.figure.Figure"
            }
        ],
        "ToolBase.toolmanager": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolBase.set_figure": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "ToolBase.figure": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "ToolBase.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "ToolManager",
                    "event": "str",
                    "data": "str"
                }
            }
        ],
        "ToolBase.name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolBase.destroy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolToggleBase.radio_group": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolToggleBase.cursor": [
            {
                "type": "attr",
                "anno": "cursors"
            }
        ],
        "ToolToggleBase.default_toggled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ToolToggleBase._toggled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ToolToggleBase.enable": [
            {
                "type": "method",
                "args": {
                    "event": "int"
                }
            }
        ],
        "ToolToggleBase.disable": [
            {
                "type": "method",
                "args": {
                    "event": "int"
                }
            }
        ],
        "ToolToggleBase.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "mpl.figure.Figure",
                    "event": "int",
                    "data": "int"
                }
            }
        ],
        "ToolToggleBase.toggled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolToggleBase.set_figure": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "SetCursorBase._id_drag": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "SetCursorBase._cursor": [
            {
                "type": "attr",
                "anno": "cursors"
            }
        ],
        "SetCursorBase._default_cursor": [
            {
                "type": "attr",
                "anno": "cursors"
            }
        ],
        "SetCursorBase._last_cursor": [
            {
                "type": "attr",
                "anno": "cursors"
            }
        ],
        "SetCursorBase.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "Gdk.Cursor"
                }
            }
        ],
        "SetCursorBase._set_cursor_cbk": [
            {
                "type": "method",
                "args": {
                    "event": "str"
                }
            }
        ],
        "ToolCursorPosition._id_drag": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RubberbandBase.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "RubberbandBase.remove_rubberband": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolQuit.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolQuitAll.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_ToolEnableAllNavigation.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_ToolEnableNavigation.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_ToolEnableNavigation.default_keymap": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ToolGrid.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolMinorGrid.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolFullScreen.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolYScale.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolXScale.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolViewsPositions.views": [
            {
                "type": "attr",
                "anno": "WeakKeyDictionary"
            }
        ],
        "ToolViewsPositions.positions": [
            {
                "type": "attr",
                "anno": "WeakKeyDictionary"
            }
        ],
        "ToolViewsPositions.home_views": [
            {
                "type": "attr",
                "anno": "WeakKeyDictionary"
            }
        ],
        "ViewsPositionsBase._on_trigger": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolHome.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolHome.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolHome._on_trigger": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolBack.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolBack.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolBack._on_trigger": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolForward.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolForward.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolForward._on_trigger": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConfigureSubplotsBase.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConfigureSubplotsBase.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SaveFigureBase.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SaveFigureBase.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ZoomPanBase._button_pressed": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "ZoomPanBase._xypress": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "ZoomPanBase._idPress": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "ZoomPanBase._idRelease": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "ZoomPanBase._idScroll": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "ZoomPanBase.base_scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ZoomPanBase.scrollthresh": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ZoomPanBase.lastscroll": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ToolZoom.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolZoom.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolZoom.cursor": [
            {
                "type": "attr",
                "anno": "IntEnum"
            }
        ],
        "ToolZoom.radio_group": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolZoom._ids_zoom": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ToolZoom._xypress": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "ToolZoom._button_pressed": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ToolZoom._zoom_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolPan.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolPan.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolPan.cursor": [
            {
                "type": "attr",
                "anno": "IntEnum"
            }
        ],
        "ToolPan.radio_group": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolPan._id_drag": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ToolPan._button_pressed": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ToolPan._xypress": [
            {
                "type": "attr",
                "anno": "list[tuple[mpl.Axes, int]]"
            }
        ],
        "ToolHelpBase.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolHelpBase.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolHelpBase.format_shortcut": [
            {
                "type": "method",
                "args": {
                    "key_sequence": "str"
                }
            }
        ],
        "ToolCopyToClipboardBase.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "default_tools": [
            {
                "type": "var",
                "anno": "SimpleNamespace"
            }
        ],
        "default_toolbar_tools": [
            {
                "type": "var",
                "anno": "SimpleNamespace"
            }
        ],
        "SetCursorBase._tool_trigger_cbk": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.figure.Figure"
                }
            }
        ],
        "ToolBase.canvas": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolFullScreen.disable": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "ToolFullScreen.enable": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "RubberbandBase.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "mpl.Axes",
                    "event": "str",
                    "data": "str"
                }
            }
        ],
        "ToolBase._make_classic_style_pseudo_toolbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "add_tools_to_manager": [
            {
                "type": "func",
                "args": {
                    "toolmanager": "ToolManager",
                    "tools": "SimpleNamespace"
                }
            }
        ],
        "SetCursorBase.set_figure": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "ToolCursorPosition.send_message": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.axis.Axes"
                }
            }
        ],
        "ToolCursorPosition.set_figure": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "AxisScaleBase.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "mpl.figure.Figure",
                    "event": "int",
                    "data": "int"
                }
            }
        ],
        "ToolViewsPositions.update_home_views": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "ToolViewsPositions.clear": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "ToolCopyToClipboardBase.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.Keymap"
            }
        ],
        "ToolHelpBase.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolPan.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolZoom.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "SaveFigureBase.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolForward.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolBack.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolHome.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolXScale.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolYScale.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolFullScreen.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolMinorGrid.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolGrid.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "_ToolEnableAllNavigation.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolQuitAll.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolQuit.default_keymap": [
            {
                "type": "attr",
                "anno": "mpl.rcParams.rcParams"
            }
        ],
        "ToolBase.__init__": [
            {
                "type": "method",
                "args": {
                    "toolmanager": "mpl.toolmanager.ToolManager",
                    "name": "str"
                }
            }
        ],
        "ToolViewsPositions.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ToolCursorPosition.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "ToolCopyToClipboardBase.trigger": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ToolToggleBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "ZoomPanBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any"
                }
            }
        ],
        "ToolPan.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any"
                }
            }
        ],
        "ToolZoom.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any"
                }
            }
        ],
        "ToolHelpBase._format_tool_keymap": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ToolHelpBase._get_help_entries": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolHelpBase._get_help_html": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolHelpBase._get_help_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolViewsPositions._axes_pos": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.axes.Axes"
                }
            }
        ],
        "ToolViewsPositions.push_current": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "ToolYScale.set_scale": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "scale": "str"
                }
            }
        ],
        "ToolXScale.set_scale": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "scale": "str"
                }
            }
        ],
        "ToolViewsPositions.home": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolViewsPositions.forward": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolViewsPositions.back": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolPan._mouse_move": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "ZoomPanBase.scroll_zoom": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "ToolViewsPositions._refresh_locators": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolPan._cancel_action": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolPan._release": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "ToolViewsPositions.refresh_locators": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolViewsPositions.update_view": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisScaleBase.disable": [
            {
                "type": "method",
                "args": {
                    "event": "plt.Axes"
                }
            }
        ],
        "AxisScaleBase.enable": [
            {
                "type": "method",
                "args": {
                    "event": "plt.Axes"
                }
            }
        ],
        "ToolPan._press": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "ToolQuitAll.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "ToolManager",
                    "event": "str",
                    "data": "str"
                }
            }
        ],
        "ToolQuit.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "mpl.figure.Figure",
                    "event": "str",
                    "data": "str"
                }
            }
        ],
        "add_tools_to_container": [
            {
                "type": "func",
                "args": {
                    "container": "ToolContainerBase",
                    "tools": "SimpleNamespace"
                }
            }
        ],
        "SetCursorBase._add_tool": [
            {
                "type": "method",
                "args": {
                    "tool": "mpl.figure.Figure"
                }
            }
        ],
        "SetCursorBase._add_tool_cbk": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.toolmanager.ToolEvent"
                }
            }
        ],
        "SetCursorBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "ToolViewsPositions.add_figure": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "ZoomPanBase.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "mpl.figure.Figure",
                    "event": "int",
                    "data": "int"
                }
            }
        ],
        "ViewsPositionsBase.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "mpl.figure.Figure",
                    "event": "str",
                    "data": "str"
                }
            }
        ],
        "ToolMinorGrid.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "mpl.Axes",
                    "event": "str",
                    "data": "str"
                }
            }
        ],
        "ToolGrid.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "mpl.Axes",
                    "event": "str",
                    "data": "str"
                }
            }
        ],
        "_ToolEnableNavigation.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "ToolManager",
                    "event": "KeyEvent",
                    "data": "str"
                }
            }
        ],
        "_ToolEnableAllNavigation.trigger": [
            {
                "type": "method",
                "args": {
                    "sender": "ToolManager",
                    "event": "KeyEvent",
                    "data": "str"
                }
            }
        ],
        "ToolZoom._mouse_move": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.Axes"
                }
            }
        ],
        "ToolZoom._switch_off_zoom_mode": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.Axes"
                }
            }
        ],
        "ToolZoom._switch_on_zoom_mode": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.Axes"
                }
            }
        ],
        "ToolZoom._cancel_action": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolZoom._release": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "ToolZoom._press": [
            {
                "type": "method",
                "args": {
                    "event": "mpl.Axes"
                }
            }
        ],
        "ZoomPanBase.enable": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ],
        "ZoomPanBase.disable": [
            {
                "type": "method",
                "args": {
                    "event": "cbook.Event"
                }
            }
        ]
    },
    "matplotlib.tests.test_backend_tools": {
        "test_format_shortcut": [
            {
                "type": "func",
                "args": {
                    "rc_shortcut": "str",
                    "expected": "str"
                }
            }
        ]
    },
    "matplotlib.mathtext": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "MathtextBackend.width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MathtextBackend.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MathtextBackend.depth": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MathtextBackend.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathtextBackend.set_canvas_size": [
            {
                "type": "method",
                "args": {
                    "w": "int",
                    "h": "int",
                    "d": "int"
                }
            }
        ],
        "MathtextBackend.render_glyph": [
            {
                "type": "method",
                "args": {
                    "ox": "int",
                    "oy": "int",
                    "info": "FontProperties"
                }
            }
        ],
        "MathtextBackend.render_rect_filled": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "MathtextBackend.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box"
                }
            }
        ],
        "MathtextBackend.get_hinting_type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathtextBackendAgg.ox": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MathtextBackendAgg.oy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MathtextBackendAgg.image": [
            {
                "type": "attr",
                "anno": "Optional[FT2Image]"
            }
        ],
        "MathtextBackendAgg.mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MathtextBackendAgg.bbox": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendAgg.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathtextBackendAgg._update_bbox": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "MathtextBackendAgg.set_canvas_size": [
            {
                "type": "method",
                "args": {
                    "w": "int",
                    "h": "int",
                    "d": "int"
                }
            }
        ],
        "MathtextBackendAgg.render_rect_filled": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "MathtextBackendPs._PSResult": [
            {
                "type": "attr",
                "anno": "typing.NamedParameter"
            }
        ],
        "MathtextBackendPs.pswriter": [
            {
                "type": "attr",
                "anno": "StringIO"
            }
        ],
        "MathtextBackendPs.lastfont": [
            {
                "type": "attr",
                "anno": "Optional[tuple]"
            }
        ],
        "MathtextBackendPs.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathtextBackendPdf._PDFResult": [
            {
                "type": "attr",
                "anno": "typing.NamedParameter"
            }
        ],
        "MathtextBackendPdf.glyphs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendPdf.rects": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendPdf.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathtextBackendPdf.render_rect_filled": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "MathtextBackendSvg.svg_glyphs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendSvg.svg_rects": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendSvg.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathtextBackendSvg.render_rect_filled": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "MathtextBackendPath.glyphs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendPath.rects": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendPath.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathtextBackendPath.render_rect_filled": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "MathtextBackendCairo.glyphs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendCairo.rects": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MathtextBackendCairo.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathtextBackendCairo.render_rect_filled": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "Fonts.default_font_prop": [
            {
                "type": "attr",
                "anno": "FontProperties"
            }
        ],
        "Fonts.mathtext_backend": [
            {
                "type": "attr",
                "anno": "MathtextBackend"
            }
        ],
        "Fonts.used_characters": [
            {
                "type": "attr",
                "anno": "typing.Dict[str, set]"
            }
        ],
        "Fonts.__init__": [
            {
                "type": "method",
                "args": {
                    "default_font_prop": "FontProperties",
                    "mathtext_backend": "MathtextBackend"
                }
            }
        ],
        "Fonts.destroy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Fonts.get_kern": [
            {
                "type": "method",
                "args": {
                    "font1": "Font",
                    "fontclass1": "Font",
                    "sym1": "str",
                    "fontsize1": "int",
                    "font2": "Font",
                    "fontclass2": "Font",
                    "sym2": "str",
                    "fontsize2": "int",
                    "dpi": "int"
                }
            }
        ],
        "Fonts.get_xheight": [
            {
                "type": "method",
                "args": {
                    "font": "int",
                    "fontsize": "int",
                    "dpi": "int"
                }
            }
        ],
        "Fonts.get_underline_thickness": [
            {
                "type": "method",
                "args": {
                    "font": "str",
                    "fontsize": "int",
                    "dpi": "int"
                }
            }
        ],
        "Fonts.get_used_characters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Fonts.get_sized_alternatives_for_symbol": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "sym": "str"
                }
            }
        ],
        "TruetypeFonts.glyphd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TruetypeFonts._fonts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TruetypeFonts.destroy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TruetypeFonts.get_underline_thickness": [
            {
                "type": "method",
                "args": {
                    "font": "str",
                    "fontsize": "int",
                    "dpi": "int"
                }
            }
        ],
        "BakomaFonts._fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BakomaFonts._stix_fallback": [
            {
                "type": "attr",
                "anno": "StixFonts"
            }
        ],
        "BakomaFonts.fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BakomaFonts._slanted_symbols": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "BakomaFonts._size_alternatives": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UnicodeFonts.use_cmex": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UnicodeFonts.cm_fallback": [
            {
                "type": "attr",
                "anno": "Optional[Font]"
            }
        ],
        "UnicodeFonts.fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UnicodeFonts._slanted_symbols": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "UnicodeFonts._map_virtual_font": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "font_class": "str",
                    "uniindex": "int"
                }
            }
        ],
        "DejaVuFonts.use_cmex": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DejaVuFonts.cm_fallback": [
            {
                "type": "attr",
                "anno": "Fonts"
            }
        ],
        "DejaVuFonts.bakoma": [
            {
                "type": "attr",
                "anno": "Fonts"
            }
        ],
        "DejaVuFonts.fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DejaVuSerifFonts._fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DejaVuSansFonts._fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StixFonts._fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StixFonts.use_cmex": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StixFonts.cm_fallback": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StixFonts._sans": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StixFonts.fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StixSansFonts._sans": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StandardPsFonts.fontmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StandardPsFonts.glyphd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StandardPsFonts.fonts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StandardPsFonts.pswriter": [
            {
                "type": "attr",
                "anno": "StringIO"
            }
        ],
        "SHRINK_FACTOR": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "GROW_FACTOR": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "NUM_SIZE_LEVELS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FontConstantsBase.script_space": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontConstantsBase.subdrop": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontConstantsBase.sup1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontConstantsBase.sub1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontConstantsBase.sub2": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontConstantsBase.delta": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontConstantsBase.delta_slanted": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FontConstantsBase.delta_integral": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ComputerModernFontConstants.script_space": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ComputerModernFontConstants.subdrop": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ComputerModernFontConstants.sup1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ComputerModernFontConstants.sub1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ComputerModernFontConstants.sub2": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ComputerModernFontConstants.delta": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ComputerModernFontConstants.delta_slanted": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ComputerModernFontConstants.delta_integral": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXFontConstants.script_space": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXFontConstants.sup1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXFontConstants.sub2": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXFontConstants.delta": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXFontConstants.delta_slanted": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXFontConstants.delta_integral": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXSansFontConstants.script_space": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXSansFontConstants.sup1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXSansFontConstants.delta_slanted": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "STIXSansFontConstants.delta_integral": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_font_constant_mapping": [
            {
                "type": "var",
                "anno": "dict[str, FontConstantsBase]"
            }
        ],
        "Node.size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Node.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Node.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Node.get_kerning": [
            {
                "type": "method",
                "args": {
                    "next": "Node"
                }
            }
        ],
        "Node.shrink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Node.grow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Node.render": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "Box.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Box.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Box.depth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Box.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float",
                    "depth": "float"
                }
            }
        ],
        "Box.shrink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Box.grow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Box.render": [
            {
                "type": "method",
                "args": {
                    "x1": "float",
                    "y1": "float",
                    "x2": "float",
                    "y2": "float"
                }
            }
        ],
        "Vbox.__init__": [
            {
                "type": "method",
                "args": {
                    "height": "float",
                    "depth": "float"
                }
            }
        ],
        "Hbox.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float"
                }
            }
        ],
        "Char.c": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Char.font_output": [
            {
                "type": "attr",
                "anno": "Fonts"
            }
        ],
        "Char.font": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Char.font_class": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Char.fontsize": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Char.dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Char.math": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Char.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Char._metrics": [
            {
                "type": "attr",
                "anno": "types.SimpleNamespace"
            }
        ],
        "Char.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Char.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Char.depth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Char.is_slanted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Char.shrink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Char.grow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Accent._metrics": [
            {
                "type": "attr",
                "anno": "types.SimpleNamespace"
            }
        ],
        "Accent.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Accent.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Accent.depth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "List.shift_amount": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "List.children": [
            {
                "type": "attr",
                "anno": "list[Node]"
            }
        ],
        "List.glue_set": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "List.glue_sign": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "List.glue_order": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "List.__init__": [
            {
                "type": "method",
                "args": {
                    "elements": "list[Node]"
                }
            }
        ],
        "List._determine_order": [
            {
                "type": "method",
                "args": {
                    "totals": "list[float]"
                }
            }
        ],
        "List.glue_ratio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "List._set_glue": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "sign": "float",
                    "totals": "list[float]",
                    "error_type": "str"
                }
            }
        ],
        "Hlist.children": [
            {
                "type": "attr",
                "anno": "list[Node]"
            }
        ],
        "Hlist.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Hlist.depth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Hlist.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Hlist.glue_sign": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Hlist.glue_order": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Hlist.glue_ratio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Vlist.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Vlist.depth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Vlist.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Vlist.glue_sign": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Vlist.glue_order": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Vlist.glue_ratio": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Rule.font_output": [
            {
                "type": "attr",
                "anno": "Fonts"
            }
        ],
        "_GlueSpec": [
            {
                "type": "var",
                "anno": "namedtuple"
            }
        ],
        "Glue.glue_subtype": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Glue.glue_spec": [
            {
                "type": "attr",
                "anno": "_GlueSpec"
            }
        ],
        "Glue.__init__": [
            {
                "type": "method",
                "args": {
                    "glue_type": "Union[str, _GlueSpec]",
                    "copy": "bool"
                }
            }
        ],
        "GlueSpec.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GlueSpec.stretch": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GlueSpec.stretch_order": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GlueSpec.shrink": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GlueSpec.shrink_order": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GlueSpec.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "stretch": "float",
                    "stretch_order": "float",
                    "shrink": "float",
                    "shrink_order": "float"
                }
            }
        ],
        "GlueSpec.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GlueSpec.factory": [
            {
                "type": "method",
                "args": {
                    "cls": "types.Type[Glue]",
                    "glue_type": "str"
                }
            }
        ],
        "Fil.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Fill.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Filll.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NegFil.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NegFill.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NegFilll.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SsGlue.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HCentered.__init__": [
            {
                "type": "method",
                "args": {
                    "elements": "list[Node]"
                }
            }
        ],
        "VCentered.__init__": [
            {
                "type": "method",
                "args": {
                    "elements": "List[Glue]"
                }
            }
        ],
        "Kern.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Kern.depth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Kern.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Kern.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float"
                }
            }
        ],
        "Kern.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Kern.shrink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Kern.grow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubSuperCluster.nucleus": [
            {
                "type": "attr",
                "anno": "Optional[int]"
            }
        ],
        "SubSuperCluster.sub": [
            {
                "type": "attr",
                "anno": "Optional[int]"
            }
        ],
        "SubSuperCluster.super": [
            {
                "type": "attr",
                "anno": "Optional[int]"
            }
        ],
        "AutoHeightChar.shift_amount": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AutoWidthChar.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ship.max_push": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ship.cur_s": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ship.cur_v": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ship.cur_h": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ship.off_h": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ship.off_v": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ship.clamp": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "ship": [
            {
                "type": "var",
                "anno": "Ship"
            }
        ],
        "MathtextBackendCairo.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box",
                    "used_characters": "typing.Optional[typing.Set[str]]"
                }
            }
        ],
        "MathtextBackendPath.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box",
                    "used_characters": "typing.Optional[typing.Set[str]]"
                }
            }
        ],
        "MathtextBackendSvg.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box",
                    "used_characters": "typing.Optional[typing.Set[str]]"
                }
            }
        ],
        "MathtextBackendPdf.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box",
                    "used_characters": "typing.Optional[typing.Set[str]]"
                }
            }
        ],
        "MathtextBackendPs.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box",
                    "used_characters": "typing.Optional[typing.Set[str]]"
                }
            }
        ],
        "Error": [
            {
                "type": "func",
                "args": {
                    "msg": "str"
                }
            }
        ],
        "Parser._math_style_dict": [
            {
                "type": "attr",
                "anno": "dict[str, int]"
            }
        ],
        "Parser._binary_operators": [
            {
                "type": "attr",
                "anno": "types.Set[Regex]"
            }
        ],
        "Parser._relation_symbols": [
            {
                "type": "attr",
                "anno": "types.Set[Regex]"
            }
        ],
        "Parser._arrow_symbols": [
            {
                "type": "attr",
                "anno": "types.Set[Regex]"
            }
        ],
        "Parser._spaced_symbols": [
            {
                "type": "attr",
                "anno": "types.Set[Regex]"
            }
        ],
        "Parser._punctuation_symbols": [
            {
                "type": "attr",
                "anno": "types.Set[Regex]"
            }
        ],
        "Parser._overunder_symbols": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Parser._overunder_functions": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Parser._dropsub_symbols": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Parser._fontnames": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Parser._function_names": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Parser._ambi_delim": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Parser._left_delim": [
            {
                "type": "attr",
                "anno": "types.Set[Regex]"
            }
        ],
        "Parser._right_delim": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Parser._expression": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Parser._math_expression": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Parser._state_stack": [
            {
                "type": "attr",
                "anno": "Optional[list[State]]"
            }
        ],
        "Parser._em_width_cache": [
            {
                "type": "attr",
                "anno": "dict[tuple, float]"
            }
        ],
        "Parser.State.font_output": [
            {
                "type": "attr",
                "anno": "Fonts"
            }
        ],
        "Rule.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float",
                    "depth": "float",
                    "state": "State"
                }
            }
        ],
        "Parser.State._font": [
            {
                "type": "attr",
                "anno": "Font"
            }
        ],
        "Parser.State.font_class": [
            {
                "type": "attr",
                "anno": "Font"
            }
        ],
        "Parser.State.fontsize": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Parser.State.dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Parser.State.__init__": [
            {
                "type": "method",
                "args": {
                    "font_output": "Fonts",
                    "font": "Font",
                    "font_class": "Font",
                    "fontsize": "tuple",
                    "dpi": "int"
                }
            }
        ],
        "Parser.State.font": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Parser.State.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Parser.get_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Parser.math_string": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "str"
                }
            }
        ],
        "Parser._space_widths": [
            {
                "type": "attr",
                "anno": "types.NumberFormat"
            }
        ],
        "Parser.unknown_symbol": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "types.TokenSet"
                }
            }
        ],
        "Parser._char_over_chars": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "Parser._accent_map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Parser._wide_accents": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Parser.font": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "List[str]"
                }
            }
        ],
        "Parser.is_overunder": [
            {
                "type": "method",
                "args": {
                    "nucleus": "Union[Char, Hlist]"
                }
            }
        ],
        "Parser.is_dropsub": [
            {
                "type": "method",
                "args": {
                    "nucleus": "Union[Char, Hlist]"
                }
            }
        ],
        "Parser.is_slanted": [
            {
                "type": "method",
                "args": {
                    "nucleus": "Union[Char, Hlist]"
                }
            }
        ],
        "Parser.is_between_brackets": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str"
                }
            }
        ],
        "MathTextParser._parser": [
            {
                "type": "attr",
                "anno": "Optional[Parser]"
            }
        ],
        "MathTextParser._backend_mapping": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "MathTextParser._font_type_mapping": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "MathTextParser._output": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MathTextParser.__init__": [
            {
                "type": "method",
                "args": {
                    "output": "str"
                }
            }
        ],
        "Parser._accentprefixed": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "get_unicode_index": [
            {
                "type": "func",
                "args": {
                    "symbol": "str",
                    "math": "bool"
                }
            }
        ],
        "MathtextBackendCairo.render_glyph": [
            {
                "type": "method",
                "args": {
                    "ox": "int",
                    "oy": "int",
                    "info": "FontProperties"
                }
            }
        ],
        "MathtextBackendPath.render_glyph": [
            {
                "type": "method",
                "args": {
                    "ox": "int",
                    "oy": "int",
                    "info": "FontProperties"
                }
            }
        ],
        "MathtextBackendSvg.render_glyph": [
            {
                "type": "method",
                "args": {
                    "ox": "int",
                    "oy": "int",
                    "info": "Font"
                }
            }
        ],
        "MathtextBackendPdf.render_glyph": [
            {
                "type": "method",
                "args": {
                    "ox": "int",
                    "oy": "int",
                    "info": "Font"
                }
            }
        ],
        "TruetypeFonts._get_offset": [
            {
                "type": "method",
                "args": {
                    "font": "Font",
                    "glyph": "Font",
                    "fontsize": "int",
                    "dpi": "int"
                }
            }
        ],
        "Glue.grow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Glue.shrink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Fonts.set_canvas_size": [
            {
                "type": "method",
                "args": {
                    "w": "int",
                    "h": "int",
                    "d": "int"
                }
            }
        ],
        "MathtextBackendAgg.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box",
                    "used_characters": "typing.Set[str]"
                }
            }
        ],
        "MathtextBackendBitmap.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box",
                    "used_characters": "typing.Set[str]"
                }
            }
        ],
        "Fonts.get_results": [
            {
                "type": "method",
                "args": {
                    "box": "Box"
                }
            }
        ],
        "StandardPsFonts._get_font": [
            {
                "type": "method",
                "args": {
                    "font": "str"
                }
            }
        ],
        "StandardPsFonts.get_underline_thickness": [
            {
                "type": "method",
                "args": {
                    "font": "str",
                    "fontsize": "int",
                    "dpi": "int"
                }
            }
        ],
        "StandardPsFonts._get_info": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "font_class": "str",
                    "sym": "str",
                    "fontsize": "int",
                    "dpi": "int",
                    "math": "bool"
                }
            }
        ],
        "Fonts.get_metrics": [
            {
                "type": "method",
                "args": {
                    "font": "str",
                    "font_class": "str",
                    "sym": "str",
                    "fontsize": "int",
                    "dpi": "int",
                    "math": "bool"
                }
            }
        ],
        "Accent._update_metrics": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Accent.grow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "List.grow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Accent.shrink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "List.shrink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vlist.vpack": [
            {
                "type": "method",
                "args": {
                    "h": "float",
                    "m": "Literal",
                    "l": "float"
                }
            }
        ],
        "Vlist.__init__": [
            {
                "type": "method",
                "args": {
                    "elements": "list[Node]",
                    "h": "float",
                    "m": "Literal"
                }
            }
        ],
        "Hlist.hpack": [
            {
                "type": "method",
                "args": {
                    "w": "float",
                    "m": "Literal"
                }
            }
        ],
        "Char._update_metrics": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TruetypeFonts.get_xheight": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "fontsize": "int",
                    "dpi": "int"
                }
            }
        ],
        "StandardPsFonts.get_xheight": [
            {
                "type": "method",
                "args": {
                    "font": "int",
                    "fontsize": "int",
                    "dpi": "int"
                }
            }
        ],
        "AutoHeightChar.__init__": [
            {
                "type": "method",
                "args": {
                    "c": "str",
                    "height": "float",
                    "depth": "float",
                    "state": "FontProperties",
                    "always": "bool",
                    "factor": "float"
                }
            }
        ],
        "Parser.sqrt": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "List[str]"
                }
            }
        ],
        "Parser.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MathTextParser._parse_cached": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "dpi": "int",
                    "prop": "FontProperties",
                    "ps_useafm": "bool",
                    "fontset": "str"
                }
            }
        ],
        "MathTextParser.parse": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "dpi": "int",
                    "prop": "FontProperties"
                }
            }
        ],
        "Parser.push_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Parser.start_group": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "int",
                    "toks": "List[str]"
                }
            }
        ],
        "MathtextBackendAgg.get_hinting_type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StixFonts._map_virtual_font": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "font_class": "str",
                    "uniindex": "int"
                }
            }
        ],
        "MathtextBackendAgg.render_glyph": [
            {
                "type": "method",
                "args": {
                    "ox": "int",
                    "oy": "int",
                    "info": "Font"
                }
            }
        ],
        "TruetypeFonts.__init__": [
            {
                "type": "method",
                "args": {
                    "default_font_prop": "FontProperties",
                    "mathtext_backend": "MathtextBackend"
                }
            }
        ],
        "StixFonts.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "BakomaFonts.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "StandardPsFonts.basepath": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StandardPsFonts.__init__": [
            {
                "type": "method",
                "args": {
                    "default_font_prop": "FontProperties"
                }
            }
        ],
        "StandardPsFonts.get_kern": [
            {
                "type": "method",
                "args": {
                    "font1": "Font",
                    "fontclass1": "Font",
                    "sym1": "str",
                    "fontsize1": "int",
                    "font2": "Font",
                    "fontclass2": "Font",
                    "sym2": "str",
                    "fontsize2": "int",
                    "dpi": "int"
                }
            }
        ],
        "Char.get_kerning": [
            {
                "type": "method",
                "args": {
                    "next": "Node"
                }
            }
        ],
        "Hlist.kern": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Hlist.__init__": [
            {
                "type": "method",
                "args": {
                    "elements": "list[Node]",
                    "w": "float",
                    "m": "Literal",
                    "do_kern": "bool"
                }
            }
        ],
        "Parser.group": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[str]"
                }
            }
        ],
        "Fonts.render_glyph": [
            {
                "type": "method",
                "args": {
                    "ox": "int",
                    "oy": "int",
                    "facename": "str",
                    "font_class": "str",
                    "sym": "str",
                    "fontsize": "int",
                    "dpi": "int"
                }
            }
        ],
        "Char.render": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Parser.pop_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Parser.end_group": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "int",
                    "toks": "List[str]"
                }
            }
        ],
        "MathtextBackendPs.render_rect_filled": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "Fonts.render_rect_filled": [
            {
                "type": "method",
                "args": {
                    "x1": "int",
                    "y1": "int",
                    "x2": "int",
                    "y2": "int"
                }
            }
        ],
        "Rule.render": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "w": "int",
                    "h": "int"
                }
            }
        ],
        "MathtextBackendPs.render_glyph": [
            {
                "type": "method",
                "args": {
                    "ox": "int",
                    "oy": "int",
                    "info": "FontProperties"
                }
            }
        ],
        "Accent.render": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Parser._auto_sized_delimiter": [
            {
                "type": "method",
                "args": {
                    "front": "str",
                    "middle": "List[Hbox]",
                    "back": "str"
                }
            }
        ],
        "Parser.auto_delim": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "Tuple[str, Hbox, str]"
                }
            }
        ],
        "Parser.parse": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "fonts_object": "Fonts",
                    "fontsize": "tuple",
                    "dpi": "int"
                }
            }
        ],
        "List.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BakomaFonts.get_sized_alternatives_for_symbol": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "sym": "str"
                }
            }
        ],
        "TruetypeFonts._get_font": [
            {
                "type": "method",
                "args": {
                    "font": "str"
                }
            }
        ],
        "StixFonts.get_sized_alternatives_for_symbol": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "sym": "str"
                }
            }
        ],
        "UnicodeFonts.get_sized_alternatives_for_symbol": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "sym": "str"
                }
            }
        ],
        "_get_font_constant_set": [
            {
                "type": "func",
                "args": {
                    "state": "FontProperties"
                }
            }
        ],
        "UnicodeFonts._get_glyph": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "font_class": "str",
                    "sym": "str",
                    "fontsize": "int",
                    "math": "bool"
                }
            }
        ],
        "BakomaFonts._get_glyph": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "font_class": "str",
                    "sym": "str",
                    "fontsize": "int",
                    "math": "bool"
                }
            }
        ],
        "DejaVuFonts._get_glyph": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "font_class": "str",
                    "sym": "str",
                    "fontsize": "int",
                    "math": "bool"
                }
            }
        ],
        "TruetypeFonts._get_info": [
            {
                "type": "method",
                "args": {
                    "fontname": "str",
                    "font_class": "str",
                    "sym": "str",
                    "fontsize": "int",
                    "dpi": "int",
                    "math": "bool"
                }
            }
        ],
        "Ship.hlist_out": [
            {
                "type": "method",
                "args": {
                    "box": "Hlist"
                }
            }
        ],
        "Ship.vlist_out": [
            {
                "type": "method",
                "args": {
                    "box": "Vlist"
                }
            }
        ],
        "Ship.__call__": [
            {
                "type": "method",
                "args": {
                    "ox": "float",
                    "oy": "float",
                    "box": "Hlist"
                }
            }
        ],
        "Parser.simple_group": [
            {
                "type": "attr",
                "anno": "Group"
            }
        ],
        "Parser.required_group": [
            {
                "type": "attr",
                "anno": "Group"
            }
        ],
        "Parser.operatorname": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[Node]"
                }
            }
        ],
        "Parser.math": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[str]"
                }
            }
        ],
        "Parser.main": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[Node]"
                }
            }
        ],
        "AutoWidthChar.__init__": [
            {
                "type": "method",
                "args": {
                    "c": "str",
                    "width": "float",
                    "state": "FontProperties",
                    "always": "bool",
                    "char_class": "Type[Char]"
                }
            }
        ],
        "SubSuperCluster.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TruetypeFonts.get_kern": [
            {
                "type": "method",
                "args": {
                    "font1": "Font",
                    "fontclass1": "Font",
                    "sym1": "str",
                    "fontsize1": "int",
                    "font2": "Font",
                    "fontclass2": "Font",
                    "sym2": "str",
                    "fontsize2": "int",
                    "dpi": "int"
                }
            }
        ],
        "DejaVuFonts.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Parser._make_space": [
            {
                "type": "method",
                "args": {
                    "percentage": "float"
                }
            }
        ],
        "Parser.customspace": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "List[str]"
                }
            }
        ],
        "Parser.space": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "List[str]"
                }
            }
        ],
        "Vrule.__init__": [
            {
                "type": "method",
                "args": {
                    "state": "State"
                }
            }
        ],
        "Hrule.__init__": [
            {
                "type": "method",
                "args": {
                    "state": "FontProperties",
                    "thickness": "float"
                }
            }
        ],
        "Parser.overline": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[Node]"
                }
            }
        ],
        "Parser._genfrac": [
            {
                "type": "method",
                "args": {
                    "ldelim": "str",
                    "rdelim": "str",
                    "rule": "float",
                    "style": "float",
                    "num": "Hbox",
                    "den": "Hbox"
                }
            }
        ],
        "Parser.binom": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list"
                }
            }
        ],
        "Parser.dfrac": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list"
                }
            }
        ],
        "Parser.frac": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list"
                }
            }
        ],
        "Parser.genfrac": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "List[str]"
                }
            }
        ],
        "Char.__init__": [
            {
                "type": "method",
                "args": {
                    "c": "str",
                    "state": "FontProperties",
                    "math": "bool"
                }
            }
        ],
        "Parser.function": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[str]"
                }
            }
        ],
        "Parser.accent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[tuple[str, Hbox]]"
                }
            }
        ],
        "Parser.c_over_c": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[str]"
                }
            }
        ],
        "Parser.symbol": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "int",
                    "toks": "list[str]"
                }
            }
        ],
        "Parser.subsuper": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "int",
                    "toks": "list[str]"
                }
            }
        ],
        "Parser.accentprefixed": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Parser.non_math": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "toks": "list[str]"
                }
            }
        ],
        "MathTextParser.get_depth": [
            {
                "type": "method",
                "args": {
                    "texstr": "str",
                    "dpi": "int",
                    "fontsize": "int"
                }
            }
        ],
        "MathTextParser.to_mask": [
            {
                "type": "method",
                "args": {
                    "texstr": "str",
                    "dpi": "int",
                    "fontsize": "int"
                }
            }
        ],
        "MathTextParser.to_rgba": [
            {
                "type": "method",
                "args": {
                    "texstr": "str",
                    "color": "str",
                    "dpi": "int",
                    "fontsize": "int"
                }
            }
        ],
        "UnicodeFonts.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "MathTextParser.to_png": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "texstr": "str",
                    "color": "str",
                    "dpi": "int",
                    "fontsize": "int"
                }
            }
        ],
        "math_to_image": [
            {
                "type": "func",
                "args": {
                    "s": "str",
                    "filename_or_obj": "str",
                    "prop": "FontProperties",
                    "dpi": "int",
                    "format": "str"
                }
            }
        ]
    },
    "matplotlib._mathtext_data": {
        "latex_to_bakoma": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "latex_to_cmex": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "latex_to_standard": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "type12uni": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "uni2type1": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "tex2uni": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "stix_virtual_fonts": [
            {
                "type": "var",
                "anno": "dict"
            }
        ]
    },
    "matplotlib.bezier": {
        "_comb": [
            {
                "type": "func",
                "args": {
                    "n": "int",
                    "k": "int"
                }
            }
        ],
        "get_intersection": [
            {
                "type": "func",
                "args": {
                    "cx1": "float",
                    "cy1": "float",
                    "cos_t1": "float",
                    "sin_t1": "float",
                    "cx2": "float",
                    "cy2": "float",
                    "cos_t2": "float",
                    "sin_t2": "float"
                }
            }
        ],
        "get_normal_points": [
            {
                "type": "func",
                "args": {
                    "cx": "float",
                    "cy": "float",
                    "cos_t": "float",
                    "sin_t": "float",
                    "length": "float"
                }
            }
        ],
        "_de_casteljau1": [
            {
                "type": "func",
                "args": {
                    "beta": "np.ndarray",
                    "t": "float"
                }
            }
        ],
        "split_de_casteljau": [
            {
                "type": "func",
                "args": {
                    "beta": "np.ndarray",
                    "t": "float"
                }
            }
        ],
        "find_bezier_t_intersecting_with_closedpath": [
            {
                "type": "func",
                "args": {
                    "bezier_point_at_t": "Callable[[np.ndarray], float]",
                    "inside_closedpath": "Callable[[np.ndarray], bool]",
                    "t0": "float",
                    "t1": "float",
                    "tolerance": "float"
                }
            }
        ],
        "BezierSegment._cpoints": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BezierSegment._orders": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BezierSegment._px": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BezierSegment.__call__": [
            {
                "type": "method",
                "args": {
                    "t": "np.ndarray"
                }
            }
        ],
        "BezierSegment.point_at_t": [
            {
                "type": "method",
                "args": {
                    "t": "float"
                }
            }
        ],
        "BezierSegment.control_points": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BezierSegment.dimension": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BezierSegment.degree": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BezierSegment.polynomial_coefficients": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BezierSegment.axis_aligned_extrema": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "inside_circle": [
            {
                "type": "func",
                "args": {
                    "cx": "float",
                    "cy": "float",
                    "r": "float"
                }
            }
        ],
        "get_cos_sin": [
            {
                "type": "func",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "x1": "float",
                    "y1": "float"
                }
            }
        ],
        "check_if_parallel": [
            {
                "type": "func",
                "args": {
                    "dx1": "float",
                    "dy1": "float",
                    "dx2": "float",
                    "dy2": "float",
                    "tolerance": "float"
                }
            }
        ],
        "find_control_points": [
            {
                "type": "func",
                "args": {
                    "c1x": "float",
                    "c1y": "float",
                    "mmx": "float",
                    "mmy": "float",
                    "c2x": "float",
                    "c2y": "float"
                }
            }
        ],
        "make_wedged_bezier2": [
            {
                "type": "func",
                "args": {
                    "bezier2": "tuple",
                    "width": "float",
                    "w1": "float",
                    "wm": "float",
                    "w2": "float"
                }
            }
        ],
        "BezierSegment.__init__": [
            {
                "type": "method",
                "args": {
                    "control_points": "np.ndarray"
                }
            }
        ],
        "split_bezier_intersecting_with_closedpath": [
            {
                "type": "func",
                "args": {
                    "bezier": "np.ndarray",
                    "inside_closedpath": "Callable[[np.ndarray], bool]",
                    "tolerance": "float"
                }
            }
        ],
        "get_parallels": [
            {
                "type": "func",
                "args": {
                    "bezier2": "tuple",
                    "width": "float"
                }
            }
        ],
        "make_path_regular": [
            {
                "type": "func",
                "args": {
                    "p": "Path"
                }
            }
        ],
        "split_path_inout": [
            {
                "type": "func",
                "args": {
                    "path": "Path",
                    "inside": "Callable[[np.ndarray], bool]",
                    "tolerance": "float",
                    "reorder_inout": "bool"
                }
            }
        ],
        "concatenate_paths": [
            {
                "type": "func",
                "args": {
                    "paths": "tuple[Path, ...]"
                }
            }
        ]
    },
    "matplotlib._cm_listed": {
        "_magma_data": [
            {
                "type": "var",
                "anno": "ListedColormap"
            }
        ],
        "_inferno_data": [
            {
                "type": "var",
                "anno": "ListedColormap"
            }
        ],
        "_plasma_data": [
            {
                "type": "var",
                "anno": "ListedColormap"
            }
        ],
        "_viridis_data": [
            {
                "type": "var",
                "anno": "ListedColormap"
            }
        ],
        "_cividis_data": [
            {
                "type": "var",
                "anno": "ListedColormap"
            }
        ],
        "_twilight_data": [
            {
                "type": "var",
                "anno": "List[ListedColormap]"
            }
        ],
        "_twilight_shifted_data": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "_turbo_data": [
            {
                "type": "var",
                "anno": "ListedColormap"
            }
        ],
        "cmaps": [
            {
                "type": "var",
                "anno": "dict"
            }
        ]
    },
    "matplotlib.gridspec": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "GridSpecBase.nrows": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "GridSpecBase.ncols": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "GridSpecBase.get_geometry": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpecBase.get_subplot_params": [
            {
                "type": "method",
                "args": {
                    "figure": "plt.figure"
                }
            }
        ],
        "GridSpecBase.new_subplotspec": [
            {
                "type": "method",
                "args": {
                    "loc": "tuple",
                    "rowspan": "int",
                    "colspan": "int"
                }
            }
        ],
        "GridSpecBase._col_width_ratios": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GridSpecBase.set_width_ratios": [
            {
                "type": "method",
                "args": {
                    "width_ratios": "int"
                }
            }
        ],
        "GridSpecBase.get_width_ratios": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpecBase._row_height_ratios": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GridSpecBase.set_height_ratios": [
            {
                "type": "method",
                "args": {
                    "height_ratios": "int"
                }
            }
        ],
        "GridSpecBase.__init__": [
            {
                "type": "method",
                "args": {
                    "nrows": "int",
                    "ncols": "int",
                    "height_ratios": "int",
                    "width_ratios": "int"
                }
            }
        ],
        "GridSpecBase.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpecBase.get_height_ratios": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpec.left": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GridSpec.bottom": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GridSpec.right": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GridSpec.top": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GridSpec.wspace": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GridSpec.hspace": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GridSpec.figure": [
            {
                "type": "attr",
                "anno": "Figure"
            }
        ],
        "GridSpec._layoutbox": [
            {
                "type": "attr",
                "anno": "layoutbox.LayoutBox"
            }
        ],
        "GridSpec._AllowedKeys": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GridSpec.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpec.locally_modified_subplot_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpecFromSubplotSpec._wspace": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GridSpecFromSubplotSpec._hspace": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GridSpecFromSubplotSpec._subplot_spec": [
            {
                "type": "attr",
                "anno": "SubplotSpec"
            }
        ],
        "GridSpecFromSubplotSpec.figure": [
            {
                "type": "attr",
                "anno": "Figure"
            }
        ],
        "GridSpecFromSubplotSpec._layoutbox": [
            {
                "type": "attr",
                "anno": "layoutbox.LayoutBox"
            }
        ],
        "SubplotSpec._gridspec": [
            {
                "type": "attr",
                "anno": "GridSpec"
            }
        ],
        "SubplotSpec.num1": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SubplotSpec._layoutbox": [
            {
                "type": "attr",
                "anno": "layoutbox.LayoutBox"
            }
        ],
        "GridSpec.__init__": [
            {
                "type": "method",
                "args": {
                    "nrows": "int",
                    "ncols": "int",
                    "figure": "Figure",
                    "left": "int",
                    "bottom": "int",
                    "right": "int",
                    "top": "int",
                    "wspace": "float",
                    "hspace": "float",
                    "width_ratios": "int",
                    "height_ratios": "int"
                }
            }
        ],
        "SubplotSpec._from_subplot_args": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure",
                    "args": "tuple"
                }
            }
        ],
        "SubplotSpec._num2": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SubplotSpec.num2": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "SubplotSpec.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotSpec.get_gridspec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotSpec.rowspan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotSpec.colspan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotSpec.get_topmost_subplotspec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpecFromSubplotSpec.get_topmost_subplotspec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotSpec.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "SubplotSpec.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpecBase.get_grid_positions": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure",
                    "raw": "bool"
                }
            }
        ],
        "SubplotSpec.__init__": [
            {
                "type": "method",
                "args": {
                    "gridspec": "GridSpec",
                    "num1": "int",
                    "num2": "int"
                }
            }
        ],
        "GridSpecBase.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "int"
                }
            }
        ],
        "SubplotSpec.get_geometry": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotSpec.get_rows_columns": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpec.tight_layout": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure",
                    "renderer": "str",
                    "pad": "float",
                    "h_pad": "float",
                    "w_pad": "float",
                    "rect": "tuple"
                }
            }
        ],
        "GridSpec.update": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "SubplotSpec.get_position": [
            {
                "type": "method",
                "args": {
                    "figure": "plt.figure",
                    "return_all": "bool"
                }
            }
        ],
        "SubplotSpec.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridSpecFromSubplotSpec.__init__": [
            {
                "type": "method",
                "args": {
                    "nrows": "int",
                    "ncols": "int",
                    "subplot_spec": "SubplotSpec",
                    "wspace": "float",
                    "hspace": "float",
                    "height_ratios": "int",
                    "width_ratios": "int"
                }
            }
        ],
        "SubplotSpec.subgridspec": [
            {
                "type": "method",
                "args": {
                    "nrows": "int",
                    "ncols": "int",
                    "kwargs": "object"
                }
            }
        ],
        "GridSpec.get_subplot_params": [
            {
                "type": "method",
                "args": {
                    "figure": "mpl.figure.Figure"
                }
            }
        ],
        "GridSpecBase.subplots": [
            {
                "type": "method",
                "args": {
                    "sharex": "int | bool",
                    "sharey": "int | bool",
                    "squeeze": "bool",
                    "subplot_kw": "dict"
                }
            }
        ],
        "GridSpecFromSubplotSpec.get_subplot_params": [
            {
                "type": "method",
                "args": {
                    "figure": "plt.figure"
                }
            }
        ]
    },
    "matplotlib.tests.test_gridspec": {
        "test_repr": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_height_ratios": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_width_ratios": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_equal": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.patches": {
        "Patch.zorder": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Patch._edge_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Patch._hatch_color": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch._fill": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Patch._us_dashes": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Patch._linewidth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Patch._edgecolor": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch._facecolor": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch._original_edgecolor": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch._original_facecolor": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch._hatch": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch._transformSet": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Patch.get_edgecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.get_facecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.get_linewidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch._process_radius": [
            {
                "type": "method",
                "args": {
                    "radius": "float"
                }
            }
        ],
        "Patch._antialiased": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch.get_antialiased": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Patch._linestyle": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Patch.get_linestyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.get_fill": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch._capstyle": [
            {
                "type": "attr",
                "anno": "mpl.rcsetup.CapStyle"
            }
        ],
        "Patch.get_capstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch._joinstyle": [
            {
                "type": "attr",
                "anno": "mpl.rcsetup.JoinStyle"
            }
        ],
        "Patch.get_joinstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.set_hatch": [
            {
                "type": "method",
                "args": {
                    "hatch": "np.ndarray"
                }
            }
        ],
        "Patch.get_hatch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Shadow.patch": [
            {
                "type": "attr",
                "anno": "Patch"
            }
        ],
        "Shadow.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Shadow._props": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Shadow._shadow_transform": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "Shadow.props": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Shadow._ox": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Shadow._set_ox": [
            {
                "type": "method",
                "args": {
                    "ox": "float"
                }
            }
        ],
        "Shadow._get_ox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Shadow._oy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Shadow._set_oy": [
            {
                "type": "method",
                "args": {
                    "oy": "float"
                }
            }
        ],
        "Shadow._get_oy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle._x0": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Rectangle._y0": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Rectangle._width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Rectangle._height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Rectangle._x1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Rectangle._y1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Rectangle.angle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Rectangle.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle._rect_transform": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "Rectangle._update_x1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle._update_y1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle.get_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle.get_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle.get_xy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle.get_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle.get_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Rectangle.set_x": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "Rectangle.set_y": [
            {
                "type": "method",
                "args": {
                    "y": "float"
                }
            }
        ],
        "Rectangle.set_xy": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple[float, float]"
                }
            }
        ],
        "Rectangle.set_width": [
            {
                "type": "method",
                "args": {
                    "w": "float"
                }
            }
        ],
        "Rectangle.set_height": [
            {
                "type": "method",
                "args": {
                    "h": "float"
                }
            }
        ],
        "Rectangle.set_bounds": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "Rectangle.xy": [
            {
                "type": "attr",
                "anno": "tuple[float, float]"
            }
        ],
        "RegularPolygon._xy": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RegularPolygon._numVertices": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RegularPolygon._orientation": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RegularPolygon._radius": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RegularPolygon.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RegularPolygon._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "RegularPolygon._poly_transform": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "RegularPolygon.numvertices": [
            {
                "type": "method",
                "args": {
                    "numVertices": "int"
                }
            }
        ],
        "RegularPolygon.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PathPatch._edge_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PathPatch._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "PathPatch.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PathPatch.set_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "Polygon._closed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Polygon.get_closed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Polygon.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Polygon._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Polygon.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Wedge.center": [
            {
                "type": "attr",
                "anno": "tuple[float, float]"
            }
        ],
        "Wedge._patch_transform": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "Wedge._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Wedge.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Wedge.set_center": [
            {
                "type": "method",
                "args": {
                    "center": "tuple[float, float]"
                }
            }
        ],
        "Wedge.r": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Wedge.set_radius": [
            {
                "type": "method",
                "args": {
                    "radius": "float"
                }
            }
        ],
        "Wedge.theta1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Wedge.set_theta1": [
            {
                "type": "method",
                "args": {
                    "theta1": "float"
                }
            }
        ],
        "Wedge.theta2": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Wedge.set_theta2": [
            {
                "type": "method",
                "args": {
                    "theta2": "float"
                }
            }
        ],
        "Wedge.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Wedge.set_width": [
            {
                "type": "method",
                "args": {
                    "width": "float"
                }
            }
        ],
        "Wedge.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Arrow.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Arrow._patch_transform": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "Arrow.get_patch_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyArrow._edge_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FancyArrow.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyArrow.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "dx": "np.ndarray",
                    "dy": "np.ndarray",
                    "width": "float",
                    "length_includes_head": "bool",
                    "head_width": "float",
                    "head_length": "float",
                    "shape": "str",
                    "overhang": "float",
                    "head_starts_at_zero": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "CirclePolygon.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ellipse._center": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Ellipse._angle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ellipse._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Ellipse._patch_transform": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "Ellipse.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ellipse.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Ellipse.set_center": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple"
                }
            }
        ],
        "Ellipse.get_center": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ellipse.center": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Ellipse._width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Ellipse.set_width": [
            {
                "type": "method",
                "args": {
                    "width": "int"
                }
            }
        ],
        "Ellipse.get_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ellipse.width": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Ellipse._height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Ellipse.set_height": [
            {
                "type": "method",
                "args": {
                    "height": "int"
                }
            }
        ],
        "Ellipse.get_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ellipse.height": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Ellipse.set_angle": [
            {
                "type": "method",
                "args": {
                    "angle": "tuple"
                }
            }
        ],
        "Ellipse.get_angle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ellipse.angle": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Ellipse.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Circle.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Circle.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Circle.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Circle.set_radius": [
            {
                "type": "method",
                "args": {
                    "radius": "float"
                }
            }
        ],
        "Circle.get_radius": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Circle.radius": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Circle.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Arc.theta1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Arc.theta2": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Arc.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Arc._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "_register_style": [
            {
                "type": "func",
                "args": {
                    "style_list": "dict",
                    "cls": "type",
                    "name": "str"
                }
            }
        ],
        "BoxStyle._style_list": [
            {
                "type": "attr",
                "anno": "dict[str, _Style]"
            }
        ],
        "BoxStyle._Base.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.Square.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.Square.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float"
                }
            }
        ],
        "BoxStyle.Circle.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.Circle.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float"
                }
            }
        ],
        "BoxStyle.LArrow.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.LArrow.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float"
                }
            }
        ],
        "BoxStyle.RArrow.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float"
                }
            }
        ],
        "BoxStyle.DArrow.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.DArrow.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float"
                }
            }
        ],
        "BoxStyle.Round.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.Round.rounding_size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.Round.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float",
                    "rounding_size": "float"
                }
            }
        ],
        "BoxStyle.Round4.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.Round4.rounding_size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.Round4.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float",
                    "rounding_size": "float"
                }
            }
        ],
        "BoxStyle.Sawtooth.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.Sawtooth.tooth_size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BoxStyle.Sawtooth.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float",
                    "tooth_size": "float"
                }
            }
        ],
        "BoxStyle.Sawtooth._get_sawtooth_vertices": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.Roundtooth.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float",
                    "tooth_size": "int"
                }
            }
        ],
        "ConnectionStyle._style_list": [
            {
                "type": "attr",
                "anno": "dict[str, _Style]"
            }
        ],
        "ConnectionStyle.Arc3.rad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Arc3.__init__": [
            {
                "type": "method",
                "args": {
                    "rad": "float"
                }
            }
        ],
        "ConnectionStyle.Angle3.angleA": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Angle3.angleB": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Angle3.__init__": [
            {
                "type": "method",
                "args": {
                    "angleA": "float",
                    "angleB": "float"
                }
            }
        ],
        "ConnectionStyle.Angle.angleA": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Angle.angleB": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Angle.rad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Angle.__init__": [
            {
                "type": "method",
                "args": {
                    "angleA": "float",
                    "angleB": "float",
                    "rad": "float"
                }
            }
        ],
        "ConnectionStyle.Arc.angleA": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Arc.angleB": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Arc.armA": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Arc.armB": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Arc.rad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Arc.__init__": [
            {
                "type": "method",
                "args": {
                    "angleA": "float",
                    "angleB": "float",
                    "armA": "float",
                    "armB": "float",
                    "rad": "float"
                }
            }
        ],
        "ConnectionStyle.Bar.armA": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Bar.armB": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Bar.fraction": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Bar.angle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ConnectionStyle.Bar.__init__": [
            {
                "type": "method",
                "args": {
                    "armA": "float",
                    "armB": "float",
                    "fraction": "float",
                    "angle": "float"
                }
            }
        ],
        "_point_along_a_line": [
            {
                "type": "func",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "x1": "float",
                    "y1": "float",
                    "d": "float"
                }
            }
        ],
        "ArrowStyle._style_list": [
            {
                "type": "attr",
                "anno": "dict[str, _Style]"
            }
        ],
        "ArrowStyle._Base.transmute": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "mutation_size": "int",
                    "linewidth": "int"
                }
            }
        ],
        "ArrowStyle._Curve.__init__": [
            {
                "type": "method",
                "args": {
                    "beginarrow": "str",
                    "endarrow": "str",
                    "fillbegin": "bool",
                    "fillend": "bool",
                    "head_length": "float",
                    "head_width": "float"
                }
            }
        ],
        "ArrowStyle.Curve.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ArrowStyle.CurveA.__init__": [
            {
                "type": "method",
                "args": {
                    "head_length": "float",
                    "head_width": "float"
                }
            }
        ],
        "ArrowStyle.CurveB.__init__": [
            {
                "type": "method",
                "args": {
                    "head_length": "float",
                    "head_width": "float"
                }
            }
        ],
        "ArrowStyle.CurveAB.__init__": [
            {
                "type": "method",
                "args": {
                    "head_length": "float",
                    "head_width": "float"
                }
            }
        ],
        "ArrowStyle.CurveFilledA.__init__": [
            {
                "type": "method",
                "args": {
                    "head_length": "float",
                    "head_width": "float"
                }
            }
        ],
        "ArrowStyle.CurveFilledB.__init__": [
            {
                "type": "method",
                "args": {
                    "head_length": "float",
                    "head_width": "float"
                }
            }
        ],
        "ArrowStyle.CurveFilledAB.__init__": [
            {
                "type": "method",
                "args": {
                    "head_length": "float",
                    "head_width": "float"
                }
            }
        ],
        "ArrowStyle._Bracket.__init__": [
            {
                "type": "method",
                "args": {
                    "bracketA": "float",
                    "bracketB": "float",
                    "widthA": "float",
                    "widthB": "float",
                    "lengthA": "float",
                    "lengthB": "float",
                    "angleA": "float",
                    "angleB": "float",
                    "scaleA": "float",
                    "scaleB": "float"
                }
            }
        ],
        "ArrowStyle.BracketAB.__init__": [
            {
                "type": "method",
                "args": {
                    "widthA": "float",
                    "lengthA": "float",
                    "angleA": "float",
                    "widthB": "float",
                    "lengthB": "float",
                    "angleB": "float"
                }
            }
        ],
        "ArrowStyle.BracketA.__init__": [
            {
                "type": "method",
                "args": {
                    "widthA": "float",
                    "lengthA": "float",
                    "angleA": "float"
                }
            }
        ],
        "ArrowStyle.BracketB.__init__": [
            {
                "type": "method",
                "args": {
                    "widthB": "float",
                    "lengthB": "float",
                    "angleB": "float"
                }
            }
        ],
        "ArrowStyle.BarAB.__init__": [
            {
                "type": "method",
                "args": {
                    "widthA": "float",
                    "angleA": "float",
                    "widthB": "float",
                    "angleB": "float"
                }
            }
        ],
        "ArrowStyle.Wedge.tail_width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ArrowStyle.Fancy.__init__": [
            {
                "type": "method",
                "args": {
                    "head_length": "float",
                    "head_width": "float",
                    "tail_width": "float"
                }
            }
        ],
        "ArrowStyle.Simple.__init__": [
            {
                "type": "method",
                "args": {
                    "head_length": "float",
                    "head_width": "float",
                    "tail_width": "float"
                }
            }
        ],
        "ArrowStyle.Wedge.shrink_factor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ArrowStyle.Wedge.__init__": [
            {
                "type": "method",
                "args": {
                    "tail_width": "float",
                    "shrink_factor": "float"
                }
            }
        ],
        "FancyBboxPatch._edge_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FancyBboxPatch._x": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyBboxPatch._y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyBboxPatch._width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyBboxPatch._height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyBboxPatch.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch._bbox_transmuter": [
            {
                "type": "attr",
                "anno": "BoxStyle"
            }
        ],
        "FancyBboxPatch._mutation_scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyBboxPatch._mutation_aspect": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyBboxPatch.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FancyBboxPatch.set_mutation_scale": [
            {
                "type": "method",
                "args": {
                    "scale": "float"
                }
            }
        ],
        "FancyBboxPatch.get_mutation_scale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch.set_mutation_aspect": [
            {
                "type": "method",
                "args": {
                    "aspect": "float"
                }
            }
        ],
        "FancyBboxPatch.get_mutation_aspect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch.get_boxstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch.get_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch.get_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch.get_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch.get_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyBboxPatch.set_x": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "FancyBboxPatch.set_y": [
            {
                "type": "method",
                "args": {
                    "y": "float"
                }
            }
        ],
        "FancyBboxPatch.set_width": [
            {
                "type": "method",
                "args": {
                    "w": "float"
                }
            }
        ],
        "FancyBboxPatch.set_height": [
            {
                "type": "method",
                "args": {
                    "h": "float"
                }
            }
        ],
        "FancyBboxPatch.set_bounds": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "FancyArrowPatch._edge_default": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FancyArrowPatch._posA_posB": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "FancyArrowPatch.patchA": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "FancyArrowPatch.patchB": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "FancyArrowPatch.shrinkA": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyArrowPatch.shrinkB": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyArrowPatch._path_original": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "FancyArrowPatch.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyArrowPatch._mutation_scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyArrowPatch._mutation_aspect": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyArrowPatch._dpi_cor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FancyArrowPatch.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FancyArrowPatch.set_dpi_cor": [
            {
                "type": "method",
                "args": {
                    "dpi_cor": "float"
                }
            }
        ],
        "FancyArrowPatch.get_dpi_cor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyArrowPatch.set_positions": [
            {
                "type": "method",
                "args": {
                    "posA": "np.ndarray",
                    "posB": "np.ndarray"
                }
            }
        ],
        "FancyArrowPatch.set_patchA": [
            {
                "type": "method",
                "args": {
                    "patchA": "transforms.Transform"
                }
            }
        ],
        "FancyArrowPatch.set_patchB": [
            {
                "type": "method",
                "args": {
                    "patchB": "transforms.Transform"
                }
            }
        ],
        "FancyArrowPatch._connector": [
            {
                "type": "attr",
                "anno": "ConnectionStyle"
            }
        ],
        "FancyArrowPatch.get_connectionstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyArrowPatch._arrow_transmuter": [
            {
                "type": "attr",
                "anno": "ArrowStyle"
            }
        ],
        "FancyArrowPatch.get_arrowstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyArrowPatch.set_mutation_scale": [
            {
                "type": "method",
                "args": {
                    "scale": "float"
                }
            }
        ],
        "FancyArrowPatch.get_mutation_scale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyArrowPatch.set_mutation_aspect": [
            {
                "type": "method",
                "args": {
                    "aspect": "float"
                }
            }
        ],
        "FancyArrowPatch.get_mutation_aspect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionPatch.xy1": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "ConnectionPatch.xy2": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "ConnectionPatch.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionPatch.coords1": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "ConnectionPatch.coords2": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "ConnectionPatch.axesA": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "ConnectionPatch.axesB": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "ConnectionPatch._annotation_clip": [
            {
                "type": "attr",
                "anno": "transforms.Transform"
            }
        ],
        "ConnectionPatch.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionPatch.set_annotation_clip": [
            {
                "type": "method",
                "args": {
                    "b": "transforms.Transform"
                }
            }
        ],
        "ConnectionPatch.get_annotation_clip": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionPatch._renderer": [
            {
                "type": "attr",
                "anno": "transforms.Renderer"
            }
        ],
        "ArrowStyle._Bracket._get_bracket": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "cos_t": "float",
                    "sin_t": "float",
                    "width": "float",
                    "length": "float"
                }
            }
        ],
        "ArrowStyle._Curve._get_arrow_wedge": [
            {
                "type": "method",
                "args": {
                    "x0": "np.ndarray",
                    "y0": "np.ndarray",
                    "x1": "np.ndarray",
                    "y1": "np.ndarray",
                    "head_dist": "np.ndarray",
                    "cos_t": "float",
                    "sin_t": "float",
                    "linewidth": "float"
                }
            }
        ],
        "Rectangle.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.validCap": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Patch.validJoin": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Patch.get_patch_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Style.register": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "name": "str",
                    "style": "_Style"
                }
            }
        ],
        "_Style.get_styles": [
            {
                "type": "method",
                "args": {
                    "cls": "type[_Style]"
                }
            }
        ],
        "Patch._bind_draw_path_function": [
            {
                "type": "method",
                "args": {
                    "renderer": "transforms.Renderer"
                }
            }
        ],
        "Patch.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "Shadow.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "bbox_artist": [
            {
                "type": "func",
                "args": {
                    "artist": "Artist",
                    "renderer": "mpl.renderer.Renderer",
                    "props": "dict",
                    "fill": "bool"
                }
            }
        ],
        "RegularPolygon._update_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RegularPolygon.get_patch_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RegularPolygon.radius": [
            {
                "type": "method",
                "args": {
                    "radius": "int"
                }
            }
        ],
        "RegularPolygon.orientation": [
            {
                "type": "method",
                "args": {
                    "orientation": "int"
                }
            }
        ],
        "RegularPolygon.xy": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple"
                }
            }
        ],
        "ConnectionPatch._get_xy": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple",
                    "s": "str",
                    "axes": "transforms.Transform"
                }
            }
        ],
        "ConnectionPatch._check_xy": [
            {
                "type": "method",
                "args": {
                    "renderer": "transforms.Renderer"
                }
            }
        ],
        "ConnectionPatch.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "transforms.Renderer"
                }
            }
        ],
        "Arc.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "Patch.contains_point": [
            {
                "type": "method",
                "args": {
                    "point": "tuple",
                    "radius": "float"
                }
            }
        ],
        "Shadow.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.set_antialiased": [
            {
                "type": "method",
                "args": {
                    "aa": "np.ndarray"
                }
            }
        ],
        "Polygon.get_xy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Polygon.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PathPatch.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ArrowStyle._Base.ensure_quadratic_bezier": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "FancyBboxPatch.get_bbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ArrowStyle.Wedge.transmute": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "mutation_size": "float",
                    "linewidth": "float"
                }
            }
        ],
        "ArrowStyle.Fancy.transmute": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "mutation_size": "float",
                    "linewidth": "float"
                }
            }
        ],
        "ArrowStyle.Simple.transmute": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "mutation_size": "float",
                    "linewidth": "float"
                }
            }
        ],
        "ArrowStyle._Bracket.transmute": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "mutation_size": "float",
                    "linewidth": "float"
                }
            }
        ],
        "ArrowStyle._Curve.transmute": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "mutation_size": "float",
                    "linewidth": "float"
                }
            }
        ],
        "ArrowStyle._Base.__call__": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "mutation_size": "int",
                    "linewidth": "int",
                    "aspect_ratio": "float"
                }
            }
        ],
        "ConnectionStyle.Bar.connect": [
            {
                "type": "method",
                "args": {
                    "posA": "np.ndarray",
                    "posB": "np.ndarray"
                }
            }
        ],
        "ConnectionStyle.Arc.connect": [
            {
                "type": "method",
                "args": {
                    "posA": "np.ndarray",
                    "posB": "np.ndarray"
                }
            }
        ],
        "ConnectionStyle.Angle.connect": [
            {
                "type": "method",
                "args": {
                    "posA": "np.ndarray",
                    "posB": "np.ndarray"
                }
            }
        ],
        "ConnectionStyle.Angle3.connect": [
            {
                "type": "method",
                "args": {
                    "posA": "np.ndarray",
                    "posB": "np.ndarray"
                }
            }
        ],
        "ConnectionStyle.Arc3.connect": [
            {
                "type": "method",
                "args": {
                    "posA": "np.ndarray",
                    "posB": "np.ndarray"
                }
            }
        ],
        "BoxStyle.Roundtooth.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.Sawtooth.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.Round4.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "np.ndarray",
                    "y0": "np.ndarray",
                    "width": "np.ndarray",
                    "height": "np.ndarray",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.Round.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "np.ndarray",
                    "y0": "np.ndarray",
                    "width": "np.ndarray",
                    "height": "np.ndarray",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.DArrow.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.LArrow.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.RArrow.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle.Square.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "np.ndarray",
                    "y0": "np.ndarray",
                    "width": "np.ndarray",
                    "height": "np.ndarray",
                    "mutation_size": "float"
                }
            }
        ],
        "BoxStyle._Base.__call__": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float",
                    "aspect_ratio": "float"
                }
            }
        ],
        "Arrow._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Arrow.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Wedge._recompute_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Wedge.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Polygon.set_xy": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "Polygon.xy": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Polygon.set_closed": [
            {
                "type": "method",
                "args": {
                    "closed": "bool"
                }
            }
        ],
        "BoxStyle.Circle.transmute": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float",
                    "mutation_size": "float"
                }
            }
        ],
        "ConnectionStyle._Base._shrink": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "shrinkA": "float",
                    "shrinkB": "float"
                }
            }
        ],
        "Patch.set_capstyle": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "Patch.set_joinstyle": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "Patch._set_facecolor": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "Patch.set_facecolor": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "Patch._set_edgecolor": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "Patch.set_fill": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Patch.fill": [
            {
                "type": "attr",
                "anno": "property[Patch, bool]"
            }
        ],
        "Patch.set_edgecolor": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "Patch.set_color": [
            {
                "type": "method",
                "args": {
                    "c": "np.ndarray"
                }
            }
        ],
        "Patch.set_linestyle": [
            {
                "type": "method",
                "args": {
                    "ls": "str"
                }
            }
        ],
        "Patch.set_linewidth": [
            {
                "type": "method",
                "args": {
                    "w": "float"
                }
            }
        ],
        "ConnectionStyle._Base.SimpleEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "Patch.get_data_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.update_from": [
            {
                "type": "method",
                "args": {
                    "other": "Artist"
                }
            }
        ],
        "Patch.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.get_extents": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "Patch.__init__": [
            {
                "type": "method",
                "args": {
                    "edgecolor": "np.ndarray",
                    "facecolor": "np.ndarray",
                    "color": "np.ndarray",
                    "linewidth": "float",
                    "linestyle": "str",
                    "antialiased": "float",
                    "hatch": "np.ndarray",
                    "fill": "bool",
                    "capstyle": "str",
                    "joinstyle": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Ellipse.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple",
                    "width": "float",
                    "height": "float",
                    "angle": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Arc.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple",
                    "width": "int",
                    "height": "int",
                    "angle": "float",
                    "theta1": "float",
                    "theta2": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Circle.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple",
                    "radius": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Wedge.__init__": [
            {
                "type": "method",
                "args": {
                    "center": "tuple[float, float]",
                    "r": "float",
                    "theta1": "float",
                    "theta2": "float",
                    "width": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Polygon.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple",
                    "closed": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "PathPatch.__init__": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "kwargs": "object"
                }
            }
        ],
        "Rectangle.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple[float, float]",
                    "width": "float",
                    "height": "float",
                    "angle": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Ellipse._recompute_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ellipse.get_patch_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle._convert_units": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle.get_bbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle._update_patch_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Rectangle.get_patch_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Shadow.get_patch_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch._convert_xy_units": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "FancyArrowPatch.get_path_in_displaycoord": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FancyArrowPatch.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "transforms.Renderer"
                }
            }
        ],
        "FancyArrowPatch.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Style.pprint_styles": [
            {
                "type": "method",
                "args": {
                    "cls": "object"
                }
            }
        ],
        "FancyArrowPatch.set_arrowstyle": [
            {
                "type": "method",
                "args": {
                    "arrowstyle": "str",
                    "kw": "str"
                }
            }
        ],
        "FancyArrowPatch.set_connectionstyle": [
            {
                "type": "method",
                "args": {
                    "connectionstyle": "str",
                    "kw": "str"
                }
            }
        ],
        "FancyArrowPatch.__init__": [
            {
                "type": "method",
                "args": {
                    "posA": "float",
                    "posB": "float",
                    "path": "Path",
                    "arrowstyle": "str",
                    "connectionstyle": "str",
                    "patchA": "transforms.Transform",
                    "patchB": "transforms.Transform",
                    "shrinkA": "float",
                    "shrinkB": "float",
                    "mutation_scale": "float",
                    "mutation_aspect": "float",
                    "dpi_cor": "float",
                    "kwargs": "object"
                }
            }
        ],
        "ConnectionPatch.__init__": [
            {
                "type": "method",
                "args": {
                    "xyA": "transforms.Transform",
                    "xyB": "transforms.Transform",
                    "coordsA": "transforms.Transform",
                    "coordsB": "transforms.Transform",
                    "axesA": "transforms.Transform",
                    "axesB": "transforms.Transform",
                    "arrowstyle": "str",
                    "connectionstyle": "str",
                    "patchA": "transforms.Transform",
                    "patchB": "transforms.Transform",
                    "shrinkA": "float",
                    "shrinkB": "float",
                    "mutation_scale": "float",
                    "mutation_aspect": "float",
                    "clip_on": "bool",
                    "dpi_cor": "float",
                    "kwargs": "object"
                }
            }
        ],
        "FancyBboxPatch.set_boxstyle": [
            {
                "type": "method",
                "args": {
                    "boxstyle": "str",
                    "kwargs": "object"
                }
            }
        ],
        "FancyBboxPatch.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple",
                    "width": "float",
                    "height": "float",
                    "boxstyle": "str",
                    "bbox_transmuter": "BoxStyle",
                    "mutation_scale": "float",
                    "mutation_aspect": "float",
                    "kwargs": "object"
                }
            }
        ],
        "_simpleprint_styles": [
            {
                "type": "func",
                "args": {
                    "_styles": "tuple"
                }
            }
        ],
        "Arrow.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "dx": "float",
                    "dy": "float",
                    "width": "float",
                    "kwargs": "Any"
                }
            }
        ],
        "Patch.get_verts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch.contains_points": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray",
                    "radius": "float"
                }
            }
        ],
        "Patch.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist",
                    "radius": "float"
                }
            }
        ],
        "_Style.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "stylename": "str",
                    "kw": "object"
                }
            }
        ],
        "Patch.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "Number"
                }
            }
        ],
        "Shadow._update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Shadow.__init__": [
            {
                "type": "method",
                "args": {
                    "patch": "Patch",
                    "ox": "float",
                    "oy": "float",
                    "props": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "ConnectionStyle._Base._clip": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "patchA": "Path",
                    "patchB": "Path"
                }
            }
        ],
        "patchdoc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ConnectionStyle._Base.__call__": [
            {
                "type": "method",
                "args": {
                    "posA": "np.ndarray",
                    "posB": "np.ndarray",
                    "shrinkA": "float",
                    "shrinkB": "float",
                    "patchA": "Path",
                    "patchB": "Path"
                }
            }
        ],
        "ConnectionPatch.get_path_in_displaycoord": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Shadow._update_transform": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "RegularPolygon.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple",
                    "numVertices": "int",
                    "radius": "float",
                    "orientation": "int",
                    "kwargs": "dict"
                }
            }
        ],
        "CirclePolygon.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple",
                    "radius": "float",
                    "resolution": "int",
                    "kwargs": "dict"
                }
            }
        ],
        "draw_bbox": [
            {
                "type": "func",
                "args": {
                    "bbox": "artist.Artist",
                    "renderer": "mpl.renderer.Renderer",
                    "color": "str",
                    "trans": "transforms.Transform"
                }
            }
        ]
    },
    "matplotlib.texmanager": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "TexManager.grey_arrayd": [
            {
                "type": "attr",
                "anno": "dict[str, mpl.image.Image]"
            }
        ],
        "TexManager.font_family": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TexManager.font_families": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "TexManager.font_info": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TexManager.rgba_arrayd": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager._fonts": [
            {
                "type": "attr",
                "anno": "dict[str, tuple[str, ...]]"
            }
        ],
        "TexManager._font_preamble": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TexManager.get_font_preamble": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager._re_vbox": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "TexManager.cachedir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager.texcache": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TexManager.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type"
                }
            }
        ],
        "TexManager.get_custom_preamble": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager._run_checked_subprocess": [
            {
                "type": "method",
                "args": {
                    "command": "tuple",
                    "tex": "str"
                }
            }
        ],
        "TexManager._get_preamble": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager.get_font_config": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager.get_basefile": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float",
                    "dpi": "float"
                }
            }
        ],
        "TexManager.make_tex_preview": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float"
                }
            }
        ],
        "TexManager.make_dvi_preview": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float"
                }
            }
        ],
        "TexManager.make_tex": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float"
                }
            }
        ],
        "TexManager.make_dvi": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float"
                }
            }
        ],
        "TexManager.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float",
                    "renderer": "ArtistRenderer"
                }
            }
        ],
        "TexManager.monospace": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager.cursive": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager.sans_serif": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager.serif": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TexManager.make_png": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float",
                    "dpi": "float"
                }
            }
        ],
        "TexManager.get_grey": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float",
                    "dpi": "float"
                }
            }
        ],
        "TexManager.get_rgba": [
            {
                "type": "method",
                "args": {
                    "tex": "str",
                    "fontsize": "float",
                    "dpi": "float",
                    "rgb": "tuple"
                }
            }
        ]
    },
    "matplotlib._color_data": {
        "BASE_COLORS": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "CSS4_COLORS": [
            {
                "type": "var",
                "anno": "OrderedDict[str, str]"
            }
        ],
        "XKCD_COLORS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "TABLEAU_COLORS": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ]
    },
    "matplotlib.backend_bases": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_default_filetypes": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_default_backends": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "register_backend": [
            {
                "type": "func",
                "args": {
                    "format": "str",
                    "backend": "str",
                    "description": "str"
                }
            }
        ],
        "RendererBase._texmanager": [
            {
                "type": "attr",
                "anno": "textmanager.TextManager"
            }
        ],
        "RendererBase._text2path": [
            {
                "type": "attr",
                "anno": "textpath.TextToPath"
            }
        ],
        "RendererBase.open_group": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "gid": "int"
                }
            }
        ],
        "RendererBase.close_group": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "RendererBase.draw_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "path": "Path",
                    "transform": "Path",
                    "rgbFace": "int"
                }
            }
        ],
        "RendererBase.draw_gouraud_triangle": [
            {
                "type": "method",
                "args": {
                    "gc": "Affine2D",
                    "points": "np.ndarray",
                    "colors": "np.ndarray",
                    "transform": "transforms.Transform"
                }
            }
        ],
        "RendererBase._iter_collection_uses_per_path": [
            {
                "type": "method",
                "args": {
                    "paths": "Path",
                    "all_transforms": "Path",
                    "offsets": "np.ndarray",
                    "facecolors": "np.ndarray",
                    "edgecolors": "np.ndarray"
                }
            }
        ],
        "RendererBase.get_image_magnification": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.draw_image": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "im": "np.ndarray",
                    "transform": "Transform"
                }
            }
        ],
        "RendererBase.option_image_nocomposite": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.option_scale_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.flipy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.get_canvas_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.points_to_pixels": [
            {
                "type": "method",
                "args": {
                    "points": "float"
                }
            }
        ],
        "RendererBase.start_rasterizing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.stop_rasterizing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.start_filter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.stop_filter": [
            {
                "type": "method",
                "args": {
                    "filter_func": "str"
                }
            }
        ],
        "GraphicsContextBase._alpha": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GraphicsContextBase._forced_alpha": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GraphicsContextBase._antialiased": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GraphicsContextBase._capstyle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GraphicsContextBase._cliprect": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "GraphicsContextBase._clippath": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "GraphicsContextBase._dashes": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GraphicsContextBase._joinstyle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GraphicsContextBase._linestyle": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GraphicsContextBase._linewidth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GraphicsContextBase._rgb": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "GraphicsContextBase._hatch": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "GraphicsContextBase._hatch_color": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "GraphicsContextBase._hatch_linewidth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GraphicsContextBase._url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GraphicsContextBase._gid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GraphicsContextBase._snap": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GraphicsContextBase._sketch": [
            {
                "type": "attr",
                "anno": "mpl.rcParams[float]"
            }
        ],
        "GraphicsContextBase.restore": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_antialiased": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_capstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_clip_rectangle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_dashes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_forced_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_joinstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_linewidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_rgb": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_url": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_gid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_snap": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.set_antialiased": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "GraphicsContextBase.set_clip_rectangle": [
            {
                "type": "method",
                "args": {
                    "rectangle": "Transform"
                }
            }
        ],
        "GraphicsContextBase.set_dashes": [
            {
                "type": "method",
                "args": {
                    "dash_offset": "float",
                    "dash_list": "np.ndarray"
                }
            }
        ],
        "GraphicsContextBase.set_linewidth": [
            {
                "type": "method",
                "args": {
                    "w": "float"
                }
            }
        ],
        "GraphicsContextBase.set_url": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "GraphicsContextBase.set_gid": [
            {
                "type": "method",
                "args": {
                    "id": "int"
                }
            }
        ],
        "GraphicsContextBase.set_snap": [
            {
                "type": "method",
                "args": {
                    "snap": "bool"
                }
            }
        ],
        "GraphicsContextBase.set_hatch": [
            {
                "type": "method",
                "args": {
                    "hatch": "np.ndarray"
                }
            }
        ],
        "GraphicsContextBase.get_hatch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_hatch_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.set_hatch_color": [
            {
                "type": "method",
                "args": {
                    "hatch_color": "np.ndarray"
                }
            }
        ],
        "GraphicsContextBase.get_hatch_linewidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_sketch_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.set_sketch_params": [
            {
                "type": "method",
                "args": {
                    "scale": "float",
                    "length": "float",
                    "randomness": "float"
                }
            }
        ],
        "TimerBase.callbacks": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TimerBase._timer_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerBase._timer_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerBase.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerBase.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerBase._interval": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TimerBase._single": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TimerBase.add_callback": [
            {
                "type": "method",
                "args": {
                    "func": "Callable",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "TimerBase._timer_set_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerBase.interval": [
            {
                "type": "method",
                "args": {
                    "interval": "int"
                }
            }
        ],
        "TimerBase.start": [
            {
                "type": "method",
                "args": {
                    "interval": "int"
                }
            }
        ],
        "TimerBase._timer_set_single_shot": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerBase.single_shot": [
            {
                "type": "method",
                "args": {
                    "ss": "bool"
                }
            }
        ],
        "Event.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Event.canvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasBase"
            }
        ],
        "Event.guiEvent": [
            {
                "type": "attr",
                "anno": "Event"
            }
        ],
        "Event.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "canvas": "FigureCanvasBase",
                    "guiEvent": "Event"
                }
            }
        ],
        "DrawEvent.renderer": [
            {
                "type": "attr",
                "anno": "RendererBase"
            }
        ],
        "DrawEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "canvas": "FigureCanvasBase",
                    "renderer": "RendererBase"
                }
            }
        ],
        "LocationEvent.lastevent": [
            {
                "type": "attr",
                "anno": "Event"
            }
        ],
        "LocationEvent.x": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LocationEvent.y": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LocationEvent.inaxes": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LocationEvent.xdata": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LocationEvent.ydata": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseButton.LEFT": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseButton.MIDDLE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseButton.RIGHT": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseButton.BACK": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseButton.FORWARD": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseEvent.button": [
            {
                "type": "attr",
                "anno": "MouseButton"
            }
        ],
        "MouseEvent.key": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseEvent.step": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseEvent.dblclick": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MouseEvent.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PickEvent.mouseevent": [
            {
                "type": "attr",
                "anno": "MouseEvent"
            }
        ],
        "PickEvent.artist": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KeyEvent.key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_get_renderer": [
            {
                "type": "func",
                "args": {
                    "figure": "Figure",
                    "print_method": "Callable[[IOIO], object]",
                    "draw_disabled": "bool"
                }
            }
        ],
        "FigureCanvasBase.required_interactive_framework": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasBase.events": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "FigureCanvasBase.fixed_dpi": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureCanvasBase.filetypes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FigureCanvasBase.supports_blit": [
            {
                "type": "method",
                "args": {
                    "cls": "object"
                }
            }
        ],
        "FigureCanvasBase._is_idle_drawing": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasBase._is_saving": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasBase.figure": [
            {
                "type": "attr",
                "anno": "Figure"
            }
        ],
        "FigureCanvasBase.manager": [
            {
                "type": "attr",
                "anno": "FigureManagerBase"
            }
        ],
        "FigureCanvasBase.callbacks": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "FigureCanvasBase.widgetlock": [
            {
                "type": "attr",
                "anno": "widgets.LockDraw"
            }
        ],
        "FigureCanvasBase._button": [
            {
                "type": "attr",
                "anno": "MouseButton"
            }
        ],
        "FigureCanvasBase._key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FigureCanvasBase.button_pick_id": [
            {
                "type": "attr",
                "anno": "plt.connect_callbacks.LockDraw"
            }
        ],
        "FigureCanvasBase.scroll_pick_id": [
            {
                "type": "attr",
                "anno": "plt.connect_callbacks.LockDraw"
            }
        ],
        "FigureCanvasBase.mouse_grabber": [
            {
                "type": "attr",
                "anno": "plt.Axes"
            }
        ],
        "FigureCanvasBase.toolbar": [
            {
                "type": "attr",
                "anno": "ToolManager"
            }
        ],
        "FigureCanvasBase._idle_draw_cntx": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasBase.is_saving": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasBase.blit": [
            {
                "type": "method",
                "args": {
                    "bbox": "np.ndarray"
                }
            }
        ],
        "FigureCanvasBase.resize": [
            {
                "type": "method",
                "args": {
                    "w": "int",
                    "h": "int"
                }
            }
        ],
        "FigureCanvasBase.grab_mouse": [
            {
                "type": "method",
                "args": {
                    "ax": "plt.Axes"
                }
            }
        ],
        "FigureCanvasBase.release_mouse": [
            {
                "type": "method",
                "args": {
                    "ax": "plt.Axes"
                }
            }
        ],
        "FigureCanvasBase.draw": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FigureCanvasBase.draw_idle": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FigureCanvasBase.draw_cursor": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "FigureCanvasBase.get_supported_filetypes": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FigureCanvas]"
                }
            }
        ],
        "FigureCanvasBase.get_supported_filetypes_grouped": [
            {
                "type": "method",
                "args": {
                    "cls": "FigureCanvasBase"
                }
            }
        ],
        "FigureCanvasBase.switch_backends": [
            {
                "type": "method",
                "args": {
                    "FigureCanvasClass": "type[FigureCanvas]"
                }
            }
        ],
        "FigureCanvasBase._timer_cls": [
            {
                "type": "attr",
                "anno": "type[TimerBase]"
            }
        ],
        "FigureCanvasBase.new_timer": [
            {
                "type": "method",
                "args": {
                    "interval": "int",
                    "callbacks": "list[TimerBase]"
                }
            }
        ],
        "FigureCanvasBase.flush_events": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasBase._looping": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FigureCanvasBase.start_event_loop": [
            {
                "type": "method",
                "args": {
                    "timeout": "float"
                }
            }
        ],
        "FigureCanvasBase.stop_event_loop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerBase.canvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasBase"
            }
        ],
        "FigureManagerBase.num": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FigureManagerBase.key_press_handler_id": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "FigureManagerBase.button_press_handler_id": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "FigureManagerBase.toolmanager": [
            {
                "type": "attr",
                "anno": "ToolManager"
            }
        ],
        "FigureManagerBase.toolbar": [
            {
                "type": "attr",
                "anno": "ToolManager"
            }
        ],
        "FigureManagerBase.statusbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerBase.destroy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerBase.full_screen_toggle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerBase.resize": [
            {
                "type": "method",
                "args": {
                    "w": "int",
                    "h": "int"
                }
            }
        ],
        "FigureManagerBase.get_window_title": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerBase.set_window_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "cursors": [
            {
                "type": "var",
                "anno": "IntEnum"
            }
        ],
        "_Mode.NONE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_Mode.PAN": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_Mode.ZOOM": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NavigationToolbar2.toolitems": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "NavigationToolbar2.canvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasBase"
            }
        ],
        "NavigationToolbar2._nav_stack": [
            {
                "type": "attr",
                "anno": "cbook.Stack"
            }
        ],
        "NavigationToolbar2._xypress": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "NavigationToolbar2._lastCursor": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NavigationToolbar2._id_press": [
            {
                "type": "attr",
                "anno": "mpl.connect"
            }
        ],
        "NavigationToolbar2._id_release": [
            {
                "type": "attr",
                "anno": "mpl.connect"
            }
        ],
        "NavigationToolbar2._id_drag": [
            {
                "type": "attr",
                "anno": "mpl.connect"
            }
        ],
        "NavigationToolbar2._zoom_info": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "NavigationToolbar2._button_pressed": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NavigationToolbar2.mode": [
            {
                "type": "attr",
                "anno": "_Mode"
            }
        ],
        "NavigationToolbar2.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "NavigationToolbar2.draw_rubberband": [
            {
                "type": "method",
                "args": {
                    "event": "Event",
                    "x0": "np.ndarray",
                    "y0": "np.ndarray",
                    "x1": "np.ndarray",
                    "y1": "np.ndarray"
                }
            }
        ],
        "NavigationToolbar2.remove_rubberband": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2._init_toolbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2.press": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2.release": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2.save_figure": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2.set_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor": "int"
                }
            }
        ],
        "NavigationToolbar2._wait_cursor_for_draw_cm": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2.set_history_buttons": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolContainerBase._icon_extension": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolContainerBase.toolmanager": [
            {
                "type": "attr",
                "anno": "ToolManager"
            }
        ],
        "ToolContainerBase.add_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "group": "str",
                    "position": "int",
                    "image": "str",
                    "description": "str",
                    "toggle": "bool"
                }
            }
        ],
        "ToolContainerBase.toggle_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "toggled": "bool"
                }
            }
        ],
        "ToolContainerBase.remove_toolitem": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ToolContainerBase.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "StatusbarBase.toolmanager": [
            {
                "type": "attr",
                "anno": "ToolManager"
            }
        ],
        "StatusbarBase.set_message": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_Backend.backend_version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_Backend.FigureCanvas": [
            {
                "type": "attr",
                "anno": "type[FigureCanvas]"
            }
        ],
        "get_registered_canvas_class": [
            {
                "type": "func",
                "args": {
                    "format": "str"
                }
            }
        ],
        "_Backend.FigureManager": [
            {
                "type": "attr",
                "anno": "Type[FigureManagerBase]"
            }
        ],
        "_Backend.trigger_manager_draw": [
            {
                "type": "attr",
                "anno": "ToolManager"
            }
        ],
        "_Backend.mainloop": [
            {
                "type": "attr",
                "anno": "threading.AbstractEventLoop"
            }
        ],
        "_Backend.new_figure_manager_given_figure": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FigureManagerWx]",
                    "num": "int",
                    "figure": "Figure"
                }
            }
        ],
        "FigureCanvasBase.mpl_disconnect": [
            {
                "type": "method",
                "args": {
                    "cid": "str"
                }
            }
        ],
        "RendererBase.get_texmanager": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.copy_properties": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase"
                }
            }
        ],
        "StatusbarBase._message_cbk": [
            {
                "type": "method",
                "args": {
                    "event": "ToolManagerMessageEvent"
                }
            }
        ],
        "RendererBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolContainerBase._tool_toggled_cbk": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "_Mode.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_is_non_interactive_terminal_ipython": [
            {
                "type": "func",
                "args": {
                    "ip": "IPython.core.IPython"
                }
            }
        ],
        "FigureCanvasBase.get_width_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ResizeEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "canvas": "FigureCanvasBase"
                }
            }
        ],
        "_Backend.Show.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Backend.export": [
            {
                "type": "method",
                "args": {
                    "cls": "type"
                }
            }
        ],
        "ToolContainerBase.trigger_tool": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "FigureCanvasBase.mpl_connect": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "func": "object"
                }
            }
        ],
        "FigureCanvasBase.print_figure": [
            {
                "type": "method",
                "args": {
                    "filename": "Union[str, os.PathLike]",
                    "dpi": "int",
                    "facecolor": "str",
                    "edgecolor": "str",
                    "orientation": "str",
                    "format": "str",
                    "bbox_inches": "str",
                    "pad_inches": "int",
                    "bbox_extra_artists": "int",
                    "backend": "_Backend",
                    "kwargs": "object"
                }
            }
        ],
        "TimerBase.__init__": [
            {
                "type": "method",
                "args": {
                    "interval": "int",
                    "callbacks": "dict"
                }
            }
        ],
        "RendererBase._iter_collection_raw_paths": [
            {
                "type": "method",
                "args": {
                    "master_transform": "Affine2D",
                    "paths": "Path",
                    "all_transforms": "Path"
                }
            }
        ],
        "FigureCanvasBase.inaxes": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple"
                }
            }
        ],
        "NavigationToolbar2._update_cursor": [
            {
                "type": "method",
                "args": {
                    "event": "MouseEvent"
                }
            }
        ],
        "FigureCanvasBase.pick": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "MouseEvent"
                }
            }
        ],
        "FigureCanvasBase.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "Figure"
                }
            }
        ],
        "NavigationToolbar2.update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureManagerBase.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasBase.get_default_filetype": [
            {
                "type": "method",
                "args": {
                    "cls": "FigureCanvasBase"
                }
            }
        ],
        "ToolContainerBase._get_image_filename": [
            {
                "type": "method",
                "args": {
                    "image": "str"
                }
            }
        ],
        "RendererBase.draw_markers": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "marker_path": "str",
                    "marker_trans": "str",
                    "path": "Path",
                    "trans": "Affine2D",
                    "rgbFace": "str"
                }
            }
        ],
        "FigureCanvasBase.leave_notify_event": [
            {
                "type": "method",
                "args": {
                    "guiEvent": "Event"
                }
            }
        ],
        "FigureCanvasBase.close_event": [
            {
                "type": "method",
                "args": {
                    "guiEvent": "Event"
                }
            }
        ],
        "FigureCanvasBase.resize_event": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasBase.draw_event": [
            {
                "type": "method",
                "args": {
                    "renderer": "RendererBase"
                }
            }
        ],
        "LocationEvent._update_enter_leave": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasBase._fix_ipython_backend2gui": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FigureCanvasBase]"
                }
            }
        ],
        "FigureCanvasBase.get_window_title": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasBase.get_default_filename": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicsContextBase.get_hatch_path": [
            {
                "type": "method",
                "args": {
                    "density": "float"
                }
            }
        ],
        "GraphicsContextBase.set_joinstyle": [
            {
                "type": "method",
                "args": {
                    "js": "str"
                }
            }
        ],
        "GraphicsContextBase.set_capstyle": [
            {
                "type": "method",
                "args": {
                    "cs": "str"
                }
            }
        ],
        "LocationEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "canvas": "FigureCanvasBase",
                    "x": "int",
                    "y": "int",
                    "guiEvent": "None"
                }
            }
        ],
        "FigureCanvasBase.enter_notify_event": [
            {
                "type": "method",
                "args": {
                    "guiEvent": "Event",
                    "xy": "tuple[int, int]"
                }
            }
        ],
        "KeyEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "canvas": "FigureCanvasBase",
                    "key": "str",
                    "x": "int",
                    "y": "int",
                    "guiEvent": "None"
                }
            }
        ],
        "FigureCanvasBase.key_release_event": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "guiEvent": "None"
                }
            }
        ],
        "FigureCanvasBase.key_press_event": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "guiEvent": "None"
                }
            }
        ],
        "MouseEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "canvas": "FigureCanvasBase",
                    "x": "int",
                    "y": "int",
                    "button": "MouseButton",
                    "key": "int",
                    "step": "int",
                    "dblclick": "bool",
                    "guiEvent": "None"
                }
            }
        ],
        "FigureCanvasBase.motion_notify_event": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "guiEvent": "Event"
                }
            }
        ],
        "FigureCanvasBase.button_release_event": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "button": "MouseButton",
                    "guiEvent": "Event"
                }
            }
        ],
        "FigureCanvasBase.button_press_event": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "button": "MouseButton",
                    "dblclick": "bool",
                    "guiEvent": "Event"
                }
            }
        ],
        "FigureCanvasBase.scroll_event": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "step": "int",
                    "guiEvent": "Event"
                }
            }
        ],
        "GraphicsContextBase.set_foreground": [
            {
                "type": "method",
                "args": {
                    "fg": "tuple",
                    "isRGBA": "bool"
                }
            }
        ],
        "GraphicsContextBase.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "GraphicsContextBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.new_gc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase._iter_collection": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "master_transform": "Affine2D",
                    "all_transforms": "Path",
                    "path_ids": "list[int]",
                    "offsets": "np.ndarray",
                    "offsetTrans": "np.ndarray",
                    "facecolors": "np.ndarray",
                    "edgecolors": "np.ndarray",
                    "linewidths": "tuple",
                    "linestyles": "tuple",
                    "antialiaseds": "tuple",
                    "urls": "tuple",
                    "offset_position": "str"
                }
            }
        ],
        "NavigationToolbar2.drag_zoom": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "GraphicsContextBase.set_clip_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "FigureCanvasBase._get_output_canvas": [
            {
                "type": "method",
                "args": {
                    "backend": "_Backend",
                    "fmt": "str"
                }
            }
        ],
        "TimerBase._on_timer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimerBase.remove_callback": [
            {
                "type": "method",
                "args": {
                    "func": "tuple",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "NavigationToolbar2.zoom": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2.pan": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "GraphicsContextBase.get_clip_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RendererBase.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str",
                    "ismath": "bool"
                }
            }
        ],
        "RendererBase.draw_gouraud_triangles": [
            {
                "type": "method",
                "args": {
                    "gc": "Affine2D",
                    "triangles_array": "np.ndarray",
                    "colors_array": "np.ndarray",
                    "transform": "transforms.Transform"
                }
            }
        ],
        "RendererBase.draw_path_collection": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "master_transform": "Affine2D",
                    "paths": "Path",
                    "all_transforms": "Path",
                    "offsets": "np.ndarray",
                    "offsetTrans": "np.ndarray",
                    "facecolors": "np.ndarray",
                    "edgecolors": "np.ndarray",
                    "linewidths": "tuple",
                    "linestyles": "tuple",
                    "antialiaseds": "tuple",
                    "urls": "tuple",
                    "offset_position": "str"
                }
            }
        ],
        "RendererBase.draw_quad_mesh": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "master_transform": "Affine2D",
                    "meshWidth": "int",
                    "meshHeight": "int",
                    "coordinates": "np.ndarray",
                    "offsets": "np.ndarray",
                    "offsetTrans": "OffsetTrans",
                    "facecolors": "np.ndarray",
                    "antialiased": "bool",
                    "edgecolors": "np.ndarray"
                }
            }
        ],
        "PickEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "canvas": "FigureCanvasBase",
                    "mouseevent": "MouseEvent",
                    "artist": "str",
                    "guiEvent": "None",
                    "kwargs": "object"
                }
            }
        ],
        "FigureCanvasBase.pick_event": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "MouseEvent",
                    "artist": "str",
                    "kwargs": "object"
                }
            }
        ],
        "NavigationToolbar2.push_current": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FigureCanvasBase.set_window_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "NavigationToolbar2._update_view": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2.home": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2.forward": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "NavigationToolbar2.back": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "button_press_handler": [
            {
                "type": "func",
                "args": {
                    "event": "MouseEvent",
                    "canvas": "plt.Axes",
                    "toolbar": "ToolManager"
                }
            }
        ],
        "FigureManagerBase.button_press": [
            {
                "type": "method",
                "args": {
                    "event": "MouseEvent"
                }
            }
        ],
        "NavigationToolbar2._draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2.draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NavigationToolbar2.release_zoom": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2.drag_pan": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2.press_zoom": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2.press_pan": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2.mouse_move": [
            {
                "type": "method",
                "args": {
                    "event": "MouseEvent"
                }
            }
        ],
        "NavigationToolbar2.release_pan": [
            {
                "type": "method",
                "args": {
                    "event": "MouseEvent"
                }
            }
        ],
        "NavigationToolbar2._zoom_pan_handler": [
            {
                "type": "method",
                "args": {
                    "event": "Event"
                }
            }
        ],
        "NavigationToolbar2.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase"
                }
            }
        ],
        "_Backend.show": [
            {
                "type": "method",
                "args": {
                    "cls": "type[ShowBase]",
                    "block": "bool"
                }
            }
        ],
        "_Backend.draw_if_interactive": [
            {
                "type": "method",
                "args": {
                    "cls": "FigureClass"
                }
            }
        ],
        "ShowBase.__call__": [
            {
                "type": "method",
                "args": {
                    "block": "bool"
                }
            }
        ],
        "RendererBase._get_text_path_transform": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "textpath.TextToPath",
                    "angle": "float",
                    "ismath": "bool"
                }
            }
        ],
        "RendererBase._draw_text_as_path": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "textpath.TextToPath",
                    "angle": "float",
                    "ismath": "bool"
                }
            }
        ],
        "RendererBase.draw_text": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "textpath.TextToPath",
                    "angle": "float",
                    "ismath": "bool",
                    "mtext": "Text"
                }
            }
        ],
        "RendererBase.draw_tex": [
            {
                "type": "method",
                "args": {
                    "gc": "GraphicsContextBase",
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "prop": "textpath.TextToPath",
                    "angle": "float",
                    "ismath": "str",
                    "mtext": "Text"
                }
            }
        ],
        "StatusbarBase.__init__": [
            {
                "type": "method",
                "args": {
                    "toolmanager": "ToolManager"
                }
            }
        ],
        "ToolContainerBase.add_tool": [
            {
                "type": "method",
                "args": {
                    "tool": "tools.ToolBase",
                    "group": "str",
                    "position": "int"
                }
            }
        ],
        "ToolContainerBase.__init__": [
            {
                "type": "method",
                "args": {
                    "toolmanager": "ToolManager"
                }
            }
        ],
        "key_press_handler": [
            {
                "type": "func",
                "args": {
                    "event": "KeyEvent",
                    "canvas": "FigureCanvasBase",
                    "toolbar": "ToolManager"
                }
            }
        ],
        "FigureManagerBase.key_press": [
            {
                "type": "method",
                "args": {
                    "event": "KeyEvent"
                }
            }
        ],
        "FigureManagerBase.__init__": [
            {
                "type": "method",
                "args": {
                    "canvas": "FigureCanvasBase",
                    "num": "int"
                }
            }
        ],
        "_Backend.new_figure_manager": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FigureManagerWx]",
                    "num": "int",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "matplotlib.rcsetup": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "interactive_bk": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "non_interactive_bk": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "all_backends": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "ValidateInStrings.key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ValidateInStrings.ignorecase": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ValidateInStrings._deprecated_since": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ValidateInStrings.valid": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ValidateInStrings.__init__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "valid": "list",
                    "ignorecase": "bool",
                    "_deprecated_since": "str"
                }
            }
        ],
        "_listify_validator": [
            {
                "type": "func",
                "args": {
                    "scalar_validator": "Callable[[np.ndarray], np.ndarray]",
                    "allow_stringlist": "bool",
                    "doc": "str"
                }
            }
        ],
        "validate_any": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_anylist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "_validate_date": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_path_exists": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_bool": [
            {
                "type": "func",
                "args": {
                    "b": "np.ndarray"
                }
            }
        ],
        "validate_bool_maybe_none": [
            {
                "type": "func",
                "args": {
                    "b": "np.ndarray"
                }
            }
        ],
        "validate_axisbelow": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_dpi": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_make_type_validator": [
            {
                "type": "func",
                "args": {
                    "cls": "type",
                    "allow_none": "bool"
                }
            }
        ],
        "validate_string": [
            {
                "type": "var",
                "anno": "Callable[[str], str]"
            }
        ],
        "validate_string_or_None": [
            {
                "type": "var",
                "anno": "Callable[[str], str]"
            }
        ],
        "validate_stringlist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "validate_int": [
            {
                "type": "var",
                "anno": "Callable[[int], int]"
            }
        ],
        "validate_int_or_None": [
            {
                "type": "var",
                "anno": "Callable[[int], int]"
            }
        ],
        "validate_float": [
            {
                "type": "var",
                "anno": "Callable[[float], float]"
            }
        ],
        "validate_float_or_None": [
            {
                "type": "var",
                "anno": "Callable[[float], float]"
            }
        ],
        "validate_floatlist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "_validate_standard_backends": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "_auto_backend_sentinel": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "validate_backend": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_toolbar": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_orientation": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_aspect": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_fontweight": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_validate_mathtext_fallback_to_cm": [
            {
                "type": "func",
                "args": {
                    "b": "np.ndarray"
                }
            }
        ],
        "validate_fontset": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_mathtext_default": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "_validate_alignment": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "update_savefig_format": [
            {
                "type": "func",
                "args": {
                    "value": "str"
                }
            }
        ],
        "_update_savefig_format": [
            {
                "type": "func",
                "args": {
                    "value": "str"
                }
            }
        ],
        "validate_ps_papersize": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_ps_distiller": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "_validate_named_linestyle": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "_validate_linestyle": [
            {
                "type": "func",
                "args": {
                    "ls": "str"
                }
            }
        ],
        "_deprecate_case_insensitive_join_cap": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_fillstyle": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_fillstylelist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "validate_markevery": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_markeverylist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "validate_legend_loc": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_svg_fonttype": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "_validate_hinting": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_hinting": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_pgf_texsystem": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_movie_writer": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_movie_frame_fmt": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_axis_locator": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_movie_html_fmt": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "validate_bbox": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "_validate_greaterequal0_lessthan1": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_validate_greaterequal0_lessequal1": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_range_validators": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "validate_grid_axis": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "_prop_aliases": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "validate_hist_bins": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_webagg_address": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_axes_titlelocation": [
            {
                "type": "var",
                "anno": "ValidateInStrings"
            }
        ],
        "_convert_validator_spec": [
            {
                "type": "func",
                "args": {
                    "key": "str",
                    "conv": "Callable[[str], str]"
                }
            }
        ],
        "_hardcoded_defaults": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "validate_fonttype": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "ValidateInStrings.__call__": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_font_properties": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_capstyle": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_capstylelist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "validate_joinstyle": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_joinstylelist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "_make_nseq_validator": [
            {
                "type": "func",
                "args": {
                    "cls": "type",
                    "n": "int",
                    "allow_none": "bool"
                }
            }
        ],
        "validate_nseq_int": [
            {
                "type": "var",
                "anno": "Callable[[int], int]"
            }
        ],
        "validate_nseq_float": [
            {
                "type": "var",
                "anno": "Callable[[float], float]"
            }
        ],
        "validate_dashlist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "validate_sketch": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_whiskers": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "validate_color": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_colorlist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "validate_color_for_prop_cycle": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_color_or_auto": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_color_or_inherit": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_animation_writer_path": [
            {
                "type": "func",
                "args": {
                    "p": "str"
                }
            }
        ],
        "validate_hatch": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_hatchlist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "_prop_validators": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_validate_mathtext_fallback": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_fontsize": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_fontsizelist": [
            {
                "type": "var",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "validate_fontsize_None": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "_validate_tex_preamble": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "validate_cycler": [
            {
                "type": "func",
                "args": {
                    "s": "np.ndarray"
                }
            }
        ],
        "_validators": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "cycler": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ]
    },
    "matplotlib.path": {
        "Path.code_type": [
            {
                "type": "attr",
                "anno": "type[np.ndarray]"
            }
        ],
        "Path.STOP": [
            {
                "type": "attr",
                "anno": "type[np.ndarray]"
            }
        ],
        "Path.MOVETO": [
            {
                "type": "attr",
                "anno": "type[np.ndarray]"
            }
        ],
        "Path.LINETO": [
            {
                "type": "attr",
                "anno": "type[np.ndarray]"
            }
        ],
        "Path.CURVE3": [
            {
                "type": "attr",
                "anno": "type[np.ndarray]"
            }
        ],
        "Path.CURVE4": [
            {
                "type": "attr",
                "anno": "type[np.ndarray]"
            }
        ],
        "Path.CLOSEPOLY": [
            {
                "type": "attr",
                "anno": "type[np.ndarray]"
            }
        ],
        "Path.NUM_VERTICES_FOR_CODE": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Path._vertices": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Path._codes": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Path._interpolation_steps": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Path._readonly": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Path._simplify_threshold": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Path._should_simplify": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Path.simplify_threshold": [
            {
                "type": "method",
                "args": {
                    "threshold": "int"
                }
            }
        ],
        "Path.should_simplify": [
            {
                "type": "method",
                "args": {
                    "should_simplify": "bool"
                }
            }
        ],
        "Path.readonly": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Path.__copy__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Path.copy": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Path.intersects_path": [
            {
                "type": "method",
                "args": {
                    "other": "np.ndarray",
                    "filled": "bool"
                }
            }
        ],
        "Path._unit_rectangle": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Path.unit_rectangle": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]"
                }
            }
        ],
        "Path._unit_regular_polygons": [
            {
                "type": "attr",
                "anno": "WeakValueDictionary[int, Path]"
            }
        ],
        "Path._unit_regular_stars": [
            {
                "type": "attr",
                "anno": "WeakValueDictionary[tuple[int, float]]"
            }
        ],
        "Path._unit_circle": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Path._unit_circle_righthalf": [
            {
                "type": "attr",
                "anno": "weakvalue[Path]"
            }
        ],
        "Path.unit_circle_righthalf": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]"
                }
            }
        ],
        "Path.arc": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "theta1": "float",
                    "theta2": "float",
                    "n": "int",
                    "is_wedge": "bool"
                }
            }
        ],
        "Path.wedge": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "theta1": "float",
                    "theta2": "float",
                    "n": "int"
                }
            }
        ],
        "Path.make_compound_path_from_polys": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]",
                    "XY": "np.ndarray"
                }
            }
        ],
        "Path.unit_regular_polygon": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]",
                    "numVertices": "int"
                }
            }
        ],
        "Path.contains_point": [
            {
                "type": "method",
                "args": {
                    "point": "tuple",
                    "transform": "Path",
                    "radius": "float"
                }
            }
        ],
        "Path._update_values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Path.codes": [
            {
                "type": "method",
                "args": {
                    "codes": "np.ndarray"
                }
            }
        ],
        "Path.vertices": [
            {
                "type": "method",
                "args": {
                    "vertices": "np.ndarray"
                }
            }
        ],
        "Path.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Path.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Path._fast_from_codes_and_verts": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]",
                    "verts": "np.ndarray",
                    "codes": "np.ndarray",
                    "internals_from": "Path"
                }
            }
        ],
        "Path.cleaned": [
            {
                "type": "method",
                "args": {
                    "transform": "Path",
                    "remove_nans": "bool",
                    "clip": "float",
                    "quantize": "bool",
                    "simplify": "bool",
                    "curves": "bool",
                    "stroke_width": "float",
                    "snap": "bool",
                    "sketch": "int"
                }
            }
        ],
        "Path.iter_segments": [
            {
                "type": "method",
                "args": {
                    "transform": "Path",
                    "remove_nans": "bool",
                    "clip": "float",
                    "snap": "bool",
                    "stroke_width": "float",
                    "simplify": "bool",
                    "curves": "bool",
                    "sketch": "int"
                }
            }
        ],
        "Path.iter_bezier": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "Path.transformed": [
            {
                "type": "method",
                "args": {
                    "transform": "Transform"
                }
            }
        ],
        "Path.intersects_bbox": [
            {
                "type": "method",
                "args": {
                    "bbox": "_path.Bbox",
                    "filled": "bool"
                }
            }
        ],
        "get_path_collection_extents": [
            {
                "type": "func",
                "args": {
                    "master_transform": "Transform",
                    "paths": "np.ndarray",
                    "transforms": "Transform",
                    "offsets": "np.ndarray",
                    "offset_transform": "Transform"
                }
            }
        ],
        "Path.__init__": [
            {
                "type": "method",
                "args": {
                    "vertices": "np.ndarray",
                    "codes": "np.ndarray",
                    "_interpolation_steps": "int",
                    "closed": "bool",
                    "readonly": "bool"
                }
            }
        ],
        "Path.get_extents": [
            {
                "type": "method",
                "args": {
                    "transform": "Transform",
                    "kwargs": "Any"
                }
            }
        ],
        "Path.circle": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]",
                    "center": "tuple[float, float]",
                    "radius": "float",
                    "readonly": "bool"
                }
            }
        ],
        "Path.unit_circle": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]"
                }
            }
        ],
        "Path.interpolated": [
            {
                "type": "method",
                "args": {
                    "steps": "int"
                }
            }
        ],
        "Path.hatch": [
            {
                "type": "method",
                "args": {
                    "hatchpattern": "np.ndarray",
                    "density": "int"
                }
            }
        ],
        "Path.make_compound_path": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]",
                    "args": "Path"
                }
            }
        ],
        "Path.clip_to_bbox": [
            {
                "type": "method",
                "args": {
                    "bbox": "np.ndarray",
                    "inside": "bool"
                }
            }
        ],
        "Path.to_polygons": [
            {
                "type": "method",
                "args": {
                    "transform": "np.ndarray",
                    "width": "int",
                    "height": "int",
                    "closed_only": "bool"
                }
            }
        ],
        "Path.contains_path": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "transform": "_path.Transform"
                }
            }
        ],
        "Path.contains_points": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray",
                    "transform": "transforms.Transform",
                    "radius": "float"
                }
            }
        ],
        "Path.__deepcopy__": [
            {
                "type": "method",
                "args": {
                    "memo": "dict"
                }
            }
        ],
        "Path.deepcopy": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Path.unit_regular_star": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Path]",
                    "numVertices": "int",
                    "innerCircle": "float"
                }
            }
        ],
        "Path.unit_regular_asterisk": [
            {
                "type": "method",
                "args": {
                    "cls": "Type[Path]",
                    "numVertices": "int"
                }
            }
        ]
    },
    "matplotlib.offsetbox": {
        "DEBUG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "OffsetBox._children": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "OffsetBox._offset": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "OffsetBox.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "OffsetBox.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "OffsetBox.set_offset": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple"
                }
            }
        ],
        "OffsetBox.get_offset": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float",
                    "xdescent": "float",
                    "ydescent": "float",
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "OffsetBox.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "OffsetBox.set_width": [
            {
                "type": "method",
                "args": {
                    "width": "float"
                }
            }
        ],
        "OffsetBox.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "OffsetBox.set_height": [
            {
                "type": "method",
                "args": {
                    "height": "float"
                }
            }
        ],
        "OffsetBox.get_visible_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OffsetBox.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OffsetBox.get_extent_offsets": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "OffsetBox.get_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "PackerBase.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PackerBase.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PackerBase.sep": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PackerBase.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PackerBase.mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PackerBase.align": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PackerBase._children": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PackerBase.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float",
                    "sep": "float",
                    "width": "float",
                    "height": "float",
                    "align": "str",
                    "mode": "str",
                    "children": "int"
                }
            }
        ],
        "VPacker.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float",
                    "sep": "float",
                    "width": "float",
                    "height": "float",
                    "align": "str",
                    "mode": "str",
                    "children": "list"
                }
            }
        ],
        "HPacker.__init__": [
            {
                "type": "method",
                "args": {
                    "pad": "float",
                    "sep": "float",
                    "width": "float",
                    "height": "float",
                    "align": "str",
                    "mode": "str",
                    "children": "list"
                }
            }
        ],
        "PaddedBox.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PaddedBox._children": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PaddedBox.patch": [
            {
                "type": "attr",
                "anno": "FancyBboxPatch"
            }
        ],
        "PaddedBox.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DrawingArea.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DrawingArea.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DrawingArea.xdescent": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DrawingArea.ydescent": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DrawingArea._clip_children": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DrawingArea.offset_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "DrawingArea.dpi_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "DrawingArea.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DrawingArea.clip_children": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "DrawingArea.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DrawingArea.set_transform": [
            {
                "type": "method",
                "args": {
                    "t": "mtransforms.Affine2D"
                }
            }
        ],
        "DrawingArea._offset": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "DrawingArea.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DrawingArea.get_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "TextArea._text": [
            {
                "type": "attr",
                "anno": "mtext.Text"
            }
        ],
        "TextArea._children": [
            {
                "type": "attr",
                "anno": "list[mtext.Text]"
            }
        ],
        "TextArea.offset_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "TextArea._baseline_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "TextArea._multilinebaseline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextArea._minimumdescent": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextArea.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextArea.set_text": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "TextArea.set_multilinebaseline": [
            {
                "type": "method",
                "args": {
                    "t": "bool"
                }
            }
        ],
        "TextArea.get_multilinebaseline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextArea.set_minimumdescent": [
            {
                "type": "method",
                "args": {
                    "t": "bool"
                }
            }
        ],
        "TextArea.get_minimumdescent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextArea.set_transform": [
            {
                "type": "method",
                "args": {
                    "t": "mtransforms.Affine2D"
                }
            }
        ],
        "TextArea._offset": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "TextArea.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AuxTransformBox.aux_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "AuxTransformBox.offset_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "AuxTransformBox.ref_offset_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "AuxTransformBox.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AuxTransformBox.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AuxTransformBox.set_transform": [
            {
                "type": "method",
                "args": {
                    "t": "mtransforms.Affine2D"
                }
            }
        ],
        "AuxTransformBox._offset": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AuxTransformBox.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnchoredOffsetbox.zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AnchoredOffsetbox.codes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnchoredOffsetbox.loc": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnchoredOffsetbox.borderpad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AnchoredOffsetbox.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AnchoredOffsetbox.prop": [
            {
                "type": "attr",
                "anno": "FontProperties"
            }
        ],
        "AnchoredOffsetbox.patch": [
            {
                "type": "attr",
                "anno": "FancyBboxPatch"
            }
        ],
        "AnchoredOffsetbox._child": [
            {
                "type": "attr",
                "anno": "OffsetBox"
            }
        ],
        "AnchoredOffsetbox.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnchoredOffsetbox.get_child": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnchoredOffsetbox.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnchoredOffsetbox._bbox_to_anchor": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "AnchoredOffsetbox._bbox_to_anchor_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformedBbox"
            }
        ],
        "AnchoredText.txt": [
            {
                "type": "attr",
                "anno": "TextArea"
            }
        ],
        "OffsetImage._dpi_cor": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "OffsetImage.image": [
            {
                "type": "attr",
                "anno": "BboxImage"
            }
        ],
        "OffsetImage._children": [
            {
                "type": "attr",
                "anno": "list[BboxImage]"
            }
        ],
        "OffsetImage._data": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "OffsetImage.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "OffsetImage.get_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OffsetImage._zoom": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "OffsetImage.set_zoom": [
            {
                "type": "method",
                "args": {
                    "zoom": "float"
                }
            }
        ],
        "OffsetImage.get_zoom": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OffsetImage.get_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OffsetImage.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnnotationBbox.zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AnnotationBbox.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnnotationBbox.offsetbox": [
            {
                "type": "attr",
                "anno": "OffsetBox"
            }
        ],
        "AnnotationBbox.arrowprops": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnnotationBbox.xybox": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AnnotationBbox.boxcoords": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AnnotationBbox._arrow_relpos": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AnnotationBbox.arrow_patch": [
            {
                "type": "attr",
                "anno": "FancyArrowPatch"
            }
        ],
        "AnnotationBbox._box_alignment": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AnnotationBbox.patch": [
            {
                "type": "attr",
                "anno": "FancyBboxPatch"
            }
        ],
        "AnnotationBbox.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnnotationBbox.xyann": [
            {
                "type": "method",
                "args": {
                    "xyann": "np.ndarray"
                }
            }
        ],
        "AnnotationBbox.anncoords": [
            {
                "type": "method",
                "args": {
                    "coords": "tuple"
                }
            }
        ],
        "AnnotationBbox.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnnotationBbox.prop": [
            {
                "type": "attr",
                "anno": "FontProperties"
            }
        ],
        "AnnotationBbox.get_fontsize": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "AnnotationBbox._renderer": [
            {
                "type": "attr",
                "anno": "mtransforms.Bbox"
            }
        ],
        "DraggableBase.ref_artist": [
            {
                "type": "attr",
                "anno": "martist.Artist"
            }
        ],
        "DraggableBase.got_artist": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DraggableBase.canvas": [
            {
                "type": "attr",
                "anno": "FigureCanvasBase"
            }
        ],
        "DraggableBase._use_blit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DraggableBase.cids": [
            {
                "type": "attr",
                "anno": "list[cbook.CartID]"
            }
        ],
        "DraggableBase.mouse_x": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DraggableBase.mouse_y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DraggableBase.background": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "DraggableBase._c1": [
            {
                "type": "attr",
                "anno": "cbook.CartID"
            }
        ],
        "DraggableBase.disconnect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DraggableBase.save_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DraggableBase.update_offset": [
            {
                "type": "method",
                "args": {
                    "dx": "float",
                    "dy": "float"
                }
            }
        ],
        "DraggableBase.finalize_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DraggableOffsetBox.offsetbox": [
            {
                "type": "attr",
                "anno": "OffsetBox"
            }
        ],
        "DraggableAnnotation.annotation": [
            {
                "type": "attr",
                "anno": "AnnotationBbox"
            }
        ],
        "AuxTransformBox.add_artist": [
            {
                "type": "method",
                "args": {
                    "a": "martist.Artist"
                }
            }
        ],
        "OffsetImage.get_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "bbox_artist": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "OffsetBox.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "PaddedBox.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "DrawingArea.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "TextArea.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "AuxTransformBox.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "AnchoredOffsetbox.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "OffsetImage.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "AnnotationBbox.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "OffsetBox.set_figure": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "AnnotationBbox.set_figure": [
            {
                "type": "method",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "TextArea.get_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "OffsetBox.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "AnnotationBbox.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "AuxTransformBox.get_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Affine2D"
                }
            }
        ],
        "AuxTransformBox.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Affine2D"
                }
            }
        ],
        "AuxTransformBox.__init__": [
            {
                "type": "method",
                "args": {
                    "aux_transform": "mtransforms.Affine2D"
                }
            }
        ],
        "DrawingArea.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float",
                    "xdescent": "float",
                    "ydescent": "float",
                    "clip": "bool"
                }
            }
        ],
        "OffsetImage.set_data": [
            {
                "type": "method",
                "args": {
                    "arr": "np.ndarray"
                }
            }
        ],
        "TextArea.get_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnchoredOffsetbox.update_frame": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox",
                    "fontsize": "float | None"
                }
            }
        ],
        "PaddedBox.update_frame": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox",
                    "fontsize": "float | None"
                }
            }
        ],
        "OffsetImage.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "AnchoredOffsetbox._update_offset_func": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer",
                    "fontsize": "float | None"
                }
            }
        ],
        "AnchoredOffsetbox.set_bbox_to_anchor": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox",
                    "transform": "mtransforms.TransformedBbox"
                }
            }
        ],
        "TextArea.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "DrawingArea.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "OffsetBox.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "AnchoredOffsetbox._get_anchored_bbox": [
            {
                "type": "method",
                "args": {
                    "loc": "int",
                    "bbox": "Bbox",
                    "parentbbox": "Bbox",
                    "borderpad": "int"
                }
            }
        ],
        "_get_aligned_offsets": [
            {
                "type": "func",
                "args": {
                    "hd_list": "list",
                    "height": "float",
                    "align": "str"
                }
            }
        ],
        "_get_packed_offsets": [
            {
                "type": "func",
                "args": {
                    "wd_list": "list",
                    "total": "float",
                    "sep": "float",
                    "mode": "str"
                }
            }
        ],
        "OffsetBox.axes": [
            {
                "type": "method",
                "args": {
                    "ax": "np.ndarray"
                }
            }
        ],
        "AnchoredOffsetbox.get_bbox_to_anchor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnchoredOffsetbox.get_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "AnchoredOffsetbox.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "AnchoredOffsetbox.set_child": [
            {
                "type": "method",
                "args": {
                    "child": "OffsetBox"
                }
            }
        ],
        "DraggableOffsetBox.get_loc_in_canvas": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DraggableBase._check_still_parented": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DraggableBase.on_release": [
            {
                "type": "method",
                "args": {
                    "event": "martist.ButtonReleaseEvent"
                }
            }
        ],
        "PaddedBox.__init__": [
            {
                "type": "method",
                "args": {
                    "child": "martist.Artist",
                    "pad": "float",
                    "draw_frame": "bool",
                    "patch_attrs": "dict"
                }
            }
        ],
        "OffsetImage.__init__": [
            {
                "type": "method",
                "args": {
                    "arr": "np.ndarray",
                    "zoom": "float",
                    "cmap": "cm.Colormap",
                    "norm": "cm.Colormap",
                    "interpolation": "str",
                    "origin": "str",
                    "filternorm": "bool",
                    "filterrad": "float",
                    "resample": "bool",
                    "dpi_cor": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "DraggableAnnotation.update_offset": [
            {
                "type": "method",
                "args": {
                    "dx": "float",
                    "dy": "float"
                }
            }
        ],
        "DraggableAnnotation.save_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextArea.__init__": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "textprops": "dict",
                    "multilinebaseline": "bool",
                    "minimumdescent": "bool"
                }
            }
        ],
        "AnchoredText.__init__": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "pad": "float",
                    "borderpad": "float",
                    "prop": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "AnnotationBbox.set_fontsize": [
            {
                "type": "method",
                "args": {
                    "s": "float"
                }
            }
        ],
        "AnnotationBbox.__init__": [
            {
                "type": "method",
                "args": {
                    "offsetbox": "OffsetBox",
                    "xy": "np.ndarray",
                    "xybox": "tuple",
                    "xycoords": "str",
                    "boxcoords": "tuple",
                    "frameon": "bool",
                    "pad": "float",
                    "annotation_clip": "float",
                    "box_alignment": "tuple",
                    "bboxprops": "dict",
                    "arrowprops": "dict",
                    "fontsize": "float",
                    "kwargs": "object"
                }
            }
        ],
        "AnchoredOffsetbox.__init__": [
            {
                "type": "method",
                "args": {
                    "loc": "str",
                    "pad": "float",
                    "borderpad": "float",
                    "child": "OffsetBox",
                    "prop": "dict",
                    "frameon": "bool",
                    "bbox_to_anchor": "Bbox",
                    "bbox_transform": "mtransforms.TransformedBbox",
                    "kwargs": "object"
                }
            }
        ],
        "PaddedBox.get_extent_offsets": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ],
        "HPacker.get_extent_offsets": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "VPacker.get_extent_offsets": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Renderer"
                }
            }
        ],
        "AuxTransformBox.set_offset": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple"
                }
            }
        ],
        "TextArea.set_offset": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple"
                }
            }
        ],
        "DrawingArea.set_offset": [
            {
                "type": "method",
                "args": {
                    "xy": "tuple"
                }
            }
        ],
        "DraggableOffsetBox.update_offset": [
            {
                "type": "method",
                "args": {
                    "dx": "float",
                    "dy": "float"
                }
            }
        ],
        "DraggableOffsetBox.save_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnnotationBbox._update_position_xybox": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D",
                    "xy_pixel": "np.ndarray"
                }
            }
        ],
        "AnnotationBbox.update_positions": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "DraggableBase.artist_picker": [
            {
                "type": "method",
                "args": {
                    "artist": "martist.Artist",
                    "evt": "np.ndarray"
                }
            }
        ],
        "DrawingArea.add_artist": [
            {
                "type": "method",
                "args": {
                    "a": "martist.Artist"
                }
            }
        ],
        "DraggableBase.on_motion_blit": [
            {
                "type": "method",
                "args": {
                    "evt": "mtext.LocationEvent"
                }
            }
        ],
        "DraggableBase.on_motion": [
            {
                "type": "method",
                "args": {
                    "evt": "martist.MotionEvent"
                }
            }
        ],
        "DraggableBase.on_pick": [
            {
                "type": "method",
                "args": {
                    "evt": "martist.PickEvent"
                }
            }
        ],
        "DraggableBase.__init__": [
            {
                "type": "method",
                "args": {
                    "ref_artist": "martist.Artist",
                    "use_blit": "bool"
                }
            }
        ],
        "DraggableAnnotation.__init__": [
            {
                "type": "method",
                "args": {
                    "annotation": "AnnotationBbox",
                    "use_blit": "bool"
                }
            }
        ],
        "DraggableOffsetBox.__init__": [
            {
                "type": "method",
                "args": {
                    "ref_artist": "martist.Artist",
                    "offsetbox": "OffsetBox",
                    "use_blit": "bool"
                }
            }
        ],
        "PaddedBox.draw_frame": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtransforms.Bbox"
                }
            }
        ]
    },
    "matplotlib.lines": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "segment_hits": [
            {
                "type": "func",
                "args": {
                    "cx": "np.ndarray",
                    "cy": "np.ndarray",
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "radius": "float"
                }
            }
        ],
        "Line2D.lineStyles": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Line2D._lineStyles": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Line2D._drawStyles_l": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Line2D._drawStyles_s": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Line2D.drawStyles": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Line2D.drawStyleKeys": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Line2D.markers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Line2D.filled_markers": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Line2D.fillStyles": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Line2D.zorder": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Line2D.validCap": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Line2D.validJoin": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Line2D._dashcapstyle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._dashjoinstyle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._solidjoinstyle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._solidcapstyle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._linestyles": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Line2D._drawstyle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._linewidth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._dashSeq": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._dashOffset": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._us_dashSeq": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._us_dashOffset": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._color": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._marker": [
            {
                "type": "attr",
                "anno": "MarkerStyle"
            }
        ],
        "Line2D._markevery": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._markersize": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._antialiased": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._markeredgecolor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._markeredgewidth": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._markerfacecolor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._markerfacecoloralt": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D.ind_offset": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._xorig": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Line2D._yorig": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Line2D._invalidx": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Line2D._invalidy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Line2D._x": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Line2D._y": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Line2D._xy": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Line2D._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Line2D._transformed_path": [
            {
                "type": "attr",
                "anno": "TransformedPath"
            }
        ],
        "Line2D._subslice": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Line2D._x_filled": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D._pickradius": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D.set_pickradius": [
            {
                "type": "method",
                "args": {
                    "d": "float"
                }
            }
        ],
        "Line2D.get_pickradius": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.pickradius": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "Line2D.get_fillstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Line2D.set_markevery": [
            {
                "type": "method",
                "args": {
                    "every": "float"
                }
            }
        ],
        "Line2D.get_markevery": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D._picker": [
            {
                "type": "attr",
                "anno": "Number"
            }
        ],
        "Line2D.set_picker": [
            {
                "type": "method",
                "args": {
                    "p": "Number"
                }
            }
        ],
        "Line2D._xcid": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "Line2D._ycid": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "Line2D.set_transform": [
            {
                "type": "method",
                "args": {
                    "t": "Transform"
                }
            }
        ],
        "Line2D._is_sorted": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "Line2D.get_antialiased": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_drawstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_linewidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_marker": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_markeredgewidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D._get_markerfacecolor": [
            {
                "type": "method",
                "args": {
                    "alt": "bool"
                }
            }
        ],
        "Line2D.get_markerfacecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_markerfacecoloralt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_markersize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.set_antialiased": [
            {
                "type": "method",
                "args": {
                    "b": "float"
                }
            }
        ],
        "Line2D.set_color": [
            {
                "type": "method",
                "args": {
                    "color": "float"
                }
            }
        ],
        "Line2D._linestyle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Line2D.get_linestyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.set_markeredgecolor": [
            {
                "type": "method",
                "args": {
                    "ec": "str"
                }
            }
        ],
        "Line2D.set_markerfacecolor": [
            {
                "type": "method",
                "args": {
                    "fc": "float"
                }
            }
        ],
        "Line2D.set_markerfacecoloralt": [
            {
                "type": "method",
                "args": {
                    "fc": "float"
                }
            }
        ],
        "Line2D.set_markersize": [
            {
                "type": "method",
                "args": {
                    "sz": "float"
                }
            }
        ],
        "Line2D.set_xdata": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "Line2D.set_ydata": [
            {
                "type": "method",
                "args": {
                    "y": "np.ndarray"
                }
            }
        ],
        "Line2D.set_data": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "Line2D.get_dash_joinstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_solid_joinstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_dash_capstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_solid_capstyle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.is_dashed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxLine._transformed_path": [
            {
                "type": "attr",
                "anno": "TransformedPath"
            }
        ],
        "VertexSelector.axes": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "VertexSelector.line": [
            {
                "type": "attr",
                "anno": "Line2D"
            }
        ],
        "VertexSelector.canvas": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "VertexSelector.cid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VertexSelector.ind": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "VertexSelector.process_selected": [
            {
                "type": "method",
                "args": {
                    "ind": "set",
                    "xs": "float",
                    "ys": "float"
                }
            }
        ],
        "lineStyles": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "lineMarkers": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "drawStyles": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "fillStyles": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Line2D.set_marker": [
            {
                "type": "method",
                "args": {
                    "marker": "MarkerStyle"
                }
            }
        ],
        "Line2D.__init__": [
            {
                "type": "method",
                "args": {
                    "xdata": "np.ndarray",
                    "ydata": "np.ndarray",
                    "linewidth": "float",
                    "linestyle": "float",
                    "color": "float",
                    "marker": "str",
                    "markersize": "float",
                    "markeredgewidth": "float",
                    "markeredgecolor": "str",
                    "markerfacecolor": "str",
                    "markerfacecoloralt": "str",
                    "fillstyle": "str",
                    "antialiased": "float",
                    "dash_capstyle": "float",
                    "solid_capstyle": "float",
                    "dash_joinstyle": "float",
                    "solid_joinstyle": "float",
                    "pickradius": "float",
                    "drawstyle": "str",
                    "markevery": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Line2D.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "_AxLine.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "_AxLine.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.set_markeredgewidth": [
            {
                "type": "method",
                "args": {
                    "ew": "float"
                }
            }
        ],
        "Line2D.get_markeredgecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_get_dash_pattern": [
            {
                "type": "func",
                "args": {
                    "style": "str"
                }
            }
        ],
        "_mark_every_path": [
            {
                "type": "func",
                "args": {
                    "markevery": "Union[int, Real, slice]",
                    "tpath": "TransformedPath",
                    "affine": "Affine2D",
                    "ax_transform": "Affine2D"
                }
            }
        ],
        "Line2D.set_solid_capstyle": [
            {
                "type": "method",
                "args": {
                    "s": "float"
                }
            }
        ],
        "Line2D.set_dash_capstyle": [
            {
                "type": "method",
                "args": {
                    "s": "float"
                }
            }
        ],
        "Line2D.set_solid_joinstyle": [
            {
                "type": "method",
                "args": {
                    "s": "float"
                }
            }
        ],
        "Line2D.set_dash_joinstyle": [
            {
                "type": "method",
                "args": {
                    "s": "float"
                }
            }
        ],
        "Line2D.set_drawstyle": [
            {
                "type": "method",
                "args": {
                    "drawstyle": "str"
                }
            }
        ],
        "Line2D.set_fillstyle": [
            {
                "type": "method",
                "args": {
                    "fs": "str"
                }
            }
        ],
        "Line2D.recache": [
            {
                "type": "method",
                "args": {
                    "always": "bool"
                }
            }
        ],
        "Line2D.get_xydata": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.get_ydata": [
            {
                "type": "method",
                "args": {
                    "orig": "bool"
                }
            }
        ],
        "Line2D.get_xdata": [
            {
                "type": "method",
                "args": {
                    "orig": "bool"
                }
            }
        ],
        "Line2D.get_data": [
            {
                "type": "method",
                "args": {
                    "orig": "bool"
                }
            }
        ],
        "VertexSelector.onpick": [
            {
                "type": "method",
                "args": {
                    "event": "PickEvent"
                }
            }
        ],
        "_scale_dashes": [
            {
                "type": "func",
                "args": {
                    "offset": "float",
                    "dashes": "np.ndarray",
                    "lw": "float"
                }
            }
        ],
        "Line2D.set_linestyle": [
            {
                "type": "method",
                "args": {
                    "ls": "str"
                }
            }
        ],
        "Line2D.set_dashes": [
            {
                "type": "method",
                "args": {
                    "seq": "tuple"
                }
            }
        ],
        "Line2D.set_linewidth": [
            {
                "type": "method",
                "args": {
                    "w": "float"
                }
            }
        ],
        "Line2D.update_from": [
            {
                "type": "method",
                "args": {
                    "other": "Artist"
                }
            }
        ],
        "Line2D.recache_always": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.axes": [
            {
                "type": "method",
                "args": {
                    "ax": "Affine2D"
                }
            }
        ],
        "Line2D._transform_path": [
            {
                "type": "method",
                "args": {
                    "subslice": "slice"
                }
            }
        ],
        "Line2D._get_transformed_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line2D.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VertexSelector.__init__": [
            {
                "type": "method",
                "args": {
                    "line": "Line2D"
                }
            }
        ],
        "Line2D.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Line2D.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ]
    },
    "matplotlib.dviread": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_dvistate": [
            {
                "type": "var",
                "anno": "enum.DviState"
            }
        ],
        "Page": [
            {
                "type": "var",
                "anno": "Page"
            }
        ],
        "Text": [
            {
                "type": "var",
                "anno": "Text"
            }
        ],
        "Box": [
            {
                "type": "var",
                "anno": "Box"
            }
        ],
        "_arg_raw": [
            {
                "type": "func",
                "args": {
                    "dvi": "Dvi",
                    "delta": "int"
                }
            }
        ],
        "Dvi._dtable": [
            {
                "type": "attr",
                "anno": "list[Callable[[Dvi, int]]]"
            }
        ],
        "Dvi.file": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "Dvi.dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Dvi.fonts": [
            {
                "type": "attr",
                "anno": "dict[str, DviFont]"
            }
        ],
        "Dvi.state": [
            {
                "type": "attr",
                "anno": "_dvistate.DviState"
            }
        ],
        "Dvi.baseline": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Dvi.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Dvi._baseline_v": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Dvi._arg": [
            {
                "type": "method",
                "args": {
                    "nbytes": "int",
                    "signed": "bool"
                }
            }
        ],
        "_arg_olen1": [
            {
                "type": "func",
                "args": {
                    "dvi": "Dvi",
                    "delta": "int"
                }
            }
        ],
        "_arg_ulen1": [
            {
                "type": "func",
                "args": {
                    "dvi": "Dvi",
                    "delta": "int"
                }
            }
        ],
        "_arg_slen1": [
            {
                "type": "func",
                "args": {
                    "dvi": "Dvi",
                    "delta": "int"
                }
            }
        ],
        "_arg_slen": [
            {
                "type": "func",
                "args": {
                    "dvi": "Dvi",
                    "delta": "int"
                }
            }
        ],
        "_arg": [
            {
                "type": "func",
                "args": {
                    "nbytes": "int",
                    "signed": "bool",
                    "dvi": "Dvi",
                    "_": "int"
                }
            }
        ],
        "_arg_mapping": [
            {
                "type": "var",
                "anno": "dict[int, Callable[[Dvi, int], int]]"
            }
        ],
        "Dvi.stack": [
            {
                "type": "attr",
                "anno": "list[tuple[int, int, int, int]]"
            }
        ],
        "Dvi.text": [
            {
                "type": "attr",
                "anno": "list[Text]"
            }
        ],
        "Dvi.boxes": [
            {
                "type": "attr",
                "anno": "list[Box]"
            }
        ],
        "Dvi._put_rule_real": [
            {
                "type": "method",
                "args": {
                    "a": "int",
                    "b": "int"
                }
            }
        ],
        "Dvi.w": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Dvi.x": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Dvi.y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Dvi.z": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Dvi.f": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DviFont.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "DviFont._scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DviFont._tfm": [
            {
                "type": "attr",
                "anno": "Text"
            }
        ],
        "DviFont.texname": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "DviFont._vf": [
            {
                "type": "attr",
                "anno": "Vf"
            }
        ],
        "DviFont.size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DviFont.widths": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "DviFont.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vf._first_font": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Vf._chars": [
            {
                "type": "attr",
                "anno": "dict[str, Page]"
            }
        ],
        "Vf.__getitem__": [
            {
                "type": "method",
                "args": {
                    "code": "str"
                }
            }
        ],
        "Vf.state": [
            {
                "type": "attr",
                "anno": "_dvistate.DviState"
            }
        ],
        "Vf.f": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Vf._init_packet": [
            {
                "type": "method",
                "args": {
                    "pl": "int"
                }
            }
        ],
        "Vf._finalize_packet": [
            {
                "type": "method",
                "args": {
                    "packet_char": "str",
                    "packet_width": "int"
                }
            }
        ],
        "Vf._pre": [
            {
                "type": "method",
                "args": {
                    "i": "int",
                    "x": "np.ndarray",
                    "cs": "float",
                    "ds": "float"
                }
            }
        ],
        "_fix2comp": [
            {
                "type": "func",
                "args": {
                    "num": "int"
                }
            }
        ],
        "_mul2012": [
            {
                "type": "func",
                "args": {
                    "num1": "float",
                    "num2": "float"
                }
            }
        ],
        "Tfm.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "PsFont": [
            {
                "type": "var",
                "anno": "PsFont"
            }
        ],
        "PsfontsMap.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[bytes, ...]"
            }
        ],
        "PsfontsMap._font": [
            {
                "type": "attr",
                "anno": "PsFont"
            }
        ],
        "PsfontsMap._filename": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "Encoding.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Encoding.encoding": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "Encoding.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "parser": [
            {
                "type": "var",
                "anno": "ArgumentParser"
            }
        ],
        "args": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "DviFont.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "DviFont.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "Dvi._get_baseline": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Dvi.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "dpi": "float"
                }
            }
        ],
        "Tfm.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "_dispatch": [
            {
                "type": "func",
                "args": {
                    "table": "list[Callable[[Dvi, int]]]",
                    "min": "int",
                    "max": "int",
                    "state": "str",
                    "args": "tuple"
                }
            }
        ],
        "Dvi._dispatch": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "Dvi._malformed": [
            {
                "type": "method",
                "args": {
                    "offset": "int"
                }
            }
        ],
        "Dvi._post_post": [
            {
                "type": "method",
                "args": {
                    "_": "int"
                }
            }
        ],
        "Dvi._post": [
            {
                "type": "method",
                "args": {
                    "_": "int"
                }
            }
        ],
        "Dvi._pre": [
            {
                "type": "method",
                "args": {
                    "i": "int",
                    "num": "int",
                    "den": "int",
                    "mag": "int",
                    "k": "str"
                }
            }
        ],
        "Dvi._fnt_num": [
            {
                "type": "method",
                "args": {
                    "new_f": "str"
                }
            }
        ],
        "Dvi._fnt_num_immediate": [
            {
                "type": "method",
                "args": {
                    "k": "str"
                }
            }
        ],
        "Dvi._down_z": [
            {
                "type": "method",
                "args": {
                    "new_z": "float"
                }
            }
        ],
        "Dvi._down_y": [
            {
                "type": "method",
                "args": {
                    "new_y": "float"
                }
            }
        ],
        "Dvi._down": [
            {
                "type": "method",
                "args": {
                    "a": "int"
                }
            }
        ],
        "Dvi._right_x": [
            {
                "type": "method",
                "args": {
                    "new_x": "float"
                }
            }
        ],
        "Dvi._right_w": [
            {
                "type": "method",
                "args": {
                    "new_w": "float"
                }
            }
        ],
        "Dvi._right": [
            {
                "type": "method",
                "args": {
                    "b": "int"
                }
            }
        ],
        "Dvi._pop": [
            {
                "type": "method",
                "args": {
                    "_": "int"
                }
            }
        ],
        "Dvi._push": [
            {
                "type": "method",
                "args": {
                    "_": "int"
                }
            }
        ],
        "Dvi._eop": [
            {
                "type": "method",
                "args": {
                    "_": "int"
                }
            }
        ],
        "Dvi._bop": [
            {
                "type": "method",
                "args": {
                    "c0": "int",
                    "c1": "int",
                    "c2": "int",
                    "c3": "int",
                    "c4": "int",
                    "c5": "int",
                    "c6": "int",
                    "c7": "int",
                    "c8": "int",
                    "c9": "int",
                    "p": "Page"
                }
            }
        ],
        "Dvi._nop": [
            {
                "type": "method",
                "args": {
                    "_": "int"
                }
            }
        ],
        "Dvi._put_rule": [
            {
                "type": "method",
                "args": {
                    "a": "int",
                    "b": "int"
                }
            }
        ],
        "Dvi._set_rule": [
            {
                "type": "method",
                "args": {
                    "a": "int",
                    "b": "int"
                }
            }
        ],
        "find_tex_file": [
            {
                "type": "func",
                "args": {
                    "filename": "bytes",
                    "format": "bytes"
                }
            }
        ],
        "fontmap": [
            {
                "type": "var",
                "anno": "PsfontsMap"
            }
        ],
        "_fontfile": [
            {
                "type": "func",
                "args": {
                    "cls": "Text",
                    "suffix": "str",
                    "texname": "str"
                }
            }
        ],
        "_vffile": [
            {
                "type": "var",
                "anno": "Text"
            }
        ],
        "_tfmfile": [
            {
                "type": "var",
                "anno": "Text"
            }
        ],
        "PsfontsMap.__getitem__": [
            {
                "type": "method",
                "args": {
                    "texname": "bytes"
                }
            }
        ],
        "Encoding._parse": [
            {
                "type": "method",
                "args": {
                    "file": "bytes"
                }
            }
        ],
        "Encoding.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Dvi._xxx": [
            {
                "type": "method",
                "args": {
                    "datalen": "int"
                }
            }
        ],
        "DviFont._height_depth_of": [
            {
                "type": "method",
                "args": {
                    "char": "int"
                }
            }
        ],
        "Dvi._output": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DviFont._width_of": [
            {
                "type": "method",
                "args": {
                    "char": "int"
                }
            }
        ],
        "DviFont.__init__": [
            {
                "type": "method",
                "args": {
                    "scale": "float",
                    "tfm": "Text",
                    "texname": "bytes",
                    "vf": "Vf"
                }
            }
        ],
        "Dvi._fnt_def_real": [
            {
                "type": "method",
                "args": {
                    "k": "str",
                    "c": "float",
                    "s": "float",
                    "d": "float",
                    "a": "int",
                    "l": "int"
                }
            }
        ],
        "Vf._read": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Dvi._fnt_def": [
            {
                "type": "method",
                "args": {
                    "k": "str",
                    "c": "float",
                    "s": "float",
                    "d": "float",
                    "a": "int",
                    "l": "int"
                }
            }
        ],
        "_parse_enc": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "PsfontsMap._parse": [
            {
                "type": "method",
                "args": {
                    "file": "bytes"
                }
            }
        ],
        "PsfontsMap.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type[PsfontsMap]",
                    "filename": "str"
                }
            }
        ],
        "Dvi.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vf.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Dvi._read": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Dvi.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Dvi.__exit__": [
            {
                "type": "method",
                "args": {
                    "etype": "int",
                    "evalue": "int",
                    "etrace": "int"
                }
            }
        ],
        "Dvi._put_char_real": [
            {
                "type": "method",
                "args": {
                    "char": "int"
                }
            }
        ],
        "Dvi._put_char": [
            {
                "type": "method",
                "args": {
                    "char": "int"
                }
            }
        ],
        "Dvi._set_char": [
            {
                "type": "method",
                "args": {
                    "char": "int"
                }
            }
        ],
        "Dvi._set_char_immediate": [
            {
                "type": "method",
                "args": {
                    "char": "int"
                }
            }
        ]
    },
    "matplotlib.category": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "StrCategoryLocator._units": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StrCategoryLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "units_mapping": "dict"
                }
            }
        ],
        "StrCategoryLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "StrCategoryFormatter._units": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StrCategoryFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "units_mapping": "dict"
                }
            }
        ],
        "StrCategoryFormatter._text": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "UnitData._mapping": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StrCategoryConverter.axisinfo": [
            {
                "type": "method",
                "args": {
                    "unit": "UnitData",
                    "axis": "units.Axis"
                }
            }
        ],
        "UnitData._counter": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UnitData._str_is_convertible": [
            {
                "type": "method",
                "args": {
                    "val": "str"
                }
            }
        ],
        "StrCategoryLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StrCategoryFormatter.format_ticks": [
            {
                "type": "method",
                "args": {
                    "values": "list"
                }
            }
        ],
        "StrCategoryFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "pos": "int"
                }
            }
        ],
        "UnitData.update": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "UnitData.__init__": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "StrCategoryConverter.convert": [
            {
                "type": "method",
                "args": {
                    "value": "object",
                    "unit": "UnitData",
                    "axis": "int"
                }
            }
        ],
        "StrCategoryConverter.default_units": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "axis": "units.Axis"
                }
            }
        ]
    },
    "matplotlib": {
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "__bibtex__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "compare_versions": [
            {
                "type": "func",
                "args": {
                    "a": "str",
                    "b": "str"
                }
            }
        ],
        "_check_versions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_ensure_handler": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "set_loglevel": [
            {
                "type": "func",
                "args": {
                    "level": "str"
                }
            }
        ],
        "_logged_cached": [
            {
                "type": "func",
                "args": {
                    "fmt": "str",
                    "func": "Callable"
                }
            }
        ],
        "_ExecInfo": [
            {
                "type": "var",
                "anno": "namedtuple"
            }
        ],
        "get_home": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_get_xdg_config_dir": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_get_xdg_cache_dir": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_get_config_or_cache_dir": [
            {
                "type": "func",
                "args": {
                    "xdg_base": "str"
                }
            }
        ],
        "get_configdir": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_cachedir": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_deprecated_map": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_deprecated_ignore_map": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_deprecated_remain_as_none": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_all_deprecated": [
            {
                "type": "var",
                "anno": "set"
            }
        ],
        "RcParams.validate": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RcParams.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "val": "str"
                }
            }
        ],
        "RcParams.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RcParams.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RcParams.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "URL_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "is_url": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "default_test_modules": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "_init_tests": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_replacer": [
            {
                "type": "func",
                "args": {
                    "data": "list",
                    "value": "object"
                }
            }
        ],
        "_DATA_DOC_TITLE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_DATA_DOC_APPENDIX": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_label_from_arg": [
            {
                "type": "func",
                "args": {
                    "y": "object",
                    "default_name": "str"
                }
            }
        ],
        "_open_file_or_url": [
            {
                "type": "func",
                "args": {
                    "fname": "str"
                }
            }
        ],
        "RcParams.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "rcParams": [
            {
                "type": "var",
                "anno": "RcParams"
            }
        ],
        "is_interactive": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "interactive": [
            {
                "type": "func",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "get_backend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "rcParamsOrig": [
            {
                "type": "var",
                "anno": "RcParams"
            }
        ],
        "_rc_params_in_file": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "transform": "Callable[[str], str]",
                    "fail_on_error": "bool"
                }
            }
        ],
        "rcParamsDefault": [
            {
                "type": "var",
                "anno": "RcParams"
            }
        ],
        "defaultParams": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_get_data_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "matplotlib_fname": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_data_path": [
            {
                "type": "func",
                "args": {
                    "_from_rc": "str"
                }
            }
        ],
        "rc": [
            {
                "type": "func",
                "args": {
                    "group": "str",
                    "kwargs": "object"
                }
            }
        ],
        "rc_file_defaults": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "rcdefaults": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_add_data_doc": [
            {
                "type": "func",
                "args": {
                    "docstring": "str",
                    "replace_names": "list"
                }
            }
        ],
        "_preprocess_data": [
            {
                "type": "func",
                "args": {
                    "func": "Callable",
                    "replace_names": "list",
                    "label_namer": "str"
                }
            }
        ],
        "RcParams.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_get_executable_info": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "checkdep_usetex": [
            {
                "type": "func",
                "args": {
                    "s": "bool"
                }
            }
        ],
        "checkdep_ps_distiller": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "rc_params_from_file": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "fail_on_error": "bool",
                    "use_default_template": "bool"
                }
            }
        ],
        "rc_file": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "use_default_template": "bool"
                }
            }
        ],
        "rc_context": [
            {
                "type": "func",
                "args": {
                    "rc": "dict",
                    "fname": "str"
                }
            }
        ],
        "rc_params": [
            {
                "type": "func",
                "args": {
                    "fail_on_error": "bool"
                }
            }
        ],
        "RcParams.find_all": [
            {
                "type": "method",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "RcParams.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "use": [
            {
                "type": "func",
                "args": {
                    "backend": "str",
                    "force": "bool"
                }
            }
        ],
        "test": [
            {
                "type": "func",
                "args": {
                    "verbosity": "int",
                    "coverage": "bool",
                    "switch_backend_warn": "bool",
                    "recursionlimit": "int",
                    "kwargs": "str"
                }
            }
        ],
        "RcParams.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ]
    },
    "matplotlib.streamplot": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "StreamplotSet.lines": [
            {
                "type": "attr",
                "anno": "list[matplotlib.lines.Line]"
            }
        ],
        "StreamplotSet.arrows": [
            {
                "type": "attr",
                "anno": "list[matplotlib.arrows.Arrows]"
            }
        ],
        "StreamplotSet.__init__": [
            {
                "type": "method",
                "args": {
                    "lines": "list[matplotlib.lines.Line]",
                    "arrows": "list[matplotlib.arrows.Arrows]",
                    "kwargs": "object"
                }
            }
        ],
        "DomainMap.grid": [
            {
                "type": "attr",
                "anno": "Grid"
            }
        ],
        "DomainMap.mask": [
            {
                "type": "attr",
                "anno": "StreamMask"
            }
        ],
        "DomainMap.x_grid2mask": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DomainMap.y_grid2mask": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DomainMap.x_mask2grid": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DomainMap.y_mask2grid": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DomainMap.x_data2grid": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DomainMap.y_data2grid": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DomainMap.grid2mask": [
            {
                "type": "method",
                "args": {
                    "xi": "int",
                    "yi": "int"
                }
            }
        ],
        "DomainMap.mask2grid": [
            {
                "type": "method",
                "args": {
                    "xm": "np.ndarray",
                    "ym": "np.ndarray"
                }
            }
        ],
        "DomainMap.data2grid": [
            {
                "type": "method",
                "args": {
                    "xd": "np.ndarray",
                    "yd": "np.ndarray"
                }
            }
        ],
        "DomainMap.grid2data": [
            {
                "type": "method",
                "args": {
                    "xg": "np.ndarray",
                    "yg": "np.ndarray"
                }
            }
        ],
        "Grid.nx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Grid.ny": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Grid.dx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Grid.dy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "DomainMap.__init__": [
            {
                "type": "method",
                "args": {
                    "grid": "Grid",
                    "mask": "StreamMask"
                }
            }
        ],
        "Grid.x_origin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Grid.y_origin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Grid.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Grid.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Grid.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "Grid.shape": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grid.within_grid": [
            {
                "type": "method",
                "args": {
                    "xi": "int",
                    "yi": "int"
                }
            }
        ],
        "StreamMask._mask": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "StreamMask.shape": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "StreamMask._current_xy": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "StreamMask.__init__": [
            {
                "type": "method",
                "args": {
                    "density": "float"
                }
            }
        ],
        "DomainMap.reset_start_point": [
            {
                "type": "method",
                "args": {
                    "xg": "int",
                    "yg": "int"
                }
            }
        ],
        "StreamMask.__getitem__": [
            {
                "type": "method",
                "args": {
                    "args": "int"
                }
            }
        ],
        "StreamMask._traj": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "StreamMask._undo_trajectory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DomainMap.undo_trajectory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StreamMask._update_trajectory": [
            {
                "type": "method",
                "args": {
                    "xm": "int",
                    "ym": "int"
                }
            }
        ],
        "StreamMask._start_trajectory": [
            {
                "type": "method",
                "args": {
                    "xm": "int",
                    "ym": "int"
                }
            }
        ],
        "DomainMap.start_trajectory": [
            {
                "type": "method",
                "args": {
                    "xg": "int",
                    "yg": "int"
                }
            }
        ],
        "DomainMap.update_trajectory": [
            {
                "type": "method",
                "args": {
                    "xg": "int",
                    "yg": "int"
                }
            }
        ],
        "interpgrid": [
            {
                "type": "func",
                "args": {
                    "a": "np.ndarray",
                    "xi": "np.ndarray",
                    "yi": "np.ndarray"
                }
            }
        ],
        "_gen_starting_points": [
            {
                "type": "func",
                "args": {
                    "shape": "tuple"
                }
            }
        ],
        "_euler_step": [
            {
                "type": "func",
                "args": {
                    "xf_traj": "list",
                    "yf_traj": "list",
                    "dmap": "DomainMap",
                    "f": "Callable[[int, int], int]"
                }
            }
        ],
        "_integrate_rk12": [
            {
                "type": "func",
                "args": {
                    "x0": "np.ndarray",
                    "y0": "np.ndarray",
                    "dmap": "DomainMap",
                    "f": "Callable[[int, int], int]",
                    "maxlength": "float"
                }
            }
        ],
        "get_integrator": [
            {
                "type": "func",
                "args": {
                    "u": "np.ndarray",
                    "v": "np.ndarray",
                    "dmap": "DomainMap",
                    "minlength": "float",
                    "maxlength": "float",
                    "integration_direction": "str"
                }
            }
        ],
        "streamplot": [
            {
                "type": "func",
                "args": {
                    "axes": "matplotlib.Axes",
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "u": "np.ndarray",
                    "v": "np.ndarray",
                    "density": "float",
                    "linewidth": "np.ndarray",
                    "color": "np.ndarray",
                    "cmap": "str",
                    "norm": "mcolors.Normalize",
                    "arrowsize": "float",
                    "arrowstyle": "str",
                    "minlength": "float",
                    "transform": "mtransforms.Transform",
                    "zorder": "int",
                    "start_points": "np.ndarray",
                    "maxlength": "float",
                    "integration_direction": "str"
                }
            }
        ]
    },
    "matplotlib.projections.polar": {
        "PolarTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PolarTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PolarTransform._axis": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "PolarTransform._use_rmin": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PolarTransform._apply_theta_transforms": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PolarAffine._scale_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAffine._limits": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAffine._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "PolarAffine._inverted": [
            {
                "type": "attr",
                "anno": "InvertedPolarTransform"
            }
        ],
        "PolarAffine._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InvertedPolarTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InvertedPolarTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InvertedPolarTransform._axis": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "InvertedPolarTransform._use_rmin": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "InvertedPolarTransform._apply_theta_transforms": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_AxisWrapper._axis": [
            {
                "type": "attr",
                "anno": "maxis.Axis"
            }
        ],
        "_AxisWrapper.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "maxis.Axis"
                }
            }
        ],
        "ThetaLocator.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ThetaLocator.axis": [
            {
                "type": "attr",
                "anno": "maxis.Axis"
            }
        ],
        "ThetaTick._text1_translate": [
            {
                "type": "attr",
                "anno": "mtransforms.ScaledTranslation"
            }
        ],
        "ThetaTick._text2_translate": [
            {
                "type": "attr",
                "anno": "mtransforms.ScaledTranslation"
            }
        ],
        "ThetaAxis.__name__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ThetaAxis.axis_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ThetaAxis.isDefault_majloc": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ThetaAxis.isDefault_majfmt": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RadialLocator.base": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "RadialLocator._axes": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "RadialLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float",
                    "axes": "Axes"
                }
            }
        ],
        "RadialLocator.refresh": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaLocator.refresh": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ThetaShift.axes": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "_ThetaShift.mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_ThetaShift.pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_ThetaShift._t": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RadialTick._determine_anchor": [
            {
                "type": "method",
                "args": {
                    "mode": "str",
                    "angle": "float",
                    "start": "bool"
                }
            }
        ],
        "RadialAxis.__name__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RadialAxis.axis_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RadialAxis.isDefault_majloc": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_is_full_circle_deg": [
            {
                "type": "func",
                "args": {
                    "thetamin": "float",
                    "thetamax": "float"
                }
            }
        ],
        "_is_full_circle_rad": [
            {
                "type": "func",
                "args": {
                    "thetamin": "float",
                    "thetamax": "float"
                }
            }
        ],
        "_WedgeBbox._center": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_WedgeBbox._viewLim": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_WedgeBbox._originLim": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_WedgeBbox._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PolarAxes.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PolarAxes._default_theta_offset": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PolarAxes._default_theta_direction": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PolarAxes._default_rlabel_position": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PolarAxes.use_sticky_edges": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PolarAxes.xaxis": [
            {
                "type": "attr",
                "anno": "Maxis.XAxis"
            }
        ],
        "PolarAxes.yaxis": [
            {
                "type": "attr",
                "anno": "Maxis.YAxis"
            }
        ],
        "PolarAxes._originViewLim": [
            {
                "type": "attr",
                "anno": "mtransforms.LockableBbox"
            }
        ],
        "PolarAxes._direction": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "PolarAxes._theta_offset": [
            {
                "type": "attr",
                "anno": "mtransforms.Affine2D"
            }
        ],
        "PolarAxes.transShift": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAxes._realViewLim": [
            {
                "type": "attr",
                "anno": "mtransforms.TransformedBbox"
            }
        ],
        "PolarAxes.transScale": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAxes.axesLim": [
            {
                "type": "attr",
                "anno": "mtransforms.BboxTransform"
            }
        ],
        "PolarAxes.transWedge": [
            {
                "type": "attr",
                "anno": "mtransforms.BboxTransform"
            }
        ],
        "PolarAxes.transAxes": [
            {
                "type": "attr",
                "anno": "mtransforms.BboxTransform"
            }
        ],
        "PolarAxes.transProjection": [
            {
                "type": "attr",
                "anno": "PolarTransform"
            }
        ],
        "PolarAxes.transProjectionAffine": [
            {
                "type": "attr",
                "anno": "PolarAffine"
            }
        ],
        "PolarAxes.transData": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAxes._xaxis_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAxes._xaxis_text_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAxes._yaxis_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAxes._r_label_position": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "PolarAxes._yaxis_text_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "PolarAxes.get_xaxis_text1_transform": [
            {
                "type": "method",
                "args": {
                    "pad": "tuple"
                }
            }
        ],
        "PolarAxes.get_xaxis_text2_transform": [
            {
                "type": "method",
                "args": {
                    "pad": "tuple"
                }
            }
        ],
        "PolarAxes.set_rscale": [
            {
                "type": "method",
                "args": {
                    "args": "types.Any",
                    "kwargs": "types.Any"
                }
            }
        ],
        "PolarAxes.set_rticks": [
            {
                "type": "method",
                "args": {
                    "args": "types.Any",
                    "kwargs": "types.Any"
                }
            }
        ],
        "PolarAxes.set_xscale": [
            {
                "type": "method",
                "args": {
                    "scale": "str",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "PolarAxes.format_coord": [
            {
                "type": "method",
                "args": {
                    "theta": "float",
                    "r": "float"
                }
            }
        ],
        "PolarAxes.get_data_ratio": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.can_zoom": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.can_pan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes._pan_start": [
            {
                "type": "attr",
                "anno": "types.SimpleNamespace"
            }
        ],
        "PolarAxes.end_pan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InvertedPolarTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "Axes",
                    "use_rmin": "bool",
                    "_apply_theta_transforms": "bool"
                }
            }
        ],
        "PolarTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "Axes",
                    "use_rmin": "bool",
                    "_apply_theta_transforms": "bool"
                }
            }
        ],
        "_AxisWrapper.get_minpos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaLocator.set_axis": [
            {
                "type": "method",
                "args": {
                    "axis": "maxis.Axis"
                }
            }
        ],
        "PolarAxes.set_rorigin": [
            {
                "type": "method",
                "args": {
                    "rorigin": "np.ndarray"
                }
            }
        ],
        "PolarAffine.__init__": [
            {
                "type": "method",
                "args": {
                    "scale_transform": "mtransforms.Transform",
                    "limits": "mtransforms.Transform"
                }
            }
        ],
        "ThetaAxis.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RadialAxis.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "theta_offset": "float",
                    "theta_direction": "int",
                    "rlabel_position": "float",
                    "kwargs": "Any"
                }
            }
        ],
        "InvertedPolarTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaLocator.view_limits": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "RadialLocator.view_limits": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "PolarAxes.get_rmin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.get_rmax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.get_thetamin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.get_thetamax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_WedgeBbox.get_points": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.set_rlabel_position": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "PolarAffine.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RadialLocator.nonsingular": [
            {
                "type": "method",
                "args": {
                    "vmin": "np.ndarray",
                    "vmax": "np.ndarray"
                }
            }
        ],
        "ThetaTick._update_padding": [
            {
                "type": "method",
                "args": {
                    "pad": "tuple",
                    "angle": "tuple"
                }
            }
        ],
        "PolarAxes.get_theta_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ThetaShift.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.get_rlabel_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.get_theta_direction": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.set_theta_offset": [
            {
                "type": "method",
                "args": {
                    "offset": "float"
                }
            }
        ],
        "PolarAxes.set_theta_zero_location": [
            {
                "type": "method",
                "args": {
                    "loc": "str",
                    "offset": "float"
                }
            }
        ],
        "_AxisWrapper.set_data_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "_AxisWrapper.get_data_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_AxisWrapper.set_view_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "PolarAxes.set_rmax": [
            {
                "type": "method",
                "args": {
                    "rmax": "float"
                }
            }
        ],
        "PolarAxes.set_thetamax": [
            {
                "type": "method",
                "args": {
                    "thetamax": "float"
                }
            }
        ],
        "PolarAxes.get_rsign": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.get_rorigin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RadialLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InvertedPolarTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "PolarTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "tr": "np.ndarray"
                }
            }
        ],
        "PolarAxes.set_rmin": [
            {
                "type": "method",
                "args": {
                    "rmin": "np.ndarray"
                }
            }
        ],
        "PolarAxes.set_thetamin": [
            {
                "type": "method",
                "args": {
                    "thetamin": "float"
                }
            }
        ],
        "_WedgeBbox.__init__": [
            {
                "type": "method",
                "args": {
                    "center": "np.ndarray",
                    "viewLim": "np.ndarray",
                    "originLim": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "PolarAxes.set_thetalim": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "object"
                }
            }
        ],
        "PolarTransform.transform_path_non_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "PolarAxes._gen_axes_spines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.set_theta_direction": [
            {
                "type": "method",
                "args": {
                    "direction": "int"
                }
            }
        ],
        "PolarAxes.get_yaxis_transform": [
            {
                "type": "method",
                "args": {
                    "which": "str"
                }
            }
        ],
        "PolarAxes.get_xaxis_transform": [
            {
                "type": "method",
                "args": {
                    "which": "str"
                }
            }
        ],
        "PolarAxes.start_pan": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "button": "int"
                }
            }
        ],
        "RadialTick.update_position": [
            {
                "type": "method",
                "args": {
                    "loc": "tuple"
                }
            }
        ],
        "ThetaTick.update_position": [
            {
                "type": "method",
                "args": {
                    "loc": "tuple"
                }
            }
        ],
        "RadialTick.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "RadialAxis._get_tick": [
            {
                "type": "method",
                "args": {
                    "major": "bool"
                }
            }
        ],
        "PolarAxes.set_yscale": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "object"
                }
            }
        ],
        "RadialAxis._wrap_locator_formatter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RadialAxis.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "_AxisWrapper.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "types.Position"
                }
            }
        ],
        "PolarAxes.set_thetagrids": [
            {
                "type": "method",
                "args": {
                    "angles": "np.ndarray",
                    "labels": "np.ndarray",
                    "fmt": "str",
                    "kwargs": "object"
                }
            }
        ],
        "PolarAxes.set_rgrids": [
            {
                "type": "method",
                "args": {
                    "radii": "np.ndarray",
                    "labels": "np.ndarray",
                    "angle": "float",
                    "fmt": "str",
                    "kwargs": "object"
                }
            }
        ],
        "PolarAxes._gen_axes_patch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_WedgeBbox.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_ThetaShift.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "InvertedPolarTransform.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "PolarAffine.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "PolarTransform.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_ThetaShift.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "Axes",
                    "pad": "float",
                    "mode": "str"
                }
            }
        ],
        "PolarAxes.get_yaxis_text2_transform": [
            {
                "type": "method",
                "args": {
                    "pad": "float"
                }
            }
        ],
        "PolarAxes.get_yaxis_text1_transform": [
            {
                "type": "method",
                "args": {
                    "pad": "float"
                }
            }
        ],
        "PolarAxes.drag_pan": [
            {
                "type": "method",
                "args": {
                    "button": "int",
                    "key": "str",
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "ThetaAxis._copy_tick_props": [
            {
                "type": "method",
                "args": {
                    "src": "Axis",
                    "dest": "Axis"
                }
            }
        ],
        "_AxisWrapper.get_tick_space": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "base": "float"
                }
            }
        ],
        "ThetaAxis._wrap_locator_formatter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PolarAxes.set_ylim": [
            {
                "type": "method",
                "args": {
                    "bottom": "float | None",
                    "top": "float | None",
                    "emit": "bool",
                    "auto": "bool",
                    "ymin": "float | None",
                    "ymax": "float"
                }
            }
        ],
        "PolarAxes.set_rlim": [
            {
                "type": "method",
                "args": {
                    "bottom": "float | None",
                    "top": "float | None",
                    "emit": "bool",
                    "auto": "bool",
                    "kwargs": "tuple"
                }
            }
        ],
        "PolarAxes._init_axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaTick._apply_params": [
            {
                "type": "method",
                "args": {
                    "kw": "tuple"
                }
            }
        ],
        "ThetaTick.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "Axes",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "ThetaAxis._get_tick": [
            {
                "type": "method",
                "args": {
                    "major": "bool"
                }
            }
        ],
        "ThetaLocator.autoscale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RadialLocator.autoscale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaAxis._set_scale": [
            {
                "type": "method",
                "args": {
                    "value": "str",
                    "kwargs": "str"
                }
            }
        ],
        "RadialAxis._set_scale": [
            {
                "type": "method",
                "args": {
                    "value": "str",
                    "kwargs": "str"
                }
            }
        ],
        "PolarAxes.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "PolarAxes._set_lim_and_transforms": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ThetaLocator.zoom": [
            {
                "type": "method",
                "args": {
                    "direction": "float"
                }
            }
        ],
        "RadialLocator.zoom": [
            {
                "type": "method",
                "args": {
                    "direction": "float"
                }
            }
        ],
        "ThetaLocator.pan": [
            {
                "type": "method",
                "args": {
                    "numsteps": "int"
                }
            }
        ],
        "RadialLocator.pan": [
            {
                "type": "method",
                "args": {
                    "numsteps": "int"
                }
            }
        ]
    },
    "matplotlib.projections.geo": {
        "GeoAxes.ThetaFormatter._round_to": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GeoAxes.ThetaFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "round_to": "float"
                }
            }
        ],
        "GeoAxes.ThetaFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "pos": "np.ndarray"
                }
            }
        ],
        "GeoAxes.RESOLUTION": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GeoAxes.xaxis": [
            {
                "type": "attr",
                "anno": "maxis.XAxis"
            }
        ],
        "GeoAxes.yaxis": [
            {
                "type": "attr",
                "anno": "maxis.YAxis"
            }
        ],
        "GeoAxes.transProjection": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes.transAffine": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes.transAxes": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes.transData": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes._xaxis_pretransform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes._xaxis_transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes._xaxis_text1_transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes._xaxis_text2_transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes._yaxis_transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes._yaxis_text1_transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes._yaxis_text2_transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes.get_xaxis_text1_transform": [
            {
                "type": "method",
                "args": {
                    "pad": "tuple"
                }
            }
        ],
        "GeoAxes.get_xaxis_text2_transform": [
            {
                "type": "method",
                "args": {
                    "pad": "tuple"
                }
            }
        ],
        "GeoAxes.get_yaxis_text1_transform": [
            {
                "type": "method",
                "args": {
                    "pad": "tuple"
                }
            }
        ],
        "GeoAxes.get_yaxis_text2_transform": [
            {
                "type": "method",
                "args": {
                    "pad": "tuple"
                }
            }
        ],
        "GeoAxes.set_yscale": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "object"
                }
            }
        ],
        "GeoAxes.set_xscale": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes.set_xlim": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "GeoAxes.set_ylim": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GeoAxes.format_coord": [
            {
                "type": "method",
                "args": {
                    "lon": "float",
                    "lat": "float"
                }
            }
        ],
        "GeoAxes._longitude_cap": [
            {
                "type": "attr",
                "anno": "np.pi"
            }
        ],
        "GeoAxes.get_data_ratio": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes.can_zoom": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes.can_pan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes.start_pan": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "button": "int"
                }
            }
        ],
        "GeoAxes.end_pan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes.drag_pan": [
            {
                "type": "method",
                "args": {
                    "button": "int",
                    "key": "str",
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "_GeoTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_GeoTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_GeoTransform._resolution": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_GeoTransform.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AitoffAxes.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AitoffAxes.AitoffTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "ll": "np.ndarray"
                }
            }
        ],
        "AitoffAxes.InvertedAitoffTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "AitoffAxes._longitude_cap": [
            {
                "type": "attr",
                "anno": "np.pi"
            }
        ],
        "HammerAxes.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HammerAxes.HammerTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "ll": "np.ndarray"
                }
            }
        ],
        "HammerAxes.InvertedHammerTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "HammerAxes._longitude_cap": [
            {
                "type": "attr",
                "anno": "np.pi"
            }
        ],
        "MollweideAxes.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MollweideAxes.MollweideTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "ll": "AffineBase"
                }
            }
        ],
        "MollweideAxes.InvertedMollweideTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "MollweideAxes._longitude_cap": [
            {
                "type": "attr",
                "anno": "np.pi"
            }
        ],
        "LambertAxes.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LambertAxes.LambertTransform._center_longitude": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LambertAxes.LambertTransform._center_latitude": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LambertAxes.LambertTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "ll": "AffineTransformTo"
                }
            }
        ],
        "LambertAxes.InvertedLambertTransform._center_longitude": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LambertAxes.InvertedLambertTransform._center_latitude": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LambertAxes.InvertedLambertTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray"
                }
            }
        ],
        "LambertAxes._longitude_cap": [
            {
                "type": "attr",
                "anno": "np.pi"
            }
        ],
        "LambertAxes._center_longitude": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LambertAxes._center_latitude": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_GeoTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "resolution": "int"
                }
            }
        ],
        "LambertAxes.InvertedLambertTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "center_longitude": "float",
                    "center_latitude": "float",
                    "resolution": "int"
                }
            }
        ],
        "LambertAxes.LambertTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LambertAxes.LambertTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "center_longitude": "float",
                    "center_latitude": "float",
                    "resolution": "int"
                }
            }
        ],
        "LambertAxes._get_core_transform": [
            {
                "type": "method",
                "args": {
                    "resolution": "int"
                }
            }
        ],
        "LambertAxes.InvertedLambertTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MollweideAxes._get_core_transform": [
            {
                "type": "method",
                "args": {
                    "resolution": "int"
                }
            }
        ],
        "MollweideAxes.InvertedMollweideTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MollweideAxes.MollweideTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HammerAxes._get_core_transform": [
            {
                "type": "method",
                "args": {
                    "resolution": "int"
                }
            }
        ],
        "HammerAxes.InvertedHammerTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HammerAxes.HammerTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AitoffAxes._get_core_transform": [
            {
                "type": "method",
                "args": {
                    "resolution": "int"
                }
            }
        ],
        "AitoffAxes.InvertedAitoffTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AitoffAxes.AitoffTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LambertAxes._get_affine_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes.set_longitude_grid_ends": [
            {
                "type": "method",
                "args": {
                    "degrees": "int"
                }
            }
        ],
        "GeoAxes._get_affine_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes._set_lim_and_transforms": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes._gen_axes_spines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_GeoTransform.transform_path_non_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "GeoAxes.get_yaxis_transform": [
            {
                "type": "method",
                "args": {
                    "which": "str"
                }
            }
        ],
        "GeoAxes.get_xaxis_transform": [
            {
                "type": "method",
                "args": {
                    "which": "str"
                }
            }
        ],
        "GeoAxes.set_latitude_grid": [
            {
                "type": "method",
                "args": {
                    "degrees": "int"
                }
            }
        ],
        "GeoAxes.set_longitude_grid": [
            {
                "type": "method",
                "args": {
                    "degrees": "int"
                }
            }
        ],
        "GeoAxes._gen_axes_patch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes._init_axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GeoAxes.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LambertAxes.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LambertAxes.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "float",
                    "center_longitude": "float",
                    "center_latitude": "float",
                    "kwargs": "float"
                }
            }
        ],
        "MollweideAxes.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "float",
                    "kwargs": "float"
                }
            }
        ],
        "HammerAxes.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "float",
                    "kwargs": "float"
                }
            }
        ],
        "AitoffAxes.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "float",
                    "kwargs": "float"
                }
            }
        ]
    },
    "matplotlib.projections": {
        "ProjectionRegistry._all_projection_types": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ProjectionRegistry.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProjectionRegistry.get_projection_class": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ProjectionRegistry.get_projection_names": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "projection_registry": [
            {
                "type": "var",
                "anno": "ProjectionRegistry"
            }
        ],
        "get_projection_class": [
            {
                "type": "func",
                "args": {
                    "projection": "str"
                }
            }
        ],
        "get_projection_names": [
            {
                "type": "var",
                "anno": "Callable[[], list]"
            }
        ],
        "ProjectionRegistry.register": [
            {
                "type": "method",
                "args": {
                    "projections": "type"
                }
            }
        ],
        "register_projection": [
            {
                "type": "func",
                "args": {
                    "cls": "type"
                }
            }
        ]
    },
    "matplotlib.axis": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "GRIDLINE_INTERPOLATION_STEPS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Tick.axes": [
            {
                "type": "attr",
                "anno": "Axis"
            }
        ],
        "Tick._loc": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tick._major": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Tick._size": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tick._width": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tick._base_pad": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tick._zorder": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tick.tick1line": [
            {
                "type": "attr",
                "anno": "mlines.Line2D"
            }
        ],
        "Tick.tick2line": [
            {
                "type": "attr",
                "anno": "mlines.Line2D"
            }
        ],
        "Tick.gridline": [
            {
                "type": "attr",
                "anno": "mlines.Line2D"
            }
        ],
        "Tick.label1": [
            {
                "type": "attr",
                "anno": "mtext.Text"
            }
        ],
        "Tick.label2": [
            {
                "type": "attr",
                "anno": "mtext.Text"
            }
        ],
        "Tick.label": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick._labelrotation": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tick.apply_tickdir": [
            {
                "type": "method",
                "args": {
                    "tickdir": "tuple"
                }
            }
        ],
        "Tick.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Tick.get_pad": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick._get_text1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick._get_text2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick._get_tick1line": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick._get_tick2line": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick._get_gridline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick.get_loc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick.set_label1": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "Tick.set_label": [
            {
                "type": "attr",
                "anno": "Callable[[str], None]"
            }
        ],
        "Tick.set_label2": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "Tick.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick.update_position": [
            {
                "type": "method",
                "args": {
                    "loc": "tuple"
                }
            }
        ],
        "Tick._get_text1_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick._get_text2_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XTick.__name__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XTick._tickdir": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "XTick._tickmarkers": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "XTick._pad": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "XTick.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "XTick._loc": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "XTick.update_position": [
            {
                "type": "method",
                "args": {
                    "loc": "tuple"
                }
            }
        ],
        "YTick.__name__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YTick._tickdir": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tick.get_tick_padding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick.get_tickdir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YTick._tickmarkers": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "YTick._pad": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "YTick.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YTick._loc": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "YTick.update_position": [
            {
                "type": "method",
                "args": {
                    "loc": "tuple"
                }
            }
        ],
        "Ticker._locator": [
            {
                "type": "attr",
                "anno": "mticker.Locator"
            }
        ],
        "Ticker._formatter": [
            {
                "type": "attr",
                "anno": "mticker.Formatter"
            }
        ],
        "Ticker.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ticker.locator": [
            {
                "type": "method",
                "args": {
                    "locator": "mticker.Locator"
                }
            }
        ],
        "Ticker.formatter": [
            {
                "type": "method",
                "args": {
                    "formatter": "mticker.Formatter"
                }
            }
        ],
        "_LazyTickList._major": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_LazyTickList.__init__": [
            {
                "type": "method",
                "args": {
                    "major": "bool"
                }
            }
        ],
        "Axis.OFFSETTEXTPAD": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axis._remove_overlapping_locs": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis.isDefault_label": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis.axes": [
            {
                "type": "attr",
                "anno": "martist.Artist"
            }
        ],
        "Axis.major": [
            {
                "type": "attr",
                "anno": "Ticker"
            }
        ],
        "Axis.minor": [
            {
                "type": "attr",
                "anno": "Ticker"
            }
        ],
        "Axis.callbacks": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "Axis._autolabelpos": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis._smart_bounds": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis.label": [
            {
                "type": "attr",
                "anno": "mtext.Text"
            }
        ],
        "Axis.offsetText": [
            {
                "type": "attr",
                "anno": "mtext.Text"
            }
        ],
        "Axis.labelpad": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axis.pickradius": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axis._major_tick_kw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Axis._minor_tick_kw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Axis.majorTicks": [
            {
                "type": "attr",
                "anno": "_LazyTickList"
            }
        ],
        "Axis.minorTicks": [
            {
                "type": "attr",
                "anno": "_LazyTickList"
            }
        ],
        "Axis.get_remove_overlapping_locs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.set_remove_overlapping_locs": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "Axis.remove_overlapping_locs": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "Axis.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis._scale": [
            {
                "type": "attr",
                "anno": "mscale.ScaleBase"
            }
        ],
        "Axis.isDefault_majloc": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis.isDefault_minloc": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis.isDefault_majfmt": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis.isDefault_minfmt": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis._gridOnMajor": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis._gridOnMinor": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis.converter": [
            {
                "type": "attr",
                "anno": "munits.ConversionInterface"
            }
        ],
        "Axis.units": [
            {
                "type": "attr",
                "anno": "munits.UnitData"
            }
        ],
        "Axis.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.set_view_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "ignore": "bool"
                }
            }
        ],
        "Axis.get_data_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.set_data_interval": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "ignore": "bool"
                }
            }
        ],
        "Axis.get_inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.set_inverted": [
            {
                "type": "method",
                "args": {
                    "inverted": "bool"
                }
            }
        ],
        "Axis.set_default_intervals": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.set_smart_bounds": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "Axis.get_smart_bounds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_tick_padding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_label": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_offset_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_pickradius": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis._get_tick": [
            {
                "type": "method",
                "args": {
                    "major": "bool"
                }
            }
        ],
        "Axis.have_units": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_units": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.set_pickradius": [
            {
                "type": "method",
                "args": {
                    "pickradius": "int"
                }
            }
        ],
        "Axis._get_tick_boxes_siblings": [
            {
                "type": "method",
                "args": {
                    "xdir": "str",
                    "renderer": "plt.renderer.Renderer"
                }
            }
        ],
        "Axis._update_label_position": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Axis._update_offset_text_position": [
            {
                "type": "method",
                "args": {
                    "bboxes": "tuple",
                    "bboxes2": "tuple"
                }
            }
        ],
        "Axis.get_tick_space": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis._get_ticks_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.set_label_position": [
            {
                "type": "method",
                "args": {
                    "position": "str"
                }
            }
        ],
        "Axis.get_minpos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.limit_range_for_scale": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "_make_getset_interval": [
            {
                "type": "func",
                "args": {
                    "method_name": "str",
                    "lim_name": "str",
                    "attr_name": "str"
                }
            }
        ],
        "XAxis.__name__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XAxis.axis_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XAxis.label_position": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XAxis.offset_text_position": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XAxis.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "XAxis._tick_position": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "XAxis.get_ticks_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YAxis.__name__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YAxis.axis_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YAxis.label_position": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axis.get_label_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YAxis.offset_text_position": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YAxis.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YAxis.get_ticks_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XAxis.get_minpos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YAxis.get_minpos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "Axis.get_minor_formatter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_major_formatter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_scale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_minor_locator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_major_locator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_majorticklocs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis._update_ticks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "for_layout_only": "bool"
                }
            }
        ],
        "Tick.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Axis.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "Axis.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_minorticklocs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_ticklocs": [
            {
                "type": "method",
                "args": {
                    "minor": "bool"
                }
            }
        ],
        "Tick._apply_params": [
            {
                "type": "method",
                "args": {
                    "kw": "tuple"
                }
            }
        ],
        "Axis.set_tick_params": [
            {
                "type": "method",
                "args": {
                    "which": "str",
                    "reset": "bool",
                    "kw": "object"
                }
            }
        ],
        "XAxis.get_tick_space": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tick.set_clip_path": [
            {
                "type": "method",
                "args": {
                    "clippath": "Union[Path, Transformation, TransformedPath]",
                    "transform": "Transform"
                }
            }
        ],
        "Axis.set_clip_path": [
            {
                "type": "method",
                "args": {
                    "clippath": "Union[Path, Transformation, TransformedPath]",
                    "transform": "Transform"
                }
            }
        ],
        "Axis.reset_ticks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YTick.apply_tickdir": [
            {
                "type": "method",
                "args": {
                    "tickdir": "tuple"
                }
            }
        ],
        "Axis.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_label_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis._format_with_dict": [
            {
                "type": "method",
                "args": {
                    "tickd": "dict",
                    "x": "int",
                    "pos": "int"
                }
            }
        ],
        "Axis._get_tick_label_size": [
            {
                "type": "method",
                "args": {
                    "axis_name": "str"
                }
            }
        ],
        "YTick.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XTick.get_view_interval": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XTick._get_text2_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XTick._get_text1_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XTick.apply_tickdir": [
            {
                "type": "method",
                "args": {
                    "tickdir": "tuple"
                }
            }
        ],
        "Tick._set_labelrotation": [
            {
                "type": "method",
                "args": {
                    "labelrotation": "tuple"
                }
            }
        ],
        "XAxis.set_label_position": [
            {
                "type": "method",
                "args": {
                    "position": "str"
                }
            }
        ],
        "YAxis.set_label_position": [
            {
                "type": "method",
                "args": {
                    "position": "str"
                }
            }
        ],
        "Axis.set_minor_locator": [
            {
                "type": "method",
                "args": {
                    "locator": "mticker.Locator"
                }
            }
        ],
        "Axis.set_major_locator": [
            {
                "type": "method",
                "args": {
                    "locator": "mticker.Locator"
                }
            }
        ],
        "Axis._set_formatter": [
            {
                "type": "method",
                "args": {
                    "formatter": "mticker.Formatter",
                    "level": "Axis"
                }
            }
        ],
        "Axis.set_minor_formatter": [
            {
                "type": "method",
                "args": {
                    "formatter": "mticker.Formatter"
                }
            }
        ],
        "Axis.set_major_formatter": [
            {
                "type": "method",
                "args": {
                    "formatter": "mticker.Formatter"
                }
            }
        ],
        "Axis._set_scale": [
            {
                "type": "method",
                "args": {
                    "value": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Axis.set_label_text": [
            {
                "type": "method",
                "args": {
                    "label": "str",
                    "fontdict": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "Axis.convert_units": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "YAxis.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "XAxis.contains": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "Artist"
                }
            }
        ],
        "Axis._copy_tick_props": [
            {
                "type": "method",
                "args": {
                    "src": "Axis",
                    "dest": "Axis"
                }
            }
        ],
        "Axis.get_minor_ticks": [
            {
                "type": "method",
                "args": {
                    "numticks": "int"
                }
            }
        ],
        "Axis.get_minorticklines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_minorticklabels": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_major_ticks": [
            {
                "type": "method",
                "args": {
                    "numticks": "int"
                }
            }
        ],
        "Axis.set_ticks": [
            {
                "type": "method",
                "args": {
                    "ticks": "object",
                    "minor": "bool"
                }
            }
        ],
        "Axis.set_ticklabels": [
            {
                "type": "method",
                "args": {
                    "ticklabels": "list",
                    "minor": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "Axis._set_ticklabels": [
            {
                "type": "method",
                "args": {
                    "labels": "list",
                    "fontdict": "dict",
                    "minor": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "Axis.get_ticks_direction": [
            {
                "type": "method",
                "args": {
                    "minor": "bool"
                }
            }
        ],
        "Axis.get_majorticklines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_ticklines": [
            {
                "type": "method",
                "args": {
                    "minor": "bool"
                }
            }
        ],
        "Axis.get_majorticklabels": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_ticklabels": [
            {
                "type": "method",
                "args": {
                    "minor": "bool",
                    "which": "str"
                }
            }
        ],
        "Axis.get_gridlines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YAxis.set_default_intervals": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XAxis.set_default_intervals": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis._update_axisinfo": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.set_units": [
            {
                "type": "method",
                "args": {
                    "u": "munits.UnitData"
                }
            }
        ],
        "Axis.update_units": [
            {
                "type": "method",
                "args": {
                    "data": "np.ndarray"
                }
            }
        ],
        "Axis.axis_date": [
            {
                "type": "method",
                "args": {
                    "tz": "str"
                }
            }
        ],
        "YAxis.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "XAxis.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "XTick.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "XAxis._get_tick": [
            {
                "type": "method",
                "args": {
                    "major": "bool"
                }
            }
        ],
        "YTick._get_text2_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YTick._get_text1_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YTick.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "YAxis._get_tick": [
            {
                "type": "method",
                "args": {
                    "major": "bool"
                }
            }
        ],
        "YAxis.get_tick_space": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YAxis.set_inverted": [
            {
                "type": "method",
                "args": {
                    "inverted": "bool"
                }
            }
        ],
        "_LazyTickList.__get__": [
            {
                "type": "method",
                "args": {
                    "instance": "Axis",
                    "cls": "type"
                }
            }
        ],
        "_line_inspector": [
            {
                "type": "var",
                "anno": "martist.ArtistInspector"
            }
        ],
        "_line_param_aliases": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "_line_param_names": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "_gridline_param_names": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "Axis._translate_tick_kw": [
            {
                "type": "method",
                "args": {
                    "kw": "dict"
                }
            }
        ],
        "YAxis.set_offset_position": [
            {
                "type": "method",
                "args": {
                    "position": "str"
                }
            }
        ],
        "YAxis._update_offset_text_position": [
            {
                "type": "method",
                "args": {
                    "bboxes": "tuple",
                    "bboxes2": "tuple"
                }
            }
        ],
        "Axis.set_label_coords": [
            {
                "type": "method",
                "args": {
                    "x": "tuple",
                    "y": "tuple",
                    "transform": "mtransforms.Transform"
                }
            }
        ],
        "Axis.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XAxis._update_offset_text_position": [
            {
                "type": "method",
                "args": {
                    "bboxes": "list",
                    "bboxes2": "list"
                }
            }
        ],
        "Tick.get_pad_pixels": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YAxis.set_ticks_position": [
            {
                "type": "method",
                "args": {
                    "position": "str"
                }
            }
        ],
        "YAxis.tick_left": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YAxis.tick_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XAxis.set_ticks_position": [
            {
                "type": "method",
                "args": {
                    "position": "str"
                }
            }
        ],
        "XAxis.tick_bottom": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "XAxis.tick_top": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axis.grid": [
            {
                "type": "method",
                "args": {
                    "b": "bool",
                    "which": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Tick.set_pad": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "XAxis.set_inverted": [
            {
                "type": "method",
                "args": {
                    "inverted": "bool"
                }
            }
        ],
        "Axis._get_tick_bboxes": [
            {
                "type": "method",
                "args": {
                    "ticks": "tuple",
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "YAxis._get_tick_boxes_siblings": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "YAxis._update_label_position": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "XAxis._get_tick_boxes_siblings": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "XAxis._update_label_position": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Axis._set_artist_props": [
            {
                "type": "method",
                "args": {
                    "a": "martist.Artist"
                }
            }
        ],
        "Axis.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "martist.Artist",
                    "pickradius": "int"
                }
            }
        ],
        "Tick._set_artist_props": [
            {
                "type": "method",
                "args": {
                    "a": "martist.Artist"
                }
            }
        ],
        "Axis.get_ticklabel_extents": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "YAxis.get_text_widths": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "XAxis.get_text_heights": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Axis.zoom": [
            {
                "type": "method",
                "args": {
                    "direction": "float"
                }
            }
        ],
        "Axis.pan": [
            {
                "type": "method",
                "args": {
                    "numsteps": "int"
                }
            }
        ],
        "Tick.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "Axis",
                    "loc": "tuple",
                    "label": "str",
                    "size": "tuple",
                    "width": "tuple",
                    "color": "float",
                    "tickdir": "tuple",
                    "pad": "float",
                    "labelsize": "tuple",
                    "labelcolor": "str",
                    "zorder": "tuple",
                    "gridOn": "bool",
                    "tick1On": "bool",
                    "tick2On": "bool",
                    "label1On": "bool",
                    "label2On": "bool",
                    "major": "bool",
                    "labelrotation": "tuple",
                    "grid_color": "float",
                    "grid_linestyle": "float",
                    "grid_linewidth": "float",
                    "grid_alpha": "float",
                    "kw": "object"
                }
            }
        ]
    },
    "matplotlib.spines": {
        "Spine.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.axes": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "Spine.spine_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Spine.axis": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "Spine._bounds": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Spine._smart_bounds": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Spine._position": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Spine._path": [
            {
                "type": "attr",
                "anno": "mpath.Path"
            }
        ],
        "Spine._patch_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Spine._patch_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "Spine.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Spine.get_smart_bounds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine._center": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Spine._width": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Spine._height": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Spine._theta1": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Spine._theta2": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Spine.set_patch_line": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.get_bounds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.set_bounds": [
            {
                "type": "method",
                "args": {
                    "low": "float | None",
                    "high": "float | None"
                }
            }
        ],
        "Spine.set_smart_bounds": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "Spine.set_patch_circle": [
            {
                "type": "method",
                "args": {
                    "center": "tuple",
                    "radius": "tuple"
                }
            }
        ],
        "Spine.set_patch_arc": [
            {
                "type": "method",
                "args": {
                    "center": "tuple",
                    "radius": "float",
                    "theta1": "float",
                    "theta2": "float"
                }
            }
        ],
        "Spine.arc_spine": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "axes": "mtransforms.Axes",
                    "spine_type": "str",
                    "center": "tuple",
                    "radius": "float",
                    "theta1": "float",
                    "theta2": "float",
                    "kwargs": "dict"
                }
            }
        ],
        "Spine.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "Spine.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Spine.set_position": [
            {
                "type": "method",
                "args": {
                    "position": "tuple"
                }
            }
        ],
        "Spine._ensure_position_is_set": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine._adjust_location": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.linear_spine": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "axes": "mtransforms.Axes",
                    "spine_type": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "Spine.circular_spine": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Spine]",
                    "axes": "mpatches.Axes",
                    "center": "tuple",
                    "radius": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "Spine.get_spine_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine._recompute_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.set_color": [
            {
                "type": "method",
                "args": {
                    "c": "np.ndarray"
                }
            }
        ],
        "Spine.get_patch_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Spine.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "matplotlib.Axes",
                    "spine_type": "str",
                    "path": "matplotlib.path.Path",
                    "kwargs": "object"
                }
            }
        ],
        "Spine.register_axis": [
            {
                "type": "method",
                "args": {
                    "axis": "mpl.Axes"
                }
            }
        ]
    },
    "matplotlib.transforms": {
        "DEBUG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "TransformNode._gid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformNode.INVALID_NON_AFFINE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformNode.INVALID_AFFINE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformNode.INVALID": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformNode.is_affine": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TransformNode.is_bbox": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TransformNode.pass_through": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TransformNode._parents": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TransformNode._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformNode._shorthand_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TransformNode.__init__": [
            {
                "type": "method",
                "args": {
                    "shorthand_name": "str"
                }
            }
        ],
        "TransformNode.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformNode.__dict__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TransformNode.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformNode.__copy__": [
            {
                "type": "method",
                "args": {
                    "args": "typing.Any"
                }
            }
        ],
        "TransformNode.__deepcopy__": [
            {
                "type": "attr",
                "anno": "typing.Callable"
            }
        ],
        "TransformNode.frozen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.is_bbox": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BboxBase.is_affine": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BboxBase.get_points": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.extents": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.bounds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.intervaly": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.intervalx": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.max": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.min": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.ymax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.xmax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.ymin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.xmin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.p1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.p0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.y1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.x1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.y0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.x0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.is_unit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.__array__": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "BboxBase.containsx": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "BboxBase.containsy": [
            {
                "type": "method",
                "args": {
                    "y": "np.ndarray"
                }
            }
        ],
        "BboxBase.contains": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "BboxBase.fully_containsx": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "BboxBase.fully_containsy": [
            {
                "type": "method",
                "args": {
                    "y": "np.ndarray"
                }
            }
        ],
        "BboxBase.fully_contains": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray"
                }
            }
        ],
        "BboxBase.coefs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BboxBase.count_contains": [
            {
                "type": "method",
                "args": {
                    "vertices": "np.ndarray"
                }
            }
        ],
        "BboxBase.corners": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox._points": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Bbox._minpos": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Bbox._ignore": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Bbox._points_orig": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Bbox.__format__": [
            {
                "type": "method",
                "args": {
                    "fmt": "str"
                }
            }
        ],
        "Bbox.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.ignore": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "Bbox.minpos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.minposx": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.minposy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Bbox.get_points": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.mutatedx": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.mutatedy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.mutated": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformedBbox._bbox": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "TransformedBbox._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "TransformedBbox._points": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TransformedBbox._invalid": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LockableBbox._bbox": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "LockableBbox._points": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "LockableBbox._locked_points": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "LockableBbox._invalid": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Transform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Transform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Transform.is_separable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Transform.has_inverse": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Transform.depth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Transform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "values": "np.ndarray"
                }
            }
        ],
        "Transform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformWrapper.pass_through": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TransformWrapper.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformWrapper.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformWrapper._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformWrapper._child": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "TransformWrapper.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "TransformWrapper.transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "TransformWrapper.transform_affine": [
            {
                "type": "attr",
                "anno": "AffineBase"
            }
        ],
        "TransformWrapper.transform_non_affine": [
            {
                "type": "attr",
                "anno": "AffineBase"
            }
        ],
        "TransformWrapper.transform_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "TransformWrapper.transform_path_affine": [
            {
                "type": "attr",
                "anno": "AffineBase"
            }
        ],
        "TransformWrapper.transform_path_non_affine": [
            {
                "type": "attr",
                "anno": "AffineBase"
            }
        ],
        "TransformWrapper.get_affine": [
            {
                "type": "attr",
                "anno": "AffineBase"
            }
        ],
        "TransformWrapper.inverted": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "TransformWrapper.get_matrix": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "AffineBase.is_affine": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AffineBase._inverted": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "AffineBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "Transform.get_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Transform._iter_break_from_left_to_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AffineBase.transform_affine": [
            {
                "type": "method",
                "args": {
                    "values": "np.ndarray"
                }
            }
        ],
        "AffineBase.transform": [
            {
                "type": "method",
                "args": {
                    "values": "np.ndarray"
                }
            }
        ],
        "AffineBase.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "AffineBase.transform_path_non_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "AffineBase.get_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Affine2DBase.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Affine2DBase.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Affine2DBase.matrix_from_values": [
            {
                "type": "method",
                "args": {
                    "a": "float",
                    "b": "float",
                    "c": "float",
                    "d": "float",
                    "e": "float",
                    "f": "float"
                }
            }
        ],
        "Affine2DBase._inverted": [
            {
                "type": "attr",
                "anno": "Affine2D"
            }
        ],
        "Affine2DBase._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Affine2D._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Affine2D._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Affine2D._inverted": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Affine2D.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IdentityTransform._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "IdentityTransform.frozen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IdentityTransform.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IdentityTransform.transform": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "IdentityTransform.transform_affine": [
            {
                "type": "method",
                "args": {
                    "points": "tuple"
                }
            }
        ],
        "IdentityTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "IdentityTransform.transform_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "IdentityTransform.transform_path_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "IdentityTransform.transform_path_non_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "IdentityTransform.get_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IdentityTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlendedGenericTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BlendedGenericTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BlendedGenericTransform.is_separable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BlendedGenericTransform.pass_through": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BlendedGenericTransform._x": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "BlendedGenericTransform._y": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "BlendedGenericTransform._affine": [
            {
                "type": "attr",
                "anno": "AffineBase"
            }
        ],
        "BlendedGenericTransform.contains_branch": [
            {
                "type": "method",
                "args": {
                    "other": "Transform"
                }
            }
        ],
        "BlendedGenericTransform._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BlendedAffine2D.is_separable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BlendedAffine2D._x": [
            {
                "type": "attr",
                "anno": "AffineBase"
            }
        ],
        "BlendedAffine2D._y": [
            {
                "type": "attr",
                "anno": "AffineBase"
            }
        ],
        "BlendedAffine2D._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BlendedAffine2D._inverted": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "BlendedAffine2D._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CompositeGenericTransform.pass_through": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CompositeGenericTransform.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CompositeGenericTransform.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CompositeGenericTransform._a": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "CompositeGenericTransform._b": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "CompositeGenericTransform._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CompositeGenericTransform.is_affine": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "TransformWrapper.is_affine": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "BlendedGenericTransform.is_affine": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "CompositeGenericTransform.has_inverse": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "TransformWrapper.has_inverse": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "BlendedGenericTransform.has_inverse": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "CompositeAffine2D.input_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CompositeAffine2D.output_dims": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CompositeAffine2D._a": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "CompositeAffine2D._b": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "CompositeAffine2D._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "CompositeAffine2D.depth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlendedGenericTransform.depth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompositeGenericTransform.depth": [
            {
                "type": "attr",
                "anno": "property[Transform, float]"
            }
        ],
        "Transform.contains_branch": [
            {
                "type": "method",
                "args": {
                    "other": "Transform"
                }
            }
        ],
        "Transform.contains_branch_seperately": [
            {
                "type": "method",
                "args": {
                    "other_transform": "Transform"
                }
            }
        ],
        "CompositeAffine2D._iter_break_from_left_to_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompositeGenericTransform._iter_break_from_left_to_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompositeAffine2D._inverted": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "CompositeAffine2D._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BboxTransform.is_separable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BboxTransform._boxin": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "BboxTransform._boxout": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "BboxTransform._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BboxTransform._inverted": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BboxTransform._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BboxTransformTo.is_separable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BboxTransformTo._boxout": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "BboxTransformTo._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BboxTransformTo._inverted": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BboxTransformTo._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BboxTransformToMaxOnly._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BboxTransformToMaxOnly._inverted": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BboxTransformToMaxOnly._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BboxTransformToMaxOnly.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxTransformFrom.is_separable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BboxTransformFrom._boxin": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "BboxTransformFrom._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BboxTransformFrom._inverted": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "BboxTransformFrom._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScaledTranslation._t": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ScaledTranslation._scale_trans": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "ScaledTranslation._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ScaledTranslation._inverted": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ScaledTranslation._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AffineDeltaTransform._base_transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "AffineDeltaTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "transform": "Transform",
                    "kwargs": "object"
                }
            }
        ],
        "AffineDeltaTransform._mtx": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TransformedPath._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "TransformedPath._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "TransformedPath._transformed_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "TransformedPath._transformed_points": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "TransformedPath._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TransformedPatchPath._patch": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "TransformedPatchPath._transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "TransformedPatchPath._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "TransformedPatchPath._transformed_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "TransformedPatchPath._transformed_points": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "TransformedPatchPath._invalid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "nonsingular": [
            {
                "type": "func",
                "args": {
                    "vmin": "float",
                    "vmax": "float",
                    "expander": "float",
                    "tiny": "float",
                    "increasing": "bool"
                }
            }
        ],
        "interval_contains": [
            {
                "type": "func",
                "args": {
                    "interval": "tuple",
                    "val": "tuple"
                }
            }
        ],
        "_interval_contains_close": [
            {
                "type": "func",
                "args": {
                    "interval": "tuple",
                    "val": "float",
                    "rtol": "float"
                }
            }
        ],
        "interval_contains_open": [
            {
                "type": "func",
                "args": {
                    "interval": "tuple",
                    "val": "float"
                }
            }
        ],
        "CompositeGenericTransform.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "TransformNode._invalidate_internal": [
            {
                "type": "method",
                "args": {
                    "value": "int",
                    "invalidating_node": "Transform"
                }
            }
        ],
        "CompositeGenericTransform._invalidate_internal": [
            {
                "type": "method",
                "args": {
                    "value": "int",
                    "invalidating_node": "Transform"
                }
            }
        ],
        "TransformNode.invalidate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Affine2D.skew": [
            {
                "type": "method",
                "args": {
                    "xShear": "float",
                    "yShear": "float"
                }
            }
        ],
        "Affine2D.skew_deg": [
            {
                "type": "method",
                "args": {
                    "xShear": "float",
                    "yShear": "float"
                }
            }
        ],
        "Affine2D.scale": [
            {
                "type": "method",
                "args": {
                    "sx": "float",
                    "sy": "float"
                }
            }
        ],
        "Affine2D.translate": [
            {
                "type": "method",
                "args": {
                    "tx": "float",
                    "ty": "float"
                }
            }
        ],
        "Affine2D.rotate": [
            {
                "type": "method",
                "args": {
                    "theta": "float"
                }
            }
        ],
        "Affine2D.rotate_around": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "theta": "float"
                }
            }
        ],
        "Affine2D.rotate_deg": [
            {
                "type": "method",
                "args": {
                    "degrees": "float"
                }
            }
        ],
        "Affine2D.rotate_deg_around": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "degrees": "float"
                }
            }
        ],
        "Affine2D.set_matrix": [
            {
                "type": "method",
                "args": {
                    "mtx": "np.ndarray"
                }
            }
        ],
        "LockableBbox.locked_y1": [
            {
                "type": "method",
                "args": {
                    "y1": "np.ndarray"
                }
            }
        ],
        "LockableBbox.locked_x1": [
            {
                "type": "method",
                "args": {
                    "x1": "np.ndarray"
                }
            }
        ],
        "LockableBbox.locked_y0": [
            {
                "type": "method",
                "args": {
                    "y0": "np.ndarray"
                }
            }
        ],
        "LockableBbox.locked_x0": [
            {
                "type": "method",
                "args": {
                    "x0": "np.ndarray"
                }
            }
        ],
        "_BlendedMixin.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "TransformNode.set_children": [
            {
                "type": "method",
                "args": {
                    "children": "Transform"
                }
            }
        ],
        "ScaledTranslation.__init__": [
            {
                "type": "method",
                "args": {
                    "xt": "float",
                    "yt": "float",
                    "scale_trans": "Transform",
                    "kwargs": "object"
                }
            }
        ],
        "BboxTransformFrom.__init__": [
            {
                "type": "method",
                "args": {
                    "boxin": "Bbox",
                    "kwargs": "object"
                }
            }
        ],
        "BboxTransformTo.__init__": [
            {
                "type": "method",
                "args": {
                    "boxout": "Bbox",
                    "kwargs": "object"
                }
            }
        ],
        "BboxTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "boxin": "Bbox",
                    "boxout": "Bbox",
                    "kwargs": "object"
                }
            }
        ],
        "CompositeAffine2D.__init__": [
            {
                "type": "method",
                "args": {
                    "a": "Affine2D",
                    "b": "Affine2D",
                    "kwargs": "Any"
                }
            }
        ],
        "CompositeGenericTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "a": "Transform",
                    "b": "Transform",
                    "kwargs": "Any"
                }
            }
        ],
        "composite_transform_factory": [
            {
                "type": "func",
                "args": {
                    "a": "Transform",
                    "b": "Transform"
                }
            }
        ],
        "Transform.__add__": [
            {
                "type": "method",
                "args": {
                    "other": "Transform"
                }
            }
        ],
        "BlendedGenericTransform.__init__": [
            {
                "type": "method",
                "args": {
                    "x_transform": "Transform",
                    "y_transform": "Transform",
                    "kwargs": "object"
                }
            }
        ],
        "LockableBbox.__init__": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox",
                    "x0": "float",
                    "y0": "float",
                    "x1": "float",
                    "y1": "float",
                    "kwargs": "object"
                }
            }
        ],
        "TransformedBbox.__init__": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox",
                    "transform": "Transform",
                    "kwargs": "object"
                }
            }
        ],
        "Affine2D.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Affine2D.__init__": [
            {
                "type": "method",
                "args": {
                    "matrix": "Transform",
                    "kwargs": "object"
                }
            }
        ],
        "Affine2D.identity": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Affine2D.from_values": [
            {
                "type": "method",
                "args": {
                    "a": "float",
                    "b": "float",
                    "c": "float",
                    "d": "float",
                    "e": "float",
                    "f": "float"
                }
            }
        ],
        "BboxBase.frozen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformWrapper._set": [
            {
                "type": "method",
                "args": {
                    "child": "Transform"
                }
            }
        ],
        "TransformWrapper.set": [
            {
                "type": "method",
                "args": {
                    "child": "Transform"
                }
            }
        ],
        "TransformWrapper._init": [
            {
                "type": "method",
                "args": {
                    "child": "Transform"
                }
            }
        ],
        "TransformWrapper.__init__": [
            {
                "type": "method",
                "args": {
                    "child": "Transform"
                }
            }
        ],
        "Bbox.set": [
            {
                "type": "method",
                "args": {
                    "other": "Bbox"
                }
            }
        ],
        "Transform.transform_affine": [
            {
                "type": "method",
                "args": {
                    "values": "np.ndarray"
                }
            }
        ],
        "Transform.transform": [
            {
                "type": "method",
                "args": {
                    "values": "np.ndarray"
                }
            }
        ],
        "Transform.transform_path_non_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "ScaledTranslation.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Transform.transform_angles": [
            {
                "type": "method",
                "args": {
                    "angles": "np.ndarray",
                    "pts": "np.ndarray",
                    "radians": "bool",
                    "pushoff": "float"
                }
            }
        ],
        "Transform.transform_point": [
            {
                "type": "method",
                "args": {
                    "point": "tuple"
                }
            }
        ],
        "Transform.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Affine2DBase.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Affine2DBase.to_values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Affine2DBase.is_separable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformWrapper.is_separable": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "CompositeGenericTransform.is_separable": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "BlendedAffine2D.__init__": [
            {
                "type": "method",
                "args": {
                    "x_transform": "Transform",
                    "y_transform": "Transform",
                    "kwargs": "Any"
                }
            }
        ],
        "blended_transform_factory": [
            {
                "type": "func",
                "args": {
                    "x_transform": "Transform",
                    "y_transform": "Transform"
                }
            }
        ],
        "Affine2DBase.frozen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformWrapper.frozen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlendedGenericTransform.frozen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompositeGenericTransform.frozen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Affine2DBase.transform_affine": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "Affine2DBase._transform_affine": [
            {
                "type": "attr",
                "anno": "Callable[[np.ma.MaskedArray], AffineBase]"
            }
        ],
        "BboxBase._check": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "LockableBbox.get_points": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LockableBbox._get_points": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TransformedBbox.get_points": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformedBbox._get_points": [
            {
                "type": "attr",
                "anno": "Callable[[], np.ndarray]"
            }
        ],
        "Bbox.invalidate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.set_points": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "Bbox.bounds": [
            {
                "type": "method",
                "args": {
                    "bounds": "tuple"
                }
            }
        ],
        "BboxTransformFrom.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxTransformTo.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxTransform.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlendedAffine2D.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompositeAffine2D.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AffineDeltaTransform.get_matrix": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BlendedGenericTransform.get_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompositeGenericTransform.get_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformedPath.get_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompositeGenericTransform.transform_affine": [
            {
                "type": "method",
                "args": {
                    "points": "tuple[int, int]"
                }
            }
        ],
        "Bbox.intervaly": [
            {
                "type": "method",
                "args": {
                    "interval": "np.ndarray"
                }
            }
        ],
        "Bbox.intervalx": [
            {
                "type": "method",
                "args": {
                    "interval": "np.ndarray"
                }
            }
        ],
        "Bbox.p1": [
            {
                "type": "method",
                "args": {
                    "val": "np.ndarray"
                }
            }
        ],
        "Bbox.p0": [
            {
                "type": "method",
                "args": {
                    "val": "np.ndarray"
                }
            }
        ],
        "Bbox.y1": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "Bbox.x1": [
            {
                "type": "method",
                "args": {
                    "val": "np.ndarray"
                }
            }
        ],
        "Bbox.y0": [
            {
                "type": "method",
                "args": {
                    "val": "np.ndarray"
                }
            }
        ],
        "Bbox.x0": [
            {
                "type": "method",
                "args": {
                    "val": "np.ndarray"
                }
            }
        ],
        "Bbox.update_from_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "ignore": "bool",
                    "updatex": "bool",
                    "updatey": "bool"
                }
            }
        ],
        "Bbox.__init__": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray",
                    "kwargs": "Any"
                }
            }
        ],
        "Transform.transform_bbox": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox"
                }
            }
        ],
        "Bbox.from_extents": [
            {
                "type": "method",
                "args": {
                    "args": "float"
                }
            }
        ],
        "Bbox.from_bounds": [
            {
                "type": "method",
                "args": {
                    "x0": "float",
                    "y0": "float",
                    "width": "float",
                    "height": "float"
                }
            }
        ],
        "Bbox.null": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.unit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Bbox.___init__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BboxBase.intersection": [
            {
                "type": "method",
                "args": {
                    "bbox1": "Bbox",
                    "bbox2": "Bbox"
                }
            }
        ],
        "BboxBase.union": [
            {
                "type": "method",
                "args": {
                    "bboxes": "list"
                }
            }
        ],
        "BboxBase.translated": [
            {
                "type": "method",
                "args": {
                    "tx": "float",
                    "ty": "float"
                }
            }
        ],
        "BboxBase.padded": [
            {
                "type": "method",
                "args": {
                    "p": "int"
                }
            }
        ],
        "BboxBase.expanded": [
            {
                "type": "method",
                "args": {
                    "sw": "float",
                    "sh": "float"
                }
            }
        ],
        "BboxBase.splity": [
            {
                "type": "method",
                "args": {
                    "args": "float"
                }
            }
        ],
        "BboxBase.splitx": [
            {
                "type": "method",
                "args": {
                    "args": "float"
                }
            }
        ],
        "BboxBase.shrunk_to_aspect": [
            {
                "type": "method",
                "args": {
                    "box_aspect": "float",
                    "container": "cbook.Node",
                    "fig_aspect": "float"
                }
            }
        ],
        "BboxBase.shrunk": [
            {
                "type": "method",
                "args": {
                    "mx": "float",
                    "my": "float"
                }
            }
        ],
        "BboxBase.anchored": [
            {
                "type": "method",
                "args": {
                    "c": "str",
                    "container": "Bbox"
                }
            }
        ],
        "BboxBase.transformed": [
            {
                "type": "method",
                "args": {
                    "transform": "Transform"
                }
            }
        ],
        "AffineBase.transform_path_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "AffineBase.transform_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "Transform.transform_path_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "Transform.transform_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "Bbox.update_from_data_xy": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray",
                    "ignore": "bool",
                    "updatex": "bool",
                    "updatey": "bool"
                }
            }
        ],
        "BboxBase.rotated": [
            {
                "type": "method",
                "args": {
                    "radians": "float"
                }
            }
        ],
        "CompositeGenericTransform.transform_path_non_affine": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "BlendedGenericTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompositeGenericTransform.inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "offset_copy": [
            {
                "type": "func",
                "args": {
                    "trans": "Transform",
                    "fig": "Figure",
                    "x": "float",
                    "y": "float",
                    "units": "str"
                }
            }
        ],
        "BboxBase.count_overlaps": [
            {
                "type": "method",
                "args": {
                    "bboxes": "list"
                }
            }
        ],
        "TransformedPath.__init__": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "transform": "Transform"
                }
            }
        ],
        "Affine2D.set": [
            {
                "type": "method",
                "args": {
                    "other": "Affine2DBase"
                }
            }
        ],
        "_make_str_method": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "AffineDeltaTransform.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "ScaledTranslation.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "BboxTransformFrom.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "BboxTransformTo.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "BboxTransform.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "CompositeAffine2D.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "CompositeGenericTransform.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_BlendedMixin.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "_BlendedMixin.contains_branch_seperately": [
            {
                "type": "method",
                "args": {
                    "transform": "Transform"
                }
            }
        ],
        "IdentityTransform.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Affine2D.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "TransformWrapper.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "LockableBbox.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "TransformedBbox.__str__": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "BlendedGenericTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "CompositeGenericTransform.transform_non_affine": [
            {
                "type": "method",
                "args": {
                    "points": "np.ndarray"
                }
            }
        ],
        "TransformedPath._revalidate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformedPath.get_fully_transformed_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformedPath.get_transformed_path_and_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransformedPath.get_transformed_points_and_affine": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AffineBase.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "AffineBase.__array__": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "Transform.__array__": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "TransformedPatchPath._revalidate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxBase.fully_overlaps": [
            {
                "type": "method",
                "args": {
                    "other": "Bbox"
                }
            }
        ],
        "BboxBase.overlaps": [
            {
                "type": "method",
                "args": {
                    "other": "Bbox"
                }
            }
        ],
        "TransformedPatchPath.__init__": [
            {
                "type": "method",
                "args": {
                    "patch": "Transform"
                }
            }
        ],
        "Transform.__sub__": [
            {
                "type": "method",
                "args": {
                    "other": "Transform"
                }
            }
        ],
        "Transform.__init_subclass__": [
            {
                "type": "method",
                "args": {
                    "cls": "type"
                }
            }
        ],
        "BboxBase.inverse_transformed": [
            {
                "type": "method",
                "args": {
                    "transform": "Transform"
                }
            }
        ],
        "TransformNode.__setstate__": [
            {
                "type": "method",
                "args": {
                    "data_dict": "dict"
                }
            }
        ]
    },
    "matplotlib.pyplot": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_code_objs": [
            {
                "type": "var",
                "anno": "dict[Callable[[], object], object]"
            }
        ],
        "_IP_REGISTERED": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "_INSTALL_FIG_OBSERVER": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "uninstall_repl_displayhook": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "set_loglevel": [
            {
                "type": "func",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "_get_required_interactive_framework": [
            {
                "type": "func",
                "args": {
                    "backend_mod": "matplotlib.backend_bases._Backend"
                }
            }
        ],
        "_xkcd._orig": [
            {
                "type": "attr",
                "anno": "rcParamsOrig"
            }
        ],
        "_xkcd.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "plotting": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_fignums": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "isinteractive": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "ioff": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_xkcd.__exit__": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "_warn_if_gui_out_of_main_thread": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_copy_docstring_and_deprecators": [
            {
                "type": "func",
                "args": {
                    "method": "object",
                    "func": "object"
                }
            }
        ],
        "rc": [
            {
                "type": "func",
                "args": {
                    "group": "str",
                    "kwargs": "object"
                }
            }
        ],
        "colormaps": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_plot_commands": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "imread": [
            {
                "type": "func",
                "args": {
                    "fname": "object",
                    "format": "str"
                }
            }
        ],
        "sca": [
            {
                "type": "func",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "get_figlabels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "fignum_exists": [
            {
                "type": "func",
                "args": {
                    "num": "int"
                }
            }
        ],
        "_setup_pyplot_info_docstrings": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "getp": [
            {
                "type": "func",
                "args": {
                    "obj": "Artist",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "get": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "rc_context": [
            {
                "type": "func",
                "args": {
                    "rc": "dict",
                    "fname": "str"
                }
            }
        ],
        "_auto_draw_if_interactive": [
            {
                "type": "func",
                "args": {
                    "fig": "Figure",
                    "val": "bool"
                }
            }
        ],
        "_xkcd.__init__": [
            {
                "type": "method",
                "args": {
                    "scale": "int",
                    "length": "int",
                    "randomness": "int"
                }
            }
        ],
        "xkcd": [
            {
                "type": "func",
                "args": {
                    "scale": "int",
                    "length": "int",
                    "randomness": "int"
                }
            }
        ],
        "show": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "draw_if_interactive": [
            {
                "type": "func",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "pause": [
            {
                "type": "func",
                "args": {
                    "interval": "float"
                }
            }
        ],
        "close": [
            {
                "type": "func",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "switch_backend": [
            {
                "type": "func",
                "args": {
                    "newbackend": "str"
                }
            }
        ],
        "setp": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "args": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "imsave": [
            {
                "type": "func",
                "args": {
                    "fname": "str",
                    "arr": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "draw_all": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "rcdefaults": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "install_repl_displayhook": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "ion": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "new_figure_manager": [
            {
                "type": "func",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "figure": [
            {
                "type": "func",
                "args": {
                    "num": "int",
                    "figsize": "tuple",
                    "dpi": "int",
                    "facecolor": "int",
                    "edgecolor": "int",
                    "frameon": "bool",
                    "FigureClass": "FigureClass",
                    "clear": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "subplots": [
            {
                "type": "func",
                "args": {
                    "nrows": "int",
                    "ncols": "int",
                    "sharex": "Union[bool, str]",
                    "sharey": "Union[bool, str]",
                    "squeeze": "bool",
                    "subplot_kw": "dict",
                    "gridspec_kw": "dict",
                    "fig_kw": "dict"
                }
            }
        ],
        "gcf": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "waitforbuttonpress": [
            {
                "type": "func",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "suptitle": [
            {
                "type": "func",
                "args": {
                    "t": "str",
                    "kwargs": "object"
                }
            }
        ],
        "subplots_adjust": [
            {
                "type": "func",
                "args": {
                    "left": "float",
                    "bottom": "float",
                    "right": "float",
                    "top": "float",
                    "wspace": "float",
                    "hspace": "float"
                }
            }
        ],
        "ginput": [
            {
                "type": "func",
                "args": {
                    "n": "int",
                    "timeout": "int",
                    "show_clicks": "bool",
                    "mouse_add": "MouseButton",
                    "mouse_pop": "MouseButton",
                    "mouse_stop": "MouseButton"
                }
            }
        ],
        "gci": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "set_cmap": [
            {
                "type": "func",
                "args": {
                    "cmap": "str"
                }
            }
        ],
        "nipy_spectral": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "viridis": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "plasma": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "inferno": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "magma": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "winter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "summer": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "spring": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "prism": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "pink": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "jet": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "hsv": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "hot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "gray": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "flag": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "copper": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "cool": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "bone": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "autumn": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "clim": [
            {
                "type": "func",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "gca": [
            {
                "type": "func",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "yscale": [
            {
                "type": "func",
                "args": {
                    "value": "float",
                    "kwargs": "object"
                }
            }
        ],
        "xscale": [
            {
                "type": "func",
                "args": {
                    "value": "float",
                    "kwargs": "object"
                }
            }
        ],
        "ylabel": [
            {
                "type": "func",
                "args": {
                    "ylabel": "str",
                    "fontdict": "dict",
                    "labelpad": "int",
                    "loc": "str",
                    "kwargs": "object"
                }
            }
        ],
        "xlabel": [
            {
                "type": "func",
                "args": {
                    "xlabel": "str",
                    "fontdict": "dict",
                    "labelpad": "int",
                    "loc": "str",
                    "kwargs": "object"
                }
            }
        ],
        "title": [
            {
                "type": "func",
                "args": {
                    "label": "str",
                    "fontdict": "dict",
                    "loc": "str",
                    "pad": "float",
                    "y": "float",
                    "kwargs": "object"
                }
            }
        ],
        "sci": [
            {
                "type": "func",
                "args": {
                    "im": "np.ndarray"
                }
            }
        ],
        "xcorr": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "normed": "bool",
                    "detrend": "Callable",
                    "usevlines": "bool",
                    "maxlags": "int",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "vlines": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "colors": "str",
                    "linestyles": "str",
                    "label": "str",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "violinplot": [
            {
                "type": "func",
                "args": {
                    "dataset": "np.ndarray",
                    "positions": "list",
                    "vert": "bool",
                    "widths": "float",
                    "showmeans": "bool",
                    "showextrema": "bool",
                    "showmedians": "bool",
                    "quantiles": "list",
                    "points": "int",
                    "bw_method": "Callable",
                    "data": "object"
                }
            }
        ],
        "triplot": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "tripcolor": [
            {
                "type": "func",
                "args": {
                    "args": "int",
                    "alpha": "float",
                    "norm": "float",
                    "cmap": "str",
                    "vmin": "float",
                    "vmax": "float",
                    "shading": "str",
                    "facecolors": "str",
                    "kwargs": "object"
                }
            }
        ],
        "tricontourf": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "tricontour": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "text": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "fontdict": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "table": [
            {
                "type": "func",
                "args": {
                    "cellText": "Text | None",
                    "cellColours": "Text | None",
                    "cellLoc": "Text | None",
                    "colWidths": "Text | None",
                    "rowLabels": "Text",
                    "rowColours": "Text",
                    "rowLoc": "Text | None",
                    "colLabels": "Text",
                    "colColours": "Text",
                    "colLoc": "Text | None",
                    "loc": "Text | None",
                    "bbox": "Text | None",
                    "edges": "Text",
                    "kwargs": "object"
                }
            }
        ],
        "streamplot": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "u": "np.ndarray",
                    "v": "np.ndarray",
                    "density": "float",
                    "linewidth": "float",
                    "color": "float",
                    "cmap": "float",
                    "norm": "float",
                    "arrowsize": "float",
                    "arrowstyle": "str",
                    "minlength": "float",
                    "transform": "float",
                    "zorder": "float",
                    "start_points": "np.ndarray",
                    "maxlength": "float",
                    "integration_direction": "str",
                    "data": "np.ndarray"
                }
            }
        ],
        "step": [
            {
                "type": "func",
                "args": {
                    "x": "tuple",
                    "y": "tuple",
                    "args": "tuple",
                    "where": "str",
                    "data": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ],
        "stem": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "linefmt": "str",
                    "markerfmt": "str",
                    "basefmt": "str",
                    "bottom": "int",
                    "label": "str",
                    "use_line_collection": "bool",
                    "data": "object"
                }
            }
        ],
        "stackplot": [
            {
                "type": "func",
                "args": {
                    "x": "object",
                    "args": "object",
                    "labels": "object",
                    "colors": "object",
                    "baseline": "str",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "spy": [
            {
                "type": "func",
                "args": {
                    "Z": "np.ndarray",
                    "precision": "int",
                    "marker": "str",
                    "markersize": "float",
                    "aspect": "str",
                    "origin": "str",
                    "kwargs": "object"
                }
            }
        ],
        "specgram": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "Fc": "float",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "cmap": "cm.Colormap",
                    "xextent": "tuple",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "mode": "str",
                    "scale": "str",
                    "vmin": "float",
                    "vmax": "float",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "semilogy": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "semilogx": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "scatter": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "s": "np.ndarray",
                    "c": "np.ndarray",
                    "marker": "np.ndarray",
                    "cmap": "float",
                    "norm": "float",
                    "vmin": "float",
                    "vmax": "float",
                    "alpha": "float",
                    "linewidths": "float",
                    "verts": "str",
                    "edgecolors": "str",
                    "plotnonfinite": "bool",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "quiverkey": [
            {
                "type": "func",
                "args": {
                    "Q": "Quant",
                    "X": "int",
                    "Y": "int",
                    "U": "int",
                    "label": "str",
                    "kw": "object"
                }
            }
        ],
        "quiver": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "data": "np.ndarray",
                    "kw": "object"
                }
            }
        ],
        "psd": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "Fc": "int",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "return_line": "bool",
                    "data": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "plot_date": [
            {
                "type": "func",
                "args": {
                    "x": "tuple",
                    "y": "tuple",
                    "fmt": "str",
                    "tz": "str",
                    "xdate": "bool",
                    "ydate": "bool",
                    "data": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "plot": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "scalex": "bool",
                    "scaley": "bool",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "pie": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "explode": "list",
                    "labels": "list",
                    "colors": "list",
                    "autopct": "str",
                    "pctdistance": "float",
                    "shadow": "bool",
                    "labeldistance": "float",
                    "startangle": "float",
                    "radius": "float",
                    "counterclock": "bool",
                    "wedgeprops": "dict",
                    "textprops": "dict",
                    "center": "tuple",
                    "frame": "bool",
                    "rotatelabels": "bool",
                    "normalize": "bool",
                    "data": "dict"
                }
            }
        ],
        "phase_spectrum": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "Fs": "float",
                    "Fc": "float",
                    "window": "float",
                    "pad_to": "float",
                    "sides": "str",
                    "data": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "pcolormesh": [
            {
                "type": "func",
                "args": {
                    "args": "np.ndarray",
                    "alpha": "float",
                    "norm": "float",
                    "cmap": "str",
                    "vmin": "float",
                    "vmax": "float",
                    "shading": "str",
                    "antialiased": "bool",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "pcolor": [
            {
                "type": "func",
                "args": {
                    "args": "np.ndarray",
                    "shading": "str",
                    "alpha": "float",
                    "norm": "float",
                    "cmap": "str",
                    "vmin": "float",
                    "vmax": "float",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "minorticks_on": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "minorticks_off": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "margins": [
            {
                "type": "func",
                "args": {
                    "margins": "float",
                    "x": "float",
                    "y": "float",
                    "tight": "bool"
                }
            }
        ],
        "magnitude_spectrum": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "Fs": "float",
                    "Fc": "float",
                    "window": "float",
                    "pad_to": "float",
                    "sides": "str",
                    "scale": "str",
                    "data": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "loglog": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "legend": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "imshow": [
            {
                "type": "func",
                "args": {
                    "X": "np.ndarray",
                    "cmap": "float",
                    "norm": "float",
                    "aspect": "float",
                    "interpolation": "float",
                    "alpha": "float",
                    "vmin": "float",
                    "vmax": "float",
                    "origin": "np.ndarray",
                    "extent": "np.ndarray",
                    "filternorm": "bool",
                    "filterrad": "float",
                    "resample": "bool",
                    "url": "str",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "hlines": [
            {
                "type": "func",
                "args": {
                    "y": "np.ndarray",
                    "xmin": "np.ndarray",
                    "xmax": "np.ndarray",
                    "colors": "str",
                    "linestyles": "str",
                    "label": "str",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "hist2d": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "bins": "int",
                    "range": "float",
                    "density": "bool",
                    "weights": "np.ndarray",
                    "cmin": "float | None",
                    "cmax": "float | None",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "hist": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "bins": "np.ndarray",
                    "range": "np.ndarray",
                    "density": "bool",
                    "weights": "np.ndarray",
                    "cumulative": "bool",
                    "bottom": "np.ndarray",
                    "histtype": "str",
                    "align": "str",
                    "orientation": "str",
                    "rwidth": "float",
                    "log": "bool",
                    "color": "tuple",
                    "label": "str",
                    "stacked": "bool",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "hexbin": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "C": "np.ndarray",
                    "gridsize": "int",
                    "bins": "int",
                    "xscale": "str",
                    "yscale": "str",
                    "extent": "tuple",
                    "cmap": "str",
                    "norm": "float",
                    "vmin": "float",
                    "vmax": "float",
                    "alpha": "float",
                    "linewidths": "float",
                    "edgecolors": "str",
                    "reduce_C_function": "Callable",
                    "mincnt": "int",
                    "marginals": "bool",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "fill_betweenx": [
            {
                "type": "func",
                "args": {
                    "y": "tuple",
                    "x1": "tuple",
                    "x2": "tuple",
                    "where": "str",
                    "step": "tuple",
                    "interpolate": "bool",
                    "data": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ],
        "fill_between": [
            {
                "type": "func",
                "args": {
                    "x": "tuple",
                    "y1": "tuple",
                    "y2": "tuple",
                    "where": "str",
                    "interpolate": "bool",
                    "step": "tuple",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "fill": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "eventplot": [
            {
                "type": "func",
                "args": {
                    "positions": "np.ndarray",
                    "orientation": "str",
                    "lineoffsets": "float",
                    "linelengths": "float",
                    "linewidths": "float",
                    "colors": "np.ndarray",
                    "linestyles": "str",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "errorbar": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "yerr": "float",
                    "xerr": "float",
                    "fmt": "str",
                    "ecolor": "str",
                    "elinewidth": "float",
                    "capsize": "float",
                    "barsabove": "bool",
                    "lolims": "bool",
                    "uplims": "bool",
                    "xlolims": "bool",
                    "xuplims": "bool",
                    "errorevery": "float",
                    "capthick": "int",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "csd": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "Fc": "int",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "return_line": "bool",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "contourf": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "contour": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "cohere": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "NFFT": "int",
                    "Fs": "float",
                    "Fc": "float",
                    "detrend": "Callable",
                    "window": "Callable",
                    "noverlap": "int",
                    "pad_to": "int",
                    "sides": "str",
                    "scale_by_freq": "bool",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "clabel": [
            {
                "type": "func",
                "args": {
                    "CS": "object",
                    "levels": "list",
                    "kwargs": "object"
                }
            }
        ],
        "cla": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "broken_barh": [
            {
                "type": "func",
                "args": {
                    "xranges": "np.ndarray",
                    "yrange": "np.ndarray",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "boxplot": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "notch": "str",
                    "sym": "str",
                    "vert": "str",
                    "whis": "str",
                    "positions": "np.ndarray",
                    "widths": "np.ndarray",
                    "patch_artist": "int",
                    "bootstrap": "int",
                    "usermedians": "np.ndarray",
                    "conf_intervals": "np.ndarray",
                    "meanline": "bool",
                    "showmeans": "bool",
                    "showcaps": "bool",
                    "showbox": "bool",
                    "showfliers": "bool",
                    "boxprops": "int",
                    "labels": "int",
                    "flierprops": "int",
                    "medianprops": "int",
                    "meanprops": "int",
                    "capprops": "int",
                    "whiskerprops": "int",
                    "manage_ticks": "bool",
                    "autorange": "bool",
                    "zorder": "int",
                    "data": "object"
                }
            }
        ],
        "barh": [
            {
                "type": "func",
                "args": {
                    "y": "np.ndarray",
                    "width": "np.ndarray",
                    "height": "float",
                    "left": "np.ndarray",
                    "align": "str",
                    "kwargs": "object"
                }
            }
        ],
        "barbs": [
            {
                "type": "func",
                "args": {
                    "args": "tuple",
                    "data": "object",
                    "kw": "object"
                }
            }
        ],
        "bar": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "height": "np.ndarray",
                    "width": "float",
                    "bottom": "np.ndarray",
                    "align": "str",
                    "data": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "axvspan": [
            {
                "type": "func",
                "args": {
                    "xmin": "np.ndarray",
                    "xmax": "np.ndarray",
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "axvline": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "axline": [
            {
                "type": "func",
                "args": {
                    "xy1": "tuple",
                    "xy2": "tuple",
                    "slope": "float",
                    "kwargs": "object"
                }
            }
        ],
        "axis": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "emit": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "ticklabel_format": [
            {
                "type": "func",
                "args": {
                    "axis": "str",
                    "style": "str",
                    "scilimits": "tuple",
                    "useOffset": "bool",
                    "useLocale": "bool",
                    "useMathText": "bool"
                }
            }
        ],
        "tick_params": [
            {
                "type": "func",
                "args": {
                    "axis": "str",
                    "kwargs": "tuple"
                }
            }
        ],
        "locator_params": [
            {
                "type": "func",
                "args": {
                    "axis": "str",
                    "tight": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "grid": [
            {
                "type": "func",
                "args": {
                    "b": "bool",
                    "which": "str",
                    "axis": "str",
                    "kwargs": "object"
                }
            }
        ],
        "axhspan": [
            {
                "type": "func",
                "args": {
                    "ymin": "np.ndarray",
                    "ymax": "np.ndarray",
                    "xmin": "float",
                    "xmax": "float",
                    "kwargs": "object"
                }
            }
        ],
        "axhline": [
            {
                "type": "func",
                "args": {
                    "y": "np.ndarray",
                    "xmin": "float",
                    "xmax": "float",
                    "kwargs": "object"
                }
            }
        ],
        "autoscale": [
            {
                "type": "func",
                "args": {
                    "enable": "bool",
                    "axis": "str",
                    "tight": "bool"
                }
            }
        ],
        "arrow": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "dx": "np.ndarray",
                    "dy": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "annotate": [
            {
                "type": "func",
                "args": {
                    "text": "str",
                    "xy": "np.ndarray",
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "angle_spectrum": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "Fs": "float",
                    "Fc": "float",
                    "window": "float",
                    "pad_to": "float",
                    "sides": "str",
                    "data": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "acorr": [
            {
                "type": "func",
                "args": {
                    "x": "np.ndarray",
                    "data": "object",
                    "kwargs": "object"
                }
            }
        ],
        "matshow": [
            {
                "type": "func",
                "args": {
                    "A": "np.ndarray",
                    "fignum": "int",
                    "kwargs": "object"
                }
            }
        ],
        "thetagrids": [
            {
                "type": "func",
                "args": {
                    "angles": "np.ndarray",
                    "labels": "np.ndarray",
                    "fmt": "str",
                    "kwargs": "object"
                }
            }
        ],
        "rgrids": [
            {
                "type": "func",
                "args": {
                    "radii": "np.ndarray",
                    "labels": "np.ndarray",
                    "angle": "float",
                    "fmt": "str",
                    "kwargs": "object"
                }
            }
        ],
        "yticks": [
            {
                "type": "func",
                "args": {
                    "ticks": "int | None",
                    "labels": "str | None",
                    "kwargs": "object"
                }
            }
        ],
        "xticks": [
            {
                "type": "func",
                "args": {
                    "ticks": "int | None",
                    "labels": "str | None",
                    "kwargs": "object"
                }
            }
        ],
        "ylim": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "xlim": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "box": [
            {
                "type": "func",
                "args": {
                    "on": "bool"
                }
            }
        ],
        "twiny": [
            {
                "type": "func",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "twinx": [
            {
                "type": "func",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "delaxes": [
            {
                "type": "func",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "figtext": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "y": "float",
                    "s": "str",
                    "fontdict": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "figimage": [
            {
                "type": "func",
                "args": {
                    "X": "np.ndarray",
                    "xo": "int",
                    "yo": "int",
                    "alpha": "float",
                    "norm": "float",
                    "cmap": "cm.Colormap",
                    "vmin": "float",
                    "vmax": "float",
                    "origin": "np.ndarray",
                    "resize": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "polar": [
            {
                "type": "func",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "colorbar": [
            {
                "type": "func",
                "args": {
                    "mappable": "Figure",
                    "cax": "np.ndarray",
                    "ax": "Axes",
                    "kw": "object"
                }
            }
        ],
        "subplot_tool": [
            {
                "type": "func",
                "args": {
                    "targetfig": "Figure"
                }
            }
        ],
        "subplot2grid": [
            {
                "type": "func",
                "args": {
                    "shape": "tuple",
                    "loc": "tuple",
                    "rowspan": "int",
                    "colspan": "int",
                    "fig": "Figure",
                    "kwargs": "dict"
                }
            }
        ],
        "subplot": [
            {
                "type": "func",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "axes": [
            {
                "type": "func",
                "args": {
                    "arg": "Axes",
                    "kwargs": "int"
                }
            }
        ],
        "figlegend": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "savefig": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "draw": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "clf": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "disconnect": [
            {
                "type": "func",
                "args": {
                    "cid": "str"
                }
            }
        ],
        "connect": [
            {
                "type": "func",
                "args": {
                    "s": "str",
                    "func": "object"
                }
            }
        ],
        "get_current_fig_manager": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "findobj": [
            {
                "type": "func",
                "args": {
                    "o": "object",
                    "match": "Artist",
                    "include_self": "bool"
                }
            }
        ],
        "tight_layout": [
            {
                "type": "func",
                "args": {
                    "pad": "float",
                    "h_pad": "float",
                    "w_pad": "float",
                    "rect": "tuple"
                }
            }
        ]
    },
    "matplotlib.hatch": {
        "HorizontalHatch.num_lines": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HorizontalHatch.num_vertices": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HorizontalHatch.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "HorizontalHatch.set_vertices_and_codes": [
            {
                "type": "method",
                "args": {
                    "vertices": "np.ndarray",
                    "codes": "np.ndarray"
                }
            }
        ],
        "VerticalHatch.num_lines": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VerticalHatch.num_vertices": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VerticalHatch.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "VerticalHatch.set_vertices_and_codes": [
            {
                "type": "method",
                "args": {
                    "vertices": "np.ndarray",
                    "codes": "np.ndarray"
                }
            }
        ],
        "NorthEastHatch.num_lines": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NorthEastHatch.num_vertices": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NorthEastHatch.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "NorthEastHatch.set_vertices_and_codes": [
            {
                "type": "method",
                "args": {
                    "vertices": "np.ndarray",
                    "codes": "np.ndarray"
                }
            }
        ],
        "SouthEastHatch.num_lines": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SouthEastHatch.num_vertices": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SouthEastHatch.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "SouthEastHatch.set_vertices_and_codes": [
            {
                "type": "method",
                "args": {
                    "vertices": "np.ndarray",
                    "codes": "np.ndarray"
                }
            }
        ],
        "Shapes.filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Shapes.num_shapes": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Shapes.num_vertices": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Circles.shape_vertices": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Circles.shape_codes": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SmallCircles.size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SmallCircles.num_rows": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LargeCircles.size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LargeCircles.num_rows": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SmallFilledCircles.size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SmallFilledCircles.filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SmallFilledCircles.num_rows": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Stars.size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Stars.filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Stars.num_rows": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Stars.shape_vertices": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Shapes.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "Stars.shape_codes": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "_hatch_types": [
            {
                "type": "var",
                "anno": "list[type[HatchPattern]]"
            }
        ],
        "Shapes.set_vertices_and_codes": [
            {
                "type": "method",
                "args": {
                    "vertices": "np.ndarray",
                    "codes": "np.ndarray"
                }
            }
        ],
        "Circles.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "SmallFilledCircles.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "LargeCircles.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "SmallCircles.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ],
        "get_path": [
            {
                "type": "func",
                "args": {
                    "hatchpattern": "np.ndarray",
                    "density": "int"
                }
            }
        ],
        "Stars.__init__": [
            {
                "type": "method",
                "args": {
                    "hatch": "str",
                    "density": "float"
                }
            }
        ]
    },
    "matplotlib.backend_managers": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "ToolEvent.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolEvent.sender": [
            {
                "type": "attr",
                "anno": "tools.ToolManager"
            }
        ],
        "ToolEvent.tool": [
            {
                "type": "attr",
                "anno": "tools.ToolManager"
            }
        ],
        "ToolEvent.data": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "sender": "tools.ToolManager",
                    "tool": "tools.ToolManager",
                    "data": "str"
                }
            }
        ],
        "ToolTriggerEvent.canvasevent": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolTriggerEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "sender": "tools.ToolManager",
                    "tool": "tools.ToolManager",
                    "canvasevent": "str",
                    "data": "str"
                }
            }
        ],
        "ToolManagerMessageEvent.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolManagerMessageEvent.sender": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolManagerMessageEvent.message": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToolManagerMessageEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "sender": "str",
                    "message": "str"
                }
            }
        ],
        "ToolManager._key_press_handler_id": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "ToolManager._tools": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ToolManager._keys": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ToolManager._toggled": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ToolManager._callbacks": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "ToolManager.keypresslock": [
            {
                "type": "attr",
                "anno": "widgets.LockDraw"
            }
        ],
        "ToolManager.messagelock": [
            {
                "type": "attr",
                "anno": "widgets.LockDraw"
            }
        ],
        "ToolManager._figure": [
            {
                "type": "attr",
                "anno": "tools.Figure"
            }
        ],
        "ToolManager.canvas": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolManager.toolmanager_disconnect": [
            {
                "type": "method",
                "args": {
                    "cid": "str"
                }
            }
        ],
        "ToolManager.active_toggle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolManager.get_tool_keymap": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ToolManager._remove_keys": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ToolManager._get_cls_to_instantiate": [
            {
                "type": "method",
                "args": {
                    "callback_class": "str"
                }
            }
        ],
        "ToolManager.tools": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToolManager._trigger_tool": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "sender": "tools.ToolManager",
                    "canvasevent": "str",
                    "data": "str"
                }
            }
        ],
        "ToolManager.trigger_tool": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "sender": "tools.ToolManager",
                    "canvasevent": "str",
                    "data": "str"
                }
            }
        ],
        "ToolManager._handle_toggle": [
            {
                "type": "method",
                "args": {
                    "tool": "tools.ToolToggleBase",
                    "sender": "tools.ToolManager",
                    "canvasevent": "str",
                    "data": "str"
                }
            }
        ],
        "ToolManager.add_tool": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "tool": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ToolManager.get_tool": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "warn": "bool"
                }
            }
        ],
        "ToolManager.update_keymap": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "key": "str",
                    "args": "str"
                }
            }
        ],
        "ToolManager._tool_added_event": [
            {
                "type": "method",
                "args": {
                    "tool": "tools.ToolToggleBase"
                }
            }
        ],
        "ToolManager.message_event": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "sender": "ToolManager"
                }
            }
        ],
        "ToolManager._key_press": [
            {
                "type": "method",
                "args": {
                    "event": "ToolEvent"
                }
            }
        ],
        "ToolManager.set_figure": [
            {
                "type": "method",
                "args": {
                    "figure": "tools.Figure",
                    "update_tools": "bool"
                }
            }
        ],
        "ToolManager.figure": [
            {
                "type": "method",
                "args": {
                    "figure": "tools.Figure"
                }
            }
        ],
        "ToolManager.__init__": [
            {
                "type": "method",
                "args": {
                    "figure": "tools.Figure"
                }
            }
        ],
        "ToolManager.toolmanager_connect": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "func": "Callable"
                }
            }
        ],
        "ToolManager.remove_tool": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ]
    },
    "matplotlib._pylab_helpers": {
        "Gcf.figs": [
            {
                "type": "attr",
                "anno": "OrderedDict"
            }
        ],
        "Gcf.has_fignum": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf",
                    "num": "int"
                }
            }
        ],
        "Gcf.get_num_fig_managers": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf"
                }
            }
        ],
        "Gcf.set_active": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf",
                    "manager": "Gcf"
                }
            }
        ],
        "Gcf.get_active": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf"
                }
            }
        ],
        "Gcf.get_all_fig_managers": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Gcf]"
                }
            }
        ],
        "Gcf.draw_all": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Gcf]",
                    "force": "bool"
                }
            }
        ],
        "Gcf.get_fig_manager": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf",
                    "num": "int"
                }
            }
        ],
        "Gcf.destroy": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf",
                    "num": "object"
                }
            }
        ],
        "Gcf.destroy_all": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf"
                }
            }
        ],
        "Gcf.destroy_fig": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf",
                    "fig": "Figure"
                }
            }
        ],
        "Gcf._set_new_active_manager": [
            {
                "type": "method",
                "args": {
                    "cls": "Gcf",
                    "manager": "Gcf"
                }
            }
        ]
    },
    "matplotlib.colorbar": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "make_axes_kw_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "colormap_kw_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "colorbar_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_ColorbarAutoLocator._colorbar": [
            {
                "type": "attr",
                "anno": "Colorbar"
            }
        ],
        "_ColorbarAutoLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "colorbar": "Colorbar"
                }
            }
        ],
        "_ColorbarAutoMinorLocator._colorbar": [
            {
                "type": "attr",
                "anno": "Colorbar"
            }
        ],
        "_ColorbarAutoMinorLocator.ndivs": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_ColorbarAutoMinorLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "colorbar": "Colorbar",
                    "n": "int"
                }
            }
        ],
        "_ColorbarLogLocator._colorbar": [
            {
                "type": "attr",
                "anno": "Colorbar"
            }
        ],
        "_ColorbarLogLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "colorbar": "Colorbar",
                    "args": "int",
                    "kwargs": "str"
                }
            }
        ],
        "ColorbarBase.n_rasterize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ColorbarBase.ax": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "ColorbarBase.alpha": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ColorbarBase.cmap": [
            {
                "type": "attr",
                "anno": "colors.Colormap"
            }
        ],
        "ColorbarBase.norm": [
            {
                "type": "attr",
                "anno": "colors.Normalize"
            }
        ],
        "ColorbarBase.values": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.boundaries": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.extend": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase._inside": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ColorbarBase.spacing": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase.orientation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase.drawedges": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColorbarBase.filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColorbarBase.extendfrac": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ColorbarBase.extendrect": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColorbarBase.solids": [
            {
                "type": "attr",
                "anno": "collections.Sublist"
            }
        ],
        "ColorbarBase.lines": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ColorbarBase.outline": [
            {
                "type": "attr",
                "anno": "mpacks.Polygon"
            }
        ],
        "ColorbarBase.patch": [
            {
                "type": "attr",
                "anno": "mpacks.Polygon"
            }
        ],
        "ColorbarBase.dividers": [
            {
                "type": "attr",
                "anno": "collections.LineCollection"
            }
        ],
        "ColorbarBase.locator": [
            {
                "type": "attr",
                "anno": "ticker.Locator"
            }
        ],
        "ColorbarBase.formatter": [
            {
                "type": "attr",
                "anno": "ticker.Formatter"
            }
        ],
        "ColorbarBase._manual_tick_data_values": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.__scale": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase.ticklocation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase._extend_lower": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._extend_upper": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._use_auto_colorbar_locator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColorbarBase._label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase._labelkw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ColorbarBase._outline": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray"
                }
            }
        ],
        "ColorbarBase._edges": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray"
                }
            }
        ],
        "ColorbarBase._boundaries": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase._values": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.vmin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ColorbarBase.vmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ColorbarBase._find_range": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._central_N": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._extended_N": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._y": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "_add_disjoint_kwargs": [
            {
                "type": "func",
                "args": {
                    "d": "dict",
                    "kwargs": "str"
                }
            }
        ],
        "Colorbar.mappable": [
            {
                "type": "attr",
                "anno": "cm.ScalarMappable"
            }
        ],
        "Colorbar.cmap": [
            {
                "type": "attr",
                "anno": "colors.Colormap"
            }
        ],
        "Colorbar.norm": [
            {
                "type": "attr",
                "anno": "colors.Normalize"
            }
        ],
        "Colorbar.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Colorbar.locator": [
            {
                "type": "attr",
                "anno": "mpl.colorbar._ColorbarLogLocator"
            }
        ],
        "Colorbar.formatter": [
            {
                "type": "attr",
                "anno": "mpl.colorbar._ColorbarLogLocator"
            }
        ],
        "Colorbar.outline": [
            {
                "type": "attr",
                "anno": "mpacks.Polygon"
            }
        ],
        "Colorbar.patch": [
            {
                "type": "attr",
                "anno": "mpatches.Polygon"
            }
        ],
        "Colorbar.solids": [
            {
                "type": "attr",
                "anno": "plt.colorbar._ColorbarLogLocator"
            }
        ],
        "Colorbar.lines": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Colorbar.dividers": [
            {
                "type": "attr",
                "anno": "plt.colorbar._ColorbarLogLocator"
            }
        ],
        "ColorbarPatch.solids_patches": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ColorbarPatch.dividers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ColorbarBase._locate": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray"
                }
            }
        ],
        "_ColorbarAutoMinorLocator.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.get_ticks": [
            {
                "type": "method",
                "args": {
                    "minor": "bool"
                }
            }
        ],
        "colorbar_factory": [
            {
                "type": "func",
                "args": {
                    "cax": "np.ndarray",
                    "mappable": "cm.ScalarMappable",
                    "kwargs": "object"
                }
            }
        ],
        "Colorbar.remove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_set_ticks_on_axis_warn": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kw": "object"
                }
            }
        ],
        "ColorbarBase.remove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._get_extension_lengths": [
            {
                "type": "method",
                "args": {
                    "frac": "float",
                    "automin": "float",
                    "automax": "float",
                    "default": "float"
                }
            }
        ],
        "ColorbarBase._proportional_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._uniform_y": [
            {
                "type": "method",
                "args": {
                    "N": "int"
                }
            }
        ],
        "ColorbarBase._mesh": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._process_values": [
            {
                "type": "method",
                "args": {
                    "b": "np.ndarray"
                }
            }
        ],
        "ColorbarBase._get_ticker_locator_formatter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.minorticks_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.minorticks_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._set_label": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.set_label": [
            {
                "type": "method",
                "args": {
                    "label": "str",
                    "loc": "str",
                    "kwargs": "object"
                }
            }
        ],
        "ColorbarBase._ticker": [
            {
                "type": "method",
                "args": {
                    "locator": "ticker.Locator",
                    "formatter": "ticker.Formatter"
                }
            }
        ],
        "ColorbarBase.update_ticks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.set_ticklabels": [
            {
                "type": "method",
                "args": {
                    "ticklabels": "tuple",
                    "update_ticks": "bool"
                }
            }
        ],
        "ColorbarBase.set_ticks": [
            {
                "type": "method",
                "args": {
                    "ticks": "np.ndarray",
                    "update_ticks": "bool"
                }
            }
        ],
        "make_axes": [
            {
                "type": "func",
                "args": {
                    "parents": "SubplotBase",
                    "location": "str",
                    "orientation": "str",
                    "fraction": "float",
                    "shrink": "float",
                    "aspect": "float",
                    "kw": "str"
                }
            }
        ],
        "ColorbarBase._config_axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.config_axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._reset_locator_formatter_scale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ColorbarAutoLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "_ColorbarLogLocator.tick_values": [
            {
                "type": "method",
                "args": {
                    "vmin": "float",
                    "vmax": "float"
                }
            }
        ],
        "ColorbarPatch._add_solids": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray",
                    "C": "np.ndarray"
                }
            }
        ],
        "ColorbarBase.add_lines": [
            {
                "type": "method",
                "args": {
                    "levels": "np.ndarray",
                    "colors": "np.ndarray",
                    "linewidths": "np.ndarray",
                    "erase": "bool"
                }
            }
        ],
        "Colorbar.add_lines": [
            {
                "type": "method",
                "args": {
                    "CS": "contour.ContourSet",
                    "erase": "bool"
                }
            }
        ],
        "ColorbarBase._add_solids": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray",
                    "C": "np.ndarray"
                }
            }
        ],
        "ColorbarBase.draw_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Colorbar.update_normal": [
            {
                "type": "method",
                "args": {
                    "mappable": "martist.Artist"
                }
            }
        ],
        "Colorbar.on_mappable_changed": [
            {
                "type": "method",
                "args": {
                    "mappable": "martist.Artist"
                }
            }
        ],
        "make_axes_gridspec": [
            {
                "type": "func",
                "args": {
                    "parent": "SubplotBase",
                    "fraction": "float",
                    "shrink": "float",
                    "aspect": "float",
                    "kw": "str"
                }
            }
        ],
        "ColorbarBase.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "cmap": "colors.Colormap",
                    "norm": "colors.Normalize",
                    "alpha": "float",
                    "values": "np.ndarray",
                    "boundaries": "np.ndarray",
                    "orientation": "str",
                    "ticklocation": "str",
                    "extend": "str",
                    "spacing": "str",
                    "ticks": "np.ndarray",
                    "format": "str",
                    "drawedges": "bool",
                    "filled": "bool",
                    "extendfrac": "float",
                    "extendrect": "bool",
                    "label": "str"
                }
            }
        ],
        "Colorbar.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "mappable": "cm.ScalarMappable",
                    "kwargs": "str"
                }
            }
        ],
        "ColorbarPatch.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "mappable": "cm.ScalarMappable",
                    "kw": "str"
                }
            }
        ],
        "Colorbar.update_bruteforce": [
            {
                "type": "method",
                "args": {
                    "mappable": "martist.Artist"
                }
            }
        ]
    },
    "matplotlib.animation": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "subprocess_creation_flags": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CREATE_NO_WINDOW": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "adjusted_figsize": [
            {
                "type": "func",
                "args": {
                    "w": "float",
                    "h": "float",
                    "dpi": "float",
                    "n": "int"
                }
            }
        ],
        "MovieWriterRegistry._registered": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MovieWriterRegistry.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriterRegistry.set_dirty": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriterRegistry.register": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "MovieWriterRegistry.ensure_not_dirty": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriterRegistry.reset_available_writers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriterRegistry.list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "writers": [
            {
                "type": "var",
                "anno": "MovieWriterRegistry"
            }
        ],
        "AbstractMovieWriter.fps": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AbstractMovieWriter.metadata": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AbstractMovieWriter.codec": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AbstractMovieWriter.bitrate": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AbstractMovieWriter.outfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AbstractMovieWriter.fig": [
            {
                "type": "attr",
                "anno": "plt.figure.Figure"
            }
        ],
        "AbstractMovieWriter.dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AbstractMovieWriter.grab_frame": [
            {
                "type": "method",
                "args": {
                    "savefig_kwargs": "object"
                }
            }
        ],
        "AbstractMovieWriter.finish": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriter.exec_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovieWriter.args_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovieWriter.frame_format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovieWriter.extra_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovieWriter.__init__": [
            {
                "type": "method",
                "args": {
                    "fps": "int",
                    "codec": "str",
                    "bitrate": "int",
                    "extra_args": "str",
                    "metadata": "dict"
                }
            }
        ],
        "MovieWriter._proc": [
            {
                "type": "attr",
                "anno": "subprocess.Popen"
            }
        ],
        "MovieWriter._frame_sink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriter._args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileMovieWriter.fig": [
            {
                "type": "attr",
                "anno": "plt.figure.Figure"
            }
        ],
        "FileMovieWriter.outfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileMovieWriter.dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FileMovieWriter._tmpdir": [
            {
                "type": "attr",
                "anno": "TemporaryDirectory"
            }
        ],
        "FileMovieWriter.temp_prefix": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileMovieWriter._clear_temp": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FileMovieWriter._frame_counter": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FileMovieWriter._temp_paths": [
            {
                "type": "attr",
                "anno": "list[Path]"
            }
        ],
        "FileMovieWriter.fname_format_str": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileMovieWriter.clear_temp": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "FileMovieWriter._frame_format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PillowWriter.isAvailable": [
            {
                "type": "method",
                "args": {
                    "cls": "PillowWriter"
                }
            }
        ],
        "PillowWriter._frames": [
            {
                "type": "attr",
                "anno": "list[Image]"
            }
        ],
        "FFMpegBase._exec_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FFMpegBase._args_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FFMpegFileWriter.supported_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "AVConvBase._exec_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AVConvBase._args_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageMagickBase._exec_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageMagickBase._args_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageMagickBase.delay": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageMagickFileWriter.supported_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "HTMLWriter.supported_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "FileMovieWriter.frame_format": [
            {
                "type": "method",
                "args": {
                    "frame_format": "str"
                }
            }
        ],
        "FileMovieWriter._base_temp_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileMovieWriter._frame_sink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTMLWriter.args_key": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HTMLWriter.isAvailable": [
            {
                "type": "method",
                "args": {
                    "cls": "HTMLWriter"
                }
            }
        ],
        "HTMLWriter.embed_frames": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTMLWriter.default_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTMLWriter._bytes_limit": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTMLWriter._saved_frames": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "HTMLWriter._total_bytes": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HTMLWriter._hit_limit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HTMLWriter._clear_temp": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Animation._fig": [
            {
                "type": "attr",
                "anno": "mpl.figure.Figure"
            }
        ],
        "Animation._blit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Animation.frame_seq": [
            {
                "type": "attr",
                "anno": "Iterator[bytes]"
            }
        ],
        "Animation.event_source": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Animation._first_draw_id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Animation._close_id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Animation._init_draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation._draw_frame": [
            {
                "type": "method",
                "args": {
                    "framedata": "np.ndarray"
                }
            }
        ],
        "Animation._blit_cache": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "Animation._drawn_artists": [
            {
                "type": "attr",
                "anno": "list[Artist]"
            }
        ],
        "Animation._resize_id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Animation._base64_video": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Animation._video_size": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Animation._html_representation": [
            {
                "type": "attr",
                "anno": "TextIOWrapper"
            }
        ],
        "TimedAnimation._interval": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TimedAnimation._repeat_delay": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TimedAnimation.repeat": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TimedAnimation.frame_seq": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "ArtistAnimation._drawn_artists": [
            {
                "type": "attr",
                "anno": "list[Artist]"
            }
        ],
        "ArtistAnimation._framedata": [
            {
                "type": "attr",
                "anno": "list[Artist]"
            }
        ],
        "Animation.new_frame_seq": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation.new_saved_frame_seq": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FuncAnimation._args": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "FuncAnimation._func": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "FuncAnimation._init_func": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "FuncAnimation.save_count": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "FuncAnimation._iter_gen": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "FuncAnimation._cache_frame_data": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FuncAnimation._save_seq": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FuncAnimation.new_frame_seq": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FuncAnimation._old_saved_seq": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FuncAnimation.new_saved_frame_seq": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FuncAnimation._drawn_artists": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FuncAnimation._draw_frame": [
            {
                "type": "method",
                "args": {
                    "framedata": "int"
                }
            }
        ],
        "FuncAnimation._init_draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriterRegistry.avail": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_included_frames": [
            {
                "type": "func",
                "args": {
                    "paths": "Path",
                    "frame_format": "str"
                }
            }
        ],
        "Animation._blit_draw": [
            {
                "type": "method",
                "args": {
                    "artists": "list"
                }
            }
        ],
        "Animation._post_draw": [
            {
                "type": "method",
                "args": {
                    "framedata": "np.ndarray",
                    "blit": "bool"
                }
            }
        ],
        "Animation._draw_next_frame": [
            {
                "type": "method",
                "args": {
                    "framedata": "np.ndarray",
                    "blit": "bool"
                }
            }
        ],
        "Animation._step": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "Animation.save": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "writer": "Union[str, typing.Any, mpl.rcParams.MovieWriter]",
                    "fps": "float",
                    "dpi": "float",
                    "codec": "str",
                    "bitrate": "float",
                    "extra_args": "tuple[int, ...]",
                    "metadata": "tuple[int, ...]",
                    "extra_anim": "tuple",
                    "savefig_kwargs": "dict",
                    "progress_callback": "Callable[[int, int], None]"
                }
            }
        ],
        "ArtistAnimation._draw_frame": [
            {
                "type": "method",
                "args": {
                    "artists": "list[Artist]"
                }
            }
        ],
        "ImageMagickBase.output_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FFMpegBase.output_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileMovieWriter.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "MovieWriter.bin_path": [
            {
                "type": "method",
                "args": {
                    "cls": "MovieWriter"
                }
            }
        ],
        "ImageMagickFileWriter._args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FFMpegFileWriter._args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractMovieWriter.__init__": [
            {
                "type": "method",
                "args": {
                    "fps": "int",
                    "metadata": "dict",
                    "codec": "str",
                    "bitrate": "int"
                }
            }
        ],
        "AbstractMovieWriter.frame_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageMagickWriter._args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FFMpegWriter._args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation._end_redraw": [
            {
                "type": "method",
                "args": {
                    "event": "int"
                }
            }
        ],
        "Animation._on_resize": [
            {
                "type": "method",
                "args": {
                    "event": "int"
                }
            }
        ],
        "Animation._setup_blit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation._start": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "HTMLWriter.__init__": [
            {
                "type": "method",
                "args": {
                    "fps": "float",
                    "codec": "str",
                    "bitrate": "float",
                    "extra_args": "tuple[int, ...]",
                    "metadata": "tuple[int, ...]",
                    "embed_frames": "bool",
                    "default_mode": "str",
                    "embed_limit": "int"
                }
            }
        ],
        "MovieWriter._run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_embedded_frames": [
            {
                "type": "func",
                "args": {
                    "frame_list": "list",
                    "frame_format": "str"
                }
            }
        ],
        "HTMLWriter.finish": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TimedAnimation._step": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "TimedAnimation._loop_delay": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "Animation._stop": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "TimedAnimation._stop": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "Animation.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "event_source": "int",
                    "blit": "bool"
                }
            }
        ],
        "TimedAnimation.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "interval": "int",
                    "repeat_delay": "int",
                    "repeat": "bool",
                    "event_source": "int",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FuncAnimation.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "func": "Callable",
                    "frames": "int | None",
                    "init_func": "Callable",
                    "fargs": "tuple",
                    "save_count": "int",
                    "cache_frame_data": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "ArtistAnimation.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "artists": "list[Artist]",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ImageMagickBase.bin_path": [
            {
                "type": "method",
                "args": {
                    "cls": "ImageMagickWriter"
                }
            }
        ],
        "MovieWriter.isAvailable": [
            {
                "type": "method",
                "args": {
                    "cls": "MovieWriter"
                }
            }
        ],
        "AVConvBase.isAvailable": [
            {
                "type": "attr",
                "anno": "Callable[[], bool]"
            }
        ],
        "FFMpegBase.isAvailable": [
            {
                "type": "method",
                "args": {
                    "cls": "FFMpegWriter"
                }
            }
        ],
        "ImageMagickBase.isAvailable": [
            {
                "type": "method",
                "args": {
                    "cls": "ImageMagickWriter"
                }
            }
        ],
        "MovieWriterRegistry.is_available": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "MovieWriterRegistry.__getitem__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "MovieWriterRegistry.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractMovieWriter.setup": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure.Figure",
                    "outfile": "str",
                    "dpi": "float"
                }
            }
        ],
        "AbstractMovieWriter.saving": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "outfile": "str",
                    "dpi": "int",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "MovieWriter._adjust_frame_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileMovieWriter.setup": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure.Figure",
                    "outfile": "str",
                    "dpi": "float",
                    "frame_prefix": "Path",
                    "clear_temp": "bool"
                }
            }
        ],
        "Animation._blit_clear": [
            {
                "type": "method",
                "args": {
                    "artists": "list[Artist]"
                }
            }
        ],
        "ArtistAnimation._pre_draw": [
            {
                "type": "method",
                "args": {
                    "framedata": "TextIOWrapper",
                    "blit": "bool"
                }
            }
        ],
        "Animation._pre_draw": [
            {
                "type": "method",
                "args": {
                    "framedata": "np.ndarray",
                    "blit": "bool"
                }
            }
        ],
        "HTMLWriter.setup": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure.Figure",
                    "outfile": "str",
                    "dpi": "float",
                    "frame_dir": "Path"
                }
            }
        ],
        "MovieWriter.setup": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure.Figure",
                    "outfile": "str",
                    "dpi": "float"
                }
            }
        ],
        "PillowWriter.setup": [
            {
                "type": "method",
                "args": {
                    "fig": "plt.figure.Figure",
                    "outfile": "str",
                    "dpi": "float"
                }
            }
        ],
        "ArtistAnimation._init_draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PillowWriter.grab_frame": [
            {
                "type": "method",
                "args": {
                    "savefig_kwargs": "object"
                }
            }
        ],
        "FileMovieWriter.grab_frame": [
            {
                "type": "method",
                "args": {
                    "savefig_kwargs": "object"
                }
            }
        ],
        "MovieWriter.grab_frame": [
            {
                "type": "method",
                "args": {
                    "savefig_kwargs": "object"
                }
            }
        ],
        "HTMLWriter.grab_frame": [
            {
                "type": "method",
                "args": {
                    "savefig_kwargs": "object"
                }
            }
        ],
        "Animation.to_jshtml": [
            {
                "type": "method",
                "args": {
                    "fps": "float",
                    "embed_frames": "bool",
                    "default_mode": "str"
                }
            }
        ],
        "Animation.to_html5_video": [
            {
                "type": "method",
                "args": {
                    "embed_limit": "int"
                }
            }
        ],
        "Animation._repr_html_": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PillowWriter.finish": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriter.cleanup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovieWriter.finish": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileMovieWriter.finish": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileMovieWriter.cleanup": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "matplotlib.fontconfig_pattern": {
        "family_punc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "family_unescape": [
            {
                "type": "var",
                "anno": "Regex"
            }
        ],
        "family_escape": [
            {
                "type": "var",
                "anno": "Regex"
            }
        ],
        "value_punc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "value_unescape": [
            {
                "type": "var",
                "anno": "Regex"
            }
        ],
        "value_escape": [
            {
                "type": "var",
                "anno": "Regex"
            }
        ],
        "FontconfigPatternParser._constants": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FontconfigPatternParser._parser": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontconfigPatternParser.ParseException": [
            {
                "type": "attr",
                "anno": "ParseException"
            }
        ],
        "FontconfigPatternParser._properties": [
            {
                "type": "attr",
                "anno": "Optional[dict]"
            }
        ],
        "FontconfigPatternParser.parse": [
            {
                "type": "method",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "FontconfigPatternParser._family": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "tokens": "tuple"
                }
            }
        ],
        "FontconfigPatternParser._size": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "tokens": "tuple"
                }
            }
        ],
        "FontconfigPatternParser._name": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "tokens": "tuple"
                }
            }
        ],
        "FontconfigPatternParser._value": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "tokens": "tuple"
                }
            }
        ],
        "FontconfigPatternParser._property": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "tokens": "tuple"
                }
            }
        ],
        "parse_fontconfig_pattern": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "FontconfigPatternParser._point_sizes": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "tokens": "tuple"
                }
            }
        ],
        "FontconfigPatternParser._families": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "loc": "str",
                    "tokens": "tuple"
                }
            }
        ],
        "FontconfigPatternParser.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_escape_val": [
            {
                "type": "func",
                "args": {
                    "val": "object",
                    "escape_func": "Regex"
                }
            }
        ],
        "generate_fontconfig_pattern": [
            {
                "type": "func",
                "args": {
                    "d": "FontProperties"
                }
            }
        ]
    },
    "matplotlib.textpath": {
        "_log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "TextToPath.FONT_SCALE": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TextToPath.DPI": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TextToPath.mathtext_parser": [
            {
                "type": "attr",
                "anno": "MathTextParser"
            }
        ],
        "TextToPath._texmanager": [
            {
                "type": "attr",
                "anno": "TextPath"
            }
        ],
        "TextToPath.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextToPath._get_hinting_flag": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextToPath._get_char_id": [
            {
                "type": "method",
                "args": {
                    "font": "Font",
                    "ccode": "str"
                }
            }
        ],
        "TextToPath._get_char_id_ps": [
            {
                "type": "method",
                "args": {
                    "font": "FontProperties",
                    "ccode": "str"
                }
            }
        ],
        "TextToPath.get_texmanager": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "text_to_path": [
            {
                "type": "var",
                "anno": "TextToPath"
            }
        ],
        "TextPath._xy": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TextPath._cached_vertices": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "TextPath._should_simplify": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextPath._simplify_threshold": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TextPath._interpolation_steps": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TextPath._size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TextPath._invalid": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextPath.set_size": [
            {
                "type": "method",
                "args": {
                    "size": "float"
                }
            }
        ],
        "TextPath.get_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextPath.codes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextToPath.get_text_width_height_descent": [
            {
                "type": "method",
                "args": {
                    "s": "str",
                    "prop": "str",
                    "ismath": "bool"
                }
            }
        ],
        "TextPath._revalidate_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextPath.vertices": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextToPath._get_font": [
            {
                "type": "method",
                "args": {
                    "prop": "FontProperties"
                }
            }
        ],
        "TextToPath._get_ps_font_and_encoding": [
            {
                "type": "method",
                "args": {
                    "texname": "str"
                }
            }
        ],
        "TextToPath.get_glyphs_with_font": [
            {
                "type": "method",
                "args": {
                    "font": "Font",
                    "s": "str",
                    "glyph_map": "dict",
                    "return_new_glyphs_only": "bool"
                }
            }
        ],
        "TextToPath.get_glyphs_mathtext": [
            {
                "type": "method",
                "args": {
                    "prop": "FontProperties",
                    "s": "str",
                    "glyph_map": "dict",
                    "return_new_glyphs_only": "bool"
                }
            }
        ],
        "TextToPath.get_glyphs_tex": [
            {
                "type": "method",
                "args": {
                    "prop": "FontProperties",
                    "s": "str",
                    "glyph_map": "dict",
                    "return_new_glyphs_only": "bool"
                }
            }
        ],
        "TextToPath.get_text_path": [
            {
                "type": "method",
                "args": {
                    "prop": "FontProperties",
                    "s": "str",
                    "ismath": "bool"
                }
            }
        ],
        "TextPath.__init__": [
            {
                "type": "method",
                "args": {
                    "xy": "np.ndarray",
                    "s": "str",
                    "size": "float",
                    "prop": "FontProperties",
                    "_interpolation_steps": "int",
                    "usetex": "bool"
                }
            }
        ]
    },
    "matplotlib.contour": {
        "ContourLabeler.labelFmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ContourLabeler._use_clabeltext": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ContourLabeler.labelManual": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ContourLabeler.rightside_up": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ContourLabeler._clabel_zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ContourLabeler.labelLevelList": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ContourLabeler.labelIndiceList": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ContourLabeler.labelFontProps": [
            {
                "type": "attr",
                "anno": "font_manager.FontProperties"
            }
        ],
        "ContourLabeler.labelFontSizeList": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ContourLabeler.labelMappable": [
            {
                "type": "attr",
                "anno": "cm.ScalarMappable"
            }
        ],
        "ContourLabeler.labelCValueList": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ContourLabeler.labelXYs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ContourLabeler.labelTextsList": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ContourLabeler.print_label": [
            {
                "type": "method",
                "args": {
                    "linecontour": "np.ndarray",
                    "labelwidth": "int"
                }
            }
        ],
        "ContourLabeler.too_close": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "lw": "float"
                }
            }
        ],
        "ContourLabeler.get_label_coords": [
            {
                "type": "method",
                "args": {
                    "distances": "np.ndarray",
                    "XX": "np.ndarray",
                    "YY": "np.ndarray",
                    "ysize": "int",
                    "lw": "float"
                }
            }
        ],
        "ContourLabeler._mathtext_parser": [
            {
                "type": "attr",
                "anno": "mathtext.MathTextParser"
            }
        ],
        "ContourLabeler.locate_label": [
            {
                "type": "method",
                "args": {
                    "linecontour": "np.ndarray",
                    "labelwidth": "int"
                }
            }
        ],
        "_find_closest_point_on_leg": [
            {
                "type": "func",
                "args": {
                    "p1": "np.ndarray",
                    "p2": "np.ndarray",
                    "p0": "np.ndarray"
                }
            }
        ],
        "_is_closed_polygon": [
            {
                "type": "func",
                "args": {
                    "X": "np.ndarray"
                }
            }
        ],
        "ContourLabeler.calc_label_rot_and_inline": [
            {
                "type": "method",
                "args": {
                    "slc": "np.ndarray",
                    "ind": "int",
                    "lw": "float",
                    "lc": "list",
                    "spacing": "int"
                }
            }
        ],
        "_find_closest_point_on_path": [
            {
                "type": "func",
                "args": {
                    "lc": "np.ndarray",
                    "point": "np.ndarray"
                }
            }
        ],
        "ContourSet.axes": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "ContourSet.levels": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ContourSet.linewidths": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.linestyles": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.hatches": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.alpha": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ContourSet.origin": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ContourSet.extent": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.colors": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.extend": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ContourSet.antialiased": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ContourSet.nchunk": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ContourSet.locator": [
            {
                "type": "attr",
                "anno": "ticker.Locator"
            }
        ],
        "ContourSet.logscale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ContourSet._transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "ContourSet.collections": [
            {
                "type": "attr",
                "anno": "list[mcoll.PathCollection]"
            }
        ],
        "ContourSet.labelTexts": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.labelCValues": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.allkinds": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet._contour_zorder": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ContourSet.tlinewidths": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.ax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet.allsegs": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.zmax": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ContourSet.zmin": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ContourSet._mins": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet._maxs": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet._process_args": [
            {
                "type": "method",
                "args": {
                    "args": "tuple[np.ndarray, ...]",
                    "kwargs": "dict"
                }
            }
        ],
        "ContourSet._get_allsegs_and_allkinds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet.tcolors": [
            {
                "type": "attr",
                "anno": "tuple[tuple[np.ndarray, ...], ...]"
            }
        ],
        "ContourSet._levels": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.layers": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet._process_levels": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet.monochrome": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ContourSet.cvalues": [
            {
                "type": "attr",
                "anno": "tuple[np.ndarray, ...]"
            }
        ],
        "ContourSet.get_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "QuadContourSet.levels": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "QuadContourSet.zmin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "QuadContourSet.zmax": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "QuadContourSet._corner_mask": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "QuadContourSet._mins": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "QuadContourSet._maxs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "QuadContourSet._contour_generator": [
            {
                "type": "attr",
                "anno": "mtransforms.ContourGenerator"
            }
        ],
        "QuadContourSet._initialize_x_y": [
            {
                "type": "method",
                "args": {
                    "z": "np.ndarray"
                }
            }
        ],
        "QuadContourSet._contour_doc": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ContourSet.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet._get_lowers_and_uppers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "QuadContourSet._get_allsegs_and_allkinds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet._process_linestyles": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet._process_linewidths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourLabeler.get_text": [
            {
                "type": "method",
                "args": {
                    "lev": "str",
                    "fmt": "str"
                }
            }
        ],
        "ContourSet._make_paths": [
            {
                "type": "method",
                "args": {
                    "segs": "np.ndarray",
                    "kinds": "tuple[np.ndarray, ...]"
                }
            }
        ],
        "ContourLabeler._get_label_clabeltext": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "rotation": "float"
                }
            }
        ],
        "ContourLabeler._get_label_text": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "rotation": "float"
                }
            }
        ],
        "ClabelText.get_rotation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet._process_colors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet.legend_elements": [
            {
                "type": "method",
                "args": {
                    "variable_name": "str",
                    "str_format": "str"
                }
            }
        ],
        "ContourLabeler.pop_label": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "ContourLabeler.get_label_width": [
            {
                "type": "method",
                "args": {
                    "lev": "str",
                    "fmt": "str",
                    "fsize": "float"
                }
            }
        ],
        "QuadContourSet._check_xyz": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "ContourLabeler.set_label_props": [
            {
                "type": "method",
                "args": {
                    "label": "text.Text",
                    "text": "str",
                    "color": "np.ndarray"
                }
            }
        ],
        "ContourSet.find_nearest_contour": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "indices": "list",
                    "pixel": "bool"
                }
            }
        ],
        "ContourSet._autolev": [
            {
                "type": "method",
                "args": {
                    "N": "int"
                }
            }
        ],
        "ContourSet._process_contour_level_args": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "QuadContourSet._contour_args": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "QuadContourSet._process_args": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "corner_mask": "int",
                    "kwargs": "dict"
                }
            }
        ],
        "ContourSet.changed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourSet.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "ContourSet.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "args": "tuple[np.ndarray, ...]",
                    "levels": "tuple[np.ndarray, ...]",
                    "filled": "bool",
                    "linewidths": "tuple[np.ndarray, ...]",
                    "linestyles": "tuple[np.ndarray, ...]",
                    "hatches": "tuple[np.ndarray, ...]",
                    "alpha": "float",
                    "origin": "str",
                    "extent": "tuple[np.ndarray, ...]",
                    "cmap": "colors.Colormap",
                    "colors": "tuple[np.ndarray, ...]",
                    "norm": "mcolors.Normalize",
                    "vmin": "float",
                    "vmax": "float",
                    "extend": "str",
                    "antialiased": "bool",
                    "nchunk": "int",
                    "locator": "ticker.Locator",
                    "transform": "mtransforms.Transform",
                    "kwargs": "dict"
                }
            }
        ],
        "ContourSet.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContourLabeler._add_label": [
            {
                "type": "method",
                "args": {
                    "t": "text.Text",
                    "x": "float",
                    "y": "float",
                    "lev": "str",
                    "cvalue": "np.ndarray"
                }
            }
        ],
        "ContourLabeler.add_label_clabeltext": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "rotation": "float",
                    "lev": "str",
                    "cvalue": "np.ndarray"
                }
            }
        ],
        "ContourLabeler.add_label": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "rotation": "float",
                    "lev": "str",
                    "cvalue": "np.ndarray"
                }
            }
        ],
        "ContourLabeler.labels": [
            {
                "type": "method",
                "args": {
                    "inline": "bool",
                    "inline_spacing": "int"
                }
            }
        ],
        "ContourLabeler.add_label_near": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "inline": "bool",
                    "inline_spacing": "int",
                    "transform": "mtransforms.Transform"
                }
            }
        ],
        "ContourLabeler.clabel": [
            {
                "type": "method",
                "args": {
                    "levels": "list",
                    "fontsize": "float",
                    "inline": "bool",
                    "inline_spacing": "int",
                    "fmt": "str",
                    "colors": "list",
                    "use_clabeltext": "bool",
                    "manual": "bool",
                    "rightside_up": "bool",
                    "zorder": "int"
                }
            }
        ]
    },
    "mpl_toolkits.mplot3d.art3d": {
        "_norm_angle": [
            {
                "type": "func",
                "args": {
                    "a": "float"
                }
            }
        ],
        "_norm_text_angle": [
            {
                "type": "func",
                "args": {
                    "a": "np.ndarray"
                }
            }
        ],
        "get_dir_vector": [
            {
                "type": "func",
                "args": {
                    "zdir": "str"
                }
            }
        ],
        "Text3D._position3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Text3D._dir_vec": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Text3D.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Text3D.set_3d_properties": [
            {
                "type": "method",
                "args": {
                    "z": "int",
                    "zdir": "str"
                }
            }
        ],
        "Text3D.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "str"
                }
            }
        ],
        "Line3D._verts3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Line3D.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Line3D.set_data_3d": [
            {
                "type": "method",
                "args": {
                    "args": "tuple"
                }
            }
        ],
        "Line3D.get_data_3d": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Line3DCollection._sort_zpos": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Line3DCollection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Line3DCollection.set_sort_zpos": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "Line3DCollection._segments3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch3D._segment3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch3D._facecolor3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch3D._path2d": [
            {
                "type": "attr",
                "anno": "mpath.Path"
            }
        ],
        "Patch3D.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Patch3D._facecolor2d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch3D.get_facecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PathPatch3D._code3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "PathPatch3D._path2d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "PathPatch3D._facecolor2d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch3DCollection._depthshade": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Patch3DCollection._sort_zpos": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Patch3DCollection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Patch3DCollection.set_sort_zpos": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "Patch3DCollection._offsets3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch3DCollection._facecolor3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Patch3DCollection._edgecolor3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Path3DCollection._depthshade": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Path3DCollection._sort_zpos": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Path3DCollection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Path3DCollection.set_sort_zpos": [
            {
                "type": "method",
                "args": {
                    "val": "bool"
                }
            }
        ],
        "Path3DCollection._offsets3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Path3DCollection._facecolor3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Path3DCollection._edgecolor3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection._codes3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection._zsort_functions": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Poly3DCollection._zsortfunc": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Poly3DCollection._sort_zpos": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Poly3DCollection.set_zsort": [
            {
                "type": "method",
                "args": {
                    "zsort": "str"
                }
            }
        ],
        "Poly3DCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "verts": "np.ndarray",
                    "args": "tuple",
                    "zsort": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Poly3DCollection._vec": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection._segslices": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection.get_vector": [
            {
                "type": "method",
                "args": {
                    "segments3d": "np.ndarray"
                }
            }
        ],
        "Poly3DCollection._closed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Poly3DCollection._facecolors3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection._edgecolors3d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection._alpha3d": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Poly3DCollection.set_3d_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Poly3DCollection.set_sort_zpos": [
            {
                "type": "method",
                "args": {
                    "val": "np.ndarray"
                }
            }
        ],
        "Poly3DCollection._edgecolors2d": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection._edgecolors": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Poly3DCollection.get_facecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Poly3DCollection.get_edgecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "rotate_axes": [
            {
                "type": "func",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "juggle_axes": [
            {
                "type": "func",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "Path3DCollection.set_3d_properties": [
            {
                "type": "method",
                "args": {
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "Path3DCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str",
                    "depthshade": "bool",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "Patch3DCollection.set_3d_properties": [
            {
                "type": "method",
                "args": {
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "Patch3DCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str",
                    "depthshade": "bool",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "Text3D.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "z": "int",
                    "text": "str",
                    "zdir": "str",
                    "kwargs": "object"
                }
            }
        ],
        "PathPatch3D.do_3d_projection": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Patch3D.do_3d_projection": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Line3DCollection.do_3d_projection": [
            {
                "type": "method",
                "args": {
                    "renderer": "artist.Artist"
                }
            }
        ],
        "Line3DCollection.set_segments": [
            {
                "type": "method",
                "args": {
                    "segments": "np.ndarray"
                }
            }
        ],
        "Poly3DCollection.do_3d_projection": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Poly3DCollection.set_verts": [
            {
                "type": "method",
                "args": {
                    "verts": "np.ndarray",
                    "closed": "bool"
                }
            }
        ],
        "Poly3DCollection.set_verts_and_codes": [
            {
                "type": "method",
                "args": {
                    "verts": "np.ndarray",
                    "codes": "np.ndarray"
                }
            }
        ],
        "Line3D.set_3d_properties": [
            {
                "type": "method",
                "args": {
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "Patch3D.set_3d_properties": [
            {
                "type": "method",
                "args": {
                    "verts": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "PathPatch3D.set_3d_properties": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "patch_collection_2d_to_3d": [
            {
                "type": "func",
                "args": {
                    "col": "PatchCollection",
                    "zs": "np.ndarray",
                    "zdir": "str",
                    "depthshade": "bool"
                }
            }
        ],
        "line_2d_to_3d": [
            {
                "type": "func",
                "args": {
                    "line": "lines.Line2D",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "text_2d_to_3d": [
            {
                "type": "func",
                "args": {
                    "obj": "Text3D",
                    "z": "int",
                    "zdir": "str"
                }
            }
        ],
        "_path_to_3d_segment_with_codes": [
            {
                "type": "func",
                "args": {
                    "path": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "_paths_to_3d_segments_with_codes": [
            {
                "type": "func",
                "args": {
                    "paths": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "_path_to_3d_segment": [
            {
                "type": "func",
                "args": {
                    "path": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "_paths_to_3d_segments": [
            {
                "type": "func",
                "args": {
                    "paths": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "_zalpha": [
            {
                "type": "func",
                "args": {
                    "colors": "np.ndarray",
                    "zs": "np.ndarray"
                }
            }
        ],
        "_get_colors": [
            {
                "type": "func",
                "args": {
                    "c": "Union[Number, str]",
                    "num": "int"
                }
            }
        ],
        "Poly3DCollection.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "Path3DCollection.do_3d_projection": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Patch3DCollection.do_3d_projection": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Poly3DCollection.set_edgecolor": [
            {
                "type": "method",
                "args": {
                    "colors": "np.ndarray"
                }
            }
        ],
        "Poly3DCollection.set_facecolor": [
            {
                "type": "method",
                "args": {
                    "colors": "tuple[int, int, float]"
                }
            }
        ],
        "poly_collection_2d_to_3d": [
            {
                "type": "func",
                "args": {
                    "col": "PolyCollection",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "line_collection_2d_to_3d": [
            {
                "type": "func",
                "args": {
                    "col": "LineCollection",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "PathPatch3D.__init__": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "zs": "np.ndarray",
                    "zdir": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "Patch3D.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "pathpatch_2d_to_3d": [
            {
                "type": "func",
                "args": {
                    "pathpatch": "Patch",
                    "z": "int",
                    "zdir": "str"
                }
            }
        ],
        "_get_patch_verts": [
            {
                "type": "func",
                "args": {
                    "patch": "Patch"
                }
            }
        ],
        "patch_2d_to_3d": [
            {
                "type": "func",
                "args": {
                    "patch": "Patch",
                    "z": "int",
                    "zdir": "str"
                }
            }
        ],
        "Line3D.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.rcsetup.Renderer"
                }
            }
        ],
        "Text3D.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "TextRenderer"
                }
            }
        ],
        "Line3DCollection.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "artist.Artist",
                    "project": "bool"
                }
            }
        ],
        "Line3D.__init__": [
            {
                "type": "method",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "zs": "np.ndarray",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ]
    },
    "mpl_toolkits.mplot3d.axis3d": {
        "move_from_center": [
            {
                "type": "func",
                "args": {
                    "coord": "np.ndarray",
                    "centers": "np.ndarray",
                    "deltas": "np.ndarray",
                    "axmask": "tuple"
                }
            }
        ],
        "Axis._PLANES": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Axis._AXINFO": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Axis.adir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axis._axinfo": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Axis.line": [
            {
                "type": "attr",
                "anno": "msheets.Line2D"
            }
        ],
        "Axis.pane": [
            {
                "type": "attr",
                "anno": "msheets.Polygon"
            }
        ],
        "Axis.gridlines": [
            {
                "type": "attr",
                "anno": "art3d.Line3DCollection"
            }
        ],
        "Axis.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axis._rotate_label": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axis.set_rotate_label": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "Axis.get_rotate_label": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "Axis.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "str"
                }
            }
        ],
        "Axis.d_interval": [
            {
                "type": "method",
                "args": {
                    "minmax": "list"
                }
            }
        ],
        "Axis.v_interval": [
            {
                "type": "method",
                "args": {
                    "minmax": "list"
                }
            }
        ],
        "Axis._get_coord_info": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Axis.set_pane_pos": [
            {
                "type": "method",
                "args": {
                    "xys": "tuple"
                }
            }
        ],
        "Axis.get_minor_ticks": [
            {
                "type": "method",
                "args": {
                    "numticks": "int"
                }
            }
        ],
        "Axis.get_major_ticks": [
            {
                "type": "method",
                "args": {
                    "numticks": "int"
                }
            }
        ],
        "tick_update_position": [
            {
                "type": "func",
                "args": {
                    "tick": "Axis",
                    "tickxs": "np.ndarray",
                    "tickys": "np.ndarray",
                    "labelpos": "int"
                }
            }
        ],
        "Axis.__init__": [
            {
                "type": "method",
                "args": {
                    "adir": "str",
                    "v_intervalx": "list",
                    "d_intervalx": "list",
                    "axes": "list",
                    "args": "Any",
                    "rotate_label": "int",
                    "kwargs": "Any"
                }
            }
        ],
        "Axis.set_pane_color": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray"
                }
            }
        ],
        "Axis.draw_pane": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Axis.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Axis.init3d": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.mplot3d.axes3d": {
        "Axes3D.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.initial_azim": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axes3D.initial_elev": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axes3D.xy_viewLim": [
            {
                "type": "attr",
                "anno": "Bbox.Unit"
            }
        ],
        "Axes3D.zz_viewLim": [
            {
                "type": "attr",
                "anno": "Bbox.Unit"
            }
        ],
        "Axes3D.xy_dataLim": [
            {
                "type": "attr",
                "anno": "Bbox.Unit"
            }
        ],
        "Axes3D.zz_dataLim": [
            {
                "type": "attr",
                "anno": "Bbox.Unit"
            }
        ],
        "Axes3D._sharez": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "Axes3D._adjustable": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.M": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Axes3D.fmt_zdata": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Axes3D._zcid": [
            {
                "type": "attr",
                "anno": "cbook.CallbackRegistry"
            }
        ],
        "Axes3D._axis3don": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes3D.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes3D.set_axis_off": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.set_axis_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.xaxis": [
            {
                "type": "attr",
                "anno": "axis3d.XAxis"
            }
        ],
        "Axes3D.yaxis": [
            {
                "type": "attr",
                "anno": "axis3d.YAxis"
            }
        ],
        "Axes3D.zaxis": [
            {
                "type": "attr",
                "anno": "axis3d.ZAxis"
            }
        ],
        "Axes3D.get_zaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_zgridlines": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.get_zticklines": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.w_xaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.w_yaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.w_zaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D._get_axis_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D._frameon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes3D.update_datalim": [
            {
                "type": "method",
                "args": {
                    "xys": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D._autoscaleZon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes3D.set_autoscalez_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Axes3D.set_autoscale_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Axes3D.get_autoscalez_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_autoscale_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D._zmargin": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Axes3D.set_zmargin": [
            {
                "type": "method",
                "args": {
                    "m": "float"
                }
            }
        ],
        "Axes3D._autoscaleXon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes3D._autoscaleYon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes3D._tight": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes3D.get_zticks": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.set_zticks": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes3D.get_zmajorticklabels": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.get_zminorticklabels": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.get_zticklabels": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.set_zticklabels": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes3D.zaxis_date": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D.clabel": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.dist": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axes3D.elev": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axes3D.azim": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axes3D.view_init": [
            {
                "type": "method",
                "args": {
                    "elev": "int | None",
                    "azim": "int | None"
                }
            }
        ],
        "Axes3D._projection": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Axes3D.eye": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Axes3D.vvec": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Axes3D.button_pressed": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Axes3D._rotate_btn": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Axes3D._zoom_btn": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Axes3D.mouse_init": [
            {
                "type": "method",
                "args": {
                    "rotate_btn": "int",
                    "zoom_btn": "int"
                }
            }
        ],
        "Axes3D.disable_mouse_rotation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.can_zoom": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.can_pan": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_frame_on": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.set_frame_on": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Axes3D._draw_grid": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes3D.grid": [
            {
                "type": "method",
                "args": {
                    "b": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.text2D": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Axes3D._generate_normals": [
            {
                "type": "method",
                "args": {
                    "polygons": "np.ndarray"
                }
            }
        ],
        "get_test_data": [
            {
                "type": "func",
                "args": {
                    "delta": "float"
                }
            }
        ],
        "Axes3D.autoscale_view": [
            {
                "type": "method",
                "args": {
                    "tight": "bool",
                    "scalex": "bool",
                    "scaley": "bool",
                    "scalez": "bool"
                }
            }
        ],
        "Axes3D.autoscale": [
            {
                "type": "method",
                "args": {
                    "enable": "bool",
                    "axis": "str",
                    "tight": "bool"
                }
            }
        ],
        "Axes3D._on_units_changed": [
            {
                "type": "method",
                "args": {
                    "scalex": "bool",
                    "scaley": "bool",
                    "scalez": "bool"
                }
            }
        ],
        "Axes3D.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "fig.Figure",
                    "rect": "tuple | None",
                    "args": "tuple",
                    "azim": "int",
                    "elev": "int",
                    "sharez": "int",
                    "proj_type": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "Axes3D.get_zbound": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.zaxis_inverted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.set_zbound": [
            {
                "type": "method",
                "args": {
                    "lower": "float | None",
                    "upper": "float | None"
                }
            }
        ],
        "Axes3D.invert_zaxis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D._get_view": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_zlabel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_ylim3d": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_zlim3d": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_xlim3d": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_proj": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.get_w_lims": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.unit_cube": [
            {
                "type": "method",
                "args": {
                    "vals": "tuple[float, float]"
                }
            }
        ],
        "Axes3D.tunit_cube": [
            {
                "type": "method",
                "args": {
                    "vals": "tuple[float, float]",
                    "M": "int"
                }
            }
        ],
        "Axes3D.get_axis_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.tunit_edges": [
            {
                "type": "method",
                "args": {
                    "vals": "tuple[float, float]",
                    "M": "int"
                }
            }
        ],
        "unit_bbox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Axes3D.get_zscale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.set_proj_type": [
            {
                "type": "method",
                "args": {
                    "proj_type": "str"
                }
            }
        ],
        "Axes3D.auto_scale_xyz": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray",
                    "Z": "np.ndarray",
                    "had_data": "bool"
                }
            }
        ],
        "Axes3D.locator_params": [
            {
                "type": "method",
                "args": {
                    "axis": "str",
                    "tight": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.set_zlabel": [
            {
                "type": "method",
                "args": {
                    "zlabel": "str",
                    "fontdict": "dict",
                    "labelpad": "int",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.convert_zunits": [
            {
                "type": "method",
                "args": {
                    "z": "object"
                }
            }
        ],
        "Axes3D.plot": [
            {
                "type": "method",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "args": "tuple",
                    "zdir": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "Axes3D.plot3D": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Axes3D._shared_z_axes": [
            {
                "type": "attr",
                "anno": "cbook.Grouper"
            }
        ],
        "Axes3D._shade_colors": [
            {
                "type": "method",
                "args": {
                    "color": "np.ndarray",
                    "normals": "np.ndarray",
                    "lightsource": "mcolors.LightSource"
                }
            }
        ],
        "Axes3D.add_contourf_set": [
            {
                "type": "method",
                "args": {
                    "cset": "mbol.ContourSet",
                    "zdir": "str",
                    "offset": "np.ndarray"
                }
            }
        ],
        "Axes3D.tricontourf": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "zdir": "str",
                    "offset": "np.ndarray",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes3D.format_zdata": [
            {
                "type": "method",
                "args": {
                    "z": "np.ndarray"
                }
            }
        ],
        "Axes3D.format_coord": [
            {
                "type": "method",
                "args": {
                    "xd": "np.ndarray",
                    "yd": "np.ndarray"
                }
            }
        ],
        "Axes3D._set_view": [
            {
                "type": "method",
                "args": {
                    "view": "tuple"
                }
            }
        ],
        "Axes3D.text": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "z": "int",
                    "s": "str",
                    "zdir": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.text3D": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Axes3D._process_unit_info": [
            {
                "type": "method",
                "args": {
                    "xdata": "np.ndarray",
                    "ydata": "np.ndarray",
                    "zdata": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ],
        "Axes3D.set_top_view": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.set_title": [
            {
                "type": "method",
                "args": {
                    "label": "str",
                    "fontdict": "dict",
                    "loc": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D._button_release": [
            {
                "type": "method",
                "args": {
                    "event": "axis3d.MotionEvent"
                }
            }
        ],
        "Axes3D._button_press": [
            {
                "type": "method",
                "args": {
                    "event": "axis3d.MotionEvent"
                }
            }
        ],
        "Axes3D.set_zlim3d": [
            {
                "type": "method",
                "args": {
                    "bottom": "float | None",
                    "top": "float | None",
                    "emit": "bool",
                    "auto": "bool",
                    "zmin": "float",
                    "zmax": "float"
                }
            }
        ],
        "Axes3D.set_ylim3d": [
            {
                "type": "method",
                "args": {
                    "bottom": "float | None",
                    "top": "float | None",
                    "emit": "bool",
                    "auto": "bool",
                    "ymin": "float",
                    "ymax": "float"
                }
            }
        ],
        "Axes3D.set_xlim3d": [
            {
                "type": "method",
                "args": {
                    "left": "float | None",
                    "right": "float | None",
                    "emit": "bool",
                    "auto": "bool",
                    "xmin": "float",
                    "xmax": "float"
                }
            }
        ],
        "Axes3D._on_move": [
            {
                "type": "method",
                "args": {
                    "event": "axis3d.MotionEvent"
                }
            }
        ],
        "Axes3D.margins": [
            {
                "type": "method",
                "args": {
                    "margins": "float",
                    "x": "float",
                    "y": "float",
                    "z": "float",
                    "tight": "bool"
                }
            }
        ],
        "Axes3D.apply_aspect": [
            {
                "type": "method",
                "args": {
                    "position": "Bbox"
                }
            }
        ],
        "Axes3D.tick_params": [
            {
                "type": "method",
                "args": {
                    "axis": "str",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes3D.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.set_zscale": [
            {
                "type": "method",
                "args": {
                    "value": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Axes3D.set_yscale": [
            {
                "type": "method",
                "args": {
                    "value": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.set_xscale": [
            {
                "type": "method",
                "args": {
                    "value": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.quiver": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "length": "int",
                    "arrow_length_ratio": "float",
                    "pivot": "str",
                    "normalize": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.quiver3D": [
            {
                "type": "attr",
                "anno": "art3d.Line3DCollection"
            }
        ],
        "Axes3D.bar3d": [
            {
                "type": "method",
                "args": {
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "z": "np.ndarray",
                    "dx": "np.ndarray",
                    "dy": "np.ndarray",
                    "dz": "np.ndarray",
                    "color": "np.ndarray",
                    "zsort": "str",
                    "shade": "bool",
                    "lightsource": "mcolors.LightSource",
                    "args": "np.ndarray",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "Axes3D.add_collection3d": [
            {
                "type": "method",
                "args": {
                    "col": "Axes",
                    "zs": "np.ndarray",
                    "zdir": "str"
                }
            }
        ],
        "Axes3D.voxels": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "facecolors": "np.ndarray",
                    "edgecolors": "np.ndarray",
                    "shade": "bool",
                    "lightsource": "mcolors.LightSource",
                    "kwargs": "dict"
                }
            }
        ],
        "Axes3D._3d_extend_contour": [
            {
                "type": "method",
                "args": {
                    "cset": "cbook.ContourSet",
                    "stride": "int"
                }
            }
        ],
        "Axes3D.add_contour_set": [
            {
                "type": "method",
                "args": {
                    "cset": "cbook.ContourSet",
                    "extend3d": "bool",
                    "stride": "int",
                    "zdir": "str",
                    "offset": "np.ndarray"
                }
            }
        ],
        "Axes3D.tricontour": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "extend3d": "bool",
                    "stride": "int",
                    "zdir": "str",
                    "offset": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.plot_trisurf": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "color": "np.ndarray",
                    "norm": "np.ndarray",
                    "vmin": "float",
                    "vmax": "float",
                    "lightsource": "mcolors.LightSource",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.plot_wireframe": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray",
                    "Z": "np.ndarray",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Axes3D.plot_surface": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray",
                    "Z": "np.ndarray",
                    "args": "tuple",
                    "norm": "np.ndarray",
                    "vmin": "float",
                    "vmax": "float",
                    "lightsource": "mcolors.LightSource",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.scatter": [
            {
                "type": "method",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str",
                    "s": "np.ndarray",
                    "c": "np.ndarray",
                    "depthshade": "bool",
                    "args": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.scatter3D": [
            {
                "type": "attr",
                "anno": "Callable[[np.ndarray], np.ndarray]"
            }
        ],
        "Axes3D.contourf": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray",
                    "Z": "np.ndarray",
                    "args": "tuple[np.ndarray, ...]",
                    "zdir": "str",
                    "offset": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.contourf3D": [
            {
                "type": "attr",
                "anno": "Callable[[np.ndarray], mcoll.ContourSet]"
            }
        ],
        "Axes3D.contour": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray",
                    "Z": "np.ndarray",
                    "args": "tuple[np.ndarray, ...]",
                    "extend3d": "bool",
                    "stride": "int",
                    "zdir": "str",
                    "offset": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ],
        "Axes3D.contour3D": [
            {
                "type": "attr",
                "anno": "cbook.ContourSet"
            }
        ],
        "Axes3D.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "Axes3D._init_axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes3D.bar": [
            {
                "type": "method",
                "args": {
                    "left": "np.ndarray",
                    "height": "np.ndarray",
                    "zs": "np.ndarray",
                    "zdir": "str",
                    "args": "tuple",
                    "kwargs": "object"
                }
            }
        ]
    },
    "mpl_toolkits.mplot3d.proj3d": {
        "_line2d_seg_dist": [
            {
                "type": "func",
                "args": {
                    "p1": "np.ndarray",
                    "p2": "np.ndarray",
                    "p0": "np.ndarray"
                }
            }
        ],
        "world_transformation": [
            {
                "type": "func",
                "args": {
                    "xmin": "float",
                    "xmax": "float",
                    "ymin": "float",
                    "ymax": "float",
                    "zmin": "float",
                    "zmax": "float",
                    "pb_aspect": "np.ndarray"
                }
            }
        ],
        "view_transformation": [
            {
                "type": "func",
                "args": {
                    "E": "np.ndarray",
                    "R": "np.ndarray",
                    "V": "np.ndarray"
                }
            }
        ],
        "persp_transformation": [
            {
                "type": "func",
                "args": {
                    "zfront": "int",
                    "zback": "int"
                }
            }
        ],
        "ortho_transformation": [
            {
                "type": "func",
                "args": {
                    "zfront": "int",
                    "zback": "int"
                }
            }
        ],
        "_proj_transform_vec": [
            {
                "type": "func",
                "args": {
                    "vec": "np.ndarray",
                    "M": "np.ndarray"
                }
            }
        ],
        "_proj_transform_vec_clip": [
            {
                "type": "func",
                "args": {
                    "vec": "np.ndarray",
                    "M": "np.ndarray"
                }
            }
        ],
        "_vec_pad_ones": [
            {
                "type": "func",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "zs": "np.ndarray"
                }
            }
        ],
        "inv_transform": [
            {
                "type": "func",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "zs": "np.ndarray",
                    "M": "np.ndarray"
                }
            }
        ],
        "proj_transform": [
            {
                "type": "func",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "zs": "np.ndarray",
                    "M": "np.ndarray"
                }
            }
        ],
        "transform": [
            {
                "type": "var",
                "anno": "np.ndarray"
            }
        ],
        "proj_transform_clip": [
            {
                "type": "func",
                "args": {
                    "xs": "np.ndarray",
                    "ys": "np.ndarray",
                    "zs": "np.ndarray",
                    "M": "np.ndarray"
                }
            }
        ],
        "proj_trans_points": [
            {
                "type": "func",
                "args": {
                    "points": "np.ndarray",
                    "M": "np.ndarray"
                }
            }
        ],
        "proj_points": [
            {
                "type": "func",
                "args": {
                    "points": "np.ndarray",
                    "M": "np.ndarray"
                }
            }
        ],
        "rot_x": [
            {
                "type": "func",
                "args": {
                    "V": "np.ndarray",
                    "alpha": "float"
                }
            }
        ]
    },
    "mpl_toolkits.tests.test_axisartist_angle_helper": {
        "_MS_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "dms2float": [
            {
                "type": "func",
                "args": {
                    "degrees": "float",
                    "minutes": "float",
                    "seconds": "float"
                }
            }
        ],
        "test_select_step": [
            {
                "type": "func",
                "args": {
                    "args": "tuple[float, ...]",
                    "kwargs": "dict[str, str]",
                    "expected_levels": "tuple[float, ...]",
                    "expected_factor": "float"
                }
            }
        ],
        "test_select_step24": [
            {
                "type": "func",
                "args": {
                    "args": "tuple[float, ...]",
                    "kwargs": "dict[int, ...]",
                    "expected_levels": "tuple[float, ...]",
                    "expected_factor": "float"
                }
            }
        ],
        "test_select_step360": [
            {
                "type": "func",
                "args": {
                    "args": "tuple[float, ...]",
                    "kwargs": "dict[str, ...]",
                    "expected_levels": "dict[float, ...]",
                    "expected_factor": "float"
                }
            }
        ],
        "DMS_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "HMS_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "test_formatters": [
            {
                "type": "func",
                "args": {
                    "Formatter": "Formatter",
                    "regex": "re.Pattern",
                    "direction": "int",
                    "factor": "int",
                    "values": "list[int]"
                }
            }
        ]
    },
    "mpl_toolkits.tests.test_mplot3d": {
        "_test_proj_make_M": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_proj_transform": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_world": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_poly_collection_2d_to_3d_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_ax3d_tickcolour": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_line3d_set_get_data_3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invalid_axes_limits": [
            {
                "type": "func",
                "args": {
                    "setter": "str",
                    "side": "str",
                    "value": "float"
                }
            }
        ],
        "test_plotsurface_1d_raises": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mixedsamplesraises": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wireframe3dzerostrideraises": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar3d_lightsource": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_aspect_equal_error": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver3D_smoke": [
            {
                "type": "func",
                "args": {
                    "fig_test": "int",
                    "fig_ref": "int"
                }
            }
        ],
        "test_ticklabel_format": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_inverted": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_quiver3d_empty": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_marker_draw_order_view_rotated": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_marker_draw_order_data_reversed": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure",
                    "azim": "int"
                }
            }
        ],
        "test_tight_layout_text": [
            {
                "type": "func",
                "args": {
                    "fig_test": "mpl.figure.Figure",
                    "fig_ref": "mpl.figure.Figure"
                }
            }
        ],
        "test_plot_scalar": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_minor_ticks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "mpl3d_image_comparison": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "test_axes3d_ortho": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes3d_rotated": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes3d_cla": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes3d_labelpad": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_poly3dcollection_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_poly3dcollection_closed": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver3d_masked": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wireframe3dzerorstride": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wireframe3dzerocstride": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_wireframe3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_trisurf3d_shaded": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_trisurf3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_surface3d_shaded": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_surface3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_plot_3d_from_2d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_scatter3d_color": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_scatter3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mixedsubplots": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_lines3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tricontour": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contourf3d_fill": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contourf3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_contour3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar3d_notshaded": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar3d_shaded": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bar3d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_inverted_cla": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestVoxels.test_calling_conventions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestVoxels.test_xyz": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestVoxels.test_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestVoxels.test_rgb_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestVoxels.test_named_colors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestVoxels.test_edge_style": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestVoxels.test_simple": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_autoscale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_lines_dists": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_test_proj_draw_axes": [
            {
                "type": "func",
                "args": {
                    "M": "np.ndarray",
                    "s": "int",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "test_proj_axes_cube_ortho": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_proj_axes_cube": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.axisartist.axislines": {
        "AxisArtistHelper._Base.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtistHelper._Base.update_lim": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "AxisArtistHelper.Fixed._default_passthru_pt": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AxisArtistHelper.Fixed._loc": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AxisArtistHelper.Fixed.nth_coord": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AxisArtistHelper.Fixed.passthru_pt": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AxisArtistHelper.Fixed._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "AxisArtistHelper.Fixed.get_nth_coord": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtistHelper.Fixed.get_line": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "AxisArtistHelper.Fixed.get_axislabel_pos_angle": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "AxisArtistHelper.Floating.nth_coord": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AxisArtistHelper.Floating._value": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AxisArtistHelper.Floating.__init__": [
            {
                "type": "method",
                "args": {
                    "nth_coord": "int",
                    "value": "float"
                }
            }
        ],
        "AxisArtistHelper.Floating.get_nth_coord": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtistHelper.Floating.get_line": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "AxisArtistHelperRectlinear.Fixed.axis": [
            {
                "type": "attr",
                "anno": "Axis"
            }
        ],
        "AxisArtistHelperRectlinear.Fixed.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes",
                    "loc": "Path",
                    "nth_coord": "int"
                }
            }
        ],
        "AxisArtistHelperRectlinear.Floating._axis_direction": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AxisArtistHelperRectlinear.Floating.axis": [
            {
                "type": "attr",
                "anno": "axis.Axis"
            }
        ],
        "AxisArtistHelperRectlinear.Floating.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes",
                    "nth_coord": "int",
                    "passingthrough_point": "np.ndarray",
                    "axis_direction": "str"
                }
            }
        ],
        "GridHelperBase._force_update": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GridHelperBase._old_limits": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "GridHelperBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridHelperBase._update": [
            {
                "type": "method",
                "args": {
                    "x1": "float",
                    "x2": "float",
                    "y1": "float",
                    "y2": "float"
                }
            }
        ],
        "GridHelperBase.invalidate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridHelperBase.valid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridHelperBase.get_gridlines": [
            {
                "type": "method",
                "args": {
                    "which": "int",
                    "axis": "int"
                }
            }
        ],
        "GridHelperRectlinear.axes": [
            {
                "type": "attr",
                "anno": "mpl_axes.Axes"
            }
        ],
        "GridHelperRectlinear.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "Axes._axisline_on": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Axes._grid_helper": [
            {
                "type": "attr",
                "anno": "GridHelperBase"
            }
        ],
        "Axes._axislines": [
            {
                "type": "attr",
                "anno": "mpl_axes.Axes.AxisDict"
            }
        ],
        "Axes.axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes.gridlines": [
            {
                "type": "attr",
                "anno": "GridlinesCollection"
            }
        ],
        "Axes.get_grid_helper": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subplot": [
            {
                "type": "var",
                "anno": "mpl_axes.Axes"
            }
        ],
        "SubplotZero": [
            {
                "type": "var",
                "anno": "mpl_axes.Axes.AxesClass"
            }
        ],
        "AxisArtistHelperRectlinear.Floating.get_axislabel_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "AxisArtistHelperRectlinear.Floating.get_line_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "AxisArtistHelper.Fixed.get_axislabel_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "AxisArtistHelper.Fixed.get_line_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "AxisArtistHelperRectlinear.Floating.get_tick_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "GridHelperRectlinear.new_fixed_axis": [
            {
                "type": "method",
                "args": {
                    "loc": "Path",
                    "nth_coord": "int",
                    "axis_direction": "str",
                    "offset": "tuple",
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "Axes._init_axis_artists": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "Axes.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes.toggle_axisline": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Axes.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "grid_helper": "GridHelperBase",
                    "kwargs": "Any"
                }
            }
        ],
        "AxisArtistHelperRectlinear.Floating.get_axislabel_pos_angle": [
            {
                "type": "method",
                "args": {
                    "axes": "Axes"
                }
            }
        ],
        "Axes.invalidate_grid_helper": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridHelperBase.update_lim": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "AxisArtistHelperRectlinear.Floating.get_line": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "AxisArtistHelper.Fixed.__init__": [
            {
                "type": "method",
                "args": {
                    "loc": "tuple",
                    "nth_coord": "int"
                }
            }
        ],
        "AxisArtistHelper.Fixed.get_tick_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "GridHelperRectlinear.get_gridlines": [
            {
                "type": "method",
                "args": {
                    "which": "str",
                    "axis": "str"
                }
            }
        ],
        "AxisArtistHelperRectlinear.Floating.get_tick_iterators": [
            {
                "type": "method",
                "args": {
                    "axes": "Axes"
                }
            }
        ],
        "AxisArtistHelperRectlinear.Fixed.get_tick_iterators": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "Axes.__call__": [
            {
                "type": "method",
                "args": {
                    "args": "np.ndarray",
                    "kwargs": "np.ndarray"
                }
            }
        ],
        "Axes.get_children": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes.new_fixed_axis": [
            {
                "type": "method",
                "args": {
                    "loc": "Path",
                    "offset": "tuple"
                }
            }
        ],
        "GridHelperRectlinear.new_floating_axis": [
            {
                "type": "method",
                "args": {
                    "nth_coord": "int",
                    "value": "np.ndarray",
                    "axis_direction": "str",
                    "axes": "mpl_axes.Axes"
                }
            }
        ],
        "Axes.new_floating_axis": [
            {
                "type": "method",
                "args": {
                    "nth_coord": "int",
                    "value": "int",
                    "axis_direction": "str"
                }
            }
        ],
        "AxesZero._init_axis_artists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Axes.grid": [
            {
                "type": "method",
                "args": {
                    "b": "bool",
                    "which": "str",
                    "axis": "str",
                    "kwargs": "object"
                }
            }
        ],
        "GridHelperBase.new_gridlines": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "Axes.new_gridlines": [
            {
                "type": "method",
                "args": {
                    "grid_helper": "GridHelperBase"
                }
            }
        ],
        "Axes._init_gridlines": [
            {
                "type": "method",
                "args": {
                    "grid_helper": "GridHelperBase"
                }
            }
        ]
    },
    "mpl_toolkits.axisartist.grid_helper_curvelinear": {
        "FixedAxisArtistHelper.grid_helper": [
            {
                "type": "attr",
                "anno": "GridHelperBase"
            }
        ],
        "FixedAxisArtistHelper.nth_coord_ticks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FixedAxisArtistHelper.side": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FixedAxisArtistHelper._limits_inverted": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FixedAxisArtistHelper.__init__": [
            {
                "type": "method",
                "args": {
                    "grid_helper": "GridHelperBase",
                    "side": "str",
                    "nth_coord_ticks": "int"
                }
            }
        ],
        "FixedAxisArtistHelper.change_tick_coord": [
            {
                "type": "method",
                "args": {
                    "coord_number": "int"
                }
            }
        ],
        "FloatingAxisArtistHelper.value": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FloatingAxisArtistHelper.grid_helper": [
            {
                "type": "attr",
                "anno": "GridHelperBase"
            }
        ],
        "FloatingAxisArtistHelper._extremes": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FloatingAxisArtistHelper._get_line_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "FloatingAxisArtistHelper._line_num_points": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FloatingAxisArtistHelper.__init__": [
            {
                "type": "method",
                "args": {
                    "grid_helper": "GridHelperBase",
                    "nth_coord": "float",
                    "value": "float",
                    "axis_direction": "str"
                }
            }
        ],
        "FloatingAxisArtistHelper.set_extremes": [
            {
                "type": "method",
                "args": {
                    "e1": "float",
                    "e2": "float"
                }
            }
        ],
        "FloatingAxisArtistHelper.grid_info": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FloatingAxisArtistHelper.get_tick_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "GridHelperCurveLinear.grid_info": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GridHelperCurveLinear._old_values": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "GridHelperCurveLinear._aux_trans": [
            {
                "type": "attr",
                "anno": "Affine2D"
            }
        ],
        "GridHelperCurveLinear.grid_finder": [
            {
                "type": "attr",
                "anno": "GridFinder"
            }
        ],
        "GridHelperCurveLinear._force_update": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GridHelperCurveLinear.get_tick_iterator": [
            {
                "type": "method",
                "args": {
                    "nth_coord": "int",
                    "axis_side": "str",
                    "minor": "bool"
                }
            }
        ],
        "FixedAxisArtistHelper.get_tick_iterators": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FloatingAxisArtistHelper.get_line_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FixedAxisArtistHelper.get_tick_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "GridHelperCurveLinear.get_gridlines": [
            {
                "type": "method",
                "args": {
                    "which": "int",
                    "axis": "str"
                }
            }
        ],
        "FloatingAxisArtistHelper.get_axislabel_transform": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FloatingAxisArtistHelper.get_tick_iterators": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FloatingAxisArtistHelper.get_axislabel_pos_angle": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FixedAxisArtistHelper.update_lim": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FloatingAxisArtistHelper.update_lim": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FloatingAxisArtistHelper.get_line": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "GridHelperCurveLinear.__init__": [
            {
                "type": "method",
                "args": {
                    "aux_trans": "Affine2D",
                    "extreme_finder": "ExtremeFinderSimple",
                    "grid_locator1": "MaxNLocator",
                    "grid_locator2": "MaxNLocator",
                    "tick_formatter1": "FormatterPrettyPrint",
                    "tick_formatter2": "FormatterPrettyPrint"
                }
            }
        ],
        "GridHelperCurveLinear.update_grid_finder": [
            {
                "type": "method",
                "args": {
                    "aux_trans": "Transform",
                    "kw": "str"
                }
            }
        ],
        "GridHelperCurveLinear.new_fixed_axis": [
            {
                "type": "method",
                "args": {
                    "loc": "Path",
                    "nth_coord": "tuple",
                    "axis_direction": "str",
                    "offset": "tuple",
                    "axes": "AxisArtistHelper"
                }
            }
        ],
        "GridHelperCurveLinear.new_floating_axis": [
            {
                "type": "method",
                "args": {
                    "nth_coord": "float",
                    "value": "float",
                    "axes": "AxisArtist",
                    "axis_direction": "str"
                }
            }
        ],
        "GridHelperCurveLinear._update_grid": [
            {
                "type": "method",
                "args": {
                    "x1": "float",
                    "y1": "float",
                    "x2": "float",
                    "y2": "float"
                }
            }
        ],
        "GridHelperCurveLinear._update": [
            {
                "type": "method",
                "args": {
                    "x1": "float",
                    "x2": "float",
                    "y1": "float",
                    "y2": "float"
                }
            }
        ]
    },
    "mpl_toolkits.axisartist.floating_axes": {
        "FixedAxisArtistHelper.nth_coord_ticks": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "FixedAxisArtistHelper.value": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FixedAxisArtistHelper.grid_helper": [
            {
                "type": "attr",
                "anno": "AxisArtistHelper"
            }
        ],
        "FixedAxisArtistHelper._side": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FixedAxisArtistHelper.grid_info": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ExtremeFinderFixed._extremes": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ExtremeFinderFixed.__init__": [
            {
                "type": "method",
                "args": {
                    "extremes": "float"
                }
            }
        ],
        "ExtremeFinderFixed.__call__": [
            {
                "type": "method",
                "args": {
                    "transform_xy": "np.ndarray",
                    "x1": "np.ndarray",
                    "y1": "np.ndarray",
                    "x2": "np.ndarray",
                    "y2": "np.ndarray"
                }
            }
        ],
        "GridHelperCurveLinear._extremes": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GridHelperCurveLinear.__init__": [
            {
                "type": "method",
                "args": {
                    "aux_trans": "np.ndarray",
                    "extremes": "float",
                    "grid_locator1": "float",
                    "grid_locator2": "float",
                    "tick_formatter1": "float",
                    "tick_formatter2": "float"
                }
            }
        ],
        "GridHelperCurveLinear.get_data_boundary": [
            {
                "type": "method",
                "args": {
                    "side": "int"
                }
            }
        ],
        "FixedAxisArtistHelper.__init__": [
            {
                "type": "method",
                "args": {
                    "grid_helper": "AxisArtistHelper",
                    "side": "int",
                    "nth_coord_ticks": "tuple"
                }
            }
        ],
        "GridHelperCurveLinear.grid_info": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FloatingAxesBase._original_patch": [
            {
                "type": "attr",
                "anno": "mpacks.Patch"
            }
        ],
        "floatingaxes_class_factory": [
            {
                "type": "func",
                "args": {
                    "axes_class": "type"
                }
            }
        ],
        "GridHelperCurveLinear._update_grid": [
            {
                "type": "method",
                "args": {
                    "x1": "float",
                    "y1": "float",
                    "x2": "float",
                    "y2": "float"
                }
            }
        ],
        "FloatingAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FloatingSubplot": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "GridHelperCurveLinear.get_gridlines": [
            {
                "type": "method",
                "args": {
                    "which": "int",
                    "axis": "str"
                }
            }
        ],
        "GridHelperCurveLinear.get_boundary": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FixedAxisArtistHelper.get_tick_iterators": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FixedAxisArtistHelper.update_lim": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FixedAxisArtistHelper.get_line": [
            {
                "type": "method",
                "args": {
                    "axes": "AxisArtist"
                }
            }
        ],
        "FloatingAxesBase.adjust_axes_lim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FloatingAxesBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "float",
                    "kwargs": "float"
                }
            }
        ],
        "FloatingAxesBase._gen_axes_patch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridHelperCurveLinear.new_fixed_axis": [
            {
                "type": "method",
                "args": {
                    "loc": "Path",
                    "nth_coord": "tuple",
                    "axis_direction": "str",
                    "offset": "tuple",
                    "axes": "martist.Axes"
                }
            }
        ],
        "FloatingAxesBase.cla": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.axisartist.grid_finder": {
        "_deprecate_factor_none": [
            {
                "type": "func",
                "args": {
                    "factor": "float"
                }
            }
        ],
        "ExtremeFinderSimple.__init__": [
            {
                "type": "method",
                "args": {
                    "nx": "int",
                    "ny": "int"
                }
            }
        ],
        "ExtremeFinderSimple._add_pad": [
            {
                "type": "method",
                "args": {
                    "lon_min": "float",
                    "lon_max": "float",
                    "lat_min": "float",
                    "lat_max": "float"
                }
            }
        ],
        "ExtremeFinderSimple.__call__": [
            {
                "type": "method",
                "args": {
                    "transform_xy": "Transform",
                    "x1": "float",
                    "y1": "float",
                    "x2": "float",
                    "y2": "float"
                }
            }
        ],
        "GridFinder.extreme_finder": [
            {
                "type": "attr",
                "anno": "ExtremeFinderSimple"
            }
        ],
        "GridFinder.grid_locator1": [
            {
                "type": "attr",
                "anno": "MaxNLocator"
            }
        ],
        "GridFinder.grid_locator2": [
            {
                "type": "attr",
                "anno": "MaxNLocator"
            }
        ],
        "GridFinder.tick_formatter1": [
            {
                "type": "attr",
                "anno": "FormatterPrettyPrint"
            }
        ],
        "GridFinder.tick_formatter2": [
            {
                "type": "attr",
                "anno": "FormatterPrettyPrint"
            }
        ],
        "GridFinder.transform_xy": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GridFinder._get_raw_grid_lines": [
            {
                "type": "method",
                "args": {
                    "lon_values": "tuple",
                    "lat_values": "tuple",
                    "lon_min": "float",
                    "lon_max": "float",
                    "lat_min": "float",
                    "lat_max": "float"
                }
            }
        ],
        "GridFinder.inv_transform_xy": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "GridFinder.update": [
            {
                "type": "method",
                "args": {
                    "kw": "object"
                }
            }
        ],
        "GridFinderBase.__init__": [
            {
                "type": "method",
                "args": {
                    "extreme_finder": "ExtremeFinderSimple",
                    "grid_locator1": "Transform",
                    "grid_locator2": "Transform",
                    "tick_formatter1": "FormatterPrettyPrint",
                    "tick_formatter2": "FormatterPrettyPrint"
                }
            }
        ],
        "MaxNLocator._factor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MaxNLocator.set_factor": [
            {
                "type": "method",
                "args": {
                    "f": "float"
                }
            }
        ],
        "FixedLocator._locs": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "FixedLocator._factor": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "FixedLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "locs": "np.ndarray"
                }
            }
        ],
        "FixedLocator.__call__": [
            {
                "type": "method",
                "args": {
                    "v1": "float",
                    "v2": "float"
                }
            }
        ],
        "FixedLocator.set_factor": [
            {
                "type": "method",
                "args": {
                    "f": "float"
                }
            }
        ],
        "FormatterPrettyPrint._fmt": [
            {
                "type": "attr",
                "anno": "mticker.ScalarFormatter"
            }
        ],
        "DictFormatter._format_dict": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DictFormatter._fallback_formatter": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DictFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "format_dict": "dict",
                    "formatter": "str"
                }
            }
        ],
        "DictFormatter.__call__": [
            {
                "type": "method",
                "args": {
                    "direction": "str",
                    "factor": "str",
                    "values": "list[str]"
                }
            }
        ],
        "FormatterPrettyPrint.__call__": [
            {
                "type": "method",
                "args": {
                    "direction": "str",
                    "factor": "float",
                    "values": "np.ndarray"
                }
            }
        ],
        "FormatterPrettyPrint.__init__": [
            {
                "type": "method",
                "args": {
                    "useMathText": "bool"
                }
            }
        ],
        "GridFinder.update_transform": [
            {
                "type": "method",
                "args": {
                    "aux_trans": "Transform"
                }
            }
        ],
        "MaxNLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "nbins": "int",
                    "steps": "int",
                    "trim": "bool",
                    "integer": "bool",
                    "symmetric": "bool",
                    "prune": "int"
                }
            }
        ],
        "GridFinder.__init__": [
            {
                "type": "method",
                "args": {
                    "transform": "Transform",
                    "extreme_finder": "ExtremeFinderSimple",
                    "grid_locator1": "MaxNLocator",
                    "grid_locator2": "MaxNLocator",
                    "tick_formatter1": "FormatterPrettyPrint",
                    "tick_formatter2": "FormatterPrettyPrint"
                }
            }
        ],
        "MaxNLocator.__call__": [
            {
                "type": "method",
                "args": {
                    "v1": "float",
                    "v2": "float"
                }
            }
        ],
        "GridFinder._clip_grid_lines_and_find_ticks": [
            {
                "type": "method",
                "args": {
                    "lines": "tuple",
                    "values": "tuple",
                    "levs": "tuple",
                    "bb": "Bbox"
                }
            }
        ],
        "GridFinder.get_grid_info": [
            {
                "type": "method",
                "args": {
                    "x1": "float",
                    "y1": "float",
                    "x2": "float",
                    "y2": "float"
                }
            }
        ]
    },
    "mpl_toolkits.axisartist.axisline_style": {
        "_FancyAxislineStyle.SimpleArrow._ARROW_STYLE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_FancyAxislineStyle.SimpleArrow._axis_artist": [
            {
                "type": "attr",
                "anno": "_FancyAxislineStyle"
            }
        ],
        "_FancyAxislineStyle.SimpleArrow._line_transform": [
            {
                "type": "attr",
                "anno": "_FancyAxislineStyle"
            }
        ],
        "_FancyAxislineStyle.SimpleArrow._line_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "_FancyAxislineStyle.SimpleArrow._line_mutation_scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_FancyAxislineStyle.SimpleArrow.set_line_mutation_scale": [
            {
                "type": "method",
                "args": {
                    "scale": "float"
                }
            }
        ],
        "_FancyAxislineStyle.SimpleArrow.set_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "_FancyAxislineStyle.SimpleArrow._path_original": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "_FancyAxislineStyle.FilledArrow._ARROW_STYLE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AxislineStyle._style_list": [
            {
                "type": "attr",
                "anno": "dict[str, _Style]"
            }
        ],
        "AxislineStyle._Base.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxislineStyle.SimpleArrow.ArrowAxisClass": [
            {
                "type": "attr",
                "anno": "_FancyAxislineStyle"
            }
        ],
        "AxislineStyle.SimpleArrow.size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AxislineStyle.SimpleArrow.__init__": [
            {
                "type": "method",
                "args": {
                    "size": "int"
                }
            }
        ],
        "AxislineStyle.FilledArrow.ArrowAxisClass": [
            {
                "type": "attr",
                "anno": "_FancyAxislineStyle"
            }
        ],
        "AxislineStyle.SimpleArrow.new_line": [
            {
                "type": "method",
                "args": {
                    "axis_artist": "str",
                    "transform": "IdentityTransform"
                }
            }
        ],
        "AxislineStyle._Base.__call__": [
            {
                "type": "method",
                "args": {
                    "axis_artist": "str",
                    "transform": "IdentityTransform"
                }
            }
        ],
        "_FancyAxislineStyle.SimpleArrow._extend_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "mutation_size": "float"
                }
            }
        ],
        "_FancyAxislineStyle.SimpleArrow.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "transforms.Renderer"
                }
            }
        ],
        "_FancyAxislineStyle.SimpleArrow.__init__": [
            {
                "type": "method",
                "args": {
                    "axis_artist": "_FancyAxislineStyle",
                    "line_path": "Path",
                    "transform": "_FancyAxislineStyle",
                    "line_mutation_scale": "float"
                }
            }
        ]
    },
    "mpl_toolkits.axisartist.axes_rgb": {
        "RGBAxes._defaultAxesClass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "mpl_toolkits.axisartist.axis_artist": {
        "BezierPath._path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "BezierPath._invalid": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BezierPath._transformed_path": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "BezierPath.set_path": [
            {
                "type": "method",
                "args": {
                    "path": "Path"
                }
            }
        ],
        "AttributeCopier._klass": [
            {
                "type": "attr",
                "anno": "martist.Artist"
            }
        ],
        "AttributeCopier._ref_artist": [
            {
                "type": "attr",
                "anno": "martist.Artist"
            }
        ],
        "AttributeCopier.__init__": [
            {
                "type": "method",
                "args": {
                    "ref_artist": "martist.Artist",
                    "klass": "martist.Artist"
                }
            }
        ],
        "AttributeCopier.set_ref_artist": [
            {
                "type": "method",
                "args": {
                    "artist": "martist.Artist"
                }
            }
        ],
        "AttributeCopier.get_ref_artist": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AttributeCopier.get_attribute_from_ref_artist": [
            {
                "type": "method",
                "args": {
                    "attr_name": "str",
                    "default_value": "str"
                }
            }
        ],
        "Ticks._ticksize": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Ticks.locs_angles_labels": [
            {
                "type": "attr",
                "anno": "list[float]"
            }
        ],
        "Ticks._axis": [
            {
                "type": "attr",
                "anno": "martist.Axis"
            }
        ],
        "Ticks.get_ref_artist": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ticks.get_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ticks.get_markeredgecolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ticks.get_markeredgewidth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ticks._tick_out": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Ticks.set_tick_out": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Ticks.get_tick_out": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ticks.set_ticksize": [
            {
                "type": "method",
                "args": {
                    "ticksize": "float"
                }
            }
        ],
        "Ticks.get_ticksize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ticks.locs_angles": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Ticks.set_locs_angles": [
            {
                "type": "method",
                "args": {
                    "locs_angles": "np.ndarray"
                }
            }
        ],
        "LabelBase.locs_angles_labels": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LabelBase._ref_angle": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LabelBase._offset_radius": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LabelBase._text_follow_ref_angle": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LabelBase._set_ref_angle": [
            {
                "type": "method",
                "args": {
                    "a": "int"
                }
            }
        ],
        "LabelBase._get_ref_angle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._get_text_ref_angle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._get_offset_ref_angle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._set_offset_radius": [
            {
                "type": "method",
                "args": {
                    "offset_radius": "float"
                }
            }
        ],
        "LabelBase._get_offset_radius": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._get_opposite_direction": [
            {
                "type": "attr",
                "anno": "Callable[[str], str]"
            }
        ],
        "AxisLabel._axis": [
            {
                "type": "attr",
                "anno": "martist.Axis"
            }
        ],
        "AxisLabel._pad": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AxisLabel._extra_pad": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AxisLabel.set_pad": [
            {
                "type": "method",
                "args": {
                    "pad": "int"
                }
            }
        ],
        "AxisLabel.get_pad": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisLabel._set_external_pad": [
            {
                "type": "method",
                "args": {
                    "p": "int"
                }
            }
        ],
        "AxisLabel._get_external_pad": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisLabel.get_ref_artist": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisLabel._default_alignments": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AxisLabel._default_angles": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AxisLabel.get_color": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TickLabels._axislabel_pad": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TickLabels._axis_direction": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TickLabels._default_alignments": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TickLabels._default_angles": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TickLabels._locs_angles_labels": [
            {
                "type": "attr",
                "anno": "list[tuple[float, float]]"
            }
        ],
        "TickLabels.set_locs_angles_labels": [
            {
                "type": "method",
                "args": {
                    "locs_angles_labels": "list[tuple[float, float]]"
                }
            }
        ],
        "GridlinesCollection._which": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GridlinesCollection._axis": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GridlinesCollection.set_which": [
            {
                "type": "method",
                "args": {
                    "which": "int"
                }
            }
        ],
        "GridlinesCollection.set_axis": [
            {
                "type": "method",
                "args": {
                    "axis": "int"
                }
            }
        ],
        "GridlinesCollection._grid_helper": [
            {
                "type": "attr",
                "anno": "AxisArtistHelper"
            }
        ],
        "GridlinesCollection.set_grid_helper": [
            {
                "type": "method",
                "args": {
                    "grid_helper": "AxisArtistHelper"
                }
            }
        ],
        "GridlinesCollection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "which": "int",
                    "axis": "int",
                    "kwargs": "Any"
                }
            }
        ],
        "AxisArtist.zorder": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AxisArtist.ZORDER": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AxisArtist.axes": [
            {
                "type": "attr",
                "anno": "martist.Axes"
            }
        ],
        "AxisArtist._axis_artist_helper": [
            {
                "type": "attr",
                "anno": "AxisArtistHelper"
            }
        ],
        "AxisArtist.offset_transform": [
            {
                "type": "attr",
                "anno": "ScaledTranslation"
            }
        ],
        "AxisArtist.axis": [
            {
                "type": "attr",
                "anno": "martist.Axis"
            }
        ],
        "AxisArtist._axisline_style": [
            {
                "type": "attr",
                "anno": "AxislineStyle"
            }
        ],
        "AxisArtist._axis_direction": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AxisArtist._ticklabel_add_angle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AxisArtist._axislabel_add_angle": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AxisArtist.get_helper": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtist.get_axisline_style": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtist.line": [
            {
                "type": "attr",
                "anno": "PathPatch"
            }
        ],
        "AxisArtist.major_ticks": [
            {
                "type": "attr",
                "anno": "Ticks"
            }
        ],
        "AxisArtist.minor_ticks": [
            {
                "type": "attr",
                "anno": "Ticks"
            }
        ],
        "AxisArtist.major_ticklabels": [
            {
                "type": "attr",
                "anno": "TickLabels"
            }
        ],
        "AxisArtist.minor_ticklabels": [
            {
                "type": "attr",
                "anno": "TickLabels"
            }
        ],
        "AxisArtist._get_tick_info": [
            {
                "type": "method",
                "args": {
                    "tick_iter": "tuple"
                }
            }
        ],
        "AxisArtist._offsetText_pos": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AxisArtist.offsetText": [
            {
                "type": "attr",
                "anno": "mtext.Annotation"
            }
        ],
        "AxisArtist.label": [
            {
                "type": "attr",
                "anno": "AxisLabel"
            }
        ],
        "AxisArtist.set_label": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "AxisArtist.get_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Ticks.__init__": [
            {
                "type": "method",
                "args": {
                    "ticksize": "float",
                    "tick_out": "bool",
                    "axis": "martist.Axis",
                    "kwargs": "tuple"
                }
            }
        ],
        "AxisArtist._init_ticks": [
            {
                "type": "method",
                "args": {
                    "kwargs": "tuple"
                }
            }
        ],
        "AxisArtist.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "martist.Axes",
                    "helper": "AxisArtistHelper",
                    "offset": "tuple",
                    "axis_direction": "str",
                    "kwargs": "object"
                }
            }
        ],
        "LabelBase.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "AxisLabel.get_window_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "Affine2D"
                }
            }
        ],
        "AxisArtist.toggle": [
            {
                "type": "method",
                "args": {
                    "all": "bool",
                    "ticks": "Ticks",
                    "ticklabels": "TickLabels",
                    "label": "AxisLabel"
                }
            }
        ],
        "AxisLabel.get_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtist.dpi_transform": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtist.set_axislabel_direction": [
            {
                "type": "method",
                "args": {
                    "label_direction": "str"
                }
            }
        ],
        "AxisArtist.set_ticklabel_direction": [
            {
                "type": "method",
                "args": {
                    "tick_direction": "str"
                }
            }
        ],
        "AxisLabel.set_default_angle": [
            {
                "type": "method",
                "args": {
                    "d": "int"
                }
            }
        ],
        "Ticks._tickvert_path": [
            {
                "type": "attr",
                "anno": "Path"
            }
        ],
        "LabelBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "AxisLabel.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "axis_direction": "str",
                    "axis": "martist.Axis",
                    "kwargs": "tuple"
                }
            }
        ],
        "AxisLabel.set_default_alignment": [
            {
                "type": "method",
                "args": {
                    "d": "int"
                }
            }
        ],
        "TickLabels.set_axis_direction": [
            {
                "type": "method",
                "args": {
                    "label_direction": "str"
                }
            }
        ],
        "TickLabels.invert_axis_direction": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtist.invert_ticklabel_direction": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TickLabels.__init__": [
            {
                "type": "method",
                "args": {
                    "axis_direction": "str",
                    "kwargs": "tuple"
                }
            }
        ],
        "AxisLabel.set_axis_direction": [
            {
                "type": "method",
                "args": {
                    "d": "int"
                }
            }
        ],
        "AxisArtist.set_axis_direction": [
            {
                "type": "method",
                "args": {
                    "axis_direction": "str"
                }
            }
        ],
        "TickLabels.get_ref_artist": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtist._init_line": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BezierPath.recache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtist._update_label": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer"
                }
            }
        ],
        "AxisArtist._update_offsetText": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxisArtist.set_axisline_style": [
            {
                "type": "method",
                "args": {
                    "axisline_style": "AxislineStyle",
                    "kwargs": "object"
                }
            }
        ],
        "TickLabels.get_texts_widths_heights_descents": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtext.Renderer"
                }
            }
        ],
        "TickLabels._get_ticklabels_offsets": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtext.Renderer",
                    "label_direction": "str"
                }
            }
        ],
        "TickLabels.get_window_extents": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtext.Renderer"
                }
            }
        ],
        "AxisArtist._update_ticks": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer"
                }
            }
        ],
        "AxisArtist._init_label": [
            {
                "type": "method",
                "args": {
                    "kwargs": "tuple"
                }
            }
        ],
        "AxisArtist.LABELPAD": [
            {
                "type": "method",
                "args": {
                    "v": "int"
                }
            }
        ],
        "BezierPath.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "AxisArtist.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer"
                }
            }
        ],
        "Ticks.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "LabelBase.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtext.Renderer"
                }
            }
        ],
        "TickLabels.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtext.Renderer"
                }
            }
        ],
        "AxisLabel.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtext.Renderer"
                }
            }
        ],
        "GridlinesCollection.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtext.Renderer"
                }
            }
        ],
        "AxisArtist._draw_line": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer"
                }
            }
        ],
        "AxisArtist.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "cbook.Renderer"
                }
            }
        ],
        "AxisArtist._draw_label2": [
            {
                "type": "method",
                "args": {
                    "renderer": "mtext.Renderer"
                }
            }
        ],
        "AxisArtist._draw_label": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer"
                }
            }
        ],
        "AxisArtist._draw_offsetText": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer"
                }
            }
        ],
        "AxisArtist._draw_ticks2": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer"
                }
            }
        ],
        "AxisArtist._draw_ticks": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer"
                }
            }
        ],
        "AxisArtist._init_offsetText": [
            {
                "type": "method",
                "args": {
                    "direction": "str"
                }
            }
        ],
        "BezierPath.__init__": [
            {
                "type": "method",
                "args": {
                    "path": "Path",
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ]
    },
    "matplotlib.tests.test_subplots": {
        "check_visible": [
            {
                "type": "func",
                "args": {
                    "axs": "list[mpl.Axes]",
                    "x_visible": "list[bool]",
                    "y_visible": "list[bool]"
                }
            }
        ],
        "check_shared": [
            {
                "type": "func",
                "args": {
                    "axs": "list[mpl.Axes]",
                    "x_shared": "list[bool]",
                    "y_shared": "list[bool]"
                }
            }
        ],
        "test_label_outer_span": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_dont_mutate_kwargs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_gridspec": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_subplots_offsettext": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_exceptions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shared_and_moved": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shared": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.axisartist.axes_grid": {
        "Grid._defaultAxesClass": [
            {
                "type": "attr",
                "anno": "AxesGrid"
            }
        ],
        "ImageGrid._defaultAxesClass": [
            {
                "type": "attr",
                "anno": "AxesGrid"
            }
        ],
        "ImageGrid._defaultCbarAxesClass": [
            {
                "type": "attr",
                "anno": "axes_grid_orig.CbarAxesClass"
            }
        ],
        "AxesGrid": [
            {
                "type": "var",
                "anno": "AxesGrid"
            }
        ]
    },
    "mpl_toolkits.axisartist.angle_helper": {
        "select_step_degree": [
            {
                "type": "func",
                "args": {
                    "dv": "float"
                }
            }
        ],
        "select_step_hour": [
            {
                "type": "func",
                "args": {
                    "dv": "float"
                }
            }
        ],
        "select_step_sub": [
            {
                "type": "func",
                "args": {
                    "dv": "float"
                }
            }
        ],
        "select_step": [
            {
                "type": "func",
                "args": {
                    "v1": "float",
                    "v2": "float",
                    "nv": "int",
                    "hour": "bool",
                    "include_last": "bool",
                    "threshold_factor": "float"
                }
            }
        ],
        "select_step24": [
            {
                "type": "func",
                "args": {
                    "v1": "float",
                    "v2": "float",
                    "nv": "int",
                    "include_last": "bool",
                    "threshold_factor": "float"
                }
            }
        ],
        "select_step360": [
            {
                "type": "func",
                "args": {
                    "v1": "float",
                    "v2": "float",
                    "nv": "int",
                    "include_last": "bool",
                    "threshold_factor": "float"
                }
            }
        ],
        "LocatorBase.nbins": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LocatorBase._include_last": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LocatorBase.__init__": [
            {
                "type": "method",
                "args": {
                    "nbins": "int",
                    "include_last": "bool"
                }
            }
        ],
        "LocatorBase.den": [
            {
                "type": "method",
                "args": {
                    "v": "int"
                }
            }
        ],
        "LocatorBase.set_params": [
            {
                "type": "method",
                "args": {
                    "nbins": "int"
                }
            }
        ],
        "LocatorHMS.__call__": [
            {
                "type": "method",
                "args": {
                    "v1": "float",
                    "v2": "float"
                }
            }
        ],
        "LocatorHM.__call__": [
            {
                "type": "method",
                "args": {
                    "v1": "float",
                    "v2": "float"
                }
            }
        ],
        "LocatorH.__call__": [
            {
                "type": "method",
                "args": {
                    "v1": "float",
                    "v2": "float"
                }
            }
        ],
        "LocatorDMS.__call__": [
            {
                "type": "method",
                "args": {
                    "v1": "float",
                    "v2": "float"
                }
            }
        ],
        "LocatorDM.__call__": [
            {
                "type": "method",
                "args": {
                    "v1": "float",
                    "v2": "float"
                }
            }
        ],
        "LocatorD.__call__": [
            {
                "type": "method",
                "args": {
                    "v1": "float",
                    "v2": "float"
                }
            }
        ],
        "FormatterDMS.deg_mark": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.min_mark": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.sec_mark": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.fmt_d": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.fmt_ds": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.fmt_d_m": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.fmt_d_ms": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.fmt_d_m_partial": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.fmt_s_partial": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS.fmt_ss_partial": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterDMS._get_number_fraction": [
            {
                "type": "method",
                "args": {
                    "factor": "int"
                }
            }
        ],
        "FormatterDMS.__call__": [
            {
                "type": "method",
                "args": {
                    "direction": "str",
                    "factor": "int",
                    "values": "np.ndarray"
                }
            }
        ],
        "FormatterHMS.deg_mark": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.min_mark": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.sec_mark": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.fmt_d": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.fmt_ds": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.fmt_d_m": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.fmt_d_ms": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.fmt_d_m_partial": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.fmt_s_partial": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.fmt_ss_partial": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FormatterHMS.__call__": [
            {
                "type": "method",
                "args": {
                    "direction": "str",
                    "factor": "float",
                    "values": "np.ndarray"
                }
            }
        ],
        "ExtremeFinderCycle.lon_minmax": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ExtremeFinderCycle.lat_minmax": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ExtremeFinderCycle.__init__": [
            {
                "type": "method",
                "args": {
                    "nx": "int",
                    "ny": "int",
                    "lon_cycle": "float",
                    "lat_cycle": "float",
                    "lon_minmax": "tuple",
                    "lat_minmax": "tuple"
                }
            }
        ],
        "ExtremeFinderCycle._adjust_extremes": [
            {
                "type": "method",
                "args": {
                    "lon_min": "float",
                    "lon_max": "float",
                    "lat_min": "float",
                    "lat_max": "float"
                }
            }
        ],
        "ExtremeFinderCycle.__call__": [
            {
                "type": "method",
                "args": {
                    "transform_xy": "Callable[[np.ndarray], np.ndarray]",
                    "x1": "float",
                    "y1": "float",
                    "x2": "float",
                    "y2": "float"
                }
            }
        ]
    },
    "mpl_toolkits.axes_grid1.parasite_axes": {
        "ParasiteAxesBase._parent_axes": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "ParasiteAxesBase._get_lines": [
            {
                "type": "attr",
                "anno": "martist.Artist"
            }
        ],
        "parasite_axes_class_factory": [
            {
                "type": "func",
                "args": {
                    "axes_class": "Union[Axes, ParasiteAxesBase]"
                }
            }
        ],
        "ParasiteAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ParasiteAxesAuxTransBase.transAux": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "ParasiteAxesAuxTransBase.transAxes": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "ParasiteAxesAuxTransBase.transData": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "ParasiteAxesAuxTransBase._xaxis_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "ParasiteAxesAuxTransBase._yaxis_transform": [
            {
                "type": "attr",
                "anno": "mtransforms.Transform"
            }
        ],
        "ParasiteAxesAuxTransBase._viewlim_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParasiteAxesAuxTransBase.get_viewlim_mode": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "parasite_axes_auxtrans_class_factory": [
            {
                "type": "func",
                "args": {
                    "axes_class": "Union[Axes, ParasiteAxesBase]"
                }
            }
        ],
        "ParasiteAxesAuxTrans": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HostAxesBase.parasites": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "HostAxesBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "HostAxesBase.artists": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "HostAxesBase.images": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "host_axes_class_factory": [
            {
                "type": "func",
                "args": {
                    "axes_class": "type"
                }
            }
        ],
        "host_subplot_class_factory": [
            {
                "type": "func",
                "args": {
                    "axes_class": "type"
                }
            }
        ],
        "HostAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SubplotHost": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HostAxesBase._get_legend_handles": [
            {
                "type": "method",
                "args": {
                    "legend_handler_map": "dict"
                }
            }
        ],
        "ParasiteAxesBase.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParasiteAxesAuxTransBase._contour": [
            {
                "type": "method",
                "args": {
                    "super_contour": "mtransforms.Contour",
                    "XYCL": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "ParasiteAxesAuxTransBase._pcolor": [
            {
                "type": "method",
                "args": {
                    "super_pcolor": "pcolor",
                    "XYC": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "ParasiteAxesAuxTransBase._set_lim_and_transforms": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParasiteAxesBase.__init__": [
            {
                "type": "method",
                "args": {
                    "parent_axes": "Axes",
                    "kwargs": "dict"
                }
            }
        ],
        "ParasiteAxesAuxTransBase.set_viewlim_mode": [
            {
                "type": "method",
                "args": {
                    "mode": "str"
                }
            }
        ],
        "ParasiteAxesAuxTransBase.__init__": [
            {
                "type": "method",
                "args": {
                    "parent_axes": "Axes",
                    "aux_transform": "mtransforms.Transform",
                    "viewlim_mode": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ParasiteAxesBase.pick": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "MouseEvent"
                }
            }
        ],
        "HostAxesBase.pick": [
            {
                "type": "method",
                "args": {
                    "mouseevent": "MouseEvent"
                }
            }
        ],
        "ParasiteAxesBase.get_images_artists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostAxesBase.get_aux_axes": [
            {
                "type": "method",
                "args": {
                    "tr": "mtransforms.AffineTransform",
                    "viewlim_mode": "str",
                    "axes_class": "Union[Axes, ParasiteAxesBase]"
                }
            }
        ],
        "ParasiteAxesAuxTransBase.update_viewlim": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostAxesBase.twin": [
            {
                "type": "method",
                "args": {
                    "aux_trans": "ParasiteAxesAuxTransBase",
                    "axes_class": "Union[Axes, ParasiteAxesBase]"
                }
            }
        ],
        "HostAxesBase._remove_twiny": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "HostAxesBase.twiny": [
            {
                "type": "method",
                "args": {
                    "axes_class": "Union[Axes, ParasiteAxesBase]"
                }
            }
        ],
        "HostAxesBase._remove_twinx": [
            {
                "type": "method",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "HostAxesBase.twinx": [
            {
                "type": "method",
                "args": {
                    "axes_class": "Union[Axes, ParasiteAxesBase]"
                }
            }
        ],
        "ParasiteAxesAuxTransBase.apply_aspect": [
            {
                "type": "method",
                "args": {
                    "position": "mtransforms.Bbox"
                }
            }
        ],
        "HostAxesBase.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParasiteAxesAuxTransBase.pcolormesh": [
            {
                "type": "method",
                "args": {
                    "XYC": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "ParasiteAxesAuxTransBase.pcolor": [
            {
                "type": "method",
                "args": {
                    "XYC": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "ParasiteAxesAuxTransBase.contourf": [
            {
                "type": "method",
                "args": {
                    "XYCL": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "ParasiteAxesAuxTransBase.contour": [
            {
                "type": "method",
                "args": {
                    "XYCL": "tuple",
                    "kwargs": "dict"
                }
            }
        ],
        "HostAxesBase.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "HostAxesBase.get_tightbbox": [
            {
                "type": "method",
                "args": {
                    "renderer": "martist.Renderer",
                    "call_axes_locator": "bool",
                    "bbox_extra_artists": "list"
                }
            }
        ],
        "host_subplot": [
            {
                "type": "func",
                "args": {
                    "args": "int",
                    "axes_class": "type",
                    "figure": "plt.Figure",
                    "kwargs": "dict"
                }
            }
        ],
        "host_axes": [
            {
                "type": "func",
                "args": {
                    "args": "int",
                    "axes_class": "type",
                    "figure": "Figure",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "mpl_toolkits.axisartist.parasite_axes": {
        "ParasiteAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ParasiteAxesAuxTrans": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HostAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SubplotHost": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "mpl_toolkits.axisartist": {
        "ParasiteAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ParasiteAxesAuxTrans": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HostAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SubplotHost": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "mpl_toolkits.axes_grid1.mpl_axes": {
        "SimpleChainedObjects._objects": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SimpleChainedObjects.__init__": [
            {
                "type": "method",
                "args": {
                    "objects": "list"
                }
            }
        ],
        "SimpleChainedObjects.__getattr__": [
            {
                "type": "method",
                "args": {
                    "k": "str"
                }
            }
        ],
        "SimpleChainedObjects.__call__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "Axes.AxisDict.axes": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "Axes.AxisDict.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "Axes"
                }
            }
        ],
        "Axes.AxisDict.__call__": [
            {
                "type": "method",
                "args": {
                    "v": "int",
                    "kwargs": "int"
                }
            }
        ],
        "Axes._axislines": [
            {
                "type": "attr",
                "anno": "AxisDict"
            }
        ],
        "Axes.axis": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SimpleAxisArtist._axis": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "SimpleAxisArtist._axisnum": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SimpleAxisArtist.line": [
            {
                "type": "attr",
                "anno": "Maxes.Axes"
            }
        ],
        "SimpleAxisArtist._axis_direction": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "SimpleAxisArtist.label": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SimpleAxisArtist.toggle": [
            {
                "type": "method",
                "args": {
                    "all": "bool",
                    "ticks": "bool",
                    "ticklabels": "bool",
                    "label": "bool"
                }
            }
        ],
        "SimpleAxisArtist.set_visible": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "Axes.AxisDict.__getitem__": [
            {
                "type": "method",
                "args": {
                    "k": "int"
                }
            }
        ],
        "SimpleAxisArtist.set_label": [
            {
                "type": "method",
                "args": {
                    "txt": "str"
                }
            }
        ],
        "SimpleAxisArtist.major_ticklabels": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SimpleAxisArtist.major_ticks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SimpleAxisArtist.__init__": [
            {
                "type": "method",
                "args": {
                    "axis": "Axes",
                    "axisnum": "int",
                    "spine": "Maxes.Axes"
                }
            }
        ],
        "Axes._init_axis_artists": [
            {
                "type": "method",
                "args": {
                    "axes": "Axes"
                }
            }
        ],
        "Axes.cla": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.axes_grid1.axes_size": {
        "Add._a": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "Add._b": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "Add.__init__": [
            {
                "type": "method",
                "args": {
                    "a": "Axes",
                    "b": "Axes"
                }
            }
        ],
        "AddList._list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AddList.__init__": [
            {
                "type": "method",
                "args": {
                    "add_list": "list"
                }
            }
        ],
        "Fixed.fixed_size": [
            {
                "type": "attr",
                "anno": "Number"
            }
        ],
        "Fixed.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "Axes"
                }
            }
        ],
        "Scaled._scalable_size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Scaled.__init__": [
            {
                "type": "method",
                "args": {
                    "scalable_size": "float"
                }
            }
        ],
        "Scaled.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "ArtistRenderer"
                }
            }
        ],
        "Scalable": [
            {
                "type": "var",
                "anno": "Type[_Base]"
            }
        ],
        "AxesX._axes": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "AxesX._aspect": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AxesX._ref_ax": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "AxesX.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "Axes",
                    "aspect": "float",
                    "ref_ax": "Axes"
                }
            }
        ],
        "AxesY._axes": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "AxesY._aspect": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "AxesY._ref_ax": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "AxesY.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "Axes",
                    "aspect": "float",
                    "ref_ax": "Axes"
                }
            }
        ],
        "MaxExtent._artist_list": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "MaxExtent._w_or_h": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MaxExtent.add_artist": [
            {
                "type": "method",
                "args": {
                    "a": "Axes"
                }
            }
        ],
        "MaxWidth.__init__": [
            {
                "type": "method",
                "args": {
                    "artist_list": "Axes"
                }
            }
        ],
        "MaxHeight.__init__": [
            {
                "type": "method",
                "args": {
                    "artist_list": "Axes"
                }
            }
        ],
        "Fraction._fraction_ref": [
            {
                "type": "attr",
                "anno": "Number"
            }
        ],
        "Fraction._fraction": [
            {
                "type": "attr",
                "anno": "Number"
            }
        ],
        "Padded._size": [
            {
                "type": "attr",
                "anno": "SizeFromFunc"
            }
        ],
        "Padded._pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Padded.__init__": [
            {
                "type": "method",
                "args": {
                    "size": "SizeFromFunc",
                    "pad": "float"
                }
            }
        ],
        "SizeFromFunc._func": [
            {
                "type": "attr",
                "anno": "Number"
            }
        ],
        "SizeFromFunc.__init__": [
            {
                "type": "method",
                "args": {
                    "func": "Number"
                }
            }
        ],
        "SizeFromFunc.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "ArtistRenderer"
                }
            }
        ],
        "GetExtentHelper._get_func_map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GetExtentHelper._ax_list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GetExtentHelper._direction": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_get_axes_aspect": [
            {
                "type": "func",
                "args": {
                    "ax": "Axes"
                }
            }
        ],
        "MaxExtent.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "Text"
                }
            }
        ],
        "AxesY.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "Axes"
                }
            }
        ],
        "AxesX.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "Axes"
                }
            }
        ],
        "Add.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "str"
                }
            }
        ],
        "AddList.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "str"
                }
            }
        ],
        "Fraction.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "str"
                }
            }
        ],
        "Padded.get_size": [
            {
                "type": "method",
                "args": {
                    "renderer": "str"
                }
            }
        ],
        "GetExtentHelper.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "Union[Axes, str]",
                    "direction": "str"
                }
            }
        ],
        "MaxExtent.__init__": [
            {
                "type": "method",
                "args": {
                    "artist_list": "Axes",
                    "w_or_h": "str"
                }
            }
        ],
        "Fraction.__init__": [
            {
                "type": "method",
                "args": {
                    "fraction": "Number",
                    "ref_size": "Number"
                }
            }
        ],
        "_Base.__rmul__": [
            {
                "type": "method",
                "args": {
                    "other": "Number"
                }
            }
        ],
        "Fixed.__init__": [
            {
                "type": "method",
                "args": {
                    "fixed_size": "Number"
                }
            }
        ],
        "from_any": [
            {
                "type": "func",
                "args": {
                    "size": "Size",
                    "fraction_ref": "Number"
                }
            }
        ],
        "_Base.__add__": [
            {
                "type": "method",
                "args": {
                    "other": "Union[_Base, Axes]"
                }
            }
        ],
        "GetExtentHelper.__call__": [
            {
                "type": "method",
                "args": {
                    "renderer": "object"
                }
            }
        ]
    },
    "mpl_toolkits.axes_grid1.inset_locator": {
        "InsetPosition.parent": [
            {
                "type": "attr",
                "anno": "InsetPosition"
            }
        ],
        "InsetPosition.lbwh": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "InsetPosition.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "InsetPosition",
                    "lbwh": "tuple"
                }
            }
        ],
        "AnchoredLocatorBase.__init__": [
            {
                "type": "method",
                "args": {
                    "bbox_to_anchor": "Bbox",
                    "offsetbox": "Bbox",
                    "loc": "Path",
                    "borderpad": "float",
                    "bbox_transform": "BboxTransformTo"
                }
            }
        ],
        "AnchoredLocatorBase.draw": [
            {
                "type": "method",
                "args": {
                    "renderer": "mpl.renderer.Renderer"
                }
            }
        ],
        "AnchoredLocatorBase.axes": [
            {
                "type": "attr",
                "anno": "HostAxes"
            }
        ],
        "AnchoredSizeLocator.x_size": [
            {
                "type": "attr",
                "anno": "Size"
            }
        ],
        "AnchoredSizeLocator.y_size": [
            {
                "type": "attr",
                "anno": "Size"
            }
        ],
        "AnchoredZoomLocator.parent_axes": [
            {
                "type": "attr",
                "anno": "HostAxes"
            }
        ],
        "AnchoredZoomLocator.zoom": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BboxPatch.bbox": [
            {
                "type": "attr",
                "anno": "TransformedBbox"
            }
        ],
        "AnchoredZoomLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "parent_axes": "HostAxes",
                    "zoom": "float",
                    "loc": "str",
                    "borderpad": "float",
                    "bbox_to_anchor": "Bbox",
                    "bbox_transform": "BboxTransformTo"
                }
            }
        ],
        "BboxConnector.bbox1": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "BboxConnector.bbox2": [
            {
                "type": "attr",
                "anno": "Bbox"
            }
        ],
        "BboxConnector.loc1": [
            {
                "type": "attr",
                "anno": "InsetPosition"
            }
        ],
        "BboxConnector.loc2": [
            {
                "type": "attr",
                "anno": "InsetPosition"
            }
        ],
        "BboxConnectorPatch.loc1b": [
            {
                "type": "attr",
                "anno": "InsetPosition"
            }
        ],
        "BboxConnectorPatch.loc2b": [
            {
                "type": "attr",
                "anno": "InsetPosition"
            }
        ],
        "AnchoredZoomLocator.get_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "Renderer"
                }
            }
        ],
        "BboxConnector.get_bbox_edge_pos": [
            {
                "type": "method",
                "args": {
                    "bbox": "Bbox",
                    "loc": "InsetPosition"
                }
            }
        ],
        "BboxPatch.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnchoredSizeLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "bbox_to_anchor": "Bbox",
                    "x_size": "Size",
                    "y_size": "Size",
                    "loc": "str",
                    "borderpad": "float",
                    "bbox_transform": "BboxTransformTo"
                }
            }
        ],
        "AnchoredSizeLocator.get_extent": [
            {
                "type": "method",
                "args": {
                    "renderer": "cbook.Renderer"
                }
            }
        ],
        "AnchoredLocatorBase.__call__": [
            {
                "type": "method",
                "args": {
                    "ax": "HostAxes",
                    "renderer": "Renderer"
                }
            }
        ],
        "BboxConnector.connect_bbox": [
            {
                "type": "method",
                "args": {
                    "bbox1": "Bbox",
                    "bbox2": "Bbox",
                    "loc1": "InsetPosition",
                    "loc2": "InsetPosition"
                }
            }
        ],
        "BboxConnectorPatch.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxConnector.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BboxConnector.__init__": [
            {
                "type": "method",
                "args": {
                    "bbox1": "Bbox",
                    "bbox2": "Bbox",
                    "loc1": "InsetPosition",
                    "loc2": "InsetPosition",
                    "kwargs": "object"
                }
            }
        ],
        "BboxConnectorPatch.__init__": [
            {
                "type": "method",
                "args": {
                    "bbox1": "Bbox",
                    "bbox2": "Bbox",
                    "loc1a": "InsetPosition",
                    "loc2a": "InsetPosition",
                    "loc1b": "InsetPosition",
                    "loc2b": "InsetPosition",
                    "kwargs": "object"
                }
            }
        ],
        "BboxPatch.__init__": [
            {
                "type": "method",
                "args": {
                    "bbox": "TransformedBbox",
                    "kwargs": "object"
                }
            }
        ],
        "mark_inset": [
            {
                "type": "func",
                "args": {
                    "parent_axes": "HostAxes",
                    "inset_axes": "InsetPosition",
                    "loc1": "InsetPosition",
                    "loc2": "InsetPosition",
                    "kwargs": "object"
                }
            }
        ],
        "InsetPosition.__call__": [
            {
                "type": "method",
                "args": {
                    "ax": "HostAxes",
                    "renderer": "cbook.Renderer"
                }
            }
        ],
        "_add_inset_axes": [
            {
                "type": "func",
                "args": {
                    "parent_axes": "HostAxes",
                    "inset_axes": "InsetPosition"
                }
            }
        ],
        "zoomed_inset_axes": [
            {
                "type": "func",
                "args": {
                    "parent_axes": "HostAxes",
                    "zoom": "float",
                    "loc": "str",
                    "bbox_to_anchor": "Bbox",
                    "bbox_transform": "BboxTransformTo",
                    "axes_class": "type | None",
                    "axes_kwargs": "dict",
                    "borderpad": "float"
                }
            }
        ],
        "inset_axes": [
            {
                "type": "func",
                "args": {
                    "parent_axes": "HostAxes",
                    "width": "Size",
                    "height": "Size",
                    "loc": "str",
                    "bbox_to_anchor": "Bbox",
                    "bbox_transform": "BboxTransformTo",
                    "axes_class": "type | None",
                    "axes_kwargs": "dict",
                    "borderpad": "float"
                }
            }
        ]
    },
    "matplotlib.tests.test_sphinxext": {
        "test_tinypages": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "str"
                }
            }
        ]
    },
    "matplotlib.tests.test_dviread": {
        "test_PsfontsMap": [
            {
                "type": "func",
                "args": {
                    "monkeypatch": "pytest.MonkeyPatch"
                }
            }
        ],
        "test_dviread": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.axes_grid1.axes_rgb": {
        "RGBAxes._defaultAxesClass": [
            {
                "type": "attr",
                "anno": "type[Axes]"
            }
        ],
        "RGBAxes.RGB": [
            {
                "type": "attr",
                "anno": "Axes"
            }
        ],
        "RGBAxes.add_RGB_to_figure": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "make_rgb_axes": [
            {
                "type": "func",
                "args": {
                    "ax": "Axes",
                    "pad": "float",
                    "axes_class": "type[Axes]",
                    "add_all": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "RGBAxes.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "pad": "float",
                    "add_all": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "RGBAxes.imshow_rgb": [
            {
                "type": "method",
                "args": {
                    "r": "np.ndarray",
                    "g": "np.ndarray",
                    "b": "np.ndarray",
                    "kwargs": "dict"
                }
            }
        ],
        "imshow_rgb": [
            {
                "type": "func",
                "args": {
                    "ax": "Axes",
                    "r": "float",
                    "g": "float",
                    "b": "float",
                    "kwargs": "str"
                }
            }
        ]
    },
    "mpl_toolkits.axes_grid1.axes_divider": {
        "Divider._fig": [
            {
                "type": "attr",
                "anno": "mpl.figure.Figure"
            }
        ],
        "Divider._pos": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Divider._horizontal": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Divider._vertical": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "Divider._anchor": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Divider._aspect": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Divider._xrefindex": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Divider._yrefindex": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Divider._locator": [
            {
                "type": "attr",
                "anno": "AxesLocator"
            }
        ],
        "Divider.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "pos": "tuple",
                    "horizontal": "np.ndarray",
                    "vertical": "np.ndarray",
                    "aspect": "float",
                    "anchor": "str"
                }
            }
        ],
        "Divider._calc_k": [
            {
                "type": "method",
                "args": {
                    "l": "Size",
                    "total_size": "float"
                }
            }
        ],
        "Divider._calc_offsets": [
            {
                "type": "method",
                "args": {
                    "l": "Size",
                    "k": "float"
                }
            }
        ],
        "Divider.set_position": [
            {
                "type": "method",
                "args": {
                    "pos": "int"
                }
            }
        ],
        "Divider.get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Divider.get_anchor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Divider.set_horizontal": [
            {
                "type": "method",
                "args": {
                    "h": "np.ndarray"
                }
            }
        ],
        "Divider.get_horizontal": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Divider.set_vertical": [
            {
                "type": "method",
                "args": {
                    "v": "np.ndarray"
                }
            }
        ],
        "Divider.get_vertical": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Divider.get_vsize_hsize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Divider.set_aspect": [
            {
                "type": "method",
                "args": {
                    "aspect": "float"
                }
            }
        ],
        "Divider.get_aspect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Divider.set_locator": [
            {
                "type": "method",
                "args": {
                    "_locator": "AxesLocator"
                }
            }
        ],
        "Divider.get_locator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesLocator._axes_divider": [
            {
                "type": "attr",
                "anno": "Divider"
            }
        ],
        "AxesLocator._nx1": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AxesLocator._ny1": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AxesLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "axes_divider": "Divider",
                    "nx": "int",
                    "ny": "int",
                    "nx1": "int",
                    "ny1": "int"
                }
            }
        ],
        "Divider.new_locator": [
            {
                "type": "method",
                "args": {
                    "nx": "int",
                    "ny": "int",
                    "nx1": "int",
                    "ny1": "int"
                }
            }
        ],
        "SubplotDivider.figure": [
            {
                "type": "attr",
                "anno": "Figure"
            }
        ],
        "SubplotDivider._subplotspec": [
            {
                "type": "attr",
                "anno": "SubplotSpec"
            }
        ],
        "SubplotDivider.figbox": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SubplotDivider.get_subplotspec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotDivider.set_subplotspec": [
            {
                "type": "method",
                "args": {
                    "subplotspec": "SubplotSpec"
                }
            }
        ],
        "AxesDivider._axes": [
            {
                "type": "attr",
                "anno": "SubplotBase"
            }
        ],
        "AxesDivider._xref": [
            {
                "type": "attr",
                "anno": "Size"
            }
        ],
        "AxesDivider._yref": [
            {
                "type": "attr",
                "anno": "Size"
            }
        ],
        "AxesDivider.__init__": [
            {
                "type": "method",
                "args": {
                    "axes": "SubplotBase",
                    "xref": "Size",
                    "yref": "Size"
                }
            }
        ],
        "AxesDivider.get_anchor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesDivider.get_subplotspec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesLocator.get_subplotspec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HBoxDivider._determine_karray": [
            {
                "type": "method",
                "args": {
                    "equivalent_sizes": "np.ndarray",
                    "appended_sizes": "np.ndarray",
                    "max_equivalent_size": "float",
                    "total_appended_size": "float"
                }
            }
        ],
        "HBoxDivider._calc_offsets": [
            {
                "type": "method",
                "args": {
                    "appended_sizes": "np.ndarray",
                    "karray": "np.ndarray"
                }
            }
        ],
        "HBoxDivider.new_locator": [
            {
                "type": "method",
                "args": {
                    "nx": "int",
                    "nx1": "int"
                }
            }
        ],
        "VBoxDivider.new_locator": [
            {
                "type": "method",
                "args": {
                    "ny": "int",
                    "ny1": "int"
                }
            }
        ],
        "SubplotDivider.get_geometry": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesDivider.get_aspect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "make_axes_locatable": [
            {
                "type": "func",
                "args": {
                    "axes": "SubplotBase"
                }
            }
        ],
        "Divider.get_position_runtime": [
            {
                "type": "method",
                "args": {
                    "ax": "int",
                    "renderer": "str"
                }
            }
        ],
        "Divider.get_vertical_sizes": [
            {
                "type": "method",
                "args": {
                    "renderer": "str"
                }
            }
        ],
        "Divider.get_horizontal_sizes": [
            {
                "type": "method",
                "args": {
                    "renderer": "str"
                }
            }
        ],
        "HBoxDivider._locate": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "w": "float",
                    "h": "float",
                    "y_equivalent_sizes": "np.ndarray",
                    "x_appended_sizes": "np.ndarray",
                    "figW": "float",
                    "figH": "float"
                }
            }
        ],
        "VBoxDivider.locate": [
            {
                "type": "method",
                "args": {
                    "nx": "int",
                    "ny": "int",
                    "nx1": "int",
                    "ny1": "int",
                    "axes": "int",
                    "renderer": "str"
                }
            }
        ],
        "HBoxDivider.locate": [
            {
                "type": "method",
                "args": {
                    "nx": "int",
                    "ny": "int",
                    "nx1": "int",
                    "ny1": "int",
                    "axes": "int",
                    "renderer": "str"
                }
            }
        ],
        "Divider.locate": [
            {
                "type": "method",
                "args": {
                    "nx": "int",
                    "ny": "int",
                    "nx1": "int",
                    "ny1": "int",
                    "axes": "int",
                    "renderer": "str"
                }
            }
        ],
        "AxesLocator.__call__": [
            {
                "type": "method",
                "args": {
                    "axes": "int",
                    "renderer": "str"
                }
            }
        ],
        "Divider.append_size": [
            {
                "type": "method",
                "args": {
                    "position": "str",
                    "size": "Size"
                }
            }
        ],
        "Divider.set_anchor": [
            {
                "type": "method",
                "args": {
                    "anchor": "str"
                }
            }
        ],
        "Divider.add_auto_adjustable_area": [
            {
                "type": "method",
                "args": {
                    "use_axes": "SubplotBase",
                    "pad": "float",
                    "adjust_dirs": "list"
                }
            }
        ],
        "make_axes_area_auto_adjustable": [
            {
                "type": "func",
                "args": {
                    "ax": "SubplotBase",
                    "use_axes": "SubplotBase",
                    "pad": "float",
                    "adjust_dirs": "list"
                }
            }
        ],
        "SubplotDivider.update_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SubplotDivider.change_geometry": [
            {
                "type": "method",
                "args": {
                    "numrows": "int",
                    "numcols": "int",
                    "num": "int"
                }
            }
        ],
        "SubplotDivider.get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesDivider.get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AxesDivider._get_new_axes": [
            {
                "type": "method",
                "args": {
                    "axes_class": "type",
                    "kwargs": "dict"
                }
            }
        ],
        "AxesDivider.new_vertical": [
            {
                "type": "method",
                "args": {
                    "size": "Size",
                    "pad": "Size",
                    "pack_start": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "AxesDivider.new_horizontal": [
            {
                "type": "method",
                "args": {
                    "size": "Size",
                    "pad": "Size",
                    "pack_start": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "SubplotDivider.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "args": "tuple",
                    "horizontal": "np.ndarray",
                    "vertical": "np.ndarray",
                    "aspect": "float",
                    "anchor": "str"
                }
            }
        ],
        "AxesDivider.append_axes": [
            {
                "type": "method",
                "args": {
                    "position": "str",
                    "size": "Size",
                    "pad": "Size",
                    "add_to_figure": "bool",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "mpl_toolkits.axes_grid1.anchored_artists": {
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "AnchoredDrawingArea.da": [
            {
                "type": "attr",
                "anno": "DrawingArea"
            }
        ],
        "AnchoredDrawingArea.drawing_area": [
            {
                "type": "attr",
                "anno": "DrawingArea"
            }
        ],
        "AnchoredAuxTransformBox.drawing_area": [
            {
                "type": "attr",
                "anno": "AuxTransformBox"
            }
        ],
        "AnchoredEllipse._box": [
            {
                "type": "attr",
                "anno": "AuxTransformBox"
            }
        ],
        "AnchoredEllipse.ellipse": [
            {
                "type": "attr",
                "anno": "Ellipse"
            }
        ],
        "AnchoredSizeBar.size_bar": [
            {
                "type": "attr",
                "anno": "AuxTransformBox"
            }
        ],
        "AnchoredSizeBar.txt_label": [
            {
                "type": "attr",
                "anno": "TextArea"
            }
        ],
        "AnchoredSizeBar._box": [
            {
                "type": "attr",
                "anno": "VPacker"
            }
        ],
        "AnchoredDirectionArrows.box": [
            {
                "type": "attr",
                "anno": "AuxTransformBox"
            }
        ],
        "AnchoredDirectionArrows.arrow_x": [
            {
                "type": "attr",
                "anno": "FancyArrowPatch"
            }
        ],
        "AnchoredDirectionArrows.arrow_y": [
            {
                "type": "attr",
                "anno": "FancyArrowPatch"
            }
        ],
        "AnchoredDirectionArrows.p_x": [
            {
                "type": "attr",
                "anno": "PathPatch"
            }
        ],
        "AnchoredDirectionArrows.p_y": [
            {
                "type": "attr",
                "anno": "PathPatch"
            }
        ],
        "AnchoredDrawingArea.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "float",
                    "height": "float",
                    "xdescent": "float",
                    "ydescent": "float",
                    "loc": "float",
                    "pad": "float",
                    "borderpad": "float",
                    "prop": "str",
                    "frameon": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "AnchoredAuxTransformBox.__init__": [
            {
                "type": "method",
                "args": {
                    "transform": "transforms.Affine2D",
                    "loc": "str",
                    "pad": "float",
                    "borderpad": "float",
                    "prop": "dict",
                    "frameon": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "AnchoredDirectionArrows.__init__": [
            {
                "type": "method",
                "args": {
                    "transform": "transforms.Transform",
                    "label_x": "str",
                    "label_y": "str",
                    "length": "float",
                    "fontsize": "float",
                    "loc": "str",
                    "angle": "float",
                    "aspect_ratio": "float",
                    "pad": "float",
                    "borderpad": "float",
                    "frameon": "bool",
                    "color": "str",
                    "alpha": "float",
                    "sep_x": "float",
                    "sep_y": "float",
                    "fontproperties": "dict",
                    "back_length": "float",
                    "head_width": "int",
                    "head_length": "int",
                    "tail_width": "int",
                    "text_props": "dict",
                    "arrow_props": "dict",
                    "kwargs": "object"
                }
            }
        ],
        "AnchoredSizeBar.__init__": [
            {
                "type": "method",
                "args": {
                    "transform": "transforms.TransformedBbox",
                    "size": "float",
                    "label": "str",
                    "loc": "str",
                    "pad": "float",
                    "borderpad": "float",
                    "sep": "float",
                    "frameon": "bool",
                    "size_vertical": "float",
                    "color": "str",
                    "label_top": "bool",
                    "fontproperties": "dict",
                    "fill_bar": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "AnchoredEllipse.__init__": [
            {
                "type": "method",
                "args": {
                    "transform": "transforms.Affine2D",
                    "width": "int",
                    "height": "int",
                    "angle": "int",
                    "loc": "str",
                    "pad": "float",
                    "borderpad": "float",
                    "prop": "dict",
                    "frameon": "bool",
                    "kwargs": "object"
                }
            }
        ]
    },
    "mpl_toolkits.axes_grid1.colorbar": {
        "make_axes_kw_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "colormap_kw_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "colorbar_doc": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CbarAxesLocator._locator": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CbarAxesLocator.extesion_fraction": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CbarAxesLocator.extend": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CbarAxesLocator.orientation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CbarAxesLocator.__init__": [
            {
                "type": "method",
                "args": {
                    "locator": "str | None",
                    "extend": "str",
                    "orientation": "str"
                }
            }
        ],
        "ColorbarBase.ax": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "ColorbarBase.alpha": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ColorbarBase.values": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.boundaries": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.extend": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase.spacing": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase.orientation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase.drawedges": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColorbarBase.filled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColorbarBase.solids": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.lines": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.dividers": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase.extension_patch1": [
            {
                "type": "attr",
                "anno": "PathPatch"
            }
        ],
        "ColorbarBase.extension_patch2": [
            {
                "type": "attr",
                "anno": "PathPatch"
            }
        ],
        "ColorbarBase.cbar_axis": [
            {
                "type": "attr",
                "anno": "mpl.Axes"
            }
        ],
        "ColorbarBase._get_colorbar_limits": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorbarBase._labelkw": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ColorbarBase._edges": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray"
                }
            }
        ],
        "ColorbarBase._boundaries": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase._values": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase._uniform_y": [
            {
                "type": "method",
                "args": {
                    "N": "int"
                }
            }
        ],
        "ColorbarBase._process_values": [
            {
                "type": "method",
                "args": {
                    "b": "np.ndarray"
                }
            }
        ],
        "ColorbarBase._y": [
            {
                "type": "attr",
                "anno": "np.ndarray"
            }
        ],
        "ColorbarBase._mesh": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.set_alpha": [
            {
                "type": "method",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "Colorbar.mappable": [
            {
                "type": "attr",
                "anno": "cm.ScalarMappable"
            }
        ],
        "Colorbar.cmap": [
            {
                "type": "attr",
                "anno": "colors.Colormap"
            }
        ],
        "Colorbar.norm": [
            {
                "type": "attr",
                "anno": "colors.Normalize"
            }
        ],
        "Colorbar.stale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Colorbar.update_normal": [
            {
                "type": "method",
                "args": {
                    "mappable": "cm.ScalarMappable"
                }
            }
        ],
        "ColorbarBase._select_locator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase._set_label_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.set_label_text": [
            {
                "type": "method",
                "args": {
                    "label": "str",
                    "kw": "dict"
                }
            }
        ],
        "CbarAxesLocator.get_end_vertices": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CbarAxesLocator.get_path_ends": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CbarAxesLocator.get_path_patch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CbarAxesLocator.get_original_position": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl.Axes",
                    "renderer": "mpl.renderer"
                }
            }
        ],
        "CbarAxesLocator.__call__": [
            {
                "type": "method",
                "args": {
                    "axes": "mpl.Axes",
                    "renderer": "mpl.renderer"
                }
            }
        ],
        "make_axes": [
            {
                "type": "func",
                "args": {
                    "parent": "mpl.Axes",
                    "fraction": "float",
                    "shrink": "float",
                    "aspect": "float",
                    "kw": "str"
                }
            }
        ],
        "ColorbarBase._config_axes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.add_lines": [
            {
                "type": "method",
                "args": {
                    "levels": "np.ndarray",
                    "colors": "np.ndarray",
                    "linewidths": "np.ndarray"
                }
            }
        ],
        "Colorbar.add_lines": [
            {
                "type": "method",
                "args": {
                    "CS": "contour.ContourSet"
                }
            }
        ],
        "ColorbarBase._add_solids": [
            {
                "type": "method",
                "args": {
                    "X": "np.ndarray",
                    "Y": "np.ndarray",
                    "C": "np.ndarray"
                }
            }
        ],
        "ColorbarBase._add_ends": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorbarBase.update_artists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Colorbar.update_bruteforce": [
            {
                "type": "method",
                "args": {
                    "mappable": "cm.ScalarMappable"
                }
            }
        ],
        "ColorbarBase.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "cmap": "colors.Colormap",
                    "norm": "colors.Normalize",
                    "alpha": "float",
                    "values": "np.ndarray",
                    "boundaries": "np.ndarray",
                    "orientation": "str",
                    "extend": "str",
                    "spacing": "str",
                    "ticks": "np.ndarray",
                    "format": "str",
                    "drawedges": "bool",
                    "filled": "bool"
                }
            }
        ],
        "Colorbar.__init__": [
            {
                "type": "method",
                "args": {
                    "ax": "mpl.Axes",
                    "mappable": "cm.ScalarMappable",
                    "kw": "object"
                }
            }
        ],
        "colorbar": [
            {
                "type": "func",
                "args": {
                    "mappable": "cm.ScalarMappable",
                    "cax": "np.ndarray",
                    "ax": "mpl.Axes",
                    "kw": "str"
                }
            }
        ]
    },
    "mpl_toolkits.axes_grid1.axes_grid": {
        "CbarAxesBase.orientation": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CbarAxesBase._default_label_on": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CbarAxesBase._locator": [
            {
                "type": "attr",
                "anno": "ticker.FixedLocator"
            }
        ],
        "CbarAxesBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "orientation": "str",
                    "kwargs": "Any"
                }
            }
        ],
        "CbarAxesBase._cbid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CbarAxesBase.cbid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CbarAxesBase.locator": [
            {
                "type": "attr",
                "anno": "ticker.FixedLocator"
            }
        ],
        "Grid._defaultAxesClass": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "Grid.ngrids": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Grid._direction": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Grid._divider": [
            {
                "type": "attr",
                "anno": "Divider"
            }
        ],
        "Grid.axes_all": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Grid.axes_column": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Grid.axes_row": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Grid.axes_llc": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Grid._get_col_row": [
            {
                "type": "method",
                "args": {
                    "n": "int"
                }
            }
        ],
        "Grid.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grid.__getitem__": [
            {
                "type": "method",
                "args": {
                    "i": "int"
                }
            }
        ],
        "Grid.get_geometry": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grid.set_axes_pad": [
            {
                "type": "method",
                "args": {
                    "axes_pad": "np.ndarray"
                }
            }
        ],
        "Grid.get_axes_pad": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grid.get_aspect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grid.get_divider": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grid.set_axes_locator": [
            {
                "type": "method",
                "args": {
                    "locator": "AxesLocator"
                }
            }
        ],
        "Grid._init_locators": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grid.get_axes_locator": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Grid.set_aspect": [
            {
                "type": "method",
                "args": {
                    "aspect": "float"
                }
            }
        ],
        "CbarAxesBase.toggle_label": [
            {
                "type": "method",
                "args": {
                    "b": "bool"
                }
            }
        ],
        "CbarAxesBase._config_axes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_tick_only": [
            {
                "type": "func",
                "args": {
                    "ax": "mpl.Axes",
                    "bottom_on": "bool",
                    "left_on": "bool"
                }
            }
        ],
        "Grid.set_label_mode": [
            {
                "type": "method",
                "args": {
                    "mode": "str"
                }
            }
        ],
        "Grid.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "rect": "Union[Number, SubplotSpec]",
                    "nrows_ncols": "tuple",
                    "ngrids": "int",
                    "direction": "str",
                    "axes_pad": "float",
                    "add_all": "bool",
                    "share_all": "bool",
                    "share_x": "bool",
                    "share_y": "bool",
                    "label_mode": "str",
                    "axes_class": "type",
                    "aspect": "float"
                }
            }
        ],
        "CbarAxesBase.cla": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CbarAxesBase.colorbar": [
            {
                "type": "method",
                "args": {
                    "mappable": "cm.ScalarMappable",
                    "ticks": "ticker.MaxNLocator",
                    "kwargs": "object"
                }
            }
        ],
        "Grid.get_vsize_hsize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageGrid._defaultCbarAxesClass": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "ImageGrid._colorbar_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageGrid._colorbar_location": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageGrid._colorbar_pad": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ImageGrid._colorbar_size": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageGrid.cbar_axes": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ImageGrid._init_locators": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageGrid.__init__": [
            {
                "type": "method",
                "args": {
                    "fig": "mpl.figure.Figure",
                    "rect": "np.ndarray",
                    "nrows_ncols": "int",
                    "ngrids": "int",
                    "direction": "str",
                    "axes_pad": "float",
                    "add_all": "bool",
                    "share_all": "bool",
                    "aspect": "bool",
                    "label_mode": "str",
                    "cbar_mode": "str",
                    "cbar_location": "str",
                    "cbar_pad": "float",
                    "cbar_size": "str",
                    "cbar_set_cax": "bool",
                    "axes_class": "str"
                }
            }
        ],
        "AxesGrid": [
            {
                "type": "var",
                "anno": "AxesGrid"
            }
        ]
    },
    "matplotlib.tight_layout": {
        "get_subplotspec_list": [
            {
                "type": "func",
                "args": {
                    "axes_list": "list",
                    "grid_spec": "GridSpec"
                }
            }
        ],
        "get_renderer": [
            {
                "type": "func",
                "args": {
                    "fig": "Figure"
                }
            }
        ],
        "auto_adjust_subplotpars": [
            {
                "type": "func",
                "args": {
                    "fig": "Figure",
                    "renderer": "str",
                    "nrows_ncols": "list",
                    "num1num2_list": "list",
                    "subplot_list": "list",
                    "ax_bbox_list": "list",
                    "pad": "float",
                    "h_pad": "float",
                    "w_pad": "float",
                    "rect": "tuple"
                }
            }
        ],
        "get_tight_layout_figure": [
            {
                "type": "func",
                "args": {
                    "fig": "Figure",
                    "axes_list": "list",
                    "subplotspec_list": "list",
                    "renderer": "str",
                    "pad": "float",
                    "h_pad": "float",
                    "w_pad": "float",
                    "rect": "tuple"
                }
            }
        ]
    },
    "matplotlib._text_layout": {
        "layout": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "font": "Font",
                    "kern_mode": "int"
                }
            }
        ]
    },
    "matplotlib.tests.test_collections": {
        "check_segments": [
            {
                "type": "func",
                "args": {
                    "coll": "LineCollection",
                    "positions": "np.ndarray",
                    "linelength": "int",
                    "lineoffset": "int",
                    "orientation": "str"
                }
            }
        ],
        "test_pandas_indexing": [
            {
                "type": "func",
                "args": {
                    "pd": "pandas.DataFrame"
                }
            }
        ],
        "test_EventCollection_nosort": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_collection_set_verts_array": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_joinstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_capstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_lslw_bcast": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_null_collection_datalim": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "generate_EventCollection_plot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cap_and_joinstyle_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polycollection_close": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__set_color": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__set_prop": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__set_lineoffset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__set_linelength": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__set_orientation": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__switch_orientation_2x": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__switch_orientation": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__extend_positions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__append_positions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__add_positions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__set_positions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test__EventCollection__get_props": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_singleton_autolim": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_blended_collection_autolim": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pathcollection_legend_elements": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_scatter_post_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_size_in_xy": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_picking": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_regularpolycollection_scale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_regularpolycollection_rotate": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_EllipseCollection": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_barb_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_add_collection": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_linestyle_single_dashes": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.axisartist.clip_path": {
        "atan2": [
            {
                "type": "func",
                "args": {
                    "dy": "float",
                    "dx": "float"
                }
            }
        ],
        "clip": [
            {
                "type": "func",
                "args": {
                    "xlines": "np.ndarray",
                    "ylines": "np.ndarray",
                    "x0": "np.ndarray",
                    "clip": "str",
                    "xdir": "bool",
                    "ydir": "bool"
                }
            }
        ],
        "clip_line_to_rect": [
            {
                "type": "func",
                "args": {
                    "xline": "np.ndarray",
                    "yline": "np.ndarray",
                    "bbox": "Bbox"
                }
            }
        ]
    },
    "matplotlib.tests.test_pyplot": {
        "test_pyplot_up_to_date": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "Path"
                }
            }
        ],
        "test_copy_docstring_and_deprecators": [
            {
                "type": "func",
                "args": {
                    "recwarn": "bool"
                }
            }
        ],
        "test_stackplot_smoke": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pyplot_box": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nrows_error": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_simplification": {
        "test_start_with_moveto": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_angled_antiparallel": [
            {
                "type": "func",
                "args": {
                    "angle": "float",
                    "offset": "float"
                }
            }
        ],
        "test_clipping_full": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_clipper": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_clipping_with_nans": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_para_equal_perp": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_throw_rendering_complexity_exceeded": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fft_peaks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hatch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_simplify_curve": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_sine_plus_noise": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_antiparallel_simplification": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_noise": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_diamond": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_overflow": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_clipping": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.tests.test_axisartist_grid_finder": {
        "test_pretty_print_format": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_colorbar": {
        "_get_cmap_norms": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_colorbar_extension_length": [
            {
                "type": "func",
                "args": {
                    "spacing": "str"
                }
            }
        ],
        "_colorbar_extension_shape": [
            {
                "type": "func",
                "args": {
                    "spacing": "str"
                }
            }
        ],
        "test_colorbar_extension_length": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_extension_shape": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_int": [
            {
                "type": "func",
                "args": {
                    "clim": "tuple"
                }
            }
        ],
        "test_colorbar_label": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_extend_colorbar_customnorm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_inverted_ticks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_get_ticks_2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_scale_reset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_format": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_renorm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_log_minortick_labels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_powernorm_extension": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_lognorm_extension": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_autotickslog": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_autoticks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cbar_minorticks_for_rc_xyminortickvisible": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_minorticks_on_off": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_ticks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_remove_from_figure": [
            {
                "type": "func",
                "args": {
                    "use_gridspec": "bool"
                }
            }
        ],
        "test_colorbarbase": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_axes_kw": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_get_ticks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_closed_patch": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_single_scatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_gridspec_make_colorbar": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_positioning": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mappable_no_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_patheffects": {
        "test_SimplePatchShadow_offset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_PathEffect_points_to_pixels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patheffect3": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_collection": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patheffect2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patheffect1": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patheffects_stroked_text": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_backend_bases": {
        "test_uses_per_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_default_filename": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "pathlib.Path"
                }
            }
        ],
        "test_interactive_zoom": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_location_event_position": [
            {
                "type": "func",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "test_non_gui_warning": [
            {
                "type": "func",
                "args": {
                    "monkeypatch": "pytest.MonkeyPatch"
                }
            }
        ]
    },
    "matplotlib.tests.test_image": {
        "test_load_from_url": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imread_fspath": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imread_pil_uint16": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_preserve_size": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imsave_pil_kwargs_tiff": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imsave_pil_kwargs_png": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imsave_color_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imsave_fspath": [
            {
                "type": "func",
                "args": {
                    "fmt": "str"
                }
            }
        ],
        "test_imsave": [
            {
                "type": "func",
                "args": {
                    "fmt": "str"
                }
            }
        ],
        "test_image_preserve_size2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_edges": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "do_figimage": [
            {
                "type": "func",
                "args": {
                    "suppressComposite": "bool"
                }
            }
        ],
        "test_image_array_alpha": [
            {
                "type": "func",
                "args": {
                    "fig_test": "FigureImage",
                    "fig_ref": "FigureImage"
                }
            }
        ],
        "test_imshow_10_10_1": [
            {
                "type": "func",
                "args": {
                    "fig_test": "FigureImage",
                    "fig_ref": "FigureImage"
                }
            }
        ],
        "test_imshow_pil": [
            {
                "type": "func",
                "args": {
                    "fig_test": "FigureImage",
                    "fig_ref": "FigureImage"
                }
            }
        ],
        "test_imshow_zoom": [
            {
                "type": "func",
                "args": {
                    "fig_test": "FigureImage",
                    "fig_ref": "FigureImage"
                }
            }
        ],
        "test_imshow_antialiased": [
            {
                "type": "func",
                "args": {
                    "fig_test": "FigureImage",
                    "fig_ref": "FigureImage",
                    "img_size": "int",
                    "fig_size": "int",
                    "interpolation": "str"
                }
            }
        ],
        "test_figimage1": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_figimage0": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_interp_nearest_vs_none": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_interps": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_cursor_formatting": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_respects_bbox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_relim": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_composite": [
            {
                "type": "func",
                "args": {
                    "fmt": "str",
                    "counted": "bytes",
                    "composite_image": "bool",
                    "count": "int"
                }
            }
        ],
        "test_full_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_bool": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_float128": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_empty_imshow": [
            {
                "type": "func",
                "args": {
                    "make_norm": "Callable[[], colors.Normalize]"
                }
            }
        ],
        "test_imshow_bignumbers_real": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_bignumbers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_flatfield": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_clips_rgb_to_valid_range": [
            {
                "type": "func",
                "args": {
                    "dtype": "np.dtype"
                }
            }
        ],
        "test_imshow_masked_interpolation": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_endianess": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mask_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_mask_image_over_under": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rotate_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_scale_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_jpeg_2d": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_zoom_and_clip_upper_origin": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_window_extent_for_AxisImage": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_image_inverted": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rasterize_dpi": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_composite_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_composite_background": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_shift": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_no_interpolation_origin": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_10_10_5": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_10_10_2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_cliprect": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_clip": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_format_cursor_data": [
            {
                "type": "func",
                "args": {
                    "data": "np.ndarray",
                    "text_without_colorbar": "str",
                    "text_with_colorbar": "str"
                }
            }
        ],
        "test_cursor_data": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_python_io": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_alpha_interp": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_figureimage_setdata": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_setdata_xya": [
            {
                "type": "func",
                "args": {
                    "image_cls": "type[mimage.Image]",
                    "x": "np.ndarray",
                    "y": "np.ndarray",
                    "a": "np.ndarray"
                }
            }
        ],
        "test_axesimage_setdata": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nonuniformimage_setnorm": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nonuniformimage_setcmap": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imshow_no_warn_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_image_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_minimized_rasterized": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_jpeg_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_texmanager": {
        "test_fontconfig_preamble": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.testing.widgets": {
        "do_event": [
            {
                "type": "func",
                "args": {
                    "tool": "mock.Tool",
                    "etype": "str",
                    "button": "int",
                    "xdata": "int",
                    "ydata": "int",
                    "key": "str",
                    "step": "int"
                }
            }
        ],
        "get_ax": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib._internal_utils": {
        "graphviz_dump_transform": [
            {
                "type": "func",
                "args": {
                    "transform": "TransformNode",
                    "dest": "str",
                    "highlight": "list"
                }
            }
        ]
    },
    "matplotlib.tests.test_scale": {
        "test_symlog_mask_nan": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_scales": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_function_scale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invalid_log_lims": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_logscale_nonpos_values": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_logscale_transform_repr": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_logscale_invert_transform": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_extra_kwargs_raise_or_warn": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_logscale_mask": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_logscale_subs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_log_scatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_logit_scales": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_arrow_patches": {
        "draw_arrow": [
            {
                "type": "func",
                "args": {
                    "ax": "plt.Axes",
                    "t": "str",
                    "r": "float"
                }
            }
        ],
        "__prepare_fancyarrow_dpi_cor_test": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fancyarrow_dpi_cor_200dpi": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fancyarrow_dpi_cor_100dpi": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_boxarrow": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_connection_styles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_arrow_styles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fancyarrow_dash": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fancyarrow": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invalid_intersection": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_backend_svg": {
        "needs_usetex": [
            {
                "type": "var",
                "anno": "None"
            }
        ],
        "test_unicode_won": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_gid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text_urls": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bold_font_output_with_none_fonttype": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bold_font_output": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_noscale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fill_black_with_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_svgnone_with_data_coordinates": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_missing_psfont": [
            {
                "type": "func",
                "args": {
                    "monkeypatch": "pytest.MonkeyPatch"
                }
            }
        ],
        "test_visibility": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_savefig_tight": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_backend_pdf": {
        "needs_usetex": [
            {
                "type": "var",
                "anno": "None"
            }
        ],
        "test_pdfpages_fspath": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_composite_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_multipage_keep_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_multipage_properfinalize": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_multipage_pagecount": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_type42": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hatching_legend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_use14corefonts": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_empty_rasterized": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_missing_psfont": [
            {
                "type": "func",
                "args": {
                    "monkeypatch": "pytest.MonkeyPatch"
                }
            }
        ],
        "test_grayscale_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pdf_savefig_when_color_is_none": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "Path"
                }
            }
        ],
        "test_failing_latex": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "Path"
                }
            }
        ]
    },
    "matplotlib.tests.test_artist": {
        "test_artist_inspector_get_aliases": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_artist_inspector_get_valid_values": [
            {
                "type": "func",
                "args": {
                    "accept_clause": "str",
                    "expected": "str"
                }
            }
        ],
        "test_properties": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_None_zorder": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_setp": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_default_edges": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_remove": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hatching": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cull_markers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_clipping": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_collection_transform_of_none": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_patch_transform_of_none": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tight_bbox": {
        "adjust_bbox": [
            {
                "type": "func",
                "args": {
                    "fig": "Figure",
                    "bbox_inches": "Bbox",
                    "fixed_dpi": "int"
                }
            }
        ],
        "process_figure_for_rasterizing": [
            {
                "type": "func",
                "args": {
                    "fig": "Figure",
                    "bbox_inches_restore": "Bbox",
                    "fixed_dpi": "int"
                }
            }
        ]
    },
    "matplotlib.tests.test_table": {
        "test_customcell": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_auto_column": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_label_colours": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_table_cells": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_non_square": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_zorder": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_diff_cell_table": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_tightlayout": {
        "example_plot": [
            {
                "type": "func",
                "args": {
                    "ax": "plt.Axes",
                    "fontsize": "int"
                }
            }
        ],
        "add_offsetboxes": [
            {
                "type": "func",
                "args": {
                    "ax": "mpl.Axes",
                    "size": "int",
                    "margin": "float",
                    "color": "str"
                }
            }
        ],
        "test_tight_layout8": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout6": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_suptitle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_big_decorators_vertical": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_big_decorators_horizontal": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_verybig_decorators": [
            {
                "type": "func",
                "args": {
                    "label": "str"
                }
            }
        ],
        "test_empty_layout": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_collapsed": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_badsubplotgrid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout_offsetboxes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_outward_ticks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout9": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout7": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout5": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout4": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout3": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_layout1": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_constrainedlayout": {
        "example_plot": [
            {
                "type": "func",
                "args": {
                    "ax": "plt.Axes",
                    "fontsize": "int",
                    "nodec": "bool"
                }
            }
        ],
        "example_pcolor": [
            {
                "type": "func",
                "args": {
                    "ax": "plt.Axes",
                    "fontsize": "int"
                }
            }
        ],
        "test_constrained_layout20": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout7": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout17": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout12": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout11rat": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout11": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout8": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout6": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout1": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hidden_axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorbar_location": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout23": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout22": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout21": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout19": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout18": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout16": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout15": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout14": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout13": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout10": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout9": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout5": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout4": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout3": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_constrained_layout2": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tri.triplot": {
        "triplot": [
            {
                "type": "func",
                "args": {
                    "ax": "np.ndarray",
                    "args": "tuple",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "matplotlib.tests.test_quiver": {
        "draw_quiver": [
            {
                "type": "func",
                "args": {
                    "ax": "plt.Axes",
                    "kw": "object"
                }
            }
        ],
        "test_quiver_setuvc_numbers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiverkey_angles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_xy": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_angles_and_scale": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bad_masked_sizes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_barbs_flip": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_barbs_pivot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_barbs": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_key_xy": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_key_pivot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_copy": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_single": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_with_key": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_animate": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_zero_headlength": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_no_warnings": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_key_memory_leak": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_memory_leak": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_arg_sizes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_quiver_number_of_args": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tri.tripcolor": {
        "tripcolor": [
            {
                "type": "func",
                "args": {
                    "ax": "mpl.Axes",
                    "args": "tuple",
                    "alpha": "float",
                    "norm": "Normalize",
                    "cmap": "str",
                    "vmin": "float",
                    "vmax": "float",
                    "shading": "str",
                    "facecolors": "np.ndarray",
                    "kwargs": "object"
                }
            }
        ]
    },
    "matplotlib.tests.test_compare_images": {
        "test_image_comparison_expect_rms": [
            {
                "type": "func",
                "args": {
                    "im1": "str",
                    "im2": "str",
                    "tol": "float",
                    "expect_rms": "float"
                }
            }
        ]
    },
    "matplotlib.tests.test_agg": {
        "test_repeated_save_with_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pil_kwargs_tiff": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_pil_kwargs_png": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_too_large_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_chunksize": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_agg_filter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_long_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_with_nan": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_jpeg_dpi": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_large_single_path_collection": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_lines": {
        "test_nan_is_sorted": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_valid_drawstyles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_valid_linestyles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_linestyle_variants": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_line_colors": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_set_line_coll_dash": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_step_markers": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_set_line_coll_dash_image": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_line_dashes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_as_markerstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_lw_scaling": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_fill_styles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_set_drawstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_drawstyle_variants": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_invisible_Line_rendering": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.tests.test_axisartist_floating_axes": {
        "test_subplot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_curvelinear4": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_curvelinear3": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.tests.test_axes_grid": {
        "test_imagegrid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_imagegrid_cbar_mode_edge": [
            {
                "type": "func",
                "args": {
                    "legacy_colorbar": "bool"
                }
            }
        ]
    },
    "mpl_toolkits.tests.test_axisartist_axislines": {
        "test_Axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_ParasiteAxesAuxTrans": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_Subplot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_SubplotZero": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_legend": {
        "test_legend_remove": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_stackplot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_multiple_keys": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_labels_first": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_various_labels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_auto3": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_auto2": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_auto1": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_no_warn_big_data_when_loc_specified": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_warn_big_data_best_loc": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_labelcolor_markerfacecolor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_labelcolor_markeredgecolor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_labelcolor_linecolor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_labelcolor_list": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_labelcolor_single": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_title_fontsize": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_window_extent_cached_renderer": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_proper_window_extent": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_title_empty": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_shadow_framealpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_handler_numpoints": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_linecollection_scaled_dashes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_repeatcheckok": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_nanscatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cross_figure_patch_legend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestLegendFigureFunction.test_warn_args_kwargs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFigureFunction.test_legend_kw_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFigureFunction.test_legend_label_three_args_pluskw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFigureFunction.test_legend_label_three_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFigureFunction.test_legend_label_arg": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFigureFunction.test_legend_no_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFigureFunction.test_legend_handle_label": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFunction.test_warn_args_kwargs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFunction.test_kwargs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_hatching": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_expand": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_legend_ordereddict": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_set_draggable": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_not_covering_scatter_transform": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_not_covering_scatter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestLegendFunction.test_parasite": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFunction.test_legend_handler_map": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFunction.test_legend_three_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFunction.test_legend_label_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFunction.test_legend_no_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFunction.test_legend_handles_only": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestLegendFunction.test_legend_handle_label": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_framealpha": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_alpha_rcparam": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_alpha_rgba": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_alpha_handles": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_empty_bar_chart_with_legend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_rc": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fancy": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_polar": {
        "test_polar_gridlines": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_not_datalim_adjustable": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_rlim_zero": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_interpolation_steps_variable_r": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_polar_interpolation_steps_constant_r": [
            {
                "type": "func",
                "args": {
                    "fig_test": "mpl.figure.Figure",
                    "fig_ref": "mpl.figure.Figure"
                }
            }
        ],
        "test_polar_rlim_bottom": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_polar_rlim": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_polar_wrap": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_polar_rlabel_position": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_theta_position": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_invertedylim_rorigin": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_invertedylim": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_rorigin": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_negative_rmin": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_rmin": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_alignment": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_coord_annotations": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_annotations": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_get_tightbbox_polar": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_theta_limits": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_units_2": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure.Figure",
                    "fig_ref": "plt.figure.Figure"
                }
            }
        ],
        "test_polar_units_1": [
            {
                "type": "func",
                "args": {
                    "fig_test": "mpl.figure.Figure",
                    "fig_ref": "mpl.figure.Figure"
                }
            }
        ],
        "test_polar_twice": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_thetalim_valid_invalid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_no_data": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_spines": {
        "test_spine_nonlinear_data_positions": [
            {
                "type": "func",
                "args": {
                    "fig_test": "plt.figure",
                    "fig_ref": "plt.figure"
                }
            }
        ],
        "test_spines_capstyle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_spines_data_positions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_spines_axes_positions": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_label_without_ticks": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_backend_cairo": {
        "test_patch_alpha_coloring": [
            {
                "type": "func",
                "args": {
                    "fig_test": "mpatches.AxesPatch",
                    "fig_ref": "mpatches.AxesPatch"
                }
            }
        ]
    },
    "matplotlib.tests.test_type1font": {
        "test_Type1Font": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.tests.test_axisartist_grid_helper_curvelinear": {
        "test_axis_direction": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_polar_box": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_custom_transform": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.tests.test_axes_grid1": {
        "test_image_grid": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_hbox_divider": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_gettightbbox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axes_locatable_position": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_anchored_direction_arrows_many_args": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_anchored_direction_arrows": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_zooming_with_inverted_axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_inset_axes_complete": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_divider_append_axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_twin_axes_empty_and_removed": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_picking_callbacks_overlap": [
            {
                "type": "func",
                "args": {
                    "big_on_axes": "str",
                    "small_on_axes": "str",
                    "click_on": "str"
                }
            }
        ],
        "test_fill_facecolor": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_inset_axes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_inset_locator": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_axesgrid_colorbar_log_smoketest": [
            {
                "type": "func",
                "args": {
                    "legacy_colorbar": "bool"
                }
            }
        ]
    },
    "matplotlib.tests.test_bbox_tight": {
        "test_bbox_inches_tight_raster": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_tight_pcolorfast": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_only_on_non_finite_bbox": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_inches_tight_clipping": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_inches_tight_suptile_legend": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_bbox_inches_tight": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_sankey": {
        "test_label": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_sankey": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.tests.test_axisartist_clip_path": {
        "test_clip_path": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.tests.test_axisartist_axis_artist": {
        "test_axis_artist": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_ticklabels": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_labelbase": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_ticks": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_cycles": {
        "test_invalid_input_forms": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_cycle_reset": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_valid_input_forms": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_property_collision_fill": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_property_collision_plot": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fillcycle_ignore": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_fillcycle_basic": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_linestylecycle_basic": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_cycle_kwargs_arrays_iterators": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_marker_cycle": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_colorcycle_basic": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_ttconv": {
        "test_truetype_conversion": [
            {
                "type": "func",
                "args": {
                    "recwarn": "str"
                }
            }
        ]
    },
    "matplotlib.tests.test_backend_tk": {
        "test_blit": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_container": {
        "test_errorbar_remove": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_stem_remove": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "matplotlib.tests.test_png": {
        "test_pngsuite": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_truncated_buffer": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_truncated_file": [
            {
                "type": "func",
                "args": {
                    "tmpdir": "Path"
                }
            }
        ]
    },
    "matplotlib.tests.test_agg_filter": {
        "test_agg_filter_alpha": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "mpl_toolkits.axes_grid.parasite_axes": {
        "ParasiteAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ParasiteAxesAuxTrans": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HostAxes": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SubplotHost": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    }
}