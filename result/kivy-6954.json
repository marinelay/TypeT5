{
    "uix.floatlayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "FloatLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "FloatLayout.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "FloatLayout.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "index": "int",
                    "canvas": "Canvas"
                }
            }
        ],
        "FloatLayout.do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "int",
                    "kwargs": "int"
                }
            }
        ]
    },
    "uix.recyclelayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "RecycleLayout.default_size": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleLayout.key_size": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RecycleLayout.default_size_hint": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleLayout.key_size_hint": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RecycleLayout.default_size_hint_min": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleLayout.key_size_hint_min": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RecycleLayout.default_size_hint_max": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleLayout.key_size_hint_max": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RecycleLayout.default_pos_hint": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleLayout.key_pos_hint": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RecycleLayout.initial_size": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleLayout.view_opts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RecycleLayout._size_needs_update": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RecycleLayout._changed_views": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RecycleLayout.view_indices": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RecycleLayout._updated_views": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RecycleLayout._trigger_layout": [
            {
                "type": "attr",
                "anno": "Callable[[], None]"
            }
        ],
        "RecycleLayout.do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "int"
                }
            }
        ],
        "RecycleLayout.attach_recycleview": [
            {
                "type": "method",
                "args": {
                    "rv": "RecycleLayout"
                }
            }
        ],
        "RecycleLayout.detach_recycleview": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleLayout.refresh_view_layout": [
            {
                "type": "method",
                "args": {
                    "index": "int",
                    "layout": "dict",
                    "view": "RecycleDataViewBehavior",
                    "viewport": "int"
                }
            }
        ],
        "RecycleLayout.compute_layout": [
            {
                "type": "method",
                "args": {
                    "data": "list",
                    "flags": "list"
                }
            }
        ],
        "RecycleLayout._catch_layout_trigger": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "object"
                }
            }
        ],
        "RecycleLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "RecycleLayout.clear_layout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleLayout.remove_views": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleLayout.remove_view": [
            {
                "type": "method",
                "args": {
                    "view": "object",
                    "index": "int"
                }
            }
        ],
        "RecycleLayout.set_visible_views": [
            {
                "type": "method",
                "args": {
                    "indices": "dict",
                    "data": "dict",
                    "viewport": "dict"
                }
            }
        ],
        "RecycleLayout.compute_sizes_from_data": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "flags": "dict"
                }
            }
        ]
    },
    "uix.pagelayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "PageLayout.page": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "PageLayout.border": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "PageLayout.swipe_threshold": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "PageLayout.anim_kwargs": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "b": [
            {
                "type": "var",
                "anno": "Button"
            }
        ],
        "PageLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "pl": [
            {
                "type": "var",
                "anno": "Layout"
            }
        ],
        "PageLayout.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "PageLayout.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "MotionEvent"
                }
            }
        ],
        "PageLayout.do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "int"
                }
            }
        ],
        "PageLayout.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.actionbar": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "window_icon": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ActionItem.minimum_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ActionItem.important": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ActionItem.inside_group": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ActionItem.background_normal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionItem.background_down": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionItem.mipmap": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ActionButton.icon": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionPrevious.with_previous": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionPrevious.app_icon": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionPrevious.app_icon_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ActionPrevious.app_icon_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ActionPrevious.color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ActionPrevious.previous_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionPrevious.previous_image_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ActionPrevious.previous_image_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ActionPrevious.title": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionPrevious.markup": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ActionPrevious.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ActionPrevious.on_press": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionPrevious.on_release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionToggleButton.icon": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionSeparator.background_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionGroup.use_separator": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ActionGroup.separator_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionGroup.separator_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ActionGroup.mode": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "ActionGroup.dropdown_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ActionGroup.is_open": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ActionGroup.list_action_item": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ActionGroup._list_overflow_items": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ActionGroup._is_open": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionGroup._dropdown": [
            {
                "type": "attr",
                "anno": "ActionDropDown"
            }
        ],
        "ActionGroup.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ActionOverflow.overflow_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionView.action_previous": [
            {
                "type": "attr",
                "anno": "ActionPrevious"
            }
        ],
        "ActionView.background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ActionView.background_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionView.use_separator": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ActionView.overflow_group": [
            {
                "type": "attr",
                "anno": "ActionOverflow"
            }
        ],
        "ActionView._list_action_items": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ActionView._list_action_group": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ActionView._state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionView.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ActionView.on_action_previous": [
            {
                "type": "method",
                "args": {
                    "instance": "ActionView",
                    "value": "ActionItem"
                }
            }
        ],
        "ActionView.on_use_separator": [
            {
                "type": "method",
                "args": {
                    "instance": "MainWindow",
                    "value": "bool"
                }
            }
        ],
        "ActionBar.action_view": [
            {
                "type": "attr",
                "anno": "ActionView"
            }
        ],
        "ActionBar.background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ActionBar.background_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ActionBar.border": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ActionBar.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "ActionBar._stack_cont_action_view": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ActionBar._emit_previous": [
            {
                "type": "attr",
                "anno": "Callable[[], None]"
            }
        ],
        "float_layout": [
            {
                "type": "var",
                "anno": "FloatLayout"
            }
        ],
        "ActionBar.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ActionOverflow.add_widget": [
            {
                "type": "method",
                "args": {
                    "action_item": "ActionItem",
                    "index": "int"
                }
            }
        ],
        "ActionView.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "ActionGroup.add_widget": [
            {
                "type": "method",
                "args": {
                    "item": "ActionItem"
                }
            }
        ],
        "ActionView.add_widget": [
            {
                "type": "method",
                "args": {
                    "action_item": "ActionItem",
                    "index": "int"
                }
            }
        ],
        "ActionBar.add_widget": [
            {
                "type": "method",
                "args": {
                    "view": "object"
                }
            }
        ],
        "ActionItem.get_pack_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionItem.pack_width": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "ActionGroup.clear_widgets": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionView._clear_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionBar._pop_contextual_action_view": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionBar.on_previous": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ActionGroup.show_group": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionView._layout_random": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionOverflow.show_default_items": [
            {
                "type": "method",
                "args": {
                    "parent": "ActionView"
                }
            }
        ],
        "ActionView._layout_group": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionView._layout_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionView.on_width": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "args": "str"
                }
            }
        ],
        "ActionGroup._toggle_dropdown": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "ActionGroup.on_is_open": [
            {
                "type": "method",
                "args": {
                    "instance": "ActionItem",
                    "value": "bool"
                }
            }
        ]
    },
    "uix.boxlayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "BoxLayout.spacing": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "BoxLayout.padding": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "BoxLayout.orientation": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "BoxLayout.minimum_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "BoxLayout.minimum_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "BoxLayout.minimum_size": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "BoxLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "BoxLayout.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "BoxLayout.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "index": "int",
                    "canvas": "Canvas"
                }
            }
        ],
        "BoxLayout._iterate_layout": [
            {
                "type": "method",
                "args": {
                    "sizes": "list"
                }
            }
        ],
        "BoxLayout.do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "int"
                }
            }
        ]
    },
    "uix.rst": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "VideoDirective.has_content": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VideoDirective.required_arguments": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VideoDirective.optional_arguments": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VideoDirective.final_argument_whitespace": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VideoDirective.option_spec": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "generic_docroles": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "generic": [
            {
                "type": "var",
                "anno": "roles.Role"
            }
        ],
        "role": [
            {
                "type": "var",
                "anno": "roles.Role"
            }
        ],
        "RstDocument.source": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RstDocument.source_encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RstDocument.source_error": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RstDocument.text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RstDocument.document_root": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RstDocument.base_font_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "RstDocument.show_errors": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "RstDocument.colors": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RstDocument.title": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RstDocument.toctrees": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RstDocument.underline_color": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RstDocument.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstDocument.scatter": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstDocument.anchors_widgets": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "RstDocument.refs_assoc": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "RstDocument._trigger_load": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "RstDocument._parser": [
            {
                "type": "attr",
                "anno": "rst.Parser"
            }
        ],
        "RstDocument._settings": [
            {
                "type": "attr",
                "anno": "frontend.OptionParser"
            }
        ],
        "RstDocument.on_text": [
            {
                "type": "method",
                "args": {
                    "instance": "RstDocument",
                    "value": "str"
                }
            }
        ],
        "RstDocument.resolve_path": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "RstTitle.section": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "RstTitle.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstParagraph.mx": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "RstParagraph.my": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "RstParagraph.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstTerm.text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RstTerm.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstBlockQuote.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstLiteralBlock.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstListItem.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstListBullet.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstWarning.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstNote.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstDefinitionList.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstDefinition.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstFieldName.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstFootName.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RstDefinitionSpace.document": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "_ToctreeVisitor.toctree": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_ToctreeVisitor.current": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "_ToctreeVisitor.queue": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_ToctreeVisitor.text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_ToctreeVisitor.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "_Visitor.root": [
            {
                "type": "attr",
                "anno": "RstDocument"
            }
        ],
        "_Visitor.title": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_Visitor.current_list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_Visitor.current": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "_Visitor.idx_list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_Visitor.text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_Visitor.text_have_anchor": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_Visitor.section": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_Visitor.do_strip_text": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_Visitor.substitution": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_Visitor.foot_refblock": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_Visitor.footnotes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_Visitor.footlist": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_Visitor.__init__": [
            {
                "type": "method",
                "args": {
                    "root": "RstDocument",
                    "largs": "str"
                }
            }
        ],
        "_Visitor.doc_index": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RstDocument._set_bgc": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "RstDocument._get_bgc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RstDocument.background_color": [
            {
                "type": "attr",
                "anno": "aliasProperty"
            }
        ],
        "_ToctreeVisitor.pop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Visitor.pop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ToctreeVisitor.dispatch_departure": [
            {
                "type": "method",
                "args": {
                    "node": "RstNode"
                }
            }
        ],
        "_Visitor.brute_refs": [
            {
                "type": "method",
                "args": {
                    "node": "RstDocument"
                }
            }
        ],
        "_Visitor.push": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "_ToctreeVisitor.push": [
            {
                "type": "method",
                "args": {
                    "tree": "RstNode"
                }
            }
        ],
        "_ToctreeVisitor.dispatch_visit": [
            {
                "type": "method",
                "args": {
                    "node": "object"
                }
            }
        ],
        "RstDocument.add_anchors": [
            {
                "type": "method",
                "args": {
                    "node": "Widget"
                }
            }
        ],
        "_Visitor.colorize": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "name": "str"
                }
            }
        ],
        "VideoDirective.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RstDocument.preload": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "RstDocument._load_from_source": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RstDocument.on_source": [
            {
                "type": "method",
                "args": {
                    "instance": "RstDocument",
                    "value": "str"
                }
            }
        ],
        "RstDocument._load_from_text": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "RstDocument.render": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RstDocument.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "RstDocument.goto": [
            {
                "type": "method",
                "args": {
                    "ref": "str",
                    "largs": "str"
                }
            }
        ],
        "RstDocument.on_ref_press": [
            {
                "type": "method",
                "args": {
                    "node": "RstDocument",
                    "ref": "str"
                }
            }
        ],
        "_Visitor.set_text": [
            {
                "type": "method",
                "args": {
                    "node": "RstNode",
                    "parent": "str"
                }
            }
        ],
        "_Visitor.dispatch_departure": [
            {
                "type": "method",
                "args": {
                    "node": "RstNode"
                }
            }
        ],
        "_Visitor.dispatch_visit": [
            {
                "type": "method",
                "args": {
                    "node": "RstDocument"
                }
            }
        ]
    },
    "uix.widget": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "_widget_destructors": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "_widget_destructor": [
            {
                "type": "func",
                "args": {
                    "uid": "int",
                    "r": "int"
                }
            }
        ],
        "WidgetMetaclass.__init__": [
            {
                "type": "method",
                "args": {
                    "mcs": "type",
                    "name": "str",
                    "bases": "tuple",
                    "attrs": "dict"
                }
            }
        ],
        "WidgetBase": [
            {
                "type": "var",
                "anno": "WidgetMetaclass"
            }
        ],
        "Widget.__metaclass__": [
            {
                "type": "attr",
                "anno": "WidgetMetaclass"
            }
        ],
        "Widget.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Widget._proxy_ref": [
            {
                "type": "attr",
                "anno": "WeakProxy"
            }
        ],
        "Widget._context": [
            {
                "type": "attr",
                "anno": "Context"
            }
        ],
        "Widget._disabled_value": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Widget._disabled_count": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Widget.canvas": [
            {
                "type": "attr",
                "anno": "Canvas"
            }
        ],
        "Widget.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.apply_class_lang_rules": [
            {
                "type": "method",
                "args": {
                    "root": "Widget",
                    "ignored_consts": "set[str]",
                    "rule_children": "list[CodeType]"
                }
            }
        ],
        "Widget.on_kv_post": [
            {
                "type": "method",
                "args": {
                    "base_widget": "Widget"
                }
            }
        ],
        "Widget.x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.to_local": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty",
                    "relative": "bool"
                }
            }
        ],
        "Widget.to_parent": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty",
                    "relative": "bool"
                }
            }
        ],
        "Widget.width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.pos": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Widget.size": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Widget.get_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.set_right": [
            {
                "type": "method",
                "args": {
                    "value": "NumericProperty"
                }
            }
        ],
        "Widget.right": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Widget.get_top": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.set_top": [
            {
                "type": "method",
                "args": {
                    "value": "NumericProperty"
                }
            }
        ],
        "Widget.top": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Widget.collide_point": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty"
                }
            }
        ],
        "Widget.get_center_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.set_center_x": [
            {
                "type": "method",
                "args": {
                    "value": "NumericProperty"
                }
            }
        ],
        "Widget.center_x": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Widget.get_center_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.set_center_y": [
            {
                "type": "method",
                "args": {
                    "value": "NumericProperty"
                }
            }
        ],
        "Widget.center_y": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Widget.center": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Widget.cls": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Widget.children": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Widget.parent": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Widget.size_hint_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.size_hint_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.size_hint": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Widget.pos_hint": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Widget.size_hint_min_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.size_hint_min_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.size_hint_min": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Widget.size_hint_max_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.size_hint_max_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.size_hint_max": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Widget.ids": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "Widget.opacity": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Widget.on_opacity": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "NumericProperty"
                }
            }
        ],
        "Widget.get_disabled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.to_widget": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty",
                    "relative": "bool"
                }
            }
        ],
        "Widget.to_window": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty",
                    "initial": "bool",
                    "relative": "bool"
                }
            }
        ],
        "Widget.get_root_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.get_parent_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Widget.proxy_ref": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Widget._walk_reverse": [
            {
                "type": "method",
                "args": {
                    "loopback": "bool",
                    "go_up": "bool"
                }
            }
        ],
        "Widget.walk_reverse": [
            {
                "type": "method",
                "args": {
                    "loopback": "bool"
                }
            }
        ],
        "Widget._walk": [
            {
                "type": "method",
                "args": {
                    "restrict": "bool",
                    "loopback": "bool",
                    "index": "int"
                }
            }
        ],
        "Widget.walk": [
            {
                "type": "method",
                "args": {
                    "restrict": "bool",
                    "loopback": "bool"
                }
            }
        ],
        "Widget.dec_disabled": [
            {
                "type": "method",
                "args": {
                    "count": "int"
                }
            }
        ],
        "Widget.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "Widget.clear_widgets": [
            {
                "type": "method",
                "args": {
                    "children": "ListProperty"
                }
            }
        ],
        "Widget.inc_disabled": [
            {
                "type": "method",
                "args": {
                    "count": "int"
                }
            }
        ],
        "Widget.set_disabled": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "Widget.disabled": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Widget.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Widget.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Widget.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "index": "int",
                    "canvas": "Canvas"
                }
            }
        ],
        "Widget._apply_transform": [
            {
                "type": "method",
                "args": {
                    "m": "Matrix",
                    "pos": "tuple[int, int]"
                }
            }
        ],
        "Widget.get_window_matrix": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Widget.collide_widget": [
            {
                "type": "method",
                "args": {
                    "wid": "Widget"
                }
            }
        ],
        "Widget.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Widget.export_as_image": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Widget.export_to_png": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "uix.codeinput": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Cache_get": [
            {
                "type": "var",
                "anno": "Cache.get"
            }
        ],
        "Cache_append": [
            {
                "type": "var",
                "anno": "Cache.append"
            }
        ],
        "CodeInput.lexer": [
            {
                "type": "attr",
                "anno": "KivyLexer"
            }
        ],
        "CodeInput.style_name": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "CodeInput.style": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "CodeInput.formatter": [
            {
                "type": "attr",
                "anno": "BBCodeFormatter"
            }
        ],
        "CodeInput.text_color": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CodeInput._label_cached": [
            {
                "type": "attr",
                "anno": "Label"
            }
        ],
        "CodeInput.use_text_color": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CodeInput._line_options": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CodeInput.foreground_color": [
            {
                "type": "attr",
                "anno": "tuple[float, float, float]"
            }
        ],
        "CodeInput.background_color": [
            {
                "type": "attr",
                "anno": "tuple[float, float, float]"
            }
        ],
        "CodeInput._get_bbcode": [
            {
                "type": "method",
                "args": {
                    "ntext": "str"
                }
            }
        ],
        "CodeInput._get_line_options": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CodeInput.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "CodeInputTest.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CodeInput.on_style": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "CodeInput._create_line_label": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "hint": "bool"
                }
            }
        ],
        "CodeInput._get_text_width": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "tab_width": "int",
                    "_label_cached": "Label"
                }
            }
        ],
        "CodeInput._cursor_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CodeInput.on_foreground_color": [
            {
                "type": "method",
                "args": {
                    "instance": "TextInput",
                    "text_color": "str"
                }
            }
        ],
        "CodeInput.on_lexer": [
            {
                "type": "method",
                "args": {
                    "instance": "KivyLexer",
                    "value": "str"
                }
            }
        ],
        "CodeInput.on_style_name": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ]
    },
    "uix.modalview": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ModalView.auto_dismiss": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ModalView.attach_to": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ModalView.background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ModalView.background": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ModalView.border": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ModalView.overlay_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ModalView._anim_alpha": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ModalView._anim_duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ModalView._window": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ModalView._touch_started_inside": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ModalView.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "ModalView._parent": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ModalView.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ModalView.center": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ModalView.on_pre_open": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModalView.on_open": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModalView.on_pre_dismiss": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModalView.on_dismiss": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "content": [
            {
                "type": "var",
                "anno": "GridLayout"
            }
        ],
        "view": [
            {
                "type": "var",
                "anno": "ModalView"
            }
        ],
        "layout": [
            {
                "type": "var",
                "anno": "GridLayout"
            }
        ],
        "btn": [
            {
                "type": "var",
                "anno": "Button"
            }
        ],
        "ModalView._search_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModalView._real_remove_widget": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModalView.on__anim_alpha": [
            {
                "type": "method",
                "args": {
                    "instance": "Dialog",
                    "value": "int"
                }
            }
        ],
        "ModalView.dismiss": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "object"
                }
            }
        ],
        "ModalView._handle_keyboard": [
            {
                "type": "method",
                "args": {
                    "window": "Window",
                    "key": "int",
                    "largs": "str"
                }
            }
        ],
        "ModalView.open": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "object"
                }
            }
        ],
        "ModalView._align_center": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "ModalView.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ModalView.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "open_view": [
            {
                "type": "func",
                "args": {
                    "btn": "Button"
                }
            }
        ],
        "ModalView.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.stencilview": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ]
    },
    "uix.label": {
        "__all__": [
            {
                "type": "var",
                "anno": "Tuple[str, ...]"
            }
        ],
        "Label.__events__": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "Label._font_properties": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Label._trigger_texture": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "Label._label": [
            {
                "type": "attr",
                "anno": "Union[CoreMarkupLabel, CoreLabel]"
            }
        ],
        "Label.texture": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Label.texture_size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Label.is_shortened": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label.refs": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "Label.anchors": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "Label.on_ref_press": [
            {
                "type": "method",
                "args": {
                    "ref": "str"
                }
            }
        ],
        "Label.disabled_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Label.text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Label.text_size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Label.base_direction": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Label.text_language": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Label.font_context": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Label.font_family": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Label.font_name": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Label.font_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Label.font_features": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Label.line_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Label.bold": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Label.italic": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label.underline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Label.strikethrough": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label.padding_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Label.padding_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Label.padding": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Label.halign": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Label.valign": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Label.color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Label.outline_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Label.outline_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Label.disabled_outline_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Label.mipmap": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label.shorten": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label.shorten_from": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Label.split_str": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Label.ellipsis_options": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "Label.unicode_errors": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Label.markup": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label.max_lines": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Label.strip": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label.font_hinting": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Label.font_kerning": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label.font_blended": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Label._create_label": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Label.texture_update": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "Label._trigger_texture_update": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "source": "bool",
                    "value": "object"
                }
            }
        ],
        "Label.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Label.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.tabbedpanel": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "TabbedPanelHeader.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TabbedPanelItem.content": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "TabbedPanelStrip.tabbed_panel": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "StripLayout.border": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "StripLayout.background_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TabbedPanel.background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TabbedPanel.border": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TabbedPanel.background_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TabbedPanel.background_disabled_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TabbedPanel.strip_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TabbedPanel.strip_border": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TabbedPanel._current_tab": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TabbedPanel.get_current_tab": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TabbedPanel.current_tab": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TabbedPanel.tab_pos": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "TabbedPanel.tab_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TabbedPanel.tab_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TabbedPanel.do_default_tab": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TabbedPanel.default_tab_text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TabbedPanel.default_tab_cls": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TabbedPanel.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TabbedPanel._default_tab": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TabbedPanel.get_def_tab": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TabbedPanel._original_tab": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TabbedPanel._update_top_ev": [
            {
                "type": "attr",
                "anno": "Clock.Event"
            }
        ],
        "TabbedPanel._update_tab_ev": [
            {
                "type": "attr",
                "anno": "Clock.Event"
            }
        ],
        "TabbedPanel._update_tabs_ev": [
            {
                "type": "attr",
                "anno": "Clock.Event"
            }
        ],
        "TabbedPanel._childrens": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TabbedPanel._tab_layout": [
            {
                "type": "attr",
                "anno": "StripLayout"
            }
        ],
        "TabbedPanel.rows": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TabbedPanel._tab_strip": [
            {
                "type": "attr",
                "anno": "TabbedPanelStrip"
            }
        ],
        "TabbedPanel._partial_update_scrollview": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "TabbedPanel.cols": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TabbedPanel.on_strip_image": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "StringProperty"
                }
            }
        ],
        "TabbedPanel.on_strip_border": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "ColorProperty"
                }
            }
        ],
        "TabbedPanel.get_tab_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TabbedPanel.tab_list": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TabbedPanelHeader.on_release": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TabbedPanel.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "TabbedPanel.switch_to": [
            {
                "type": "method",
                "args": {
                    "header": "TabbedPanelHeader",
                    "do_scroll": "bool"
                }
            }
        ],
        "TabbedPanel._switch_to_first_tab": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TabbedPanel.set_def_tab": [
            {
                "type": "method",
                "args": {
                    "new_tab": "ObjectProperty"
                }
            }
        ],
        "TabbedPanel.default_tab": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TabbedPanel._load_default_tab_content": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "TabbedPanel.set_def_tab_content": [
            {
                "type": "method",
                "args": {
                    "l": "Widget"
                }
            }
        ],
        "TabbedPanel.get_def_tab_content": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TabbedPanel.default_tab_content": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TabbedPanelItem.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget",
                    "index": "int"
                }
            }
        ],
        "TabbedPanel.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget",
                    "index": "int"
                }
            }
        ],
        "TabbedPanel._updt_top": [
            {
                "type": "method",
                "args": {
                    "sctr": "Scatter",
                    "top": "str",
                    "scrl_v_width": "str",
                    "args": "str"
                }
            }
        ],
        "TabbedPanel._update_scrollview": [
            {
                "type": "method",
                "args": {
                    "scrl_v": "ScrollView",
                    "l": "str"
                }
            }
        ],
        "TabbedPanelItem.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "TabbedPanel.clear_widgets": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "TabbedPanel.on_default_tab_text": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "TabbedPanel._update_top": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "TabbedPanel._update_tabs": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TabbedPanel._reposition_tabs": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TabbedPanel._update_tab_width": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TabbedPanel.on_tab_width": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TabbedPanel.on_tab_pos": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TabbedPanel.on_tab_height": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TabbedPanel._setup_default_tab": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TabbedPanel.on_do_default_tab": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "bool"
                }
            }
        ],
        "TabbedPanel.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TabbedPanel.clear_tabs": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TabbedPanelHeader.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.textinput": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Cache_register": [
            {
                "type": "var",
                "anno": "Cache.register"
            }
        ],
        "Cache_append": [
            {
                "type": "var",
                "anno": "Cache.append"
            }
        ],
        "Cache_get": [
            {
                "type": "var",
                "anno": "Cache.get"
            }
        ],
        "Cache_remove": [
            {
                "type": "var",
                "anno": "Cache.remove"
            }
        ],
        "FL_IS_LINEBREAK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FL_IS_WORDBREAK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FL_IS_NEWLINE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Clipboard": [
            {
                "type": "var",
                "anno": "Clipboard"
            }
        ],
        "CutBuffer": [
            {
                "type": "var",
                "anno": "CutBuffer"
            }
        ],
        "MarkupLabel": [
            {
                "type": "var",
                "anno": "MarkupLabel"
            }
        ],
        "_platform": [
            {
                "type": "var",
                "anno": "platform.Platform"
            }
        ],
        "_textinput_list": [
            {
                "type": "var",
                "anno": "ListProperty"
            }
        ],
        "_is_osx": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_is_desktop": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "Selector.window": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Selector.target": [
            {
                "type": "attr",
                "anno": "Image"
            }
        ],
        "Selector.matrix": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "Selector.transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "Selector._touch_diff": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TextInputCutCopyPaste.textinput": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TextInputCutCopyPaste.but_cut": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TextInputCutCopyPaste.but_copy": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TextInputCutCopyPaste.but_paste": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TextInputCutCopyPaste.but_selectall": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TextInputCutCopyPaste.matrix": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TextInputCutCopyPaste._check_parent_ev": [
            {
                "type": "attr",
                "anno": "EventLoop"
            }
        ],
        "TextInputCutCopyPaste.mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TextInputCutCopyPaste.transform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "TextInput.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "TextInput._resolved_base_dir": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "TextInput._update_graphics_ev": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput.is_focusable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._cursor": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._selection": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._selection_finished": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._selection_touch": [
            {
                "type": "attr",
                "anno": "EventLoop.Touch"
            }
        ],
        "TextInput.selection_text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput._selection_from": [
            {
                "type": "attr",
                "anno": "Optional[int]"
            }
        ],
        "TextInput._selection_to": [
            {
                "type": "attr",
                "anno": "Optional[int]"
            }
        ],
        "TextInput._selection_callback": [
            {
                "type": "attr",
                "anno": "Callback"
            }
        ],
        "TextInput._handle_left": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "TextInput._handle_right": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "TextInput._handle_middle": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "TextInput._bubble": [
            {
                "type": "attr",
                "anno": "Bubble"
            }
        ],
        "TextInput._lines_flags": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._lines_labels": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._lines_rects": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._hint_text_flags": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._hint_text_labels": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._hint_text_rects": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._label_cached": [
            {
                "type": "attr",
                "anno": "Label"
            }
        ],
        "TextInput._line_options": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "TextInput._keyboard_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TextInput._command_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._command": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TextInput._touch_count": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TextInput._ctrl_l": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._ctrl_r": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._alt_l": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._alt_r": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._refresh_text_from_property_ev": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput._long_touch_ev": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput._do_blink_cursor_ev": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput._refresh_line_options_ev": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput._visible_lines_range": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TextInput.interesting_keys": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TextInput._trigger_position_handles": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput._trigger_show_handles": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput._trigger_cursor_reset": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput._trigger_update_cutbuffer": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TextInput.on_text_validate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.re_indent": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "TextInput._redo": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._undo": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput.reset_undo": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._re_whitespace": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "TextInput.scroll_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TextInput.scroll_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TextInput._long_touch_pos": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "TextInput._editable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._ensure_clipboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._cursor_blink": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.line_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TextInput._draw_selection": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TextInput._tokenize": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "TextInput.focus": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._lines": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._insert_lines": [
            {
                "type": "method",
                "args": {
                    "start": "int",
                    "finish": "int",
                    "len_lines": "bool",
                    "_lines_flags": "ListProperty",
                    "_lines": "ListProperty",
                    "_lines_labels": "ListProperty",
                    "_line_rects": "ListProperty"
                }
            }
        ],
        "TextInput._expand_rows": [
            {
                "type": "method",
                "args": {
                    "rfrom": "int",
                    "rto": "int"
                }
            }
        ],
        "TextInput._hint_text_lines": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TextInput._insert_int_pat": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "TextInput._insert_float_pat": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "TextInput.readonly": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.text_validate_unfocus": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.multiline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.password": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.password_mask": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.keyboard_suggestions": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TextInput.cursor_blink": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._get_cursor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._get_cursor_col": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.cursor_col": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput._get_cursor_row": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.cursor_row": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput.cursor_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TextInput.cursor_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TextInput.tab_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TextInput.padding_x": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "TextInput.padding_y": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "TextInput.padding": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "TextInput.on_padding_y": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "VariableListProperty"
                }
            }
        ],
        "TextInput.on_padding_x": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "VariableListProperty"
                }
            }
        ],
        "TextInput.halign": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "TextInput.selection_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TextInput.border": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TextInput.background_normal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.background_disabled_normal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.background_active": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TextInput.foreground_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TextInput.disabled_foreground_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TextInput.use_bubble": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TextInput.use_handles": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.suggestion_text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.get_sel_from": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.selection_from": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput.get_sel_to": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.selection_to": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput.on_selection_text": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "bool"
                }
            }
        ],
        "TextInput.font_name": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.font_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TextInput.font_context": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.font_family": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.base_direction": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "TextInput.text_language": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput._get_line_options": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._hint_text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput._get_hint_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.hint_text_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TextInput.auto_indent": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.replace_crlf": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.allow_copy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput.line_spacing": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TextInput._get_min_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.minimum_height": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput.input_filter": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TextInput.handle_image_middle": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.handle_image_left": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.handle_image_right": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TextInput.write_tab": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TextInput._update_cutbuffer": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "TextInputCutCopyPaste.on_textinput": [
            {
                "type": "method",
                "args": {
                    "instance": "TextInput",
                    "value": "TextInput"
                }
            }
        ],
        "TextInput.copy": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "TextInput.on_handle_image_right": [
            {
                "type": "method",
                "args": {
                    "instance": "Image",
                    "value": "StringProperty"
                }
            }
        ],
        "TextInput.on_handle_image_left": [
            {
                "type": "method",
                "args": {
                    "instance": "Image",
                    "value": "StringProperty"
                }
            }
        ],
        "TextInput.on_handle_image_middle": [
            {
                "type": "method",
                "args": {
                    "instance": "Image",
                    "value": "StringProperty"
                }
            }
        ],
        "TextInputCutCopyPaste.transform_touch": [
            {
                "type": "method",
                "args": {
                    "touch": "TextInput"
                }
            }
        ],
        "Selector.transform_touch": [
            {
                "type": "method",
                "args": {
                    "touch": "EventLoop.Touch"
                }
            }
        ],
        "TextInput._set_hint_text": [
            {
                "type": "method",
                "args": {
                    "value": "StringProperty"
                }
            }
        ],
        "TextInput.hint_text": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput._reload_remove_observer": [
            {
                "type": "method",
                "args": {
                    "wr": "ref"
                }
            }
        ],
        "TextInput._get_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._set_unredo_delsel": [
            {
                "type": "method",
                "args": {
                    "a": "int",
                    "b": "int",
                    "substring": "str",
                    "from_undo": "bool"
                }
            }
        ],
        "TextInput._set_undo_redo_bkspc": [
            {
                "type": "method",
                "args": {
                    "ol_index": "int",
                    "new_index": "int",
                    "substring": "str",
                    "from_undo": "bool"
                }
            }
        ],
        "TextInput._set_unredo_insert": [
            {
                "type": "method",
                "args": {
                    "ci": "int",
                    "sci": "int",
                    "substring": "str",
                    "from_undo": "bool"
                }
            }
        ],
        "TextInput._get_row_width": [
            {
                "type": "method",
                "args": {
                    "row": "int"
                }
            }
        ],
        "TextInputCutCopyPaste.update_transform": [
            {
                "type": "method",
                "args": {
                    "cb": "Callback"
                }
            }
        ],
        "Selector.update_transform": [
            {
                "type": "method",
                "args": {
                    "cb": "Callback"
                }
            }
        ],
        "Selector.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TextInput._hide_handles": [
            {
                "type": "method",
                "args": {
                    "win": "EventLoop"
                }
            }
        ],
        "TextInput._get_text_width": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "tab_width": "int",
                    "_label_cached": "Label"
                }
            }
        ],
        "TextInput._split_smart": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "TextInput._get_line_from_cursor": [
            {
                "type": "method",
                "args": {
                    "start": "int",
                    "new_text": "str"
                }
            }
        ],
        "TextInput.get_cursor_from_xy": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "TextInput.cursor_offset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._get_cursor_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.cursor_pos": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput._get_cursor_visual_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._cursor_visual_pos": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput._get_cursor_visual_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._cursor_visual_height": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput._trigger_update_graphics": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TextInput.on_cursor": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "str"
                }
            }
        ],
        "TextInput._trigger_refresh_text": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TextInput._set_cursor": [
            {
                "type": "method",
                "args": {
                    "pos": "ListProperty"
                }
            }
        ],
        "TextInput.cursor": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput._delete_line": [
            {
                "type": "method",
                "args": {
                    "idx": "int"
                }
            }
        ],
        "TextInput.cursor_index": [
            {
                "type": "method",
                "args": {
                    "cursor": "tuple[int, int]"
                }
            }
        ],
        "TextInput._refresh_text": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "largs": "str"
                }
            }
        ],
        "TextInput._set_text": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "TextInput.text": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TextInput._create_line_label": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "hint": "bool"
                }
            }
        ],
        "TextInput._refresh_hint_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.on__hint_text": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "str"
                }
            }
        ],
        "TextInput._set_line_text": [
            {
                "type": "method",
                "args": {
                    "line_num": "int",
                    "text": "str"
                }
            }
        ],
        "TextInput.get_cursor_from_index": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "TextInput._refresh_text_from_property": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TextInput._refresh_text_from_trigger": [
            {
                "type": "method",
                "args": {
                    "dt": "float",
                    "largs": "str"
                }
            }
        ],
        "TextInput._refresh_line_options": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TextInput.cancel_selection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.delete_selection": [
            {
                "type": "method",
                "args": {
                    "from_undo": "bool"
                }
            }
        ],
        "TextInput._cut": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "TextInput.cut": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._expand_range": [
            {
                "type": "method",
                "args": {
                    "ifrom": "int",
                    "ito": "int"
                }
            }
        ],
        "TextInput.do_backspace": [
            {
                "type": "method",
                "args": {
                    "from_undo": "bool",
                    "mode": "str"
                }
            }
        ],
        "TextInput._auto_indent": [
            {
                "type": "method",
                "args": {
                    "substring": "str"
                }
            }
        ],
        "TextInput.insert_text": [
            {
                "type": "method",
                "args": {
                    "substring": "str",
                    "from_undo": "bool"
                }
            }
        ],
        "TextInput.keyboard_on_textinput": [
            {
                "type": "method",
                "args": {
                    "window": "Widget",
                    "text": "str"
                }
            }
        ],
        "TextInput.paste": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.on_size": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "int"
                }
            }
        ],
        "TextInput._update_text_options": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "_textinput_clear_cache": [
            {
                "type": "func",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TextInput._trigger_refresh_line_options": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TextInput._reset_cursor_blink": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "TextInput.on_cursor_blink": [
            {
                "type": "method",
                "args": {
                    "instance": "TextInput",
                    "value": "str"
                }
            }
        ],
        "TextInput._do_blink_cursor": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "TextInput._move_cursor_word_right": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "TextInput._move_cursor_word_left": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "TextInputCutCopyPaste.hide": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._hide_cut_copy_paste": [
            {
                "type": "method",
                "args": {
                    "win": "EventLoop"
                }
            }
        ],
        "TextInput._on_textinput_focused": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "bool",
                    "largs": "str"
                }
            }
        ],
        "TextInput._handle_pressed": [
            {
                "type": "method",
                "args": {
                    "instance": "type"
                }
            }
        ],
        "TextInputCutCopyPaste._check_parent": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "TextInputCutCopyPaste.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TextInput._show_cut_copy_paste": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple[int, int]",
                    "win": "EventLoop",
                    "parent_changed": "bool",
                    "mode": "str",
                    "pos_in_window": "bool",
                    "l": "str"
                }
            }
        ],
        "TextInput._handle_released": [
            {
                "type": "method",
                "args": {
                    "instance": "type"
                }
            }
        ],
        "TextInput._show_handles": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "TextInput.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TextInputApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._position_handles": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "object"
                }
            }
        ],
        "TextInput._update_graphics_selection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._update_graphics": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TextInput.on_suggestion_text": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "StringProperty"
                }
            }
        ],
        "TextInput._update_selection": [
            {
                "type": "method",
                "args": {
                    "finished": "bool"
                }
            }
        ],
        "TextInput._key_up": [
            {
                "type": "method",
                "args": {
                    "key": "tuple",
                    "repeat": "bool"
                }
            }
        ],
        "TextInput.keyboard_on_key_up": [
            {
                "type": "method",
                "args": {
                    "window": "Widget",
                    "keycode": "tuple"
                }
            }
        ],
        "TextInput.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "TextInput.select_text": [
            {
                "type": "method",
                "args": {
                    "start": "int",
                    "end": "int"
                }
            }
        ],
        "TextInput.on_triple_tap": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.on_double_tap": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._shift_lines": [
            {
                "type": "method",
                "args": {
                    "direction": "int",
                    "rows": "tuple[int, int, tuple[int, int]]",
                    "old_cursor": "int",
                    "from_undo": "bool"
                }
            }
        ],
        "TextInput.do_cursor_movement": [
            {
                "type": "method",
                "args": {
                    "action": "str",
                    "control": "bool",
                    "alt": "bool"
                }
            }
        ],
        "TextInput._key_down": [
            {
                "type": "method",
                "args": {
                    "key": "tuple[str, str, str, str]",
                    "repeat": "bool"
                }
            }
        ],
        "TextInput.do_undo": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.do_redo": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.select_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput.keyboard_on_key_down": [
            {
                "type": "method",
                "args": {
                    "window": "EventLoop",
                    "keycode": "str",
                    "text": "str",
                    "modifiers": "list"
                }
            }
        ],
        "TextInput.on_quad_touch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInput._handle_move": [
            {
                "type": "method",
                "args": {
                    "instance": "type",
                    "touch": "ObjectProperty"
                }
            }
        ],
        "TextInput.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "TextInput.long_touch": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "TextInputCutCopyPaste.on_parent": [
            {
                "type": "method",
                "args": {
                    "instance": "TextInput",
                    "value": "object"
                }
            }
        ],
        "TextInputCutCopyPaste.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "TextInput"
                }
            }
        ],
        "Selector.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "EventLoop.Touch"
                }
            }
        ],
        "TextInput.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "EventLoop.Touch"
                }
            }
        ],
        "TextInputCutCopyPaste.do": [
            {
                "type": "method",
                "args": {
                    "action": "str"
                }
            }
        ],
        "TextInputCutCopyPaste.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "TextInput"
                }
            }
        ]
    },
    "uix.screenmanager": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Screen.name": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Screen.manager": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Screen.transition_progress": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Screen.transition_state": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Screen.__events__": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Screen.on_pre_enter": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Screen.on_enter": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Screen.on_pre_leave": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Screen.on_leave": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Screen.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TransitionBase.screen_out": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TransitionBase.screen_in": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TransitionBase.duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TransitionBase.manager": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TransitionBase.is_active": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TransitionBase._anim": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TransitionBase.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "TransitionBase.on_progress": [
            {
                "type": "method",
                "args": {
                    "progression": "Animation"
                }
            }
        ],
        "ShaderTransition.fs": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ShaderTransition.vs": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ShaderTransition.clearcolor": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ShaderTransition.fbo_in": [
            {
                "type": "attr",
                "anno": "Fbo"
            }
        ],
        "ShaderTransition.fbo_out": [
            {
                "type": "attr",
                "anno": "Fbo"
            }
        ],
        "ShaderTransition.render_ctx": [
            {
                "type": "attr",
                "anno": "RenderContext"
            }
        ],
        "ShaderTransition.on_progress": [
            {
                "type": "method",
                "args": {
                    "progress": "Animation"
                }
            }
        ],
        "NoTransition.duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "SlideTransition.direction": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "CardTransition.mode": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "SwapTransition.scales": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SwapTransition.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "WipeTransition.WIPE_TRANSITION_FS": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "WipeTransition.fs": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FadeTransition.FADE_TRANSITION_FS": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FadeTransition.fs": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FallOutTransition.duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "FallOutTransition.FALLOUT_TRANSITION_FS": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FallOutTransition.fs": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RiseInTransition.duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "RiseInTransition.RISEIN_TRANSITION_FS": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RiseInTransition.fs": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ScreenManager.current": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ScreenManager.transition": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ScreenManager.screens": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ScreenManager.current_screen": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TestApp.sm": [
            {
                "type": "attr",
                "anno": "ScreenManager"
            }
        ],
        "TestApp.change_view": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "SwapTransition.update_scale": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen",
                    "center": "tuple"
                }
            }
        ],
        "TransitionBase._on_complete": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "TransitionBase._on_progress": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "ShaderTransition._remove_out_canvas": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ShaderTransition.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScreenManager.switch_to": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen",
                    "options": "OptionProperty"
                }
            }
        ],
        "TransitionBase.start": [
            {
                "type": "method",
                "args": {
                    "manager": "ScreenManager"
                }
            }
        ],
        "CardTransition.start": [
            {
                "type": "method",
                "args": {
                    "manager": "ScreenManager"
                }
            }
        ],
        "SwapTransition.start": [
            {
                "type": "method",
                "args": {
                    "manager": "ScreenManager"
                }
            }
        ],
        "TransitionBase.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScreenManager.previous": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScreenManager.__next__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScreenManager.next": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScreenManager.has_screen": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ScreenManager._generate_screen_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScreenManager.get_screen": [
            {
                "type": "method",
                "args": {
                    "name": "StringProperty"
                }
            }
        ],
        "ScreenManager._get_screen_names": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScreenManager.screen_names": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "ScreenManager._update_pos": [
            {
                "type": "method",
                "args": {
                    "instance": "Screen",
                    "value": "int"
                }
            }
        ],
        "ScreenManager.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ScreenManager._screen_name_changed": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen",
                    "name": "str"
                }
            }
        ],
        "ScreenManager.add_widget": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen"
                }
            }
        ],
        "ScreenManager.real_remove_widget": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen",
                    "args": "str"
                }
            }
        ],
        "ScreenManager.remove_widget": [
            {
                "type": "method",
                "args": {
                    "l": "Screen"
                }
            }
        ],
        "TestApp.remove_screen": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "ScreenManager.clear_widgets": [
            {
                "type": "method",
                "args": {
                    "screens": "ListProperty"
                }
            }
        ],
        "TransitionBase.remove_screen": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen"
                }
            }
        ],
        "TransitionBase.on_complete": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ShaderTransition.on_complete": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NoTransition.on_complete": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SlideTransition.on_complete": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SwapTransition.on_complete": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CardTransition.on_progress": [
            {
                "type": "method",
                "args": {
                    "progression": "float"
                }
            }
        ],
        "SlideTransition.on_progress": [
            {
                "type": "method",
                "args": {
                    "progression": "float"
                }
            }
        ],
        "ShaderTransition.make_screen_fbo": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen"
                }
            }
        ],
        "ShaderTransition.add_screen": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen"
                }
            }
        ],
        "TestApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScreenManager.real_add_widget": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen",
                    "args": "str"
                }
            }
        ],
        "SwapTransition.on_progress": [
            {
                "type": "method",
                "args": {
                    "progression": "float"
                }
            }
        ],
        "SwapTransition.add_screen": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen"
                }
            }
        ],
        "ShaderTransition.remove_screen": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen"
                }
            }
        ],
        "TransitionBase.add_screen": [
            {
                "type": "method",
                "args": {
                    "screen": "Screen"
                }
            }
        ],
        "ScreenManager.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScreenManager.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScreenManager.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScreenManager.on_current": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "StringProperty"
                }
            }
        ]
    },
    "uix.video": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Video.state": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Video.play": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Video.eos": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Video.loaded": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Video.position": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Video.duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Video.volume": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Video.options": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Video._video_load_event": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "Video._video": [
            {
                "type": "attr",
                "anno": "CoreVideo"
            }
        ],
        "Video.texture": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VideoApp.v": [
            {
                "type": "attr",
                "anno": "Video"
            }
        ],
        "Video._on_eos": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Video.on_volume": [
            {
                "type": "method",
                "args": {
                    "instance": "Video",
                    "value": "NumericProperty"
                }
            }
        ],
        "VideoApp.replay": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Video.seek": [
            {
                "type": "method",
                "args": {
                    "percent": "float",
                    "precise": "bool"
                }
            }
        ],
        "Video.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Video._do_video_load": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Video._trigger_video_load": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Video.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "VideoApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Video._on_video_frame": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Video._on_load": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Video.on_state": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "str"
                }
            }
        ],
        "Video.on_play": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "str"
                }
            }
        ]
    },
    "uix.accordion": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "AccordionItem.title": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "AccordionItem.title_template": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "AccordionItem.title_args": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "AccordionItem.collapse": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "AccordionItem.collapse_alpha": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "AccordionItem.accordion": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "AccordionItem.background_normal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "AccordionItem.background_disabled_normal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "AccordionItem.background_selected": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "AccordionItem.background_disabled_selected": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "AccordionItem.orientation": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "AccordionItem.min_space": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "AccordionItem.content_size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "AccordionItem.container": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "AccordionItem.container_title": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "AccordionItem._trigger_title": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "AccordionItem._anim_collapse": [
            {
                "type": "attr",
                "anno": "Animation"
            }
        ],
        "Accordion.orientation": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Accordion.anim_duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Accordion.anim_func": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Accordion.min_space": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Accordion._trigger_layout": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "z": [
            {
                "type": "var",
                "anno": "BoxLayout"
            }
        ],
        "btn": [
            {
                "type": "var",
                "anno": "Button"
            }
        ],
        "btn2": [
            {
                "type": "var",
                "anno": "Button"
            }
        ],
        "slider": [
            {
                "type": "var",
                "anno": "Slider"
            }
        ],
        "root": [
            {
                "type": "var",
                "anno": "BoxLayout"
            }
        ],
        "controls": [
            {
                "type": "var",
                "anno": "BoxLayout"
            }
        ],
        "AccordionItem.on_collapse_alpha": [
            {
                "type": "method",
                "args": {
                    "instance": "Accordion",
                    "value": "float"
                }
            }
        ],
        "Accordion.select": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget"
                }
            }
        ],
        "AccordionItem.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Accordion.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "largs": "object"
                }
            }
        ],
        "AccordionItem.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "Accordion._do_layout": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "Accordion.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "acc": [
            {
                "type": "var",
                "anno": "Accordion"
            }
        ],
        "update_min_space": [
            {
                "type": "func",
                "args": {
                    "instance": "Accordion",
                    "value": "NumericProperty"
                }
            }
        ],
        "toggle_layout": [
            {
                "type": "func",
                "args": {
                    "l": "int"
                }
            }
        ],
        "select_2nd_item": [
            {
                "type": "func",
                "args": {
                    "l": "str"
                }
            }
        ],
        "AccordionItem._update_title": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "AccordionItem.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "item": [
            {
                "type": "var",
                "anno": "AccordionItem"
            }
        ],
        "AccordionItem.on_collapse": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "NumericProperty"
                }
            }
        ],
        "AccordionItem.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.camera": {
        "__all__": [
            {
                "type": "var",
                "anno": "List[str]"
            }
        ],
        "Camera.play": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Camera.index": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Camera.resolution": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Camera._camera": [
            {
                "type": "attr",
                "anno": "CoreCamera"
            }
        ],
        "Camera.texture": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Camera.texture_size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Camera._camera_loaded": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Camera.on_play": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "bool"
                }
            }
        ],
        "Camera._on_index": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Camera.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Camera.on_tex": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ]
    },
    "uix.colorpicker": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "distance": [
            {
                "type": "func",
                "args": {
                    "pt1": "tuple",
                    "pt2": "tuple"
                }
            }
        ],
        "polar_to_rect": [
            {
                "type": "func",
                "args": {
                    "origin": "tuple",
                    "r": "float",
                    "theta": "float"
                }
            }
        ],
        "rect_to_polar": [
            {
                "type": "func",
                "args": {
                    "origin": "tuple",
                    "x": "tuple",
                    "y": "tuple"
                }
            }
        ],
        "ColorWheel.r": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ColorWheel.g": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ColorWheel.b": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ColorWheel.a": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ColorWheel.color": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "ColorWheel._origin": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ColorWheel._radius": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ColorWheel._piece_divisions": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ColorWheel._pieces_of_pie": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ColorWheel._inertia_slowdown": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ColorWheel._inertia_cutoff": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ColorWheel._num_touches": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ColorWheel._pinch_flag": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColorWheel._hsv": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ColorWheel.sv_s": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ColorWheel.arcs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ColorWheel.sv_idx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ColorWheel._get_touch_r": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple"
                }
            }
        ],
        "_ColorArc.origin": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "_ColorArc.r_min": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_ColorArc.r_max": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_ColorArc.theta_min": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_ColorArc.theta_max": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_ColorArc.color": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "_ColorArc.color_instr": [
            {
                "type": "attr",
                "anno": "Color"
            }
        ],
        "_ColorArc.mesh": [
            {
                "type": "attr",
                "anno": "Mesh"
            }
        ],
        "_ColorArc.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_ColorArc.get_mesh": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorPicker.font_name": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "ColorPicker.color": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ColorPicker._get_hsv": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorPicker._get_hex": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorPicker.wheel": [
            {
                "type": "attr",
                "anno": "ColorWheel"
            }
        ],
        "ColorPicker._update_clr_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "ColorPicker._update_hex_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "ColorPicker.foreground_color": [
            {
                "type": "attr",
                "anno": "Color"
            }
        ],
        "ColorPicker._updating_clr": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColorPicker._upd_clr_list": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ColorPicker._upd_hex_list": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorPicker.set_color": [
            {
                "type": "method",
                "args": {
                    "color": "tuple"
                }
            }
        ],
        "ColorPicker._set_hex": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "ColorPicker.hex_color": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColorPicker._update_hex": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "ColorPicker._trigger_update_hex": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "ColorPicker._set_hsv": [
            {
                "type": "method",
                "args": {
                    "value": "tuple"
                }
            }
        ],
        "ColorPicker.hsv": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ColorPicker.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ColorPickerApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorPicker._update_clr": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "ColorPicker._trigger_update_clr": [
            {
                "type": "method",
                "args": {
                    "mode": "tuple",
                    "clr_idx": "int",
                    "text": "str"
                }
            }
        ],
        "_ColorArc.__init__": [
            {
                "type": "method",
                "args": {
                    "r_min": "float",
                    "r_max": "float",
                    "theta_min": "float",
                    "theta_max": "float",
                    "color": "tuple",
                    "origin": "tuple",
                    "kwargs": "object"
                }
            }
        ],
        "_ColorArc.change_color": [
            {
                "type": "method",
                "args": {
                    "color": "tuple",
                    "color_delta": "tuple",
                    "sv": "tuple",
                    "a": "float"
                }
            }
        ],
        "ColorWheel.change_alpha": [
            {
                "type": "method",
                "args": {
                    "val": "float"
                }
            }
        ],
        "ColorWheel.recolor_wheel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ColorWheel.inertial_decr_sv_idx": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "ColorWheel.inertial_incr_sv_idx": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "ColorWheel.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ColorWheel.init_wheel": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "ColorWheel.on__radius": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "float"
                }
            }
        ],
        "ColorWheel.on__origin": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "str"
                }
            }
        ],
        "ColorWheel.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ColorWheel.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "MotionEvent"
                }
            }
        ],
        "ColorWheel.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.button": {
        "__all__": [
            {
                "type": "var",
                "anno": "List[str]"
            }
        ],
        "Button.background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Button.background_normal": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Button.background_down": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Button.background_disabled_normal": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Button.background_disabled_down": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Button.border": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ]
    },
    "uix.checkbox": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "CheckBox.state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CheckBox._set_active": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "CheckBox._get_active": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CheckBox.active": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "CheckBox.background_checkbox_normal": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "CheckBox.background_checkbox_down": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "CheckBox.background_checkbox_disabled_normal": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "CheckBox.background_checkbox_disabled_down": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "CheckBox.background_radio_normal": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "CheckBox.background_radio_down": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "CheckBox.background_radio_disabled_normal": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "CheckBox.background_radio_disabled_down": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "CheckBox.color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "x": [
            {
                "type": "var",
                "anno": "GridLayout"
            }
        ],
        "CheckBox._on_state": [
            {
                "type": "method",
                "args": {
                    "instance": "ToggleButtonBehavior",
                    "value": "str"
                }
            }
        ],
        "CheckBox.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "CheckBox.on_group": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ]
    },
    "uix.slider": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Slider.value": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Slider.min": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Slider.max": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Slider.padding": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Slider.orientation": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Slider.range": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Slider.step": [
            {
                "type": "attr",
                "anno": "BoundedNumericProperty"
            }
        ],
        "Slider.background_horizontal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Slider.background_disabled_horizontal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Slider.background_vertical": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Slider.background_disabled_vertical": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Slider.background_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Slider.cursor_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Slider.cursor_disabled_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Slider.cursor_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Slider.cursor_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Slider.cursor_size": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "Slider.border_horizontal": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Slider.border_vertical": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Slider.value_track": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Slider.value_track_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Slider.value_track_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Slider.sensitivity": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Slider.on_min": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Slider.on_max": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Slider.get_norm_value": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slider.set_norm_value": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "Slider.value_normalized": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Slider.set_value_pos": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple"
                }
            }
        ],
        "Slider.get_value_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slider.value_pos": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "SliderApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Slider.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Slider.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "MotionEvent"
                }
            }
        ],
        "Slider.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "EventLoop.Touch"
                }
            }
        ]
    },
    "uix.recycleview": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[Type[RecycleViewBehavior], ...]"
            }
        ],
        "RecycleViewBehavior._view_adapter": [
            {
                "type": "attr",
                "anno": "RecycleDataAdapter"
            }
        ],
        "RecycleViewBehavior._data_model": [
            {
                "type": "attr",
                "anno": "RecycleDataModel"
            }
        ],
        "RecycleViewBehavior._layout_manager": [
            {
                "type": "attr",
                "anno": "RecycleLayoutManagerBehavior"
            }
        ],
        "RecycleViewBehavior._refresh_flags": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RecycleViewBehavior._refresh_trigger": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "RecycleViewBehavior.get_viewport": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleViewBehavior.save_viewport": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleViewBehavior.restore_viewport": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleViewBehavior.refresh_from_viewport": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "RecycleViewBehavior._get_data_model": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleViewBehavior._get_view_adapter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleViewBehavior._get_layout_manager": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleView.save_viewport": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleView.restore_viewport": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleView.layout_manager": [
            {
                "type": "attr",
                "anno": "RecycleLayoutManagerBehavior"
            }
        ],
        "RecycleView._get_viewclass": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleView.viewclass": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "RecycleView._set_viewclass": [
            {
                "type": "method",
                "args": {
                    "value": "object"
                }
            }
        ],
        "RecycleView._get_key_viewclass": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleView.key_viewclass": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "RecycleView._set_key_viewclass": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "RecycleViewBehavior._dispatch_prop_on_source": [
            {
                "type": "method",
                "args": {
                    "prop_name": "str",
                    "largs": "str"
                }
            }
        ],
        "RecycleViewBehavior.refresh_from_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "RecycleViewBehavior.refresh_from_data": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "object"
                }
            }
        ],
        "RecycleViewBehavior._set_view_adapter": [
            {
                "type": "method",
                "args": {
                    "value": "RecycleDataAdapter"
                }
            }
        ],
        "RecycleViewBehavior.view_adapter": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "RecycleViewBehavior._set_layout_manager": [
            {
                "type": "method",
                "args": {
                    "value": "RecycleLayoutManagerBehavior"
                }
            }
        ],
        "RecycleViewBehavior.layout_manager": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "RecycleView.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "largs": "object"
                }
            }
        ],
        "RecycleView._convert_sv_to_lm": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "RecycleView.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "largs": "str"
                }
            }
        ],
        "RecycleView.get_viewport": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleViewBehavior._set_data_model": [
            {
                "type": "method",
                "args": {
                    "value": "RecycleDataModel"
                }
            }
        ],
        "RecycleViewBehavior.data_model": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "RecycleView._get_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleView.data": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "RecycleView._set_data": [
            {
                "type": "method",
                "args": {
                    "value": "bytes"
                }
            }
        ],
        "RecycleView.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "RecycleViewBehavior.refresh_views": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "RecycleViewBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ]
    },
    "uix.recycleview.layout": {
        "LayoutSelectionBehavior.key_selection": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LayoutSelectionBehavior._selectable_nodes": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LayoutSelectionBehavior._nodes_map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LayoutSelectionBehavior.nodes_order_reversed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LayoutSelectionBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "LayoutSelectionBehavior.get_selectable_nodes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutSelectionBehavior.get_index_of_node": [
            {
                "type": "method",
                "args": {
                    "node": "str",
                    "selectable_nodes": "list"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.viewclass": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleLayoutManagerBehavior.key_viewclass": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RecycleLayoutManagerBehavior.recycleview": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleLayoutManagerBehavior.asked_sizes": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "RecycleLayoutManagerBehavior.compute_sizes_from_data": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "flags": "dict"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.compute_layout": [
            {
                "type": "method",
                "args": {
                    "data": "list",
                    "flags": "list"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.compute_visible_views": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "viewport": "dict"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.set_visible_views": [
            {
                "type": "method",
                "args": {
                    "indices": "dict",
                    "data": "dict",
                    "viewport": "dict"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.get_view_index_at": [
            {
                "type": "method",
                "args": {
                    "pos": "int"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.goto_view": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.on_viewclass": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "ObjectProperty"
                }
            }
        ],
        "LayoutSelectionBehavior.apply_selection": [
            {
                "type": "method",
                "args": {
                    "index": "int",
                    "view": "RecycleDataViewBehavior",
                    "is_selected": "bool"
                }
            }
        ],
        "LayoutSelectionBehavior.goto_node": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "last_node": "str",
                    "last_node_idx": "int"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.attach_recycleview": [
            {
                "type": "method",
                "args": {
                    "rv": "RecycleLayoutManagerBehavior"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.clear_layout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleLayoutManagerBehavior.detach_recycleview": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleLayoutManagerBehavior.remove_view": [
            {
                "type": "method",
                "args": {
                    "view": "object",
                    "index": "int"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.remove_views": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LayoutSelectionBehavior.deselect_node": [
            {
                "type": "method",
                "args": {
                    "node": "str"
                }
            }
        ],
        "LayoutSelectionBehavior.select_node": [
            {
                "type": "method",
                "args": {
                    "node": "str"
                }
            }
        ],
        "LayoutSelectionBehavior.refresh_view_layout": [
            {
                "type": "method",
                "args": {
                    "index": "int",
                    "layout": "dict",
                    "view": "RecycleDataViewBehavior",
                    "viewport": "int"
                }
            }
        ],
        "RecycleLayoutManagerBehavior.refresh_view_layout": [
            {
                "type": "method",
                "args": {
                    "index": "int",
                    "layout": "dict",
                    "view": "RecycleDataViewBehavior",
                    "viewport": "int"
                }
            }
        ],
        "LayoutSelectionBehavior.compute_sizes_from_data": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "flags": "dict"
                }
            }
        ]
    },
    "uix.recycleview.views": {
        "_view_base_cache": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_cached_views": [
            {
                "type": "var",
                "anno": "defaultdict"
            }
        ],
        "_cache_count": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_max_cache_size": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_clean_cache": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "RecycleDataViewBehavior.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecycleDataViewBehavior.width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecycleDataViewBehavior.size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecycleDataViewBehavior.apply_selection": [
            {
                "type": "method",
                "args": {
                    "rv": "RecycleDataAdapter",
                    "index": "int",
                    "is_selected": "bool"
                }
            }
        ],
        "RecycleDataAdapter.recycleview": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleDataAdapter.views": [
            {
                "type": "attr",
                "anno": "defaultdict"
            }
        ],
        "RecycleDataAdapter.dirty_views": [
            {
                "type": "attr",
                "anno": "defaultdict"
            }
        ],
        "RecycleDataAdapter._sizing_attrs": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "RecycleDataViewBehavior.refresh_view_attrs": [
            {
                "type": "method",
                "args": {
                    "rv": "object",
                    "index": "int",
                    "data": "dict"
                }
            }
        ],
        "RecycleDataAdapter.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "RecycleDataAdapter.attach_recycleview": [
            {
                "type": "method",
                "args": {
                    "rv": "RecycleDataViewBehavior"
                }
            }
        ],
        "RecycleDataAdapter.detach_recycleview": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleDataAdapter.refresh_view_attrs": [
            {
                "type": "method",
                "args": {
                    "index": "int",
                    "data_item": "dict",
                    "view": "object"
                }
            }
        ],
        "RecycleDataAdapter.create_view": [
            {
                "type": "method",
                "args": {
                    "index": "int",
                    "data_item": "dict",
                    "viewclass": "object"
                }
            }
        ],
        "RecycleDataAdapter.make_view_dirty": [
            {
                "type": "method",
                "args": {
                    "view": "object",
                    "index": "int"
                }
            }
        ],
        "RecycleDataAdapter.make_views_dirty": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleDataAdapter.get_view": [
            {
                "type": "method",
                "args": {
                    "index": "int",
                    "data_item": "dict",
                    "viewclass": "object"
                }
            }
        ],
        "RecycleDataViewBehavior.refresh_view_layout": [
            {
                "type": "method",
                "args": {
                    "rv": "ObjectProperty",
                    "index": "int",
                    "layout": "dict",
                    "viewport": "int"
                }
            }
        ],
        "RecycleDataAdapter.set_visible_views": [
            {
                "type": "method",
                "args": {
                    "indices": "dict",
                    "data": "dict",
                    "viewclasses": "dict"
                }
            }
        ],
        "RecycleDataAdapter.invalidate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleDataAdapter.get_visible_view": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "RecycleDataAdapter.refresh_view_layout": [
            {
                "type": "method",
                "args": {
                    "index": "int",
                    "layout": "dict",
                    "view": "RecycleDataViewBehavior",
                    "viewport": "int"
                }
            }
        ]
    },
    "uix.recycleview.datamodel": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "RecycleDataModelBehavior.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "RecycleDataModelBehavior.recycleview": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "RecycleDataModelBehavior.on_data_changed": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "RecycleDataModel.data": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "RecycleDataModel._last_len": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecycleDataModel.__getitem__": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "RecycleDataModelBehavior.detach_recycleview": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleDataModelBehavior.attach_recycleview": [
            {
                "type": "method",
                "args": {
                    "rv": "RecycleDataModel"
                }
            }
        ],
        "recondition_slice_assign": [
            {
                "type": "func",
                "args": {
                    "val": "slice",
                    "last_len": "int",
                    "new_len": "int"
                }
            }
        ],
        "RecycleDataModel._on_data_callback": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "object"
                }
            }
        ],
        "RecycleDataModel.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "RecycleDataModel.attach_recycleview": [
            {
                "type": "method",
                "args": {
                    "rv": "RecycleDataModel"
                }
            }
        ],
        "RecycleDataModel.detach_recycleview": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleDataModel.observable_dict": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "uix.popup": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Popup.title": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Popup.title_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Popup.title_align": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Popup.title_font": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Popup.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Popup.title_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Popup.separator_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Popup.separator_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Popup._container": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "content": [
            {
                "type": "var",
                "anno": "GridLayout"
            }
        ],
        "content_cancel": [
            {
                "type": "var",
                "anno": "Button"
            }
        ],
        "popup": [
            {
                "type": "var",
                "anno": "Popup"
            }
        ],
        "layout": [
            {
                "type": "var",
                "anno": "GridLayout"
            }
        ],
        "btn": [
            {
                "type": "var",
                "anno": "Button"
            }
        ],
        "Popup.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Popup.on__container": [
            {
                "type": "method",
                "args": {
                    "instance": "ModalView",
                    "value": "object"
                }
            }
        ],
        "Popup.on_content": [
            {
                "type": "method",
                "args": {
                    "instance": "ModalView",
                    "value": "object"
                }
            }
        ],
        "Popup.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.stacklayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "StackLayout.spacing": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "StackLayout.padding": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "StackLayout.orientation": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "StackLayout.minimum_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "StackLayout.minimum_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "StackLayout.minimum_size": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "StackLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "_compute_size": [
            {
                "type": "func",
                "args": {
                    "c": "StackLayout",
                    "available_size": "int",
                    "idx": "int"
                }
            }
        ],
        "StackLayout.do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ]
    },
    "uix.sandbox": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "sandbox": [
            {
                "type": "func",
                "args": {
                    "f": "Callable"
                }
            }
        ],
        "SandboxExceptionManager.sandbox": [
            {
                "type": "attr",
                "anno": "Sandbox"
            }
        ],
        "SandboxExceptionManager.__init__": [
            {
                "type": "method",
                "args": {
                    "sandbox": "Sandbox"
                }
            }
        ],
        "Sandbox._context": [
            {
                "type": "attr",
                "anno": "Context"
            }
        ],
        "Sandbox._container": [
            {
                "type": "attr",
                "anno": "Optional[SandboxContent]"
            }
        ],
        "Sandbox.main_clock": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "Sandbox.on_context_created": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sandbox.on_exception": [
            {
                "type": "method",
                "args": {
                    "exception": "Exception",
                    "_traceback": "str"
                }
            }
        ],
        "SandboxExceptionManager.handle_exception": [
            {
                "type": "method",
                "args": {
                    "e": "Exception"
                }
            }
        ],
        "Sandbox.on_touch_down": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Sandbox.on_touch_move": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Sandbox.on_touch_up": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Sandbox._clock_sandbox": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "Sandbox._call_draw": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "Sandbox._clock_sandbox_draw": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "b": [
            {
                "type": "var",
                "anno": "Button"
            }
        ],
        "Sandbox.__exit__": [
            {
                "type": "method",
                "args": {
                    "_type": "str",
                    "value": "Exception",
                    "traceback": "str"
                }
            }
        ],
        "Sandbox.add_widget": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "Sandbox.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sandbox.on_pos": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Sandbox.remove_widget": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Sandbox.clear_widgets": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Sandbox.on_size": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Sandbox.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "s": [
            {
                "type": "var",
                "anno": "Sandbox"
            }
        ],
        "TestButton.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "EventLoop.Touch"
                }
            }
        ],
        "TestButton.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.bubble": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Bubble.background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Bubble.border": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Bubble.background_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Bubble.arrow_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Bubble.show_arrow": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Bubble.arrow_pos": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Bubble.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Bubble.orientation": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Bubble.limit_to": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Bubble.border_auto_scale": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Bubble._prev_arrow_pos": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Bubble._arrow_layout": [
            {
                "type": "attr",
                "anno": "BoxLayout"
            }
        ],
        "Bubble._bk_img": [
            {
                "type": "attr",
                "anno": "Image"
            }
        ],
        "Bubble.background_texture": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Bubble._arrow_img": [
            {
                "type": "attr",
                "anno": "Image"
            }
        ],
        "Bubble.on_show_arrow": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "float"
                }
            }
        ],
        "Bubble.x": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Bubble.right": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Bubble.top": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Bubble.y": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Bubble._sctr": [
            {
                "type": "attr",
                "anno": "Scatter"
            }
        ],
        "Bubble.cols": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Bubble.rows": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Bubble.on_background_color": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "Bubble.on_orientation": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "Bubble.on_arrow_image": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "Bubble.on_background_image": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "Bubble.add_widget": [
            {
                "type": "method",
                "args": {
                    "l": "object"
                }
            }
        ],
        "Bubble._update_arrow": [
            {
                "type": "method",
                "args": {
                    "dt": "object"
                }
            }
        ],
        "Bubble.on_parent": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "object"
                }
            }
        ],
        "Bubble.on_pos": [
            {
                "type": "method",
                "args": {
                    "instance": "Scatter",
                    "pos": "int"
                }
            }
        ],
        "Bubble.remove_widget": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "Bubble.clear_widgets": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Bubble.on_arrow_pos": [
            {
                "type": "method",
                "args": {
                    "l": "object"
                }
            }
        ],
        "Bubble.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ]
    },
    "uix.togglebutton": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ]
    },
    "uix.image": {
        "__all__": [
            {
                "type": "var",
                "anno": "Tuple[str, ...]"
            }
        ],
        "Loader": [
            {
                "type": "var",
                "anno": "Loader"
            }
        ],
        "Image.source": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Image.texture": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Image.texture_size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Image.mipmap": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Image.color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "Image.allow_stretch": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Image.keep_ratio": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Image.keep_data": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Image.anim_delay": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Image.anim_loop": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Image.nocache": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Image._coreimage": [
            {
                "type": "attr",
                "anno": "CoreImage"
            }
        ],
        "Image._loops": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AsyncImage.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "AsyncImage._found_source": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "AsyncImage._coreimage": [
            {
                "type": "attr",
                "anno": "CoreImage"
            }
        ],
        "AsyncImage.texture": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "AsyncImage.on_error": [
            {
                "type": "method",
                "args": {
                    "error": "Exception"
                }
            }
        ],
        "AsyncImage.on_load": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "AsyncImage.is_uri": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "AsyncImage.texture_update": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Image.remove_from_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AsyncImage.remove_from_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.on_nocache": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Image.reload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.get_image_ratio": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.image_ratio": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Image.on_texture": [
            {
                "type": "method",
                "args": {
                    "instance": "CoreImage",
                    "value": "CoreImage"
                }
            }
        ],
        "Image.get_norm_image_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.norm_image_size": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "AsyncImage._on_tex_change": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Image._on_tex_change": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Image._clear_core_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AsyncImage._clear_core_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AsyncImage._load_source": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "AsyncImage.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "AsyncImage._on_source_error": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "error": "Exception"
                }
            }
        ],
        "AsyncImage._on_source_load": [
            {
                "type": "method",
                "args": {
                    "value": "object"
                }
            }
        ],
        "Image.texture_update": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Image.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Image.on_anim_delay": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "float"
                }
            }
        ]
    },
    "uix.recycleboxlayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "RecycleBoxLayout._rv_positions": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RecycleBoxLayout.minimum_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecycleBoxLayout.get_view_index_at": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple"
                }
            }
        ],
        "RecycleBoxLayout.compute_visible_views": [
            {
                "type": "method",
                "args": {
                    "data": "list",
                    "viewport": "dict"
                }
            }
        ],
        "RecycleBoxLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "RecycleBoxLayout._update_sizes": [
            {
                "type": "method",
                "args": {
                    "changed": "list"
                }
            }
        ],
        "RecycleBoxLayout.compute_layout": [
            {
                "type": "method",
                "args": {
                    "data": "list",
                    "flags": "list"
                }
            }
        ]
    },
    "uix.scatterlayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ScatterLayout.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ScatterPlaneLayout.collide_point": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "ScatterLayout.add_widget": [
            {
                "type": "method",
                "args": {
                    "l": "object"
                }
            }
        ],
        "ScatterLayout.remove_widget": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "ScatterLayout.clear_widgets": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScatterLayout.update_size": [
            {
                "type": "method",
                "args": {
                    "instance": "Scatter",
                    "size": "int"
                }
            }
        ],
        "ScatterLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kw": "object"
                }
            }
        ]
    },
    "uix.treeview": {
        "TreeViewNode.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TreeViewNode.is_leaf": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TreeViewNode.is_open": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TreeViewNode.is_loaded": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TreeViewNode.is_selected": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TreeViewNode.no_selection": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TreeViewNode.nodes": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TreeViewNode.parent_node": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TreeViewNode.level": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TreeViewNode.color_selected": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TreeViewNode.odd": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TreeViewNode.odd_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TreeViewNode.even_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "TreeView.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "TreeView._trigger_layout": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "TreeView._root": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TreeView._selected_node": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TreeView.on_node_expand": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView.on_node_collapse": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView.select_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView.deselect_node": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "TreeView.minimum_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TreeView.minimum_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TreeView.minimum_size": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "TreeView.indent_level": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TreeView.indent_start": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TreeView.hide_root": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TreeView.get_selected_node": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TreeView.selected_node": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TreeView.get_root": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TreeView.root": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "TreeView.on_root_options": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "dict"
                }
            }
        ],
        "TreeView.iterate_all_nodes": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView.root_options": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TreeView.load_func": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TreeView.iterate_open_nodes": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView.remove_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView.add_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode",
                    "parent": "object"
                }
            }
        ],
        "TreeView._do_node_load": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView._do_initial_load": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "TreeView.on_load_func": [
            {
                "type": "method",
                "args": {
                    "instance": "str",
                    "value": "bool"
                }
            }
        ],
        "TreeView._do_layout_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode",
                    "level": "int",
                    "y": "int"
                }
            }
        ],
        "TreeView.get_node_at_pos": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple[float, float]"
                }
            }
        ],
        "TreeView._do_open_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView._do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "TreeView.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TestApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TreeView.toggle_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode"
                }
            }
        ],
        "TreeView.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.behaviors.knspace": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "KNSpace.parent": [
            {
                "type": "attr",
                "anno": "KNSpaceBehavior"
            }
        ],
        "KNSpace.__has_applied": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "KNSpace.keep_ref": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "KNSpace.__getattribute__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "KNSpaceBehavior._knspace": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "KNSpaceBehavior._knsname": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "KNSpaceBehavior.__last_knspace": [
            {
                "type": "attr",
                "anno": "KNSpace"
            }
        ],
        "KNSpaceBehavior.__callbacks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "KNSpaceBehavior.knspace_key": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "KNSpaceBehavior._get_knsname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "knspace": [
            {
                "type": "var",
                "anno": "KNSpace"
            }
        ],
        "KNSpace.__init__": [
            {
                "type": "method",
                "args": {
                    "parent": "KNSpaceBehavior",
                    "keep_ref": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "KNSpace.fork": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpace.property": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "quiet": "bool"
                }
            }
        ],
        "KNSpaceBehavior.__knspace_clear_callbacks": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "KNSpaceBehavior.__set_parent_knspace": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceBehavior._get_knspace": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceBehavior.knspace": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "KNSpaceBehavior._set_knsname": [
            {
                "type": "method",
                "args": {
                    "value": "StringProperty"
                }
            }
        ],
        "KNSpaceBehavior.knsname": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "KNSpaceBehavior._set_knspace": [
            {
                "type": "method",
                "args": {
                    "value": "KNSpace"
                }
            }
        ],
        "KNSpaceBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "knspace": "AliasProperty",
                    "kwargs": "object"
                }
            }
        ],
        "KNSpace.__setattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "object"
                }
            }
        ]
    },
    "uix.behaviors.compoundselection": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_is_desktop": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "CompoundSelectionBehavior.selected_nodes": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "CompoundSelectionBehavior.touch_multiselect": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "CompoundSelectionBehavior.multiselect": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "CompoundSelectionBehavior.touch_deselect_last": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "CompoundSelectionBehavior.keyboard_select": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "CompoundSelectionBehavior.page_count": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "CompoundSelectionBehavior.up_count": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "CompoundSelectionBehavior.right_count": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "CompoundSelectionBehavior.scroll_count": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "CompoundSelectionBehavior.nodes_order_reversed": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "CompoundSelectionBehavior.text_entry_timeout": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "CompoundSelectionBehavior._anchor": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CompoundSelectionBehavior._anchor_idx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CompoundSelectionBehavior._last_selected_node": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CompoundSelectionBehavior._last_node_idx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CompoundSelectionBehavior._ctrl_down": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CompoundSelectionBehavior._shift_down": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CompoundSelectionBehavior._word_filter": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CompoundSelectionBehavior._last_key_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CompoundSelectionBehavior._key_list": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "CompoundSelectionBehavior._offset_counts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CompoundSelectionBehavior._update_counts": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "CompoundSelectionBehavior.get_index_of_node": [
            {
                "type": "method",
                "args": {
                    "node": "str",
                    "selectable_nodes": "list"
                }
            }
        ],
        "CompoundSelectionBehavior.get_selectable_nodes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompoundSelectionBehavior.goto_node": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "last_node": "str",
                    "last_node_idx": "int"
                }
            }
        ],
        "CompoundSelectionBehavior._resolve_last_node": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompoundSelectionBehavior.deselect_node": [
            {
                "type": "method",
                "args": {
                    "node": "str"
                }
            }
        ],
        "CompoundSelectionBehavior.clear_selection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompoundSelectionBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "CompoundSelectionBehavior.select_with_key_up": [
            {
                "type": "method",
                "args": {
                    "keyboard": "str",
                    "scancode": "str",
                    "kwargs": "str"
                }
            }
        ],
        "CompoundSelectionBehavior.select_node": [
            {
                "type": "method",
                "args": {
                    "node": "str"
                }
            }
        ],
        "CompoundSelectionBehavior._select_range": [
            {
                "type": "method",
                "args": {
                    "multiselect": "bool",
                    "keep_anchor": "bool",
                    "node": "str",
                    "idx": "int"
                }
            }
        ],
        "CompoundSelectionBehavior.select_with_touch": [
            {
                "type": "method",
                "args": {
                    "node": "str",
                    "touch": "Touch"
                }
            }
        ],
        "CompoundSelectionBehavior.select_with_key_down": [
            {
                "type": "method",
                "args": {
                    "keyboard": "bool",
                    "scancode": "tuple",
                    "codepoint": "int",
                    "modifiers": "tuple",
                    "kwargs": "str"
                }
            }
        ]
    },
    "uix.behaviors.button": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[Type[ButtonBehavior], ...]"
            }
        ],
        "ButtonBehavior.state": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "ButtonBehavior.last_touch": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ButtonBehavior.min_state_time": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ButtonBehavior.always_release": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ButtonBehavior.__state_event": [
            {
                "type": "attr",
                "anno": "Clock.Event"
            }
        ],
        "ButtonBehavior.__touch_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ButtonBehavior._do_press": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ButtonBehavior._do_release": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ButtonBehavior.on_press": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ButtonBehavior.on_release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ButtonBehavior.cancel_event": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "ButtonBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ButtonBehavior.trigger_action": [
            {
                "type": "method",
                "args": {
                    "duration": "float"
                }
            }
        ],
        "ButtonBehavior.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ButtonBehavior.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ButtonBehavior.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.behaviors.codenavigation": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "CodeNavigationBehavior._move_cursor_word_right": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "CodeNavigationBehavior._move_cursor_word_left": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ]
    },
    "uix.behaviors.touchripple": {
        "__all__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "TouchRippleBehavior.ripple_rad_default": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TouchRippleBehavior.ripple_duration_in": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TouchRippleBehavior.ripple_duration_out": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TouchRippleBehavior.ripple_fade_from_alpha": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TouchRippleBehavior.ripple_fade_to_alpha": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TouchRippleBehavior.ripple_scale": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TouchRippleBehavior.ripple_func_in": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TouchRippleBehavior.ripple_func_out": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "TouchRippleBehavior.ripple_rad": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "TouchRippleBehavior.ripple_pos": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TouchRippleBehavior.ripple_color": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "TouchRippleBehavior.ripple_pane": [
            {
                "type": "attr",
                "anno": "CanvasBase"
            }
        ],
        "TouchRippleBehavior.ripple_ellipse": [
            {
                "type": "attr",
                "anno": "Ellipse"
            }
        ],
        "TouchRippleBehavior.ripple_col_instruction": [
            {
                "type": "attr",
                "anno": "Color"
            }
        ],
        "TouchRippleBehavior._ripple_set_color": [
            {
                "type": "method",
                "args": {
                    "instance": "CanvasBase",
                    "value": "Color"
                }
            }
        ],
        "TouchRippleButtonBehavior.last_touch": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "TouchRippleButtonBehavior.always_release": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "TouchRippleButtonBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TouchRippleButtonBehavior.on_press": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TouchRippleButtonBehavior.on_release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TouchRippleBehavior._ripple_reset_pane": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TouchRippleBehavior._ripple_anim_complete": [
            {
                "type": "method",
                "args": {
                    "anim": "Animation",
                    "instance": "object"
                }
            }
        ],
        "TouchRippleBehavior._ripple_set_ellipse": [
            {
                "type": "method",
                "args": {
                    "instance": "CanvasBase",
                    "value": "Ellipse"
                }
            }
        ],
        "TouchRippleBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TouchRippleBehavior.ripple_fade": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TouchRippleButtonBehavior.on_disabled": [
            {
                "type": "method",
                "args": {
                    "instance": "ScissorBase",
                    "value": "bool"
                }
            }
        ],
        "TouchRippleBehavior.ripple_show": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "TouchRippleButtonBehavior.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "TouchRippleButtonBehavior.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "TouchRippleButtonBehavior.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.behaviors.togglebutton": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ToggleButtonBehavior.__groups": [
            {
                "type": "attr",
                "anno": "dict[ObjectProperty, list]"
            }
        ],
        "ToggleButtonBehavior.group": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ToggleButtonBehavior.allow_no_selection": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ToggleButtonBehavior._previous_group": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ToggleButtonBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ToggleButtonBehavior.state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ToggleButtonBehavior._do_release": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ToggleButtonBehavior._clear_groups": [
            {
                "type": "method",
                "args": {
                    "wk": "ObjectProperty"
                }
            }
        ],
        "ToggleButtonBehavior._release_group": [
            {
                "type": "method",
                "args": {
                    "current": "ToggleButtonBehavior"
                }
            }
        ],
        "ToggleButtonBehavior._do_press": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ToggleButtonBehavior.on_group": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "ToggleButtonBehavior.get_widgets": [
            {
                "type": "method",
                "args": {
                    "groupname": "str"
                }
            }
        ]
    },
    "uix.behaviors.emacs": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "EmacsBehavior.key_bindings": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "EmacsBehavior.bindings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "EmacsBehavior.text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "EmacsBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "EmacsBehavior.delete_word_left": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EmacsBehavior.delete_word_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EmacsBehavior.keyboard_on_key_down": [
            {
                "type": "method",
                "args": {
                    "window": "EventLoop",
                    "keycode": "str",
                    "text": "str",
                    "modifiers": "list"
                }
            }
        ]
    },
    "uix.behaviors.drag": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "_scroll_timeout": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_scroll_distance": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DragBehavior.drag_distance": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DragBehavior.drag_timeout": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DragBehavior.drag_rect_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DragBehavior.drag_rect_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DragBehavior.drag_rect_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DragBehavior.drag_rect_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DragBehavior.drag_rectangle": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "DragBehavior._drag_touch": [
            {
                "type": "attr",
                "anno": "sp.Optional[MotionEvent]"
            }
        ],
        "DragBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "sp.Any"
                }
            }
        ],
        "DragBehavior._get_uid": [
            {
                "type": "method",
                "args": {
                    "prefix": "str"
                }
            }
        ],
        "DragBehavior.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "DragBehavior.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "MotionEvent"
                }
            }
        ],
        "DragBehavior._change_touch_mode": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "DragBehavior.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "DragBehavior._do_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty",
                    "largs": "sp.Any"
                }
            }
        ]
    },
    "uix.behaviors": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ]
    },
    "uix.behaviors.cover": {
        "__all__": [
            {
                "type": "var",
                "anno": "ListProperty"
            }
        ],
        "CoverBehavior.reference_size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "CoverBehavior.cover_size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "CoverBehavior.cover_pos": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "CoverBehavior._aspect_ratio_approximate": [
            {
                "type": "method",
                "args": {
                    "size": "ListProperty"
                }
            }
        ],
        "CoverBehavior._scale_size": [
            {
                "type": "method",
                "args": {
                    "size": "ListProperty",
                    "sizer": "ListProperty"
                }
            }
        ],
        "CoverBehavior.calculate_cover": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "CoverBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ]
    },
    "uix.behaviors.focus": {
        "__all__": [
            {
                "type": "var",
                "anno": "AliasProperty"
            }
        ],
        "_is_desktop": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_keyboard_mode": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FocusBehavior._requested_keyboard": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FocusBehavior._keyboard": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "FocusBehavior._keyboards": [
            {
                "type": "attr",
                "anno": "dict[OptionProperty, FocusBehavior]"
            }
        ],
        "FocusBehavior.ignored_touch": [
            {
                "type": "attr",
                "anno": "list[EventLoop]"
            }
        ],
        "FocusBehavior.focus": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "FocusBehavior._set_keyboard": [
            {
                "type": "method",
                "args": {
                    "value": "OptionProperty"
                }
            }
        ],
        "FocusBehavior._get_keyboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior.keyboard": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "FocusBehavior.is_focusable": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "FocusBehavior.focused": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FocusBehavior._old_focus_next": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "FocusBehavior.focus_next": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "FocusBehavior._old_focus_previous": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "FocusBehavior._set_on_focus_previous": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "OptionProperty"
                }
            }
        ],
        "FocusBehavior.focus_previous": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "FocusBehavior._set_on_focus_next": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "OptionProperty"
                }
            }
        ],
        "FocusBehavior.keyboard_mode": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "FocusBehavior.input_type": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "FocusBehavior.unfocus_on_touch": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "FocusBehavior._keyboard_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FocusBehavior.keyboard_on_textinput": [
            {
                "type": "method",
                "args": {
                    "window": "EventLoop",
                    "text": "str"
                }
            }
        ],
        "FocusBehavior._keyboard_released": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior._ensure_keyboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior.keyboard_on_key_up": [
            {
                "type": "method",
                "args": {
                    "window": "EventLoop",
                    "keycode": "str"
                }
            }
        ],
        "FocusBehavior._handle_post_on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "EventLoop"
                }
            }
        ],
        "FocusBehavior._get_focus_next": [
            {
                "type": "method",
                "args": {
                    "focus_dir": "str"
                }
            }
        ],
        "FocusBehavior.get_focus_previous": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior.get_focus_next": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior.keyboard_on_key_down": [
            {
                "type": "method",
                "args": {
                    "window": "EventLoop",
                    "keycode": "str",
                    "text": "str",
                    "modifiers": "list"
                }
            }
        ],
        "FocusBehavior._bind_keyboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior.show_keyboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior._on_focusable": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "OptionProperty"
                }
            }
        ],
        "FocusBehavior._unbind_keyboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior.hide_keyboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FocusBehavior._on_focus": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "OptionProperty",
                    "largs": "object"
                }
            }
        ],
        "FocusBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "FocusBehavior.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.settings": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "SettingItem.title": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "SettingItem.desc": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SettingItem.disabled": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "SettingItem.section": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "SettingItem.key": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "SettingItem.value": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingItem.panel": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingItem.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingItem.selected_alpha": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "SettingItem.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "SettingItem.on_release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SettingBoolean.values": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "SettingString.popup": [
            {
                "type": "attr",
                "anno": "Popup"
            }
        ],
        "SettingString.textinput": [
            {
                "type": "attr",
                "anno": "TextInput"
            }
        ],
        "SettingString.value": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SettingPath.popup": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingPath.textinput": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingPath.show_hidden": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "SettingPath.dirselect": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "SettingPath.value": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SettingNumeric.value": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SettingOptions.options": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "SettingOptions.popup": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingOptions.value": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "SettingTitle.title": [
            {
                "type": "attr",
                "anno": "text_type"
            }
        ],
        "SettingTitle.panel": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingsPanel.title": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "SettingsPanel.config": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingsPanel.settings": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingsPanel.cols": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SettingsPanel.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "SettingsPanel.on_config": [
            {
                "type": "method",
                "args": {
                    "instance": "Settings",
                    "value": "ConfigParser"
                }
            }
        ],
        "InterfaceWithSidebar.menu": [
            {
                "type": "attr",
                "anno": "MenuSidebar"
            }
        ],
        "InterfaceWithSidebar.content": [
            {
                "type": "attr",
                "anno": "ContentPanel"
            }
        ],
        "InterfaceWithSidebar.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "InterfaceWithSidebar.on_close": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "InterfaceWithSpinner.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "InterfaceWithSpinner.menu": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "InterfaceWithSpinner.content": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "InterfaceWithSpinner.on_close": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ContentPanel.panels": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "ContentPanel.container": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ContentPanel.current_panel": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ContentPanel.current_uid": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ContentPanel.add_panel": [
            {
                "type": "method",
                "args": {
                    "panel": "ObjectProperty",
                    "name": "str",
                    "uid": "str"
                }
            }
        ],
        "Settings.interface": [
            {
                "type": "attr",
                "anno": "InterfaceWithSidebar"
            }
        ],
        "Settings.interface_cls": [
            {
                "type": "attr",
                "anno": "InterfaceWithSidebar"
            }
        ],
        "Settings.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, str]"
            }
        ],
        "Settings._types": [
            {
                "type": "attr",
                "anno": "Dict[str, text_type]"
            }
        ],
        "Settings.register_type": [
            {
                "type": "method",
                "args": {
                    "tp": "str",
                    "cls": "text_type"
                }
            }
        ],
        "Settings.on_close": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Settings.on_config_change": [
            {
                "type": "method",
                "args": {
                    "config": "ConfigParser",
                    "section": "str",
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "SettingsWithSpinner.interface_cls": [
            {
                "type": "attr",
                "anno": "InterfaceWithSpinner"
            }
        ],
        "SettingsWithSpinner.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "SettingsWithTabbedPanel.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "SettingsWithTabbedPanel.interface_cls": [
            {
                "type": "attr",
                "anno": "InterfaceWithTabbedPanel"
            }
        ],
        "SettingsWithTabbedPanel.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "SettingsWithTabbedPanel.on_close": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "SettingsWithNoMenu.interface_cls": [
            {
                "type": "attr",
                "anno": "InterfaceWithNoMenu"
            }
        ],
        "SettingsWithNoMenu.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "InterfaceWithTabbedPanel.tabbedpanel": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "InterfaceWithTabbedPanel.close_button": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "InterfaceWithTabbedPanel.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "InterfaceWithTabbedPanel.on_close": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "MenuSpinner.selected_uid": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "MenuSpinner.close_button": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "MenuSpinner.spinner": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "MenuSpinner.panel_names": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "MenuSpinner.spinner_text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "MenuSpinner.on_spinner_text": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "MenuSidebar.selected_uid": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "MenuSidebar.buttons_layout": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "MenuSidebar.close_button": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "SettingSidebarLabel.selected": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "SettingSidebarLabel.uid": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "SettingSidebarLabel.menu": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "InterfaceWithTabbedPanel.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "InterfaceWithSpinner.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "InterfaceWithSidebar.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "MenuSidebar.on_selected_uid": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "SettingsPanel.get_value": [
            {
                "type": "method",
                "args": {
                    "section": "str",
                    "key": "str"
                }
            }
        ],
        "SettingsPanel.set_value": [
            {
                "type": "method",
                "args": {
                    "section": "str",
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "SettingItem.on_value": [
            {
                "type": "method",
                "args": {
                    "instance": "Settings",
                    "value": "str"
                }
            }
        ],
        "SettingItem.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "SettingItem.add_widget": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "ContentPanel.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "InterfaceWithNoMenu.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "SettingSidebarLabel.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ContentPanel.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "MenuSpinner.add_item": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "uid": "str"
                }
            }
        ],
        "SettingOptions._set_option": [
            {
                "type": "method",
                "args": {
                    "instance": "SettingItem"
                }
            }
        ],
        "SettingPath._dismiss": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "SettingPath._validate": [
            {
                "type": "method",
                "args": {
                    "instance": "object"
                }
            }
        ],
        "SettingString._dismiss": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "SettingNumeric._validate": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget"
                }
            }
        ],
        "SettingString._validate": [
            {
                "type": "method",
                "args": {
                    "instance": "object"
                }
            }
        ],
        "MenuSidebar.add_item": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "uid": "str"
                }
            }
        ],
        "InterfaceWithTabbedPanel.add_panel": [
            {
                "type": "method",
                "args": {
                    "panel": "ObjectProperty",
                    "name": "str",
                    "uid": "str"
                }
            }
        ],
        "InterfaceWithSidebar.add_panel": [
            {
                "type": "method",
                "args": {
                    "panel": "ObjectProperty",
                    "name": "str",
                    "uid": "str"
                }
            }
        ],
        "InterfaceWithSpinner.add_panel": [
            {
                "type": "method",
                "args": {
                    "panel": "ObjectProperty",
                    "name": "str",
                    "uid": "str"
                }
            }
        ],
        "Settings.create_json_panel": [
            {
                "type": "method",
                "args": {
                    "title": "str",
                    "config": "ConfigParser",
                    "filename": "str",
                    "data": "str"
                }
            }
        ],
        "Settings.add_json_panel": [
            {
                "type": "method",
                "args": {
                    "title": "str",
                    "config": "ConfigParser",
                    "filename": "str",
                    "data": "str"
                }
            }
        ],
        "Settings.add_kivy_panel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Settings.add_interface": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Settings.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kargs": "object"
                }
            }
        ],
        "SettingsApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ContentPanel.on_current_uid": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "SettingItem.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Settings.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "SettingOptions._create_popup": [
            {
                "type": "method",
                "args": {
                    "instance": "SettingItem"
                }
            }
        ],
        "SettingOptions.on_panel": [
            {
                "type": "method",
                "args": {
                    "instance": "SettingItem",
                    "value": "object"
                }
            }
        ],
        "SettingPath._create_popup": [
            {
                "type": "method",
                "args": {
                    "instance": "object"
                }
            }
        ],
        "SettingPath.on_panel": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "object"
                }
            }
        ],
        "SettingString._create_popup": [
            {
                "type": "method",
                "args": {
                    "instance": "object"
                }
            }
        ],
        "SettingString.on_panel": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "str"
                }
            }
        ],
        "SettingItem.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.dropdown": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_grid_kv": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DropDown.auto_width": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "DropDown.max_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DropDown.dismiss_on_select": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "DropDown.auto_dismiss": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "DropDown.min_state_time": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DropDown.attach_to": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "DropDown.container": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "DropDown._touch_started_inside": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DropDown.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "DropDown._win": [
            {
                "type": "attr",
                "anno": "Window"
            }
        ],
        "DropDown.do_scroll_x": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DropDown.size_hint_x": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "DropDown.size_hint_y": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "DropDown.on_dismiss": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DropDown.on_select": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "DropDown.width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DropDown.x": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DropDown.top": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DropDown.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DropDown.y": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "btn": [
            {
                "type": "var",
                "anno": "Button"
            }
        ],
        "DropDown.add_widget": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "DropDown._reposition": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "DropDown.on_container": [
            {
                "type": "method",
                "args": {
                    "instance": "Window",
                    "value": "ObjectProperty"
                }
            }
        ],
        "DropDown.remove_widget": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "DropDown.clear_widgets": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "touch_move": [
            {
                "type": "func",
                "args": {
                    "instance": "Window",
                    "touch": "Event"
                }
            }
        ],
        "DropDown.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "DropDown._real_dismiss": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "DropDown.dismiss": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "DropDown.select": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "DropDown.open": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "DropDown.on_key_down": [
            {
                "type": "method",
                "args": {
                    "instance": "Window",
                    "key": "int",
                    "scancode": "int",
                    "codepoint": "int",
                    "modifiers": "int"
                }
            }
        ],
        "DropDown.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "DropDown.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "show_dropdown": [
            {
                "type": "func",
                "args": {
                    "button": "Button",
                    "largs": "object"
                }
            }
        ],
        "DropDown.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.videoplayer": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "VideoPlayerVolume.video": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VideoPlayerPlayPause.video": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VideoPlayerStop.video": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VideoPlayerProgressBar.video": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VideoPlayerProgressBar.seek": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VideoPlayerProgressBar.alpha": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VideoPlayerProgressBar.bubble": [
            {
                "type": "attr",
                "anno": "Factory.Bubble"
            }
        ],
        "VideoPlayerProgressBar.bubble_label": [
            {
                "type": "attr",
                "anno": "Factory.Label"
            }
        ],
        "VideoPlayerProgressBar._show_bubble": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoPlayerPreview.source": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VideoPlayerPreview.video": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VideoPlayerPreview.click_done": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "VideoPlayerAnnotation.start": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VideoPlayerAnnotation.duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VideoPlayerAnnotation.annotation": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "VideoPlayerAnnotation.on_annotation": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "ann": "DictProperty"
                }
            }
        ],
        "VideoPlayer.source": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.thumbnail": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VideoPlayer.position": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VideoPlayer.volume": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VideoPlayer.state": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "VideoPlayer.play": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "VideoPlayer.image_overlay_play": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.image_loading": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.image_play": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.image_stop": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.image_pause": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.image_volumehigh": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.image_volumemedium": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.image_volumelow": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.image_volumemuted": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.annotations": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer.fullscreen": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "VideoPlayer.allow_fullscreen": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "VideoPlayer.options": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "VideoPlayer.container": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VideoPlayer._video_load_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "VideoPlayer._video": [
            {
                "type": "attr",
                "anno": "VideoPlayer"
            }
        ],
        "VideoPlayer._image": [
            {
                "type": "attr",
                "anno": "VideoPlayerPreview"
            }
        ],
        "VideoPlayer._annotations": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VideoPlayer._annotations_labels": [
            {
                "type": "attr",
                "anno": "List[VideoPlayerAnnotation]"
            }
        ],
        "VideoPlayer.on_image_overlay_play": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "StringProperty"
                }
            }
        ],
        "VideoPlayer.on_image_loading": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "StringProperty"
                }
            }
        ],
        "VideoPlayer._set_state": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "OptionProperty"
                }
            }
        ],
        "VideoPlayer._fullscreen_state": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VideoPlayer.pos": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "VideoPlayer.size": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "VideoPlayer.pos_hint": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "VideoPlayer.size_hint": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "VideoPlayerProgressBar.on_alpha": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "float"
                }
            }
        ],
        "VideoPlayer.on_volume": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "NumericProperty"
                }
            }
        ],
        "VideoPlayer.on_state": [
            {
                "type": "method",
                "args": {
                    "instance": "Video",
                    "value": "str"
                }
            }
        ],
        "VideoPlayer.on_play": [
            {
                "type": "method",
                "args": {
                    "instance": "Video",
                    "value": "str"
                }
            }
        ],
        "VideoPlayer.seek": [
            {
                "type": "method",
                "args": {
                    "percent": "float",
                    "precise": "bool"
                }
            }
        ],
        "VideoPlayer._load_annotations": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoPlayerVolume.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayerVolume.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayerProgressBar._update_seek": [
            {
                "type": "method",
                "args": {
                    "x": "int"
                }
            }
        ],
        "VideoPlayerProgressBar.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayerPreview.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayerStop.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayerPlayPause.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayerVolume.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayerProgressBar._update_bubble": [
            {
                "type": "method",
                "args": {
                    "l": "object"
                }
            }
        ],
        "VideoPlayer._play_started": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "StringProperty"
                }
            }
        ],
        "VideoPlayer._load_thumbnail": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoPlayer.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "player": [
            {
                "type": "var",
                "anno": "VideoPlayer"
            }
        ],
        "VideoPlayer.on_fullscreen": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "bool"
                }
            }
        ],
        "VideoPlayer._do_video_load": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VideoPlayer._trigger_video_load": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VideoPlayer.on_source": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "bool"
                }
            }
        ],
        "VideoPlayerProgressBar.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "VideoPlayerProgressBar.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayer.on_position": [
            {
                "type": "method",
                "args": {
                    "instance": "VideoPlayer",
                    "value": "NumericProperty"
                }
            }
        ],
        "VideoPlayerProgressBar._hide_bubble": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoPlayerProgressBar._showhide_bubble": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "str"
                }
            }
        ],
        "VideoPlayerProgressBar.on_video": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "str"
                }
            }
        ],
        "VideoPlayerProgressBar.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VideoPlayer.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.switch": {
        "Switch.active": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Switch.touch_control": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Switch.touch_distance": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Switch.active_norm_pos": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Switch.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Switch.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Switch.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.relativelayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "RelativeLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kw": "Any"
                }
            }
        ],
        "RelativeLayout._apply_transform": [
            {
                "type": "method",
                "args": {
                    "m": "Matrix",
                    "pos": "tuple[int, int]"
                }
            }
        ],
        "RelativeLayout.to_local": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "k": "object"
                }
            }
        ],
        "RelativeLayout.to_parent": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "k": "int"
                }
            }
        ],
        "RelativeLayout.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "RelativeLayout.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "Event"
                }
            }
        ],
        "RelativeLayout.do_layout": [
            {
                "type": "method",
                "args": {
                    "args": "int"
                }
            }
        ],
        "RelativeLayout.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.spinner": {
        "__all__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "Spinner.values": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Spinner.text_autoupdate": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Spinner.option_cls": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Spinner.dropdown_cls": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Spinner.is_open": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Spinner.sync_height": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Spinner._dropdown": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Spinner.text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Spinner._toggle_dropdown": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Spinner._close_dropdown": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Spinner._on_dropdown_select": [
            {
                "type": "method",
                "args": {
                    "instance": "DropDown",
                    "data": "str",
                    "largs": "str"
                }
            }
        ],
        "Spinner._update_dropdown_size": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Spinner._update_dropdown": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Spinner._build_dropdown": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Spinner.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Spinner.on_is_open": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "bool"
                }
            }
        ]
    },
    "uix.gesturesurface": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "UNDERSHOOT_MARGIN": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "GestureContainer.active": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "GestureContainer.active_strokes": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureContainer.max_strokes": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureContainer.was_merged": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "GestureContainer.bbox": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "GestureContainer.width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureContainer.height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureContainer.color": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GestureContainer.id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GestureContainer._create_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GestureContainer._update_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GestureContainer._cleanup_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GestureContainer._cache_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GestureContainer._vectors": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GestureContainer._strokes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GestureContainer.accept_stroke": [
            {
                "type": "method",
                "args": {
                    "count": "int"
                }
            }
        ],
        "GestureContainer.complete_stroke": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureSurface.temporal_window": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureSurface.draw_timeout": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureSurface.max_strokes": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureSurface.bbox_margin": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureSurface.line_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureSurface.color": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "GestureSurface.use_random_color": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "GestureSurface.draw_bbox": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "GestureSurface.bbox_alpha": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GestureSurface._gestures": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "GestureSurface.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "GestureSurface.on_gesture_start": [
            {
                "type": "method",
                "args": {
                    "l": "Vector"
                }
            }
        ],
        "GestureSurface.on_gesture_extend": [
            {
                "type": "method",
                "args": {
                    "l": "Vector"
                }
            }
        ],
        "GestureSurface.on_gesture_merge": [
            {
                "type": "method",
                "args": {
                    "l": "Vector"
                }
            }
        ],
        "GestureSurface.on_gesture_complete": [
            {
                "type": "method",
                "args": {
                    "l": "Vector"
                }
            }
        ],
        "GestureSurface.on_gesture_discard": [
            {
                "type": "method",
                "args": {
                    "l": "Vector"
                }
            }
        ],
        "GestureSurface.on_gesture_cleanup": [
            {
                "type": "method",
                "args": {
                    "l": "float"
                }
            }
        ],
        "GestureContainer.add_stroke": [
            {
                "type": "method",
                "args": {
                    "touch": "Event",
                    "line": "Line"
                }
            }
        ],
        "GestureContainer.handles": [
            {
                "type": "method",
                "args": {
                    "touch": "MotionEvent"
                }
            }
        ],
        "GestureSurface.get_gesture": [
            {
                "type": "method",
                "args": {
                    "touch": "MotionEvent"
                }
            }
        ],
        "GestureSurface._cleanup": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "GestureContainer.single_points_test": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureContainer.get_vectors": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "GestureSurface._complete_dispatcher": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "GestureSurface.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "Event"
                }
            }
        ],
        "GestureContainer.update_bbox": [
            {
                "type": "method",
                "args": {
                    "touch": "Event"
                }
            }
        ],
        "GestureContainer.__init__": [
            {
                "type": "method",
                "args": {
                    "touch": "Event",
                    "kwargs": "object"
                }
            }
        ],
        "GestureSurface.merge_gestures": [
            {
                "type": "method",
                "args": {
                    "g": "GestureContainer",
                    "other": "GestureContainer"
                }
            }
        ],
        "GestureSurface.find_colliding_gesture": [
            {
                "type": "method",
                "args": {
                    "touch": "Event"
                }
            }
        ],
        "GestureSurface.init_gesture": [
            {
                "type": "method",
                "args": {
                    "touch": "Event"
                }
            }
        ],
        "GestureSurface._update_canvas_bbox": [
            {
                "type": "method",
                "args": {
                    "g": "GestureContainer"
                }
            }
        ],
        "GestureSurface.init_stroke": [
            {
                "type": "method",
                "args": {
                    "g": "GestureContainer",
                    "touch": "Event"
                }
            }
        ],
        "GestureSurface.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "Event"
                }
            }
        ],
        "GestureSurface.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "MotionEvent"
                }
            }
        ]
    },
    "uix.anchorlayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "AnchorLayout.padding": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "AnchorLayout.anchor_x": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "AnchorLayout.anchor_y": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "AnchorLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "AnchorLayout.do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "int"
                }
            }
        ]
    },
    "uix.effectwidget": {
        "__all__": [
            {
                "type": "var",
                "anno": "Tuple[str, ...]"
            }
        ],
        "shader_header": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "shader_uniforms": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "shader_footer_trivial": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "shader_footer_effect": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_trivial": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_monochrome": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_invert": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_mix": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_blur_h": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_blur_v": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_postprocessing": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_pixelate": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "effect_fxaa": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EffectBase.glsl": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "EffectBase.source": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "EffectBase.fbo": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "AdvancedEffectBase.uniforms": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "AdvancedEffectBase._update_uniforms": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "MonochromeEffect.glsl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MonochromeEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "InvertEffect.glsl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InvertEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "ScanlinesEffect.glsl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScanlinesEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "ChannelMixEffect.order": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ChannelMixEffect.glsl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PixelateEffect.pixel_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "PixelateEffect.glsl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HorizontalBlurEffect.size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "HorizontalBlurEffect.glsl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VerticalBlurEffect.size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VerticalBlurEffect.glsl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FXAAEffect.glsl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FXAAEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "EffectFbo.texture_rectangle": [
            {
                "type": "attr",
                "anno": "Rectangle"
            }
        ],
        "EffectFbo.set_fs": [
            {
                "type": "method",
                "args": {
                    "value": "StringProperty"
                }
            }
        ],
        "EffectBase.set_fbo_shader": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "AdvancedEffectBase.set_fbo_shader": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "EffectWidget.background_color": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "EffectWidget.texture": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "EffectWidget.effects": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "EffectWidget.fbo_list": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "EffectWidget._bound_effects": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "EffectWidget.canvas": [
            {
                "type": "attr",
                "anno": "RenderContext"
            }
        ],
        "EffectWidget.fbo": [
            {
                "type": "attr",
                "anno": "EffectFbo"
            }
        ],
        "EffectWidget._background_color": [
            {
                "type": "attr",
                "anno": "Color"
            }
        ],
        "EffectWidget.fbo_rectangle": [
            {
                "type": "attr",
                "anno": "Rectangle"
            }
        ],
        "EffectWidget._refresh_background_color": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "AdvancedEffectBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "VerticalBlurEffect.do_glsl": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VerticalBlurEffect.on_size": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "VerticalBlurEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "HorizontalBlurEffect.do_glsl": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HorizontalBlurEffect.on_size": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "HorizontalBlurEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "PixelateEffect.do_glsl": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PixelateEffect.on_pixel_size": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "PixelateEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "ChannelMixEffect.do_glsl": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ChannelMixEffect.on_order": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ChannelMixEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "EffectFbo.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "EffectBase._load_from_source": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "EffectBase.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "EffectWidget.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "EffectWidget.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "EffectWidget.clear_widgets": [
            {
                "type": "method",
                "args": {
                    "children": "ListProperty"
                }
            }
        ],
        "EffectWidget._update_glsl": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "EffectWidget.refresh_fbo_setup": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "EffectWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ]
    },
    "uix.filechooser": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "platform": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "filesize_units": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_have_win32file": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "FileSystemAbstract.listdir": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "FileSystemAbstract.getsize": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "FileSystemAbstract.is_hidden": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "FileSystemAbstract.is_dir": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "FileSystemLocal.listdir": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "FileSystemLocal.getsize": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "FileSystemLocal.is_hidden": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "FileSystemLocal.is_dir": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "alphanumeric_folders_first": [
            {
                "type": "func",
                "args": {
                    "files": "List[str]",
                    "filesystem": "FileSystemAbstract"
                }
            }
        ],
        "FileChooserProgressBase.path": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FileChooserProgressBase.index": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "FileChooserProgressBase.total": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "FileChooserLayout.VIEWNAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserLayout.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "FileChooserLayout.controller": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "FileChooserLayout.on_entry_added": [
            {
                "type": "method",
                "args": {
                    "node": "str",
                    "parent": "str"
                }
            }
        ],
        "FileChooserLayout.on_entries_cleared": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooserLayout.on_subentry_to_entry": [
            {
                "type": "method",
                "args": {
                    "subentry": "str",
                    "entry": "str"
                }
            }
        ],
        "FileChooserLayout.on_remove_subentry": [
            {
                "type": "method",
                "args": {
                    "subentry": "str",
                    "entry": "str"
                }
            }
        ],
        "FileChooserLayout.on_submit": [
            {
                "type": "method",
                "args": {
                    "selected": "bool",
                    "touch": "str"
                }
            }
        ],
        "FileChooserListLayout.VIEWNAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserListLayout._ENTRY_TEMPLATE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserIconLayout.VIEWNAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserIconLayout._ENTRY_TEMPLATE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserController._ENTRY_TEMPLATE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserController.layout": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "FileChooserController.path": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FileChooserController.filters": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserController.filter_dirs": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "FileChooserController.sort_func": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "FileChooserController.files": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserController.show_hidden": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "FileChooserController.selection": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserController.multiselect": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "FileChooserController.dirselect": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "FileChooserController.rootpath": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FileChooserController.progress_cls": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "FileChooserController.file_encodings": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserController.file_system": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "FileChooserController.font_name": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FileChooserController._update_files_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "FileChooserController._create_files_entries_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "FileChooserController.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "FileChooserController._progress": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "FileChooserController._items": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserController._previous_path": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserController._apply_filters": [
            {
                "type": "method",
                "args": {
                    "files": "ListProperty"
                }
            }
        ],
        "FileChooserController.get_nice_size": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "FileChooserController._gitems": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserController._gitems_parent": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserController._gitems_gen": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooserListView._ENTRY_TEMPLATE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserIconView._ENTRY_TEMPLATE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserController._create_entry_widget": [
            {
                "type": "method",
                "args": {
                    "ctx": "dict"
                }
            }
        ],
        "FileChooser.manager": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "FileChooser._view_list": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooser.get_view_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooser.view_list": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "FileChooser._view_mode": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "FileChooser.get_view_mode": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooser.set_view_mode": [
            {
                "type": "method",
                "args": {
                    "mode": "StringProperty"
                }
            }
        ],
        "FileChooser.view_mode": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "FileChooser.trigger_update_view": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "root": [
            {
                "type": "var",
                "anno": "FileChooser"
            }
        ],
        "FileChooserIconLayout.scroll_to_top": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FileChooserListLayout.scroll_to_top": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FileChooserController.on_submit": [
            {
                "type": "method",
                "args": {
                    "selected": "bool",
                    "touch": "str"
                }
            }
        ],
        "FileChooserController.on_remove_subentry": [
            {
                "type": "method",
                "args": {
                    "subentry": "str",
                    "entry": "str"
                }
            }
        ],
        "FileChooserController.on_subentry_to_entry": [
            {
                "type": "method",
                "args": {
                    "subentry": "str",
                    "entry": "str"
                }
            }
        ],
        "FileChooserController.on_entries_cleared": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooserController.on_entry_added": [
            {
                "type": "method",
                "args": {
                    "node": "str",
                    "parent": "object"
                }
            }
        ],
        "FileChooserIconLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "FileChooserListLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "FileChooserApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooser._update_item_selection": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FileChooserController._get_file_paths": [
            {
                "type": "method",
                "args": {
                    "items": "ListProperty"
                }
            }
        ],
        "FileChooserController.open_entry": [
            {
                "type": "method",
                "args": {
                    "entry": "FileChooser"
                }
            }
        ],
        "FileChooserController._update_item_selection": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FileChooser._views": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooser.on_submit": [
            {
                "type": "method",
                "args": {
                    "selected": "bool",
                    "touch": "str"
                }
            }
        ],
        "FileChooser.on_remove_subentry": [
            {
                "type": "method",
                "args": {
                    "subentry": "ListProperty",
                    "entry": "str"
                }
            }
        ],
        "FileChooser.on_subentry_to_entry": [
            {
                "type": "method",
                "args": {
                    "subentry": "ListProperty",
                    "entry": "str"
                }
            }
        ],
        "FileChooser.on_entries_cleared": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooser.on_entry_added": [
            {
                "type": "method",
                "args": {
                    "node": "ListProperty",
                    "parent": "ListProperty"
                }
            }
        ],
        "FileChooser._get_file_paths": [
            {
                "type": "method",
                "args": {
                    "items": "ListProperty"
                }
            }
        ],
        "FileChooserController.entry_touched": [
            {
                "type": "method",
                "args": {
                    "entry": "FileChooser",
                    "touch": "Event"
                }
            }
        ],
        "FileChooserController._save_previous_path": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "StringProperty"
                }
            }
        ],
        "FileChooser._create_entry_widget": [
            {
                "type": "method",
                "args": {
                    "ctx": "dict"
                }
            }
        ],
        "FileChooserController._show_progress": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooserController._create_files_entries": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FileChooserController._update_files": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FileChooserController.entry_subselect": [
            {
                "type": "method",
                "args": {
                    "entry": "FileChooser"
                }
            }
        ],
        "FileChooserController._trigger_update": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "FileChooser.rebuild_views": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooser.update_view": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "FileChooserController.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "FileChooserController.close_subselection": [
            {
                "type": "method",
                "args": {
                    "entry": "FileChooser"
                }
            }
        ],
        "FileChooserController._hide_progress": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooserController.cancel": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "FileChooserProgressBase.cancel": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "FileChooserController._add_files": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "parent": "str"
                }
            }
        ],
        "FileChooserController._generate_file_entries": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FileChooser.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "kwargs": "object"
                }
            }
        ],
        "FileChooser.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "FileChooserController.entry_released": [
            {
                "type": "method",
                "args": {
                    "entry": "FileChooser",
                    "touch": "Event"
                }
            }
        ],
        "FileChooserProgressBase.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "FileChooserController.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "FileChooserProgressBase.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "FileChooserProgressBase.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "FileChooserController.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.recyclegridlayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "RecycleGridLayout._cols_pos": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecycleGridLayout._rows_pos": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecycleGridLayout.on_children": [
            {
                "type": "method",
                "args": {
                    "instance": "RecycleLayout",
                    "value": "None"
                }
            }
        ],
        "RecycleGridLayout._cols_count": [
            {
                "type": "attr",
                "anno": "list[dict]"
            }
        ],
        "RecycleGridLayout._rows_count": [
            {
                "type": "attr",
                "anno": "list[dict]"
            }
        ],
        "RecycleGridLayout._has_hint_bound_x": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RecycleGridLayout._has_hint_bound_y": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RecycleGridLayout.minimum_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "RecycleGridLayout.get_view_index_at": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple"
                }
            }
        ],
        "RecycleGridLayout.compute_visible_views": [
            {
                "type": "method",
                "args": {
                    "data": "list",
                    "viewport": "dict"
                }
            }
        ],
        "RecycleGridLayout._fill_rows_cols_sizes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RecycleGridLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "RecycleGridLayout._update_rows_cols_sizes": [
            {
                "type": "method",
                "args": {
                    "changed": "list"
                }
            }
        ],
        "RecycleGridLayout.compute_layout": [
            {
                "type": "method",
                "args": {
                    "data": "list",
                    "flags": "list"
                }
            }
        ]
    },
    "uix.gridlayout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "GridLayout.spacing": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "GridLayout.padding": [
            {
                "type": "attr",
                "anno": "VariableListProperty"
            }
        ],
        "GridLayout.cols": [
            {
                "type": "attr",
                "anno": "BoundedNumericProperty"
            }
        ],
        "GridLayout.rows": [
            {
                "type": "attr",
                "anno": "BoundedNumericProperty"
            }
        ],
        "GridLayout.col_default_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GridLayout.row_default_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GridLayout.col_force_default": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "GridLayout.row_force_default": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "GridLayout.cols_minimum": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "GridLayout.rows_minimum": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "GridLayout.minimum_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GridLayout.minimum_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "GridLayout.minimum_size": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "GridLayout._cols": [
            {
                "type": "attr",
                "anno": "BoundedNumericProperty"
            }
        ],
        "GridLayout._rows": [
            {
                "type": "attr",
                "anno": "BoundedNumericProperty"
            }
        ],
        "GridLayout.get_max_widgets": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridLayout.on_children": [
            {
                "type": "method",
                "args": {
                    "instance": "str",
                    "value": "str"
                }
            }
        ],
        "GridLayout._has_hint_bound_x": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GridLayout._has_hint_bound_y": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GridLayout._cols_min_size_none": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GridLayout._rows_min_size_none": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GridLayout._cols_sh": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "GridLayout._cols_sh_min": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "GridLayout._cols_sh_max": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "GridLayout._rows_sh": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "GridLayout._rows_sh_min": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "GridLayout._rows_sh_max": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "GridLayout._init_rows_cols_sizes": [
            {
                "type": "method",
                "args": {
                    "count": "int"
                }
            }
        ],
        "GridLayout._update_minimum_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridLayout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "GridLayout._iterate_layout": [
            {
                "type": "method",
                "args": {
                    "count": "int"
                }
            }
        ],
        "GridLayout._finalize_rows_cols_sizes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "nmin": [
            {
                "type": "func",
                "args": {
                    "args": "int"
                }
            }
        ],
        "nmax": [
            {
                "type": "func",
                "args": {
                    "args": "int"
                }
            }
        ],
        "GridLayout._fill_rows_cols_sizes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridLayout.do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "int"
                }
            }
        ]
    },
    "uix.layout": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Layout._trigger_layout": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "Layout.do_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "int"
                }
            }
        ],
        "Layout.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Layout.layout_hint_with_bounds": [
            {
                "type": "method",
                "args": {
                    "sh_sum": "float",
                    "available_space": "float",
                    "min_bounded_size": "float",
                    "sh_min_vals": "list",
                    "sh_max_vals": "list",
                    "hint": "list"
                }
            }
        ],
        "Layout.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "Layout.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget",
                    "index": "int",
                    "canvas": "Canvas"
                }
            }
        ]
    },
    "uix.vkeyboard": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "default_layout_path": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "VKeyboard.target": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VKeyboard.callback": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VKeyboard.layout": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VKeyboard.layout_path": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VKeyboard.available_layouts": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "VKeyboard.docked": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "VKeyboard.margin_hint": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "VKeyboard.key_margin": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "VKeyboard.font_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VKeyboard.background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "VKeyboard.background": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VKeyboard.background_disabled": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VKeyboard.key_background_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "VKeyboard.key_background_normal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VKeyboard.key_disabled_background_normal": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VKeyboard.key_background_down": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VKeyboard.background_border": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "VKeyboard.key_border": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "VKeyboard.layout_mode": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "VKeyboard.layout_geometry": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "VKeyboard.have_capslock": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "VKeyboard.have_shift": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "VKeyboard.have_special": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "VKeyboard.active_keys": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "VKeyboard.font_name": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "VKeyboard.repeat_touch": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "VKeyboard._start_repeat_key_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "VKeyboard._repeat_key_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "VKeyboard.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "VKeyboard.size_hint_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VKeyboard.size_hint_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "VKeyboard.width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VKeyboard.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VKeyboard.scale_min": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "VKeyboard.scale_max": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "VKeyboard._trigger_update_layout_mode": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "VKeyboard._trigger_load_layouts": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "VKeyboard._trigger_load_layout": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "VKeyboard.background_key_layer": [
            {
                "type": "attr",
                "anno": "Canvas"
            }
        ],
        "VKeyboard.active_keys_layer": [
            {
                "type": "attr",
                "anno": "Canvas"
            }
        ],
        "VKeyboard.do_translation": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VKeyboard.do_rotation": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VKeyboard.do_scale": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VKeyboard.rotation": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "VKeyboard.scale": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "VKeyboard.pos": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VKeyboard.change_layout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VKeyboard.on_key_down": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VKeyboard.on_key_up": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VKeyboard.on_textinput": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VKeyboard.collide_margin": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty"
                }
            }
        ],
        "VKeyboard._get_modifiers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VKeyboard.refresh_keys_hint": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VKeyboard._load_layout_fn": [
            {
                "type": "method",
                "args": {
                    "fn": "str",
                    "name": "str"
                }
            }
        ],
        "VKeyboard._load_layouts": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VKeyboard._update_dock_mode": [
            {
                "type": "method",
                "args": {
                    "win": "Window",
                    "largs": "str"
                }
            }
        ],
        "VKeyboard.get_key_at_pos": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty"
                }
            }
        ],
        "VKeyboard.refresh_active_keys_layer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VKeyboard.refresh": [
            {
                "type": "method",
                "args": {
                    "force": "bool"
                }
            }
        ],
        "VKeyboard._load_layout": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VKeyboard._update_layout_mode": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ],
        "VKeyboard.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "vk": [
            {
                "type": "var",
                "anno": "VKeyboard"
            }
        ],
        "VKeyboard.process_key_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VKeyboard.process_key_on": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VKeyboard._repeat_key": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "VKeyboard._start_repeat_key": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "VKeyboard.draw_keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VKeyboard.refresh_keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VKeyboard.on_disabled": [
            {
                "type": "method",
                "args": {
                    "intance": "int",
                    "value": "bool"
                }
            }
        ],
        "VKeyboard.setup_mode_free": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VKeyboard.setup_mode_dock": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VKeyboard.setup_mode": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "VKeyboard.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "VKeyboard.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "uix.splitter": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Splitter.border": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Splitter.strip_cls": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Splitter.sizable_from": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Splitter.strip_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Splitter.min_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Splitter.max_size": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Splitter._parent_proportion": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Splitter._bound_parent": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Splitter.keep_within_parent": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Splitter.rescale_with_parent": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Splitter.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Splitter._container": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Splitter._strip": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Splitter.on_press": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Splitter.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Splitter.width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Splitter._do_size": [
            {
                "type": "method",
                "args": {
                    "instance": "ObjectProperty",
                    "value": "NumericProperty"
                }
            }
        ],
        "Splitter.size_hint_y": [
            {
                "type": "attr",
                "anno": "Optional[int]"
            }
        ],
        "Splitter.size_hint_x": [
            {
                "type": "attr",
                "anno": "Optional[int]"
            }
        ],
        "Splitter.on_release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Splitter.rescale_parent_proportion": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Splitter._rebind_parent": [
            {
                "type": "method",
                "args": {
                    "instance": "ObjectProperty",
                    "new_parent": "ObjectProperty"
                }
            }
        ],
        "Splitter.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Splitter.strip_move": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "touch": "Event"
                }
            }
        ],
        "Splitter.strip_down": [
            {
                "type": "method",
                "args": {
                    "instance": "Splitter",
                    "touch": "SplitterStrip"
                }
            }
        ],
        "Splitter.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "largs": "str"
                }
            }
        ],
        "Splitter.clear_widgets": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Splitter.strip_up": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "touch": "SplitterStrip"
                }
            }
        ],
        "Splitter.on_sizable_from": [
            {
                "type": "method",
                "args": {
                    "instance": "Splitter",
                    "sizable_from": "OptionProperty"
                }
            }
        ],
        "Splitter.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "index": "int"
                }
            }
        ],
        "SplitterApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "uix.progressbar": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ProgressBar._value": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ProgressBar.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ProgressBar._get_value": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProgressBar.max": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ProgressBar._set_value": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "ProgressBar.value": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "ProgressBar.set_norm_value": [
            {
                "type": "method",
                "args": {
                    "value": "NumericProperty"
                }
            }
        ],
        "ProgressBar.get_norm_value": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProgressBar.value_normalized": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ]
    },
    "uix.scrollview": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_scroll_timeout": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ScrollView.scroll_wheel_distance": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollView.scroll_timeout": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollView.scroll_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollView.scroll_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollView.do_scroll_x": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ScrollView.do_scroll_y": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ScrollView._get_do_scroll": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollView._set_do_scroll": [
            {
                "type": "method",
                "args": {
                    "value": "BooleanProperty"
                }
            }
        ],
        "ScrollView.do_scroll": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ScrollView.always_overscroll": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ScrollView.bar_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ScrollView.bar_inactive_color": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "ScrollView.bar_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollView.bar_pos_x": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "ScrollView.bar_pos_y": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "ScrollView.bar_pos": [
            {
                "type": "attr",
                "anno": "ReferenceListProperty"
            }
        ],
        "ScrollView.bar_margin": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollView.effect_cls": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ScrollView.effect_x": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ScrollView.effect_y": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ScrollView.viewport_size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ScrollView.scroll_type": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "ScrollView.smooth_scroll_end": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollView._viewport": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ScrollView._bar_color": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "ScrollView._effect_x_start_width": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "ScrollView._effect_y_start_height": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "ScrollView._update_effect_bounds_ev": [
            {
                "type": "attr",
                "anno": "Clock.Timer"
            }
        ],
        "ScrollView._bind_inactive_bar_color_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "ScrollView._set_viewport_size": [
            {
                "type": "method",
                "args": {
                    "instance": "StencilView",
                    "value": "ListProperty"
                }
            }
        ],
        "ScrollView.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ScrollView._touch": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ScrollView._trigger_update_from_scroll": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "ScrollView.canvas_viewport": [
            {
                "type": "attr",
                "anno": "Canvas"
            }
        ],
        "ScrollView.canvas": [
            {
                "type": "attr",
                "anno": "Canvas"
            }
        ],
        "ScrollView.g_translate": [
            {
                "type": "attr",
                "anno": "Translate"
            }
        ],
        "ScrollView.to_local": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float",
                    "k": "object"
                }
            }
        ],
        "ScrollView.to_parent": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty",
                    "k": "object"
                }
            }
        ],
        "ScrollView._scroll_x_mouse": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrollView._scroll_y_mouse": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrollView._change_bar_color": [
            {
                "type": "method",
                "args": {
                    "inst": "object",
                    "value": "ColorProperty"
                }
            }
        ],
        "ScrollView._update_effect_widget": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ScrollView._get_uid": [
            {
                "type": "method",
                "args": {
                    "prefix": "str"
                }
            }
        ],
        "_scroll_distance": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ScrollView.scroll_distance": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollView.scroll_to": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "padding": "int",
                    "animate": "bool"
                }
            }
        ],
        "ScrollView._update_effect_y": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ScrollView.on_effect_y": [
            {
                "type": "method",
                "args": {
                    "instance": "StencilView",
                    "value": "ObjectProperty"
                }
            }
        ],
        "ScrollView._update_effect_y_bounds": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ScrollView._get_vbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollView.vbar": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "ScrollView.convert_distance_to_scroll": [
            {
                "type": "method",
                "args": {
                    "dx": "float",
                    "dy": "float"
                }
            }
        ],
        "ScrollView._update_effect_x": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ScrollView.on_effect_cls": [
            {
                "type": "method",
                "args": {
                    "instance": "ObjectProperty",
                    "cls": "str"
                }
            }
        ],
        "ScrollView.on_effect_x": [
            {
                "type": "method",
                "args": {
                    "instance": "StencilView",
                    "value": "ObjectProperty"
                }
            }
        ],
        "ScrollView._update_effect_x_bounds": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ScrollView._update_effect_bounds": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ScrollView._get_hbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollView.hbar": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "ScrollView._touch_in_handle": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple",
                    "size": "tuple",
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScrollView._apply_transform": [
            {
                "type": "method",
                "args": {
                    "m": "Matrix",
                    "pos": "tuple[int, int]"
                }
            }
        ],
        "ScrollView.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "ScrollView.on__viewport": [
            {
                "type": "method",
                "args": {
                    "instance": "StencilView",
                    "value": "ListProperty"
                }
            }
        ],
        "ScrollView.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "index": "int"
                }
            }
        ],
        "ScrollView._bind_inactive_bar_color": [
            {
                "type": "method",
                "args": {
                    "l": "object"
                }
            }
        ],
        "ScrollView.update_from_scroll": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "ScrollView.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ScrollViewApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollView.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScrollView.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScrollView.simulate_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScrollView._change_touch_mode": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "ScrollView.on_scroll_start": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty",
                    "check_children": "bool"
                }
            }
        ],
        "ScrollView.on_scroll_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScrollView.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "ScrollView._do_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty",
                    "largs": "str"
                }
            }
        ],
        "ScrollView.on_scroll_stop": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty",
                    "check_children": "bool"
                }
            }
        ]
    },
    "uix.carousel": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Carousel.slides": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Carousel.direction": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Carousel.min_move": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Carousel.anim_move_duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Carousel.anim_cancel_duration": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Carousel.loop": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Carousel._index": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Carousel._set_index": [
            {
                "type": "method",
                "args": {
                    "value": "NumericProperty"
                }
            }
        ],
        "Carousel._get_index": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel.index": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Carousel._prev_slide": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel.previous_slide": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Carousel._curr_slide": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel.current_slide": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Carousel._next_slide": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel.next_slide": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Carousel.scroll_timeout": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Carousel.scroll_distance": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Carousel.anim_type": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Carousel.ignore_perpendicular_swipes": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Carousel._prev": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Carousel._current": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Carousel._next": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Carousel._offset": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Carousel._touch": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Carousel._change_touch_mode_ev": [
            {
                "type": "attr",
                "anno": "Clock.Event"
            }
        ],
        "Carousel._trigger_position_visible_slides": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "Carousel._skip_slide": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Carousel.touch_mode_change": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Carousel._prioritize_next": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Carousel._prev_equals_next": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel.on_pos": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Carousel.get_slide_container": [
            {
                "type": "method",
                "args": {
                    "slide": "AliasProperty"
                }
            }
        ],
        "Carousel._get_uid": [
            {
                "type": "method",
                "args": {
                    "prefix": "str"
                }
            }
        ],
        "Carousel.on__offset": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Carousel._get_slides_container": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel.slides_container": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Carousel._position_visible_slides": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "Carousel.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Carousel.clear_widgets": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel.on_size": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Carousel.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "index": "int",
                    "canvas": "ObjectProperty"
                }
            }
        ],
        "Carousel._insert_visible_slides": [
            {
                "type": "method",
                "args": {
                    "_next_slide": "AliasProperty",
                    "_prev_slide": "AliasProperty"
                }
            }
        ],
        "Carousel.on_slides": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Carousel.on_index": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Carousel.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Example1.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel._start_animation": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Carousel.load_next": [
            {
                "type": "method",
                "args": {
                    "mode": "str"
                }
            }
        ],
        "Carousel.load_previous": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Carousel.load_slide": [
            {
                "type": "method",
                "args": {
                    "slide": "AliasProperty"
                }
            }
        ],
        "Carousel.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Carousel._change_touch_mode": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Carousel.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Carousel.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Carousel._do_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty",
                    "largs": "str"
                }
            }
        ]
    },
    "uix.scatter": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Scatter.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Scatter.auto_bring_to_front": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Scatter.do_translation_x": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Scatter.do_translation_y": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Scatter._get_do_translation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter._set_do_translation": [
            {
                "type": "method",
                "args": {
                    "value": "Vector"
                }
            }
        ],
        "Scatter.do_translation": [
            {
                "type": "attr",
                "anno": "Vector"
            }
        ],
        "Scatter.translation_touches": [
            {
                "type": "attr",
                "anno": "BoundedNumericProperty"
            }
        ],
        "Scatter.do_rotation": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Scatter.do_scale": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Scatter.do_collide_after_children": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Scatter.scale_min": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Scatter.scale_max": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Scatter.transform": [
            {
                "type": "attr",
                "anno": "Matrix"
            }
        ],
        "Scatter.transform_inv": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Scatter._scale_p": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Scatter._touches": [
            {
                "type": "attr",
                "anno": "list[ObjectProperty]"
            }
        ],
        "Scatter._last_touch_pos": [
            {
                "type": "attr",
                "anno": "dict[ObjectProperty, int]"
            }
        ],
        "Scatter.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Scatter.on_transform": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "value": "ObjectProperty"
                }
            }
        ],
        "Scatter.to_parent": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "k": "int"
                }
            }
        ],
        "Scatter.to_local": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "k": "object"
                }
            }
        ],
        "Scatter.apply_transform": [
            {
                "type": "method",
                "args": {
                    "trans": "Matrix",
                    "post_multiply": "bool",
                    "anchor": "tuple"
                }
            }
        ],
        "Scatter.on_transform_with_touch": [
            {
                "type": "method",
                "args": {
                    "touch": "VectorProperty"
                }
            }
        ],
        "Scatter.on_bring_to_front": [
            {
                "type": "method",
                "args": {
                    "touch": "VectorProperty"
                }
            }
        ],
        "ScatterPlane.auto_bring_to_front": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScatterPlane.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ScatterPlane.collide_point": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Scatter.collide_point": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Scatter._get_bbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter.bbox": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter._get_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter._get_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter._get_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter.pos": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter._get_scale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter._set_x": [
            {
                "type": "method",
                "args": {
                    "x": "Vector"
                }
            }
        ],
        "Scatter.x": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter.set_center_x": [
            {
                "type": "method",
                "args": {
                    "value": "Vector"
                }
            }
        ],
        "Scatter.get_center_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter.center_x": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter.set_right": [
            {
                "type": "method",
                "args": {
                    "value": "NumericProperty"
                }
            }
        ],
        "Scatter.get_right": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter.right": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter._set_y": [
            {
                "type": "method",
                "args": {
                    "y": "Vector"
                }
            }
        ],
        "Scatter.y": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter.set_center_y": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "Scatter.get_center_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter.center_y": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter.set_top": [
            {
                "type": "method",
                "args": {
                    "value": "Vector"
                }
            }
        ],
        "Scatter.get_top": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter.top": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter._set_pos": [
            {
                "type": "method",
                "args": {
                    "pos": "Vector"
                }
            }
        ],
        "Scatter._apply_transform": [
            {
                "type": "method",
                "args": {
                    "m": "Matrix",
                    "pos": "tuple[int, int]"
                }
            }
        ],
        "Scatter._get_rotation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter._get_center": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Scatter.center": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter._set_center": [
            {
                "type": "method",
                "args": {
                    "center": "Vector"
                }
            }
        ],
        "Scatter._set_scale": [
            {
                "type": "method",
                "args": {
                    "scale": "float"
                }
            }
        ],
        "Scatter.scale": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter.transform_with_touch": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Scatter._set_rotation": [
            {
                "type": "method",
                "args": {
                    "rotation": "float"
                }
            }
        ],
        "Scatter.rotation": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Scatter._bring_to_front": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Scatter.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Scatter.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Scatter.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "core.audio.audio_gstplayer": {
        "SoundGstplayer.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundGstplayer.player": [
            {
                "type": "attr",
                "anno": "GstPlayer"
            }
        ],
        "SoundGstplayer.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "SoundGstplayer.get_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundGstplayer._get_length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundGstplayer.on_volume": [
            {
                "type": "method",
                "args": {
                    "instance": "SoundGstplayer",
                    "volume": "int"
                }
            }
        ],
        "SoundGstplayer._get_uri": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_on_gstplayer_message": [
            {
                "type": "func",
                "args": {
                    "mtype": "str",
                    "message": "str"
                }
            }
        ],
        "SoundGstplayer.seek": [
            {
                "type": "method",
                "args": {
                    "position": "float"
                }
            }
        ],
        "SoundGstplayer.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundGstplayer.play": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundGstplayer._on_gst_eos": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "SoundGstplayer._on_gst_eos_sync": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundGstplayer.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundGstplayer.load": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.audio.audio_pygame": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_platform": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SoundPygame._check_play_ev": [
            {
                "type": "attr",
                "anno": "Clock.Timer"
            }
        ],
        "SoundPygame.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundPygame._data": [
            {
                "type": "attr",
                "anno": "mixer.Sound"
            }
        ],
        "SoundPygame._channel": [
            {
                "type": "attr",
                "anno": "mixer.Sound"
            }
        ],
        "SoundPygame.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "SoundPygame.start_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "SoundPygame.on_volume": [
            {
                "type": "method",
                "args": {
                    "instance": "mixer.Sound",
                    "volume": "float"
                }
            }
        ],
        "SoundPygame.get_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundPygame.seek": [
            {
                "type": "method",
                "args": {
                    "position": "float"
                }
            }
        ],
        "SoundPygame._get_length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundPygame.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundPygame.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundPygame.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundPygame._check_play": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "SoundPygame.play": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.audio.audio_avplayer": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "AVAudioPlayer": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "NSURL": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "NSString": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "SoundAvplayer.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAvplayer._avplayer": [
            {
                "type": "attr",
                "anno": "AVAudioPlayer"
            }
        ],
        "SoundAvplayer.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "SoundAvplayer.seek": [
            {
                "type": "method",
                "args": {
                    "position": "float"
                }
            }
        ],
        "SoundAvplayer.get_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAvplayer.on_volume": [
            {
                "type": "method",
                "args": {
                    "instance": "Sound",
                    "volume": "float"
                }
            }
        ],
        "SoundAvplayer._get_length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAvplayer.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAvplayer.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAvplayer.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAvplayer.play": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.audio.audio_android": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "MediaPlayer": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "AudioManager": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "AudioAttributesBuilder": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "SoundAndroidPlayer.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAndroidPlayer._mediaplayer": [
            {
                "type": "attr",
                "anno": "MediaPlayer"
            }
        ],
        "SoundAndroidPlayer.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "SoundAndroidPlayer.seek": [
            {
                "type": "method",
                "args": {
                    "position": "float"
                }
            }
        ],
        "SoundAndroidPlayer.on_volume": [
            {
                "type": "method",
                "args": {
                    "instance": "Sound",
                    "volume": "float"
                }
            }
        ],
        "SoundAndroidPlayer.get_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAndroidPlayer._get_length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAndroidPlayer.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAndroidPlayer.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAndroidPlayer.play": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundAndroidPlayer.load": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.audio.audio_ffpyplayer": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "logger_func": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "SoundFFPy.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundFFPy._ffplayer": [
            {
                "type": "attr",
                "anno": "MediaPlayer"
            }
        ],
        "SoundFFPy.quitted": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SoundFFPy._log_callback_set": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SoundFFPy._state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SoundFFPy.state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SoundFFPy.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundFFPy.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundFFPy.get_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundFFPy.on_volume": [
            {
                "type": "method",
                "args": {
                    "instance": "Sound",
                    "volume": "int"
                }
            }
        ],
        "_log_callback": [
            {
                "type": "func",
                "args": {
                    "message": "str",
                    "level": "str"
                }
            }
        ],
        "SoundFFPy.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "SoundFFPy.seek": [
            {
                "type": "method",
                "args": {
                    "position": "float"
                }
            }
        ],
        "SoundFFPy._get_length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundFFPy.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundFFPy._do_eos": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "SoundFFPy._player_callback": [
            {
                "type": "method",
                "args": {
                    "selector": "str",
                    "value": "object"
                }
            }
        ],
        "SoundFFPy.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundFFPy.play": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.audio": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "SoundLoader._classes": [
            {
                "type": "attr",
                "anno": "list[object]"
            }
        ],
        "Sound.source": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Sound.volume": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Sound.pitch": [
            {
                "type": "attr",
                "anno": "BoundedNumericProperty"
            }
        ],
        "Sound.state": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Sound.loop": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Sound._get_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sound.status": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Sound._get_filename": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sound.filename": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Sound.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Sound.get_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sound._get_length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sound.length": [
            {
                "type": "attr",
                "anno": "Property"
            }
        ],
        "Sound.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sound.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sound.on_source": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "filename": "str"
                }
            }
        ],
        "Sound.seek": [
            {
                "type": "method",
                "args": {
                    "position": "float"
                }
            }
        ],
        "Sound.on_play": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sound.on_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "audio_libs": [
            {
                "type": "var",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "libs_loaded": [
            {
                "type": "var",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "SoundLoader.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Sound.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sound.play": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SoundLoader.register": [
            {
                "type": "method",
                "args": {
                    "classobj": "object"
                }
            }
        ]
    },
    "core.window.window_egl_rpi": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "WindowEglRpi._rpi_dispmanx_id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowEglRpi._rpi_dispmanx_layer": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowEglRpi.gl_backends_ignored": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "WindowEglRpi._size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowEglRpi.win": [
            {
                "type": "attr",
                "anno": "egl.NativeWindow"
            }
        ],
        "WindowEglRpi._create_window": [
            {
                "type": "method",
                "args": {
                    "w": "int",
                    "h": "int"
                }
            }
        ],
        "WindowEglRpi.egl_info": [
            {
                "type": "attr",
                "anno": "tuple[egl.Display, egl.Surface, egl.Context]"
            }
        ],
        "WindowEglRpi._create_egl_context": [
            {
                "type": "method",
                "args": {
                    "win": "egl.NativeWindow",
                    "flags": "int"
                }
            }
        ],
        "WindowEglRpi.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowEglRpi.flip": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowEglRpi.create_window": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.window.window_sdl2": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "KMOD_NONE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_LSHIFT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_RSHIFT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_LCTRL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_RCTRL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_LALT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_RALT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_LGUI": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_RGUI": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_NUM": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_CAPS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KMOD_MODE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_SHIFTL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_SHIFTR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_LCTRL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_RCTRL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_LALT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_RALT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_LEFT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_RIGHT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_UP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_DOWN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_HOME": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_END": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_PAGEUP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_PAGEDOWN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_SUPER": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_CAPS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_INSERT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KEYPADNUM": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_DIVIDE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_MULTIPLY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_MINUS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_PLUS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_ENTER": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_1": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_2": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_3": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_4": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_5": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_6": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_7": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_8": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_9": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_0": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_KP_DOT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F1": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F2": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F3": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F4": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F5": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F6": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F7": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F8": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F9": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F10": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F11": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F12": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F13": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F14": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDLK_F15": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SDL2MotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SDL2MotionEvent.profile": [
            {
                "type": "attr",
                "anno": "tuple[int, ...]"
            }
        ],
        "SDL2MotionEventProvider.win": [
            {
                "type": "attr",
                "anno": "WindowSDL2Storage"
            }
        ],
        "SDL2MotionEventProvider.q": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "SDL2MotionEventProvider.touchmap": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "WindowSDL._do_resize_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "WindowSDL._pause_loop": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowSDL._win": [
            {
                "type": "attr",
                "anno": "_WindowSDL2Storage"
            }
        ],
        "WindowSDL._mouse_x": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "WindowSDL._mouse_y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "WindowSDL._meta_keys": [
            {
                "type": "attr",
                "anno": "tuple[int, ...]"
            }
        ],
        "WindowSDL.command_keys": [
            {
                "type": "attr",
                "anno": "dict[int, str]"
            }
        ],
        "WindowSDL._mouse_buttons_down": [
            {
                "type": "attr",
                "anno": "set[int]"
            }
        ],
        "WindowSDL.key_map": [
            {
                "type": "attr",
                "anno": "dict[int, int]"
            }
        ],
        "WindowSDL.get_window_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL._size": [
            {
                "type": "attr",
                "anno": "tuple[float, ...]"
            }
        ],
        "WindowSDL.fullscreen": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowSDL._fake_fullscreen": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowSDL.borderless": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowSDL.system_size": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "WindowSDL._density": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "WindowSDL.dpi": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "WindowSDL._pos": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "WindowSDL._focus": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowSDL.initialized": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowSDL.toggle_fullscreen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.set_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "WindowSDL.set_icon": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "WindowSDL._get_window_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL._set_window_pos": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "WindowSDL._is_shaped": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL._get_shaped_mode": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.mouse_pos": [
            {
                "type": "attr",
                "anno": "tuple[float, float]"
            }
        ],
        "WindowSDL._fix_mouse_pos": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "WindowSDL._mouse_meta": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "WindowSDL._mouse_btn": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "WindowSDL._mouse_down": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowSDL._modifiers": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "WindowSDL._sdl_keyboard": [
            {
                "type": "attr",
                "anno": "_WindowSDL2Storage"
            }
        ],
        "WindowSDL.map_key": [
            {
                "type": "method",
                "args": {
                    "original_key": "str",
                    "new_key": "str"
                }
            }
        ],
        "WindowSDL.unmap_key": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "WindowSDL._set_minimum_size": [
            {
                "type": "method",
                "args": {
                    "args": "int"
                }
            }
        ],
        "WindowSDL._set_allow_screensaver": [
            {
                "type": "method",
                "args": {
                    "args": "int"
                }
            }
        ],
        "WindowSDL.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "WindowSDL._set_cursor_state": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "WindowSDL.set_system_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor_name": "str"
                }
            }
        ],
        "WindowSDL.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.hide": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.restore": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.minimize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.maximize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.raise_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.flip": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.grab_mouse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.ungrab_mouse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL._set_shape": [
            {
                "type": "method",
                "args": {
                    "shape_image": "str",
                    "mode": "str",
                    "cutoff": "bool",
                    "color_key": "tuple"
                }
            }
        ],
        "WindowSDL._set_shaped_mode": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "WindowSDL._update_modifiers": [
            {
                "type": "method",
                "args": {
                    "mods": "int",
                    "key": "str"
                }
            }
        ],
        "WindowSDL.do_pause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL._event_filter": [
            {
                "type": "method",
                "args": {
                    "action": "str",
                    "largs": "object"
                }
            }
        ],
        "SDL2MotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, MotionEvent], None]"
                }
            }
        ],
        "WindowSDL.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SDL2MotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "WindowSDL.release_keyboard": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowSDL._check_keyboard_shown": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "WindowSDL._do_resize": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "WindowSDL.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowSDL.screenshot": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "WindowSDL.create_window": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "WindowSDL.request_keyboard": [
            {
                "type": "method",
                "args": {
                    "callback": "str",
                    "target": "str",
                    "input_type": "str"
                }
            }
        ]
    },
    "core.window.window_pygame": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "android": [
            {
                "type": "var",
                "anno": "android.Android"
            }
        ],
        "glReadPixels": [
            {
                "type": "var",
                "anno": "GL_RGBA"
            }
        ],
        "GL_RGBA": [
            {
                "type": "var",
                "anno": "GL_RGBA"
            }
        ],
        "GL_UNSIGNED_BYTE": [
            {
                "type": "var",
                "anno": "GL_UNSIGNED_BYTE"
            }
        ],
        "WindowPygame.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "object",
                    "kwargs": "object"
                }
            }
        ],
        "WindowPygame.flags": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowPygame._pos": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "WindowPygame.fullscreen": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowPygame._fake_fullscreen": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowPygame.borderless": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowPygame._size": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "WindowPygame._set_icon_standard": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "WindowPygame._set_cursor_state": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "WindowPygame.mouse_pos": [
            {
                "type": "attr",
                "anno": "tuple[float, float]"
            }
        ],
        "WindowPygame._mouse_x": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowPygame._mouse_y": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowPygame._mouse_meta": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowPygame._mouse_btn": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "WindowPygame._mouse_down": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowPygame._modifiers": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "WindowPygame.flip": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowPygame._set_icon_win": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "WindowPygame.set_icon": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "WindowPygame.on_title": [
            {
                "type": "method",
                "args": {
                    "instance": "pygame.Window",
                    "value": "str"
                }
            }
        ],
        "WindowPygame._pygame_update_modifiers": [
            {
                "type": "method",
                "args": {
                    "mods": "int"
                }
            }
        ],
        "WindowPygame.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowPygame.release_keyboard": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowPygame._pygame_set_mode": [
            {
                "type": "method",
                "args": {
                    "size": "tuple[int, int]"
                }
            }
        ],
        "WindowPygame.toggle_fullscreen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowPygame.screenshot": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "WindowPygame.create_window": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "WindowPygame.request_keyboard": [
            {
                "type": "method",
                "args": {
                    "callback": "str",
                    "target": "str",
                    "input_type": "str"
                }
            }
        ],
        "WindowPygame.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.window": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "VKeyboard": [
            {
                "type": "var",
                "anno": "VKeyboard"
            }
        ],
        "android": [
            {
                "type": "var",
                "anno": "android.Android"
            }
        ],
        "Animation": [
            {
                "type": "var",
                "anno": "Animation"
            }
        ],
        "Keyboard.keycodes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Keyboard.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Keyboard.window": [
            {
                "type": "attr",
                "anno": "Window"
            }
        ],
        "Keyboard.callback": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Keyboard.target": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Keyboard.widget": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "Keyboard.on_key_down": [
            {
                "type": "method",
                "args": {
                    "keycode": "str",
                    "text": "str",
                    "modifiers": "List[str]"
                }
            }
        ],
        "Keyboard.on_key_up": [
            {
                "type": "method",
                "args": {
                    "keycode": "str"
                }
            }
        ],
        "Keyboard.on_textinput": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "WindowBase.__instance": [
            {
                "type": "attr",
                "anno": "EventDispatcher"
            }
        ],
        "WindowBase.__initialized": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase._fake_fullscreen": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase._density": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "WindowBase._size": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "WindowBase._modifiers": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "WindowBase._rotation": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "WindowBase._clearcolor": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "WindowBase._focus": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "WindowBase.gl_backends_allowed": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "WindowBase.gl_backends_ignored": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "WindowBase.children": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "WindowBase.parent": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "WindowBase.icon": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "WindowBase._get_modifiers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.modifiers": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase.minimum_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "WindowBase.minimum_height": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "WindowBase.allow_screensaver": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "WindowBase._get_clearcolor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase._set_clearcolor": [
            {
                "type": "method",
                "args": {
                    "value": "ColorProperty"
                }
            }
        ],
        "WindowBase.clearcolor": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "WindowBase._get_rotation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.softinput_mode": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "WindowBase._keyboard_changed": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "WindowBase._kheight": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "WindowBase._kanimation": [
            {
                "type": "attr",
                "anno": "Animation"
            }
        ],
        "WindowBase._free_kanimation": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase._get_ios_kheight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase._get_android_kheight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase._get_kheight": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.keyboard_height": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase.keyboard_anim_args": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "WindowBase.keyboard_padding": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "WindowBase._set_system_size": [
            {
                "type": "method",
                "args": {
                    "size": "ListProperty"
                }
            }
        ],
        "WindowBase._get_system_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.system_size": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase.borderless": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "WindowBase.fullscreen": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase.mouse_pos": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "WindowBase.show_cursor": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "WindowBase._get_focus": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.focus": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "WindowBase._set_cursor_state": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "WindowBase.set_system_cursor": [
            {
                "type": "method",
                "args": {
                    "cursor_name": "str"
                }
            }
        ],
        "WindowBase._get_window_pos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase._set_window_pos": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "WindowBase._set_left": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "WindowBase._set_top": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "WindowBase.__self__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.position": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "WindowBase.render_context": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "WindowBase.canvas": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "WindowBase.title": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "WindowBase.trigger_create_window": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "WindowBase.__events__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "WindowBase.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "Type[EventDispatcher]",
                    "kwargs": "Any"
                }
            }
        ],
        "WindowBase.initialized": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase._is_desktop": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase.trigger_keyboard_height": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "WindowBase._top": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowBase._get_top": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.top": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase._left": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WindowBase._get_left": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.left": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase._system_keyboard": [
            {
                "type": "attr",
                "anno": "Keyboard"
            }
        ],
        "WindowBase._keyboards": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "WindowBase._vkeyboard_cls": [
            {
                "type": "attr",
                "anno": "VKeyboard"
            }
        ],
        "WindowBase._context": [
            {
                "type": "attr",
                "anno": "Context"
            }
        ],
        "WindowBase.register": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.toggle_fullscreen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.maximize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.minimize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.restore": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.hide": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.show": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.raise_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.shape_image": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "WindowBase.shape_cutoff": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "WindowBase.shape_color_key": [
            {
                "type": "attr",
                "anno": "ColorProperty"
            }
        ],
        "WindowBase.get_gl_backend_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.initialize_gl": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.flip": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.on_flip": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.set_title": [
            {
                "type": "method",
                "args": {
                    "title": "str"
                }
            }
        ],
        "WindowBase.set_icon": [
            {
                "type": "method",
                "args": {
                    "filename": "StringProperty"
                }
            }
        ],
        "WindowBase.to_widget": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty",
                    "initial": "bool",
                    "relative": "bool"
                }
            }
        ],
        "WindowBase.to_window": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty",
                    "y": "NumericProperty",
                    "initial": "bool",
                    "relative": "bool"
                }
            }
        ],
        "WindowBase._apply_transform": [
            {
                "type": "method",
                "args": {
                    "m": "Matrix"
                }
            }
        ],
        "WindowBase.get_window_matrix": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "WindowBase.get_root_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.get_parent_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.get_parent_layout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.on_draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase._last_resize": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "WindowBase.on_rotate": [
            {
                "type": "method",
                "args": {
                    "rotation": "float"
                }
            }
        ],
        "WindowBase.on_close": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase.on_minimize": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase.on_maximize": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase.on_restore": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase.on_hide": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase.on_show": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase.on_request_close": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "WindowBase.on_cursor_enter": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase.on_cursor_leave": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "WindowBase.on_mouse_down": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "button": "str",
                    "modifiers": "List[str]"
                }
            }
        ],
        "WindowBase.on_mouse_move": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "modifiers": "int"
                }
            }
        ],
        "WindowBase.on_mouse_up": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int",
                    "button": "str",
                    "modifiers": "List[str]"
                }
            }
        ],
        "WindowBase.on_joy_axis": [
            {
                "type": "method",
                "args": {
                    "stickid": "str",
                    "axisid": "str",
                    "value": "str"
                }
            }
        ],
        "WindowBase.on_joy_hat": [
            {
                "type": "method",
                "args": {
                    "stickid": "str",
                    "hatid": "str",
                    "value": "str"
                }
            }
        ],
        "WindowBase.on_joy_ball": [
            {
                "type": "method",
                "args": {
                    "stickid": "str",
                    "ballid": "str",
                    "xvalue": "str",
                    "yvalue": "str"
                }
            }
        ],
        "WindowBase.on_joy_button_down": [
            {
                "type": "method",
                "args": {
                    "stickid": "str",
                    "buttonid": "str"
                }
            }
        ],
        "WindowBase.on_joy_button_up": [
            {
                "type": "method",
                "args": {
                    "stickid": "str",
                    "buttonid": "str"
                }
            }
        ],
        "WindowBase.__exit": [
            {
                "type": "method",
                "args": {
                    "section": "str",
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "WindowBase.on_key_down": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "scancode": "str",
                    "codepoint": "str",
                    "modifier": "str",
                    "kwargs": "str"
                }
            }
        ],
        "WindowBase.on_key_up": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "scancode": "str",
                    "codepoint": "str",
                    "modifier": "str",
                    "kwargs": "str"
                }
            }
        ],
        "WindowBase.on_textinput": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "WindowBase.on_dropfile": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "WindowBase.on_memorywarning": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.on_textedit": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "WindowBase.dpi": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.use_syskeyboard": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase.allow_vkeyboard": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase.single_vkeyboard": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase.docked_vkeyboard": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase.set_vkeyboard_class": [
            {
                "type": "method",
                "args": {
                    "cls": "VKeyboard"
                }
            }
        ],
        "WindowBase.grab_mouse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.ungrab_mouse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "window_impl": [
            {
                "type": "var",
                "anno": "List[Tuple[str, str]]"
            }
        ],
        "Window": [
            {
                "type": "var",
                "anno": "core_select_lib"
            }
        ],
        "WindowBase.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "WindowBase.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "WindowBase.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "WindowBase.screenshot": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Keyboard.keycode_to_string": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "Keyboard.string_to_keycode": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "Keyboard.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Keyboard._on_vkeyboard_textinput": [
            {
                "type": "method",
                "args": {
                    "instance": "VKeyboard",
                    "text": "str"
                }
            }
        ],
        "Keyboard._on_vkeyboard_key_up": [
            {
                "type": "method",
                "args": {
                    "instance": "VKeyboard",
                    "keycode": "str",
                    "text": "str",
                    "modifiers": "str"
                }
            }
        ],
        "Keyboard._on_vkeyboard_key_down": [
            {
                "type": "method",
                "args": {
                    "instance": "VKeyboard",
                    "keycode": "str",
                    "text": "str",
                    "modifiers": "str"
                }
            }
        ],
        "Keyboard._on_window_key_up": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "keycode": "str",
                    "largs": "str"
                }
            }
        ],
        "Keyboard._on_window_key_down": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "keycode": "str",
                    "scancode": "str",
                    "text": "str",
                    "modifiers": "str"
                }
            }
        ],
        "Keyboard._on_window_textinput": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "text": "str"
                }
            }
        ],
        "WindowBase._animate_content": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase._upd_kbd_height": [
            {
                "type": "method",
                "args": {
                    "kargs": "object"
                }
            }
        ],
        "WindowBase.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "WindowBase.configure_keyboards": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.on_move": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.on_pre_resize": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "WindowBase._set_shape_mode": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "WindowBase._get_shaped": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.shaped": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WindowBase._get_shape_mode": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.shape_mode": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase.on_shape_color_key": [
            {
                "type": "method",
                "args": {
                    "instane": "str",
                    "value": "tuple"
                }
            }
        ],
        "WindowBase.on_shape_cutoff": [
            {
                "type": "method",
                "args": {
                    "instane": "str",
                    "value": "bool"
                }
            }
        ],
        "WindowBase.on_shape_image": [
            {
                "type": "method",
                "args": {
                    "instane": "str",
                    "value": "str"
                }
            }
        ],
        "WindowBase.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.on_keyboard": [
            {
                "type": "method",
                "args": {
                    "key": "int",
                    "scancode": "str",
                    "codepoint": "int",
                    "modifier": "int",
                    "kwargs": "object"
                }
            }
        ],
        "WindowBase._unbind_create_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase._bind_create_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase._get_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.height": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase._get_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.width": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase._get_center": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.center": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase._set_size": [
            {
                "type": "method",
                "args": {
                    "size": "ListProperty"
                }
            }
        ],
        "WindowBase._get_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.size": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase._get_effective_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.on_motion": [
            {
                "type": "method",
                "args": {
                    "etype": "str",
                    "me": "ObjectProperty"
                }
            }
        ],
        "WindowBase._set_rotation": [
            {
                "type": "method",
                "args": {
                    "x": "NumericProperty"
                }
            }
        ],
        "WindowBase.rotation": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "WindowBase.update_childsize": [
            {
                "type": "method",
                "args": {
                    "childs": "ListProperty"
                }
            }
        ],
        "WindowBase.update_viewport": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.on_resize": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int"
                }
            }
        ],
        "WindowBase.create_window": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "WindowBase._update_childsize": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "object"
                }
            }
        ],
        "WindowBase.remove_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "WindowBase.release_keyboard": [
            {
                "type": "method",
                "args": {
                    "target": "str"
                }
            }
        ],
        "Keyboard.release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.release_all_keyboards": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WindowBase.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "canvas": "ObjectProperty"
                }
            }
        ],
        "WindowBase.request_keyboard": [
            {
                "type": "method",
                "args": {
                    "callback": "str",
                    "target": "str",
                    "input_type": "str"
                }
            }
        ]
    },
    "core.text.markup": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "MarkupLabelBase": [
            {
                "type": "var",
                "anno": "Label"
            }
        ],
        "MarkupLabel._style_stack": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MarkupLabel._refs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MarkupLabel._anchors": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MarkupLabel._internal_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MarkupLabel._cached_lines": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MarkupLabel.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "int",
                    "kwargs": "int"
                }
            }
        ],
        "MarkupLabel.refs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkupLabel.anchors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkupLabel.options": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MarkupLabel._resolved_base_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MarkupLabel.is_shortened": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MarkupLabel._pop_style": [
            {
                "type": "method",
                "args": {
                    "k": "str"
                }
            }
        ],
        "MarkupLabel._push_style": [
            {
                "type": "method",
                "args": {
                    "k": "str"
                }
            }
        ],
        "MarkupLabel.markup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkupLabel.shorten_post": [
            {
                "type": "method",
                "args": {
                    "lines": "list",
                    "w": "int",
                    "h": "int",
                    "margin": "int"
                }
            }
        ],
        "MarkupLabel.render_lines": [
            {
                "type": "method",
                "args": {
                    "lines": "list",
                    "options": "dict",
                    "render_text": "Callable[[str], int]",
                    "y": "int",
                    "size": "tuple"
                }
            }
        ],
        "MarkupLabel._pre_render": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MarkupLabel.render": [
            {
                "type": "method",
                "args": {
                    "real": "bool"
                }
            }
        ]
    },
    "core.text.text_pygame": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "pygame_cache": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "pygame_font_handles": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "pygame_cache_order": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "LabelPygame.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "LabelPygame._pygame_surface": [
            {
                "type": "attr",
                "anno": "pygame.Surface"
            }
        ],
        "LabelPygame._render_end": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPygame._render_begin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPygame._get_font_id": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPygame._get_font": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPygame.get_cached_extents": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPygame.get_extents": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "LabelPygame.get_descent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPygame.get_ascent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPygame._render_text": [
            {
                "type": "method",
                "args": {
                    "text": "pygame.Text",
                    "x": "int",
                    "y": "int"
                }
            }
        ]
    },
    "core.text.text_pango": {
        "__all__": [
            {
                "type": "var",
                "anno": "MethodType"
            }
        ],
        "LabelPango._font_family_support": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LabelPango.get_extents": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "LabelPango.get_ascent": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "LabelPango.get_descent": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "LabelPango.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "LabelPango.find_base_direction": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "LabelPango._rdr": [
            {
                "type": "attr",
                "anno": "KivyPangoRenderer"
            }
        ],
        "LabelPango._render_end": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PangoFontContextManager.create": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "PangoFontContextManager.exists": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "PangoFontContextManager.destroy": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "PangoFontContextManager.list": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "PangoFontContextManager.list_families": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "PangoFontContextManager.list_custom": [
            {
                "type": "attr",
                "anno": "MethodType"
            }
        ],
        "LabelPango._render_begin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PangoFontContextManager.add_font": [
            {
                "type": "method",
                "args": {
                    "font_context": "str",
                    "filename": "str",
                    "autocreate": "bool",
                    "family": "str"
                }
            }
        ],
        "LabelPango._render_text": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "x": "int",
                    "y": "int"
                }
            }
        ]
    },
    "core.text.text_sdl2": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "LabelSDL2.get_extents": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "LabelSDL2.get_descent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelSDL2.get_ascent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelSDL2._surface": [
            {
                "type": "attr",
                "anno": "_SurfaceContainer"
            }
        ],
        "LabelSDL2._render_end": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelSDL2._render_begin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelSDL2._get_font_id": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelSDL2._render_text": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "x": "int",
                    "y": "int"
                }
            }
        ]
    },
    "core.text": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_default_font_paths": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "FONT_REGULAR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FONT_ITALIC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FONT_BOLD": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "FONT_BOLDITALIC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "whitespace_pat": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "LabelBase.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LabelBase._cached_lines": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LabelBase._fonts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LabelBase._fonts_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LabelBase._fonts_dirs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LabelBase._font_dirs_files": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LabelBase._texture_1px": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "LabelBase._font_family_support": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LabelBase._text_size": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LabelBase._text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LabelBase._internal_size": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LabelBase.options": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LabelBase.texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "LabelBase.is_shortened": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LabelBase.get_extents": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "LabelBase.get_cached_extents": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._render_begin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._render_text": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "LabelBase._render_end": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.find_base_direction": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "LabelBase._size_texture": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LabelBase._size": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LabelBase._get_text": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._set_text": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "LabelBase.text": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "LabelBase.label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LabelBase.texture_1px": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._get_text_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._set_text_size": [
            {
                "type": "method",
                "args": {
                    "x": "tuple"
                }
            }
        ],
        "LabelBase.text_size": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "LabelBase.usersize": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "FontContextManagerBase.create": [
            {
                "type": "method",
                "args": {
                    "font_context": "PangoFontContextManager"
                }
            }
        ],
        "FontContextManagerBase.exists": [
            {
                "type": "method",
                "args": {
                    "font_context": "str"
                }
            }
        ],
        "FontContextManagerBase.destroy": [
            {
                "type": "method",
                "args": {
                    "font_context": "PangoFontContextManager"
                }
            }
        ],
        "FontContextManagerBase.list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontContextManagerBase.list_families": [
            {
                "type": "method",
                "args": {
                    "font_context": "PangoFontContextManager"
                }
            }
        ],
        "FontContextManagerBase.list_custom": [
            {
                "type": "method",
                "args": {
                    "font_context": "str"
                }
            }
        ],
        "FontContextManagerBase.add_font": [
            {
                "type": "method",
                "args": {
                    "font_context": "PangoFontContextManager",
                    "filename": "str",
                    "autocreate": "bool",
                    "family": "str"
                }
            }
        ],
        "label_libs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "Text": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "Label": [
            {
                "type": "var",
                "anno": "Label"
            }
        ],
        "FontContextManager": [
            {
                "type": "var",
                "anno": "PangoFontContextManager"
            }
        ],
        "LabelBase.resolve_font_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DEFAULT_FONT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LabelBase.get_system_fonts_dir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.register": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "fn_regular": "list",
                    "fn_italic": "str",
                    "fn_bold": "str",
                    "fn_bolditalic": "str"
                }
            }
        ],
        "LabelBase.__init__": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "font_size": "int",
                    "font_name": "str",
                    "bold": "bool",
                    "italic": "bool",
                    "underline": "bool",
                    "strikethrough": "bool",
                    "font_family": "str",
                    "halign": "str",
                    "valign": "str",
                    "shorten": "bool",
                    "text_size": "tuple",
                    "mipmap": "bool",
                    "color": "tuple",
                    "line_height": "float",
                    "strip": "bool",
                    "strip_reflow": "bool",
                    "shorten_from": "str",
                    "split_str": "str",
                    "unicode_errors": "str",
                    "font_hinting": "str",
                    "font_kerning": "bool",
                    "font_blended": "bool",
                    "outline_width": "tuple",
                    "outline_color": "tuple",
                    "font_context": "str",
                    "font_features": "str",
                    "base_direction": "str",
                    "text_language": "str",
                    "kwargs": "str"
                }
            }
        ],
        "LabelBase._default_line_options": [
            {
                "type": "method",
                "args": {
                    "lines": "list"
                }
            }
        ],
        "LabelBase.content_height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.content_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.content_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.clear_texture": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.fontid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.shorten": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "margin": "int"
                }
            }
        ],
        "LabelBase.render_lines": [
            {
                "type": "method",
                "args": {
                    "lines": "list",
                    "options": "dict",
                    "render_text": "Callable[[str], Texture]",
                    "y": "int",
                    "size": "tuple"
                }
            }
        ],
        "LabelBase._render_real": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase.render": [
            {
                "type": "method",
                "args": {
                    "real": "bool"
                }
            }
        ],
        "LabelBase._texture_fill": [
            {
                "type": "method",
                "args": {
                    "texture": "Texture"
                }
            }
        ],
        "LabelBase.refresh": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelBase._texture_refresh": [
            {
                "type": "method",
                "args": {
                    "l": "str"
                }
            }
        ]
    },
    "core.text.text_pil": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[text_type, ...]"
            }
        ],
        "default_font": [
            {
                "type": "var",
                "anno": "ImageFont"
            }
        ],
        "LabelPIL._cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LabelPIL._pil_im": [
            {
                "type": "attr",
                "anno": "Image"
            }
        ],
        "LabelPIL._pil_draw": [
            {
                "type": "attr",
                "anno": "ImageDraw.Draw"
            }
        ],
        "LabelPIL._render_begin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPIL._render_end": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPIL._select_font": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPIL.get_cached_extents": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LabelPIL.get_extents": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "LabelPIL._render_text": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "x": "int",
                    "y": "int"
                }
            }
        ]
    },
    "core.gl": {
        "MIN_REQUIRED_GL_VERSION": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "msgbox": [
            {
                "type": "func",
                "args": {
                    "message": "str"
                }
            }
        ],
        "print_gl_version": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "init_gl": [
            {
                "type": "func",
                "args": {
                    "allowed": "list",
                    "ignored": "list"
                }
            }
        ]
    },
    "core.spelling.spelling_osxappkit": {
        "SpellingOSXAppKit._language": [
            {
                "type": "attr",
                "anno": "NSSpellChecker"
            }
        ],
        "SpellingOSXAppKit.select_language": [
            {
                "type": "method",
                "args": {
                    "language": "str"
                }
            }
        ],
        "SpellingOSXAppKit.list_languages": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpellingOSXAppKit.check": [
            {
                "type": "method",
                "args": {
                    "word": "str"
                }
            }
        ],
        "SpellingOSXAppKit.suggest": [
            {
                "type": "method",
                "args": {
                    "fragment": "str"
                }
            }
        ],
        "SpellingOSXAppKit.__init__": [
            {
                "type": "method",
                "args": {
                    "language": "str"
                }
            }
        ]
    },
    "core.spelling": {
        "__all__": [
            {
                "type": "var",
                "anno": "core_select_lib.Library"
            }
        ],
        "SpellingBase.select_language": [
            {
                "type": "method",
                "args": {
                    "language": "str"
                }
            }
        ],
        "SpellingBase.list_languages": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpellingBase.__init__": [
            {
                "type": "method",
                "args": {
                    "language": "str"
                }
            }
        ],
        "SpellingBase.check": [
            {
                "type": "method",
                "args": {
                    "word": "str"
                }
            }
        ],
        "SpellingBase.suggest": [
            {
                "type": "method",
                "args": {
                    "fragment": "str"
                }
            }
        ],
        "_libs": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Spelling": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "core.spelling.spelling_enchant": {
        "SpellingEnchant._language": [
            {
                "type": "attr",
                "anno": "chant.Dict"
            }
        ],
        "SpellingEnchant.__init__": [
            {
                "type": "method",
                "args": {
                    "language": "enchant.Dict"
                }
            }
        ],
        "SpellingEnchant.select_language": [
            {
                "type": "method",
                "args": {
                    "language": "str"
                }
            }
        ],
        "SpellingEnchant.list_languages": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SpellingEnchant.check": [
            {
                "type": "method",
                "args": {
                    "word": "str"
                }
            }
        ],
        "SpellingEnchant.suggest": [
            {
                "type": "method",
                "args": {
                    "fragment": "str"
                }
            }
        ]
    },
    "core.camera.camera_android": {
        "Camera": [
            {
                "type": "var",
                "anno": "Camera"
            }
        ],
        "SurfaceTexture": [
            {
                "type": "var",
                "anno": "SurfaceTexture"
            }
        ],
        "GL_TEXTURE_EXTERNAL_OES": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ImageFormat": [
            {
                "type": "var",
                "anno": "ImageFormat"
            }
        ],
        "PreviewCallback.__javainterfaces__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "PreviewCallback._callback": [
            {
                "type": "attr",
                "anno": "Callback"
            }
        ],
        "PreviewCallback.__init__": [
            {
                "type": "method",
                "args": {
                    "callback": "Callback"
                }
            }
        ],
        "PreviewCallback.onPreviewFrame": [
            {
                "type": "method",
                "args": {
                    "data": "Fbo",
                    "camera": "CameraAndroid"
                }
            }
        ],
        "CameraAndroid._update_ev": [
            {
                "type": "attr",
                "anno": "Clock.Timer"
            }
        ],
        "CameraAndroid._android_camera": [
            {
                "type": "attr",
                "anno": "Camera"
            }
        ],
        "CameraAndroid._preview_cb": [
            {
                "type": "attr",
                "anno": "PreviewCallback"
            }
        ],
        "CameraAndroid._buflock": [
            {
                "type": "attr",
                "anno": "threading.Lock"
            }
        ],
        "CameraAndroid.fps": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CameraAndroid._bufsize": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CameraAndroid._camera_texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "CameraAndroid._surface_texture": [
            {
                "type": "attr",
                "anno": "SurfaceTexture"
            }
        ],
        "CameraAndroid._fbo": [
            {
                "type": "attr",
                "anno": "Fbo"
            }
        ],
        "CameraAndroid._texture_cb": [
            {
                "type": "attr",
                "anno": "Callback"
            }
        ],
        "CameraAndroid._texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "CameraAndroid._buffer": [
            {
                "type": "attr",
                "anno": "Fbo"
            }
        ],
        "CameraAndroid._on_preview_frame": [
            {
                "type": "method",
                "args": {
                    "data": "Fbo",
                    "camera": "Camera"
                }
            }
        ],
        "CameraAndroid.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "CameraAndroid._refresh_fbo": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid.grab_frame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid.get_camera_count": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid.decode_frame": [
            {
                "type": "method",
                "args": {
                    "buf": "str"
                }
            }
        ],
        "CameraAndroid.read_frame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid._copy_to_gpu": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "CameraAndroid.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid._release_camera": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraAndroid.init_camera": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.camera.camera_gi": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "version": [
            {
                "type": "var",
                "anno": "tuple[int, ...]"
            }
        ],
        "_MapInfo._fields_": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "CameraGi._instances": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "CameraGi._pipeline": [
            {
                "type": "attr",
                "anno": "Gst"
            }
        ],
        "CameraGi._camerasink": [
            {
                "type": "attr",
                "anno": "Gst"
            }
        ],
        "CameraGi._decodebin": [
            {
                "type": "attr",
                "anno": "Gst"
            }
        ],
        "CameraGi._texturesize": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraGi._video_src": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CameraGi._sample": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraGi.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraGi._texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "CameraGi._buffer": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "_on_cameragi_unref": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "CameraGi.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "CameraGi.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraGi.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "camera_gi_clean": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "CameraGi._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "CameraGi._gst_new_sample": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "CameraGi.init_camera": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.camera.camera_opencv": {
        "__all__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "Hg.__getattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str"
                }
            }
        ],
        "hg": [
            {
                "type": "var",
                "anno": "Hg"
            }
        ],
        "CameraOpenCV._update_ev": [
            {
                "type": "attr",
                "anno": "Clock.Timer"
            }
        ],
        "CameraOpenCV.opencvMajorVersion": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CameraOpenCV._device": [
            {
                "type": "attr",
                "anno": "cv2.CaptureProperty"
            }
        ],
        "CameraOpenCV.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "CameraOpenCV._resolution": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraOpenCV.fps": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CameraOpenCV._texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "CameraOpenCV._format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CameraOpenCV._buffer": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraOpenCV._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "CameraOpenCV.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraOpenCV.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraOpenCV.init_camera": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.camera.camera_picamera": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "CameraPiCamera._update_ev": [
            {
                "type": "attr",
                "anno": "Clock.Timer"
            }
        ],
        "CameraPiCamera._camera": [
            {
                "type": "attr",
                "anno": "PiCamera"
            }
        ],
        "CameraPiCamera._format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CameraPiCamera._framerate": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CameraPiCamera.fps": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CameraPiCamera._texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "CameraPiCamera._buffer": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraPiCamera.raw_buffer_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraPiCamera.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "CameraPiCamera._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "CameraPiCamera.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraPiCamera.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraPiCamera.init_camera": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.camera": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "CameraBase.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraBase.stopped": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CameraBase._resolution": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraBase._index": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "CameraBase._buffer": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraBase._format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CameraBase._texture": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraBase.capture_device": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CameraBase._get_resolution": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraBase._get_index": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraBase._get_texture": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraBase.texture": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "CameraBase.init_camera": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraBase._set_index": [
            {
                "type": "method",
                "args": {
                    "x": "int"
                }
            }
        ],
        "CameraBase.index": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "CameraBase._set_resolution": [
            {
                "type": "method",
                "args": {
                    "res": "tuple"
                }
            }
        ],
        "CameraBase.resolution": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "CameraBase.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraBase.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraBase._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "CameraBase.on_texture": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CameraBase.on_load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "providers": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Camera": [
            {
                "type": "var",
                "anno": "Camera"
            }
        ],
        "CameraBase.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "CameraBase._copy_to_gpu": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.image.img_pil": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "ImageLoaderPIL.can_load_memory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderPIL.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderPIL.can_save": [
            {
                "type": "method",
                "args": {
                    "fmt": "str",
                    "is_bytesio": "bool"
                }
            }
        ],
        "ImageLoaderPIL.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageLoaderPIL._img_correct": [
            {
                "type": "method",
                "args": {
                    "_img_tmp": "PILImage.Image"
                }
            }
        ],
        "ImageLoaderPIL._img_read": [
            {
                "type": "method",
                "args": {
                    "im": "PILImage.Image"
                }
            }
        ],
        "ImageLoaderPIL.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "ImageLoaderPIL.save": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "width": "int",
                    "height": "int",
                    "pixelfmt": "str",
                    "pixels": "str",
                    "flipped": "bool",
                    "imagefmt": "str"
                }
            }
        ]
    },
    "core.image.img_tex": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ImageLoaderTex.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTex.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ]
    },
    "core.image.img_ffpyplayer": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "logger_func": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ImageLoaderFFPy.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderFFPy.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_log_callback": [
            {
                "type": "func",
                "args": {
                    "message": "str",
                    "level": "str"
                }
            }
        ],
        "ImageLoaderFFPy.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ]
    },
    "core.image.img_pygame": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[type[ImageLoaderPygame], ...]"
            }
        ],
        "ImageLoaderPygame.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ImageLoaderPygame.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderPygame.can_save": [
            {
                "type": "method",
                "args": {
                    "fmt": "str",
                    "is_bytesio": "bool"
                }
            }
        ],
        "ImageLoaderPygame.can_load_memory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderPygame.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageLoaderPygame.save": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "width": "int",
                    "height": "int",
                    "pixelfmt": "str",
                    "pixels": "str",
                    "flipped": "bool",
                    "imagefmt": "str"
                }
            }
        ],
        "ImageLoaderPygame.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ]
    },
    "core.image.img_dds": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ImageLoaderDDS.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderDDS.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageLoaderDDS.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ]
    },
    "core.image.img_sdl2": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ImageLoaderSDL2._ensure_ext": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderSDL2.extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderSDL2.can_save": [
            {
                "type": "method",
                "args": {
                    "fmt": "str",
                    "is_bytesio": "bool"
                }
            }
        ],
        "ImageLoaderSDL2.can_load_memory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderSDL2.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageLoaderSDL2.save": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "width": "int",
                    "height": "int",
                    "pixelfmt": "str",
                    "pixels": "str",
                    "flipped": "bool",
                    "imagefmt": "str"
                }
            }
        ],
        "ImageLoaderSDL2.load": [
            {
                "type": "method",
                "args": {
                    "filename": "PathLike"
                }
            }
        ]
    },
    "core.image": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Texture": [
            {
                "type": "var",
                "anno": "Texture"
            }
        ],
        "TextureRegion": [
            {
                "type": "var",
                "anno": "TextureRegion"
            }
        ],
        "ImageData.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ImageData._supported_fmts": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ImageData.fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageData.mipmaps": [
            {
                "type": "attr",
                "anno": "dict[int, list]"
            }
        ],
        "ImageData.source": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageData.flip_vertical": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ImageData.source_image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageData.release_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageData.width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageData.height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageData.data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageData.rowlength": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageData.size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageData.have_mipmap": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageData.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageData.add_mipmap": [
            {
                "type": "method",
                "args": {
                    "level": "int",
                    "width": "int",
                    "height": "int",
                    "data": "int",
                    "rowlength": "int"
                }
            }
        ],
        "ImageData.__init__": [
            {
                "type": "method",
                "args": {
                    "width": "int",
                    "height": "int",
                    "fmt": "str",
                    "data": "int",
                    "source": "str",
                    "flip_vertical": "bool",
                    "source_image": "str",
                    "rowlength": "int"
                }
            }
        ],
        "ImageData.get_mipmap": [
            {
                "type": "method",
                "args": {
                    "level": "int"
                }
            }
        ],
        "ImageLoaderBase.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ImageLoaderBase._mipmap": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ImageLoaderBase.keep_data": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ImageLoaderBase._nocache": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ImageLoaderBase._ext": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageLoaderBase._inline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ImageLoaderBase.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageLoaderBase._data": [
            {
                "type": "attr",
                "anno": "ImageData"
            }
        ],
        "ImageLoaderBase._textures": [
            {
                "type": "attr",
                "anno": "TextureRegion"
            }
        ],
        "ImageLoaderBase.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "ImageLoaderBase.can_save": [
            {
                "type": "method",
                "args": {
                    "fmt": "str",
                    "is_bytesio": "bool"
                }
            }
        ],
        "ImageLoaderBase.can_load_memory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderBase.save": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ImageLoaderBase.nocache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoader.loaders": [
            {
                "type": "attr",
                "anno": "list[ImageLoaderBase]"
            }
        ],
        "Image.copy_attributes": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Image.data_uri_re": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Image._anim_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "Image._mipmap": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Image._keep_data": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Image._nocache": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Image._size": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "Image._image": [
            {
                "type": "attr",
                "anno": "ImageLoaderBase"
            }
        ],
        "Image._filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Image._texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "Image._anim_available": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Image._anim_index": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Image._anim_delay": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Image._iteration_done": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Image.textures": [
            {
                "type": "attr",
                "anno": "list[Texture]"
            }
        ],
        "Image._get_anim_delay": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.anim_available": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.anim_index": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.on_texture": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Image._get_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image._get_filename": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.nocache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image._find_format_from_filename": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "image_libs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "libs_loaded": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "ImageLoader.register": [
            {
                "type": "method",
                "args": {
                    "defcls": "ImageLoaderBase"
                }
            }
        ],
        "ImageLoaderBase.populate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderBase.textures": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderBase.texture": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderBase.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ImageData.iterate_mipmaps": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoader.zip_loader": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "kwargs": "object"
                }
            }
        ],
        "ImageLoader.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Image._set_filename": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "Image.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Image.remove_from_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.__init__": [
            {
                "type": "method",
                "args": {
                    "arg": "object",
                    "kwargs": "object"
                }
            }
        ],
        "Image.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "kwargs": "object"
                }
            }
        ],
        "load": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Image._anim": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Image._set_anim_delay": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "Image.anim_delay": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Image.anim_reset": [
            {
                "type": "method",
                "args": {
                    "allow_anim": "bool"
                }
            }
        ],
        "Image._img_iterate": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "Image.texture": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderBase.height": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderBase.width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image._set_image": [
            {
                "type": "method",
                "args": {
                    "image": "ImageLoaderBase"
                }
            }
        ],
        "Image.image": [
            {
                "type": "attr",
                "anno": "ImageLoaderBase"
            }
        ],
        "ImageLoaderBase.size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Image.load_memory": [
            {
                "type": "method",
                "args": {
                    "data": "BytesIO",
                    "ext": "str",
                    "filename": "str"
                }
            }
        ],
        "Image.read_pixel": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Image.save": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "flipped": "bool",
                    "fmt": "str"
                }
            }
        ]
    },
    "core.clipboard.clipboard_nspaste": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "NSPasteboard": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "NSString": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "ClipboardNSPaste._clipboard": [
            {
                "type": "attr",
                "anno": "NSPasteboard"
            }
        ],
        "ClipboardNSPaste.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardNSPaste.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardNSPaste.put": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardNSPaste.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.clipboard.clipboard_sdl2": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ClipboardSDL2.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardSDL2._encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ClipboardSDL2.put": [
            {
                "type": "method",
                "args": {
                    "data": "bytes",
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardSDL2.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardSDL2._ensure_clipboard": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.clipboard._clipboard_ext": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[type, ...]"
            }
        ],
        "ClipboardExternalBase._clip": [
            {
                "type": "method",
                "args": {
                    "inout": "str",
                    "selection": "str"
                }
            }
        ],
        "ClipboardExternalBase.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardExternalBase.put": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardExternalBase.set_cutbuffer": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "ClipboardExternalBase.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardExternalBase.get_cutbuffer": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.clipboard.clipboard_gtk3": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "clipboard": [
            {
                "type": "var",
                "anno": "Gtk.Clipboard"
            }
        ],
        "ClipboardGtk3._is_init": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ClipboardGtk3.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardGtk3.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardGtk3.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardGtk3.put": [
            {
                "type": "method",
                "args": {
                    "data": "bytes",
                    "mimetype": "str"
                }
            }
        ]
    },
    "core.clipboard.clipboard_xsel": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "p": [
            {
                "type": "var",
                "anno": "subprocess.Popen"
            }
        ],
        "ClipboardXsel._clip": [
            {
                "type": "method",
                "args": {
                    "inout": "str",
                    "selection": "str"
                }
            }
        ]
    },
    "core.clipboard.clipboard_dummy": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "ClipboardDummy._data": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ClipboardDummy.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardDummy.put": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardDummy.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardDummy.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ]
    },
    "core.clipboard.clipboard_android": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "AndroidString": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "PythonActivity": [
            {
                "type": "var",
                "anno": "PythonActivity"
            }
        ],
        "Context": [
            {
                "type": "var",
                "anno": "autoclass"
            }
        ],
        "VER": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "sdk": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ClipboardAndroid._clipboard": [
            {
                "type": "attr",
                "anno": "None"
            }
        ],
        "ClipboardAndroid._data": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ClipboardAndroid.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardAndroid._initialize_clipboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardAndroid._get_clipboard": [
            {
                "type": "method",
                "args": {
                    "f": "Callable"
                }
            }
        ],
        "ClipboardAndroid._get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardAndroid.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardAndroid._set": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardAndroid.put": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardAndroid.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.clipboard.clipboard_xclip": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "p": [
            {
                "type": "var",
                "anno": "subprocess.Popen"
            }
        ],
        "ClipboardXclip._clip": [
            {
                "type": "method",
                "args": {
                    "inout": "str",
                    "selection": "str"
                }
            }
        ]
    },
    "core.clipboard": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ClipboardBase.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardBase.put": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardBase.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardBase._clip_mime_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ClipboardBase._encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ClipboardBase._ensure_clipboard": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardBase._copy": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "ClipboardBase.copy": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "_clipboards": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "Clipboard": [
            {
                "type": "var",
                "anno": "ClipboardBase"
            }
        ],
        "_cutbuffers": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "CutBuffer": [
            {
                "type": "var",
                "anno": "ClipboardBase"
            }
        ],
        "ClipboardBase._paste": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardBase.paste": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.clipboard.clipboard_winctypes": {
        "__all__": [
            {
                "type": "var",
                "anno": "wintypes.Winctypes"
            }
        ],
        "user32": [
            {
                "type": "var",
                "anno": "ctypes.windll.user32"
            }
        ],
        "kernel32": [
            {
                "type": "var",
                "anno": "ctypes.windll.kernel32"
            }
        ],
        "msvcrt": [
            {
                "type": "var",
                "anno": "ctypes.cdll.msvcrt"
            }
        ],
        "c_char_p": [
            {
                "type": "var",
                "anno": "wintypes.CType[str]"
            }
        ],
        "c_wchar_p": [
            {
                "type": "var",
                "anno": "ctypes.c_wchar_p"
            }
        ],
        "ClipboardWindows.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardWindows.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardWindows.put": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "mimetype": "str"
                }
            }
        ]
    },
    "core.clipboard.clipboard_dbusklipper": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "bus": [
            {
                "type": "var",
                "anno": "dbus.SessionBus"
            }
        ],
        "proxy": [
            {
                "type": "var",
                "anno": "dbus.Object"
            }
        ],
        "ClipboardDbusKlipper._is_init": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ClipboardDbusKlipper.iface": [
            {
                "type": "attr",
                "anno": "dbus.Interface"
            }
        ],
        "ClipboardDbusKlipper.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardDbusKlipper.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardDbusKlipper.put": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardDbusKlipper.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.clipboard.clipboard_pygame": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ClipboardPygame._is_init": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ClipboardPygame._types": [
            {
                "type": "attr",
                "anno": "pygame.scrap.Type"
            }
        ],
        "ClipboardPygame._aliases": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ClipboardPygame.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "pygame.scrap.Clipboard",
                    "kwargs": "pygame.scrap.Clipboard"
                }
            }
        ],
        "ClipboardPygame.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardPygame.get_types": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardPygame.get": [
            {
                "type": "method",
                "args": {
                    "mimetype": "str"
                }
            }
        ],
        "ClipboardPygame.put": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "mimetype": "str"
                }
            }
        ]
    },
    "core.video": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "VideoBase.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "VideoBase.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "VideoBase._wantplay": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VideoBase._buffer": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "VideoBase._filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoBase._texture": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoBase._volume": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "VideoBase._state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoBase._autoplay": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VideoBase._async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VideoBase.eos": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoBase.on_eos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.on_load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.on_frame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase._get_filename": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase._get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase._get_volume": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase._set_volume": [
            {
                "type": "method",
                "args": {
                    "volume": "float"
                }
            }
        ],
        "VideoBase.volume": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "VideoBase._get_duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.duration": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "VideoBase._get_texture": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.texture": [
            {
                "type": "attr",
                "anno": "Property"
            }
        ],
        "VideoBase._get_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.state": [
            {
                "type": "attr",
                "anno": "property[VideoBase, str]"
            }
        ],
        "VideoBase._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "VideoBase.seek": [
            {
                "type": "method",
                "args": {
                    "percent": "float",
                    "precise": "bool"
                }
            }
        ],
        "VideoBase._set_position": [
            {
                "type": "method",
                "args": {
                    "pos": "int"
                }
            }
        ],
        "VideoBase.position": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "VideoBase.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.pause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.play": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoBase._set_filename": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "VideoBase.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoBase.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "video_providers": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "Video": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "VideoBase.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "VideoBase._do_eos": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ]
    },
    "core.video.video_gstplayer": {
        "VideoGstplayer.player": [
            {
                "type": "attr",
                "anno": "GstPlayer"
            }
        ],
        "VideoGstplayer._buffer": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "VideoGstplayer._buffer_lock": [
            {
                "type": "attr",
                "anno": "Lock"
            }
        ],
        "VideoGstplayer.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "_on_gstplayer_buffer": [
            {
                "type": "func",
                "args": {
                    "video": "VideoBase",
                    "width": "int",
                    "height": "int",
                    "data": "int"
                }
            }
        ],
        "VideoGstplayer.player_callback": [
            {
                "type": "attr",
                "anno": "Callable[[VideoBase], None]"
            }
        ],
        "VideoGstplayer._texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "VideoGstplayer._get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoGstplayer._get_duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoGstplayer._volume": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VideoGstplayer._set_volume": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "VideoGstplayer._update_texture": [
            {
                "type": "method",
                "args": {
                    "buf": "tuple"
                }
            }
        ],
        "VideoGstplayer._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "_on_gstplayer_message": [
            {
                "type": "func",
                "args": {
                    "mtype": "str",
                    "message": "str"
                }
            }
        ],
        "VideoGstplayer.pause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoGstplayer.seek": [
            {
                "type": "method",
                "args": {
                    "percent": "float",
                    "precise": "bool"
                }
            }
        ],
        "VideoGstplayer.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoGstplayer._get_uri": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoGstplayer._on_gst_eos_sync": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoGstplayer.play": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoGstplayer.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoGstplayer.load": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core.video.video_ffmpeg": {
        "VideoFFMpeg._do_load": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VideoFFMpeg._player": [
            {
                "type": "attr",
                "anno": "ffmpeg.FFVideo"
            }
        ],
        "VideoFFMpeg.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "VideoFFMpeg._state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoFFMpeg._texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "VideoFFMpeg._get_duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFMpeg._get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFMpeg._volume": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VideoFFMpeg._set_volume": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "VideoFFMpeg.seek": [
            {
                "type": "method",
                "args": {
                    "percent": "float",
                    "precise": "bool"
                }
            }
        ],
        "VideoFFMpeg.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFMpeg.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFMpeg.play": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFMpeg.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFMpeg._do_eos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFMpeg._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ]
    },
    "core.video.video_ffpyplayer": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "logger_func": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "VideoFFPy.YUV_RGB_FS": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoFFPy._trigger": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "VideoFFPy._ffplayer": [
            {
                "type": "attr",
                "anno": "MediaPlayer"
            }
        ],
        "VideoFFPy._thread": [
            {
                "type": "attr",
                "anno": "Thread"
            }
        ],
        "VideoFFPy._next_frame": [
            {
                "type": "attr",
                "anno": "tuple[MediaPlayer, int]"
            }
        ],
        "VideoFFPy._seek_queue": [
            {
                "type": "attr",
                "anno": "list[tuple[float, bool]]"
            }
        ],
        "VideoFFPy._ffplayer_need_quit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VideoFFPy._get_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFPy._volume": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "VideoFFPy._set_volume": [
            {
                "type": "method",
                "args": {
                    "volume": "float"
                }
            }
        ],
        "VideoFFPy._get_duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFPy.position": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "VideoFFPy._state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoFFPy._change_state": [
            {
                "type": "method",
                "args": {
                    "state": "str"
                }
            }
        ],
        "VideoFFPy._size": [
            {
                "type": "attr",
                "anno": "tuple[int, int]"
            }
        ],
        "VideoFFPy._tex_y": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "VideoFFPy._tex_u": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "VideoFFPy._tex_v": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "VideoFFPy._fbo": [
            {
                "type": "attr",
                "anno": "Fbo"
            }
        ],
        "VideoFFPy._texture": [
            {
                "type": "attr",
                "anno": "Texture"
            }
        ],
        "VideoFFPy._out_fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VideoFFPy.pause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_log_callback": [
            {
                "type": "func",
                "args": {
                    "message": "str",
                    "level": "str"
                }
            }
        ],
        "VideoFFPy.seek": [
            {
                "type": "method",
                "args": {
                    "percent": "float",
                    "precise": "bool"
                }
            }
        ],
        "VideoFFPy._set_position": [
            {
                "type": "method",
                "args": {
                    "pos": "int"
                }
            }
        ],
        "VideoFFPy.unload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFPy.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFPy.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFPy._player_callback": [
            {
                "type": "method",
                "args": {
                    "selector": "str",
                    "value": "str"
                }
            }
        ],
        "VideoFFPy.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFPy._redraw": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "VideoFFPy.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "VideoFFPy._do_eos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFPy._next_frame_run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VideoFFPy.play": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "event": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "__doc__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EventDispatcher": [
            {
                "type": "var",
                "anno": "EventDispatcher"
            }
        ],
        "ObjectWithUid": [
            {
                "type": "var",
                "anno": "EventDispatcher"
            }
        ],
        "Observable": [
            {
                "type": "var",
                "anno": "EventDispatcher"
            }
        ]
    },
    "utils": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "boundary": [
            {
                "type": "func",
                "args": {
                    "value": "int",
                    "minvalue": "int",
                    "maxvalue": "int"
                }
            }
        ],
        "intersection": [
            {
                "type": "func",
                "args": {
                    "set1": "SafeList",
                    "set2": "SafeList"
                }
            }
        ],
        "difference": [
            {
                "type": "func",
                "args": {
                    "set1": "SafeList",
                    "set2": "SafeList"
                }
            }
        ],
        "get_random_color": [
            {
                "type": "func",
                "args": {
                    "alpha": "float"
                }
            }
        ],
        "is_color_transparent": [
            {
                "type": "func",
                "args": {
                    "c": "str"
                }
            }
        ],
        "hex_colormap": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DEPRECATED_CALLERS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "SafeList.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "QueryDict.__getattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str"
                }
            }
        ],
        "QueryDict.__setattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "value": "str"
                }
            }
        ],
        "format_bytes_to_human": [
            {
                "type": "func",
                "args": {
                    "size": "float",
                    "precision": "int"
                }
            }
        ],
        "_get_platform": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "platform": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "escape_markup": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "reify.func": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "reify.__doc__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "reify.__init__": [
            {
                "type": "method",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "reify.__get__": [
            {
                "type": "method",
                "args": {
                    "inst": "object",
                    "cls": "type"
                }
            }
        ],
        "deprecated": [
            {
                "type": "func",
                "args": {
                    "func": "object",
                    "msg": "str"
                }
            }
        ],
        "SafeList.iterate": [
            {
                "type": "method",
                "args": {
                    "reverse": "bool"
                }
            }
        ],
        "interpolate": [
            {
                "type": "func",
                "args": {
                    "value_from": "float",
                    "value_to": "float",
                    "step": "int"
                }
            }
        ],
        "_get_pi_version": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "pi_version": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "strtotuple": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "get_hex_from_color": [
            {
                "type": "func",
                "args": {
                    "color": "list"
                }
            }
        ],
        "get_color_from_hex": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "colormap": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "rgba": [
            {
                "type": "func",
                "args": {
                    "s": "object",
                    "args": "int"
                }
            }
        ]
    },
    "base": {
        "__all__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ExceptionManagerBase.RAISE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ExceptionManagerBase.PASS": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ExceptionManagerBase.handlers": [
            {
                "type": "attr",
                "anno": "list[ExceptionHandler]"
            }
        ],
        "ExceptionManagerBase.policy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ExceptionManagerBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ExceptionHandler.handle_exception": [
            {
                "type": "method",
                "args": {
                    "exception": "BaseException"
                }
            }
        ],
        "EventLoopBase.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "EventLoopBase.quit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "EventLoopBase.input_events": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "EventLoopBase.postproc_modules": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "EventLoopBase.status": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "EventLoopBase.stopping": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "EventLoopBase.input_providers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "EventLoopBase.input_providers_autoremove": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "EventLoopBase.event_listeners": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "EventLoopBase.window": [
            {
                "type": "attr",
                "anno": "Window"
            }
        ],
        "EventLoopBase.me_list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "EventLoopBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoop": [
            {
                "type": "var",
                "anno": "EventLoop"
            }
        ],
        "EventLoopBase.touches": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.set_window": [
            {
                "type": "method",
                "args": {
                    "window": "Window"
                }
            }
        ],
        "EventLoopBase.remove_android_splash": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "EventLoopBase.on_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.on_pause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.on_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.ensure_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.remove_postproc_module": [
            {
                "type": "method",
                "args": {
                    "mod": "str"
                }
            }
        ],
        "EventLoopBase.remove_event_listener": [
            {
                "type": "method",
                "args": {
                    "listener": "str"
                }
            }
        ],
        "EventLoopBase.remove_input_provider": [
            {
                "type": "method",
                "args": {
                    "provider": "EventLoopBase"
                }
            }
        ],
        "ExceptionManagerBase.remove_handler": [
            {
                "type": "method",
                "args": {
                    "cls": "ExceptionHandler"
                }
            }
        ],
        "EventLoopBase._dispatch_input": [
            {
                "type": "method",
                "args": {
                    "ev": "str"
                }
            }
        ],
        "EventLoopBase.add_postproc_module": [
            {
                "type": "method",
                "args": {
                    "mod": "object"
                }
            }
        ],
        "EventLoopBase.add_event_listener": [
            {
                "type": "method",
                "args": {
                    "listener": "str"
                }
            }
        ],
        "EventLoopBase.add_input_provider": [
            {
                "type": "method",
                "args": {
                    "provider": "str",
                    "auto_remove": "bool"
                }
            }
        ],
        "ExceptionManagerBase.add_handler": [
            {
                "type": "method",
                "args": {
                    "cls": "ExceptionHandler"
                }
            }
        ],
        "ExceptionManagerBase.handle_exception": [
            {
                "type": "method",
                "args": {
                    "inst": "BaseException"
                }
            }
        ],
        "EventLoopBase.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "stopTouchApp": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "EventLoopBase.exit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.post_dispatch_input": [
            {
                "type": "method",
                "args": {
                    "etype": "str",
                    "me": "object"
                }
            }
        ],
        "EventLoopBase.dispatch_input": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.async_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EventLoopBase.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_runTouchApp_prepare": [
            {
                "type": "func",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "EventLoopBase.mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "runTouchApp": [
            {
                "type": "func",
                "args": {
                    "widget": "object",
                    "embedded": "bool"
                }
            }
        ],
        "EventLoopBase.async_mainloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "async_runTouchApp": [
            {
                "type": "func",
                "args": {
                    "widget": "object",
                    "embedded": "bool",
                    "async_lib": "object"
                }
            }
        ]
    },
    "factory": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "FactoryBase.classes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FactoryBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FactoryBase.create_from": [
            {
                "type": "method",
                "args": {
                    "cls": "type[FactoryBase]",
                    "factory": "FactoryBase"
                }
            }
        ],
        "FactoryBase.is_template": [
            {
                "type": "method",
                "args": {
                    "classname": "str"
                }
            }
        ],
        "FactoryBase.register": [
            {
                "type": "method",
                "args": {
                    "classname": "str",
                    "cls": "str",
                    "module": "str",
                    "is_template": "bool",
                    "baseclasses": "str",
                    "filename": "str",
                    "warn": "bool"
                }
            }
        ],
        "FactoryBase.unregister": [
            {
                "type": "method",
                "args": {
                    "classnames": "str"
                }
            }
        ],
        "FactoryBase.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "FactoryBase.get": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "FactoryBase.unregister_from_filename": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ]
    },
    "effects.opacityscroll": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[Type[DampedScrollEffect], ...]"
            }
        ],
        "OpacityScrollEffect.on_overscroll": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ]
    },
    "effects.dampedscroll": {
        "__all__": [
            {
                "type": "var",
                "anno": "sp.Tuple[str, ...]"
            }
        ],
        "DampedScrollEffect.edge_damping": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DampedScrollEffect.spring_constant": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DampedScrollEffect.min_overscroll": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DampedScrollEffect.round_value": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "DampedScrollEffect.velocity": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DampedScrollEffect.value": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DampedScrollEffect.overscroll": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DampedScrollEffect.scroll": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "DampedScrollEffect.on_overscroll": [
            {
                "type": "method",
                "args": {
                    "args": "sp.Parameter"
                }
            }
        ],
        "DampedScrollEffect.apply_distance": [
            {
                "type": "method",
                "args": {
                    "distance": "NumericProperty"
                }
            }
        ],
        "DampedScrollEffect.on_value": [
            {
                "type": "method",
                "args": {
                    "args": "sp.Any"
                }
            }
        ],
        "DampedScrollEffect.update_velocity": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ]
    },
    "effects.kinetic": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[Type[KineticEffect], ...]"
            }
        ],
        "KineticEffect.velocity": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "KineticEffect.friction": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "KineticEffect.value": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "KineticEffect.is_manual": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "KineticEffect.max_history": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "KineticEffect.min_distance": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "KineticEffect.min_velocity": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "KineticEffect.history": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "KineticEffect.trigger_velocity_update": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "KineticEffect.apply_distance": [
            {
                "type": "method",
                "args": {
                    "distance": "NumericProperty"
                }
            }
        ],
        "KineticEffect.start": [
            {
                "type": "method",
                "args": {
                    "val": "object",
                    "t": "float"
                }
            }
        ],
        "KineticEffect.stop": [
            {
                "type": "method",
                "args": {
                    "val": "NumericProperty",
                    "t": "Clock.Timer"
                }
            }
        ],
        "KineticEffect.cancel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KineticEffect.update_velocity": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "KineticEffect.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "KineticEffect.update": [
            {
                "type": "method",
                "args": {
                    "val": "NumericProperty",
                    "t": "float"
                }
            }
        ]
    },
    "effects.scroll": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "ScrollEffect.drag_threshold": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollEffect.min": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollEffect.max": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollEffect.scroll": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollEffect.overscroll": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollEffect.target_widget": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ScrollEffect.displacement": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollEffect.value": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "ScrollEffect.velocity": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ScrollEffect.is_manual": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ScrollEffect.start": [
            {
                "type": "method",
                "args": {
                    "val": "float",
                    "t": "float"
                }
            }
        ],
        "ScrollEffect.update": [
            {
                "type": "method",
                "args": {
                    "val": "NumericProperty",
                    "t": "float"
                }
            }
        ],
        "ScrollEffect.stop": [
            {
                "type": "method",
                "args": {
                    "val": "NumericProperty",
                    "t": "Clock.Timer"
                }
            }
        ],
        "ScrollEffect.reset": [
            {
                "type": "method",
                "args": {
                    "pos": "NumericProperty"
                }
            }
        ],
        "ScrollEffect.on_value": [
            {
                "type": "method",
                "args": {
                    "args": "NumericProperty"
                }
            }
        ]
    },
    "tests.test_imageloader": {
        "DEBUG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "ASSETDIR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "v0_PIXELS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "v0_FILE_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "asset": [
            {
                "type": "func",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "has_alpha": [
            {
                "type": "func",
                "args": {
                    "fmt": "str"
                }
            }
        ],
        "get_pixel_alpha": [
            {
                "type": "func",
                "args": {
                    "pix": "bytes",
                    "fmt": "str"
                }
            }
        ],
        "_TestContext.loadercls": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "_TestContext._fd": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_TestContext._fn": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_TestContext._ok": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_TestContext._skip": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_TestContext._fail": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_TestContext._stats": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_TestContext.__init__": [
            {
                "type": "method",
                "args": {
                    "loadercls": "type"
                }
            }
        ],
        "_TestContext.stats": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_TestContext.results": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_TestContext.start": [
            {
                "type": "method",
                "args": {
                    "fn": "dict",
                    "fd": "dict"
                }
            }
        ],
        "_TestContext.end": [
            {
                "type": "method",
                "args": {
                    "fn": "dict"
                }
            }
        ],
        "ImageLoaderTestCase._context": [
            {
                "type": "attr",
                "anno": "_TestContext"
            }
        ],
        "ImageLoaderTestCase._image_files": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ImageLoaderTestCase.test_missing_tests": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_TestContext.dbg": [
            {
                "type": "method",
                "args": {
                    "msgtype": "str",
                    "info": "str"
                }
            }
        ],
        "rgba_to": [
            {
                "type": "func",
                "args": {
                    "pix_in": "bytes",
                    "target_fmt": "str",
                    "w": "int",
                    "h": "int",
                    "pitch": "int"
                }
            }
        ],
        "bytes_per_pixel": [
            {
                "type": "func",
                "args": {
                    "fmt": "str"
                }
            }
        ],
        "match_prediction": [
            {
                "type": "func",
                "args": {
                    "pixels": "bytes",
                    "fmt": "str",
                    "fd": "dict",
                    "pitch": "int"
                }
            }
        ],
        "_TestContext._incstat": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "_TestContext.fail": [
            {
                "type": "method",
                "args": {
                    "info": "str"
                }
            }
        ],
        "_TestContext.skip": [
            {
                "type": "method",
                "args": {
                    "info": "str"
                }
            }
        ],
        "_TestContext.ok": [
            {
                "type": "method",
                "args": {
                    "info": "str"
                }
            }
        ],
        "ImageLoaderTestCase._test_image": [
            {
                "type": "method",
                "args": {
                    "fd": "dict",
                    "ctx": "_TestContext",
                    "loadercls": "type",
                    "imgdata": "ImageLoader"
                }
            }
        ],
        "ConverterTestCase.test_internal_converter_1x3": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConverterTestCase.test_internal_converter_3x1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConverterTestCase.test_internal_converter_2x1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "accept_filter": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "ImageLoaderTestCase.tearDown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LOADERS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ImageLoaderTestCase._prepare_images": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase._test_imageloader": [
            {
                "type": "method",
                "args": {
                    "loadercls": "type",
                    "extensions": "list"
                }
            }
        ],
        "ImageLoaderTestCase.test_ImageLoaderImageIO": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase.test_ImageLoaderTex": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase.test_ImageLoaderDDS": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase.test_ImageLoaderGIF": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase.test_ImageLoaderFFPy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase.test_ImageLoaderPygame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase.test_ImageLoaderPIL": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageLoaderTestCase.test_ImageLoaderSDL2": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_utils": {
        "UtilsTest.test_escape_markup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_format_bytes_to_human": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_boundary": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_is_color_transparent": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.a_deprecated_function": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_deprecated": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_get_random_color_fixed_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_get_random_color_random_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_get_hex_from_color_noalpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_get_hex_from_color_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_get_color_from_hex_noalpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_get_color_from_hex_alpha": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_strtotuple": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_intersection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_difference": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_interpolate_solo": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_interpolate_multi": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.fib_100": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_reify": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_android": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_android_with_p4a": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_android_with_android_argument": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_ios": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest._test_platforms": [
            {
                "type": "method",
                "args": {
                    "input": "str",
                    "testval": "str"
                }
            }
        ],
        "UtilsTest.test_Platform_unknown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_freebsd": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_darwin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_linux2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_cygwin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_Platform_win32": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_SafeList_clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_QueryDict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_SafeList_iterate_reverse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UtilsTest.test_SafeList_iterate": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.fixtures": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "apps": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "kivy_exception_manager": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "kivy_clock": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "kivy_app": [
            {
                "type": "func",
                "args": {
                    "request": "App",
                    "nursery": "nursery.Nursery"
                }
            }
        ]
    },
    "tests.test_uix_scrollview": {
        "DEBUG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "touch_id": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_TestScrollbarHorizontal.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "_TestScrollbarVertical.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "_TestScrollbarBoth.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "_TestScrollbarHorizontalMargin.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "_TestScrollbarVerticalMargin.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "_TestScrollbarBothMargin.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "ScrollViewTestCase.framecount": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "_TestGrid.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "ScrollViewTestCase.test_smooth_scroll_end": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollViewTestCase.process_points": [
            {
                "type": "method",
                "args": {
                    "scroll": "ScrollView",
                    "points": "list"
                }
            }
        ],
        "ScrollViewTestCase.test_scrollbar_both_margin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollViewTestCase.test_scrollbar_vertical_margin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollViewTestCase.test_scrollbar_horizontal_margin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollViewTestCase.test_scrollbar_both": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollViewTestCase.test_scrollbar_vertical": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScrollViewTestCase.test_scrollbar_horizontal": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_uix_layout": {
        "UixLayoutTest.test_instantiation": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_animations": {
        "no_animations_being_played": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "sleep": [
            {
                "type": "func",
                "args": {
                    "t": "float"
                }
            }
        ],
        "TestParallel.test_transition": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSequence.test_transition": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_transition": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestParallel.test_animated_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSequence.test_animated_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_animated_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "cleanup": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestParallel.test_cancel_property": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestParallel.test_have_properties_to_animate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestRepetitiveSequence.test_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSequence.test_have_properties_to_animate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSequence.test_stop_all_2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSequence.test_stop_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSequence.test_cancel_all_2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestSequence.test_cancel_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_weakref": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_animated_instruction": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_stop_all_2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_stop_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_stop_animation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_animation_duration_0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestAnimation.test_start_animation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ec_cls": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TestParallel.test_count_events": [
            {
                "type": "method",
                "args": {
                    "ec_cls": "object"
                }
            }
        ],
        "TestRepetitiveSequence.test_count_events": [
            {
                "type": "method",
                "args": {
                    "ec_cls": "object"
                }
            }
        ],
        "TestSequence.test_count_events": [
            {
                "type": "method",
                "args": {
                    "ec_cls": "object"
                }
            }
        ]
    },
    "tests.common": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "log": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "_base": [
            {
                "type": "var",
                "anno": "unittest.TestCase"
            }
        ],
        "make_screenshots": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "http_server": [
            {
                "type": "var",
                "anno": "TCPServer"
            }
        ],
        "http_server_ready": [
            {
                "type": "var",
                "anno": "threading.Event"
            }
        ],
        "kivy_eventloop": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "GraphicUnitTest.framecount": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GraphicUnitTest._force_refresh": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "GraphicUnitTest.test_counter": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GraphicUnitTest.results_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GraphicUnitTest.test_failed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GraphicUnitTest.Window": [
            {
                "type": "attr",
                "anno": "unittest.Window"
            }
        ],
        "GraphicUnitTest.retval": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GraphicUnitTest.advance_frames": [
            {
                "type": "method",
                "args": {
                    "count": "int"
                }
            }
        ],
        "UnitTestTouch.eventloop": [
            {
                "type": "attr",
                "anno": "EventLoop"
            }
        ],
        "UnitTestTouch.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UnitTestTouch.sx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UnitTestTouch.sy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UnitTestTouch.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "UTMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UTMotionEvent.sx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UTMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UTMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "async_run": [
            {
                "type": "func",
                "args": {
                    "func": "object",
                    "app_cls_func": "str"
                }
            }
        ],
        "UnitTestTouch.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "UTMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "UnitTestTouch.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "UnitTestTouch.touch_up": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "UnitTestTouch.touch_move": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "UnitTestTouch.touch_down": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ensure_web_server": [
            {
                "type": "func",
                "args": {
                    "root": "str"
                }
            }
        ],
        "GraphicUnitTest.interactive_ask_diff": [
            {
                "type": "method",
                "args": {
                    "code": "str",
                    "tmpfn": "str",
                    "reffn": "str",
                    "testid": "str"
                }
            }
        ],
        "GraphicUnitTest.interactive_ask_ref": [
            {
                "type": "method",
                "args": {
                    "code": "str",
                    "imagefn": "str",
                    "testid": "str"
                }
            }
        ],
        "GraphicUnitTest.on_window_flip": [
            {
                "type": "method",
                "args": {
                    "window": "Window"
                }
            }
        ],
        "GraphicUnitTest.tearDown": [
            {
                "type": "method",
                "args": {
                    "fake": "bool"
                }
            }
        ],
        "GraphicUnitTest.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GraphicUnitTest.render": [
            {
                "type": "method",
                "args": {
                    "root": "unittest.String",
                    "framecount": "int"
                }
            }
        ],
        "GraphicUnitTest.run": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "tests.test_graphics": {
        "VertexInstructionTest.e": [
            {
                "type": "attr",
                "anno": "Ellipse"
            }
        ],
        "TransformationsTestCase.test_identity_creation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackInstructionTest.test_from_kv": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VertexInstructionTest.test_point_add": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VertexInstructionTest.test_point": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VertexInstructionTest.test_ellipse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VertexInstructionTest.test_circle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FBOInstructionTestCase.test_fbo_pixels": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_clipboard": {
        "ClipboardTestCase._clippy": [
            {
                "type": "attr",
                "anno": "Clipboard"
            }
        ],
        "ClipboardTestCase._cliptype": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ClipboardTestCase.test_clipboard_copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardTestCase.test_clipboard_not_dummy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardTestCase.test_clipboard_copy_paste": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardTestCase.test_clipboard_paste": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClipboardTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.conftest": {
        "kivy_eventloop": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "nursery": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "pytest_runtest_makereport": [
            {
                "type": "func",
                "args": {
                    "item": "pytest.Any",
                    "call": "pytest.Any"
                }
            }
        ],
        "pytest_runtest_setup": [
            {
                "type": "func",
                "args": {
                    "item": "pytest.ParserRule"
                }
            }
        ]
    },
    "tests.test_uix_translate_coordinates": {
        "non_relative_type_widget_cls_names": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "relative_type_widget_cls_names": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "all_widget_cls_names": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "get_relative_type_widget_classes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "is_relative_type": [
            {
                "type": "func",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "test_to_window_and_to_widget": [
            {
                "type": "func",
                "args": {
                    "root_widget_cls_name": "str",
                    "target_widget_cls_name": "str",
                    "kivy_clock": "pytest.Clock"
                }
            }
        ],
        "test_to_local_and_to_parent__not_relative": [
            {
                "type": "func",
                "args": {
                    "widget_cls_name": "str",
                    "kivy_clock": "kivy.Clock"
                }
            }
        ],
        "test_to_local_and_to_parent__relative": [
            {
                "type": "func",
                "args": {
                    "widget_cls_name": "str",
                    "kivy_clock": "kivy.Clock"
                }
            }
        ]
    },
    "tests.test_issues.test_6315": {
        "PaddingSpacingTestCase.test_tb_lr_stacklayout": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_issues.test_issue_599": {
        "Issue599.PropertyWidget.foo": [
            {
                "type": "attr",
                "anno": "BoundedNumericProperty"
            }
        ],
        "Issue599.test_minmax": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_issues.test_issue_6909": {
        "CodecLoggingTestCase.test_log_handles_cp949": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CodecLoggingTestCase.test_non_utf8_encoding_raises_exception": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_issues.test_issue_1084": {
        "data": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "UnicodeIssueSetting.build_config": [
            {
                "type": "method",
                "args": {
                    "config": "ConfigParser"
                }
            }
        ],
        "UnicodeIssueSetting.build": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_module_inspector": {
        "KV": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InspectorTestCase.framecount": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InspectorTestCase._trace": [
            {
                "type": "attr",
                "anno": "unittest.Trace"
            }
        ],
        "InspectorTestCase.builder": [
            {
                "type": "attr",
                "anno": "unittest.Builder"
            }
        ],
        "InspectorTestCase._win": [
            {
                "type": "attr",
                "anno": "unittest.Window"
            }
        ],
        "InspectorTestCase.root": [
            {
                "type": "attr",
                "anno": "unittest.String"
            }
        ],
        "InspectorTestCase.clean_garbage": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "InspectorTestCase.tearDown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InspectorTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InspectorTestCase.test_widget_multipopup": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "InspectorTestCase.test_widget_popup": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "InspectorTestCase.test_widget_button": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "InspectorTestCase.test_activate_deactivate_top": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "InspectorTestCase.test_activate_deactivate_bottom": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ]
    },
    "tests.test_uix_relativelayout": {
        "UTMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UTMotionEvent.sx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "UTMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "UTMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "UixRelativeLayoutTest.test_relativelayout_on_touch_move": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UTMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "UixRelativeLayoutTest.test_relativelayout_coordinates": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.async_common": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[type, ...]"
            }
        ],
        "AsyncUnitTestTouch.grab_exclusive_class": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AsyncUnitTestTouch.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AsyncUnitTestTouch.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "_unique_value": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "WidgetResolver.base_widget": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "WidgetResolver.matched_widget": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "WidgetResolver._kwargs_filter": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "WidgetResolver._funcs_filter": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "WidgetResolver.__init__": [
            {
                "type": "method",
                "args": {
                    "base_widget": "Widget",
                    "kwargs": "object"
                }
            }
        ],
        "WidgetResolver.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WidgetResolver.match_funcs": [
            {
                "type": "method",
                "args": {
                    "funcs_filter": "list"
                }
            }
        ],
        "UnitKivyApp.app_has_started": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UnitKivyApp.app_has_stopped": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UnitKivyApp.async_sleep": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "UnitKivyApp.set_async_lib": [
            {
                "type": "method",
                "args": {
                    "async_lib": "str"
                }
            }
        ],
        "UnitKivyApp.wait_clock_frames": [
            {
                "type": "method",
                "args": {
                    "n": "int",
                    "sleep_time": "float"
                }
            }
        ],
        "UnitKivyApp.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "UnitKivyApp.resolve_widget": [
            {
                "type": "method",
                "args": {
                    "base_widget": "Widget"
                }
            }
        ],
        "UnitKivyApp.do_keyboard_key": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "modifiers": "list",
                    "duration": "float",
                    "num_press": "int"
                }
            }
        ],
        "WidgetResolver.not_found": [
            {
                "type": "method",
                "args": {
                    "op": "str"
                }
            }
        ],
        "WidgetResolver.check_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "AsyncUnitTestTouch.touch_up": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "AsyncUnitTestTouch.touch_down": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "UnitKivyApp.get_widget_pos_pixel": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget",
                    "positions": "list"
                }
            }
        ],
        "AsyncUnitTestTouch.touch_move": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "UnitKivyApp.do_touch_drag_path": [
            {
                "type": "method",
                "args": {
                    "path": "list",
                    "axis_widget": "Widget",
                    "long_press": "float",
                    "duration": "float"
                }
            }
        ],
        "UnitKivyApp.do_touch_drag_follow": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple[float, float]",
                    "widget": "Widget",
                    "widget_loc": "tuple[str, str]",
                    "target_pos": "tuple[float, float]",
                    "target_widget": "Widget",
                    "target_widget_offset": "tuple[float, float]",
                    "target_widget_loc": "tuple[str, str]",
                    "long_press": "float",
                    "duration": "float",
                    "drag_n": "int",
                    "max_n": "int"
                }
            }
        ],
        "UnitKivyApp.do_touch_drag": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple[float, float]",
                    "widget": "Widget",
                    "widget_loc": "tuple[str, str]",
                    "dx": "float",
                    "dy": "float",
                    "target_pos": "tuple[float, float]",
                    "target_widget": "Widget",
                    "target_widget_offset": "tuple[float, float]",
                    "target_widget_loc": "tuple[str, str]",
                    "long_press": "float",
                    "duration": "float",
                    "drag_n": "int"
                }
            }
        ],
        "UnitKivyApp.do_touch_down_up": [
            {
                "type": "method",
                "args": {
                    "pos": "tuple[float, float]",
                    "widget": "Widget",
                    "duration": "float",
                    "pos_jitter": "tuple[float, float]",
                    "widget_jitter": "bool",
                    "jitter_dt": "float",
                    "end_on_pos": "bool"
                }
            }
        ],
        "WidgetResolver.match": [
            {
                "type": "method",
                "args": {
                    "kwargs_filter": "object"
                }
            }
        ],
        "WidgetResolver.family_up": [
            {
                "type": "method",
                "args": {
                    "kwargs_filter": "object"
                }
            }
        ],
        "WidgetResolver.up": [
            {
                "type": "method",
                "args": {
                    "kwargs_filter": "object"
                }
            }
        ],
        "WidgetResolver.down": [
            {
                "type": "method",
                "args": {
                    "kwargs_filter": "object"
                }
            }
        ],
        "UnitKivyApp.async_run": [
            {
                "type": "method",
                "args": {
                    "async_lib": "str"
                }
            }
        ]
    },
    "tests.test_uix_widget": {
        "UIXWidgetTestCase.NestedWidget.title": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UIXWidgetTestCase.CallerWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "UIXWidgetTestCase.test_widget_root_from_code_with_kv": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXWidgetTestCase.test_add_widget_index_2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXWidgetTestCase.test_add_widget_index_1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXWidgetTestCase.test_add_widget_index_0": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXWidgetTestCase.test_image_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXWidgetTestCase.test_slider_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXWidgetTestCase.test_button_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXWidgetTestCase.test_default_widgets": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.visual_test_label": {
        "kv": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "text": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "words": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "annotated_text": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LabelTest.text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "LabelTest.sized_text": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "annotate": [
            {
                "type": "func",
                "args": {
                    "pre": "str",
                    "post": "str",
                    "callable": "Callable[[], str]",
                    "words": "list"
                }
            }
        ],
        "layout_real_perf": [
            {
                "type": "func",
                "args": {
                    "label": "Label",
                    "repeat": "int"
                }
            }
        ],
        "layout_perf": [
            {
                "type": "func",
                "args": {
                    "label": "Label",
                    "repeat": "int"
                }
            }
        ]
    },
    "tests.test_screen": {
        "transition_cls_names": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "test_switch_to": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_switching_does_not_affect_a_list_of_screens": [
            {
                "type": "func",
                "args": {
                    "transition_cls_name": "str"
                }
            }
        ]
    },
    "tests.test_filechooser_unicode": {
        "unicode_char": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FileChooserUnicodeTestCase.skip_test": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FileChooserUnicodeTestCase.basepathu": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserUnicodeTestCase.basepathb": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileChooserUnicodeTestCase.ufiles": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "FileChooserUnicodeTestCase.bfiles": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "FileChooserUnicodeTestCase.exitsfiles": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "FileChooserUnicodeTestCase.kivy_clock": [
            {
                "type": "attr",
                "anno": "platform.Clock"
            }
        ],
        "FileChooserUnicodeTestCase.set_clock": [
            {
                "type": "method",
                "args": {
                    "kivy_clock": "platform.Clock"
                }
            }
        ],
        "FileChooserUnicodeTestCase.tearDown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooserUnicodeTestCase.test_filechooserlistview_unicode": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileChooserUnicodeTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_coverage": {
        "pytestmark": [
            {
                "type": "var",
                "anno": "coverage.Coverage"
            }
        ],
        "kv_statement_lines": [
            {
                "type": "var",
                "anno": "set"
            }
        ],
        "test_coverage_trigger_all": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_coverage_trigger_event": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_coverage_multiline_on_event": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_coverage_base": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "tests.test_uix_actionbar": {
        "DropDown": [
            {
                "type": "var",
                "anno": "DropDown"
            }
        ],
        "KV": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "UTMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UTMotionEvent.sx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UTMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UTMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ActionBarTestCase.framecount": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionBarTestCase._trace": [
            {
                "type": "attr",
                "anno": "unittest.Trace"
            }
        ],
        "ActionBarTestCase.builder": [
            {
                "type": "attr",
                "anno": "unittest.Builder"
            }
        ],
        "ActionBarTestCase.move_frames": [
            {
                "type": "method",
                "args": {
                    "t": "int"
                }
            }
        ],
        "ActionBarTestCase._win": [
            {
                "type": "attr",
                "anno": "unittest.Window"
            }
        ],
        "ActionBarTestCase.check_dropdown": [
            {
                "type": "method",
                "args": {
                    "present": "bool"
                }
            }
        ],
        "UTMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "TouchPoint.__init__": [
            {
                "type": "method",
                "args": {
                    "raw_x": "int",
                    "raw_y": "int"
                }
            }
        ],
        "ActionBarTestCase.clean_garbage": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ActionBarTestCase.tearDown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionBarTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionBarTestCase.test_4_openmulti": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ActionBarTestCase.test_3_openpress": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ActionBarTestCase.test_2_switch": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ActionBarTestCase.test_1_openclose": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ]
    },
    "tests.test_clock": {
        "ClockCounter.counter": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ClockCounter.__call__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "clock_counter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_clock_restart": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter"
                }
            }
        ],
        "test_clock_stop_twice": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "pytest.Clock",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_clock_ended_del_safe_raises": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "pytest.Clock",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_clock_ended_raises": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_clock_ended_del_safe": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "pytest.Clock",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_clock_ended_callback": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "pytest.Clock",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_clock_event_trigger_ref": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter"
                }
            }
        ],
        "test_exception_caught_handler": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter",
                    "kivy_exception_manager": "ExceptionHandler"
                }
            }
        ],
        "test_exception_ignored": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_exception_caught": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_trigger_decorator": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_trigger_interval": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_trigger_create": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_unschedule_draw": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_unschedule_after_tick": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_unschedule_event": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "pytest.Clock",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_unschedule": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_schedule_once_draw_before": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_schedule_once_draw_after": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_schedule_once_twice": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_schedule_once": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_trigger_decorator_cancel": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ],
        "test_trigger_cancel": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "ClockCounter",
                    "clock_counter": "ClockCounter"
                }
            }
        ]
    },
    "tests.test_lang_complex": {
        "rules": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LangComplexTestCase.TestWidget.source": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "LangComplexTestCase.TestWidget.source2": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "LangComplexTestCase.TestWidget.source3": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "LangComplexTestCase.TestWidget.can_edit": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "LangComplexTestCase.TestWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "LangComplexTestCase.TestWidget.on_release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangComplexTestCase.MainWidget.refwid": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "LangComplexTestCase.MainWidget.refwid2": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "LangComplexTestCase.test_complex_rewrite": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_doc_gallery": {
        "test_parse_docstring_info": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "tests.test_lang_pre_process_and_post_process": {
        "TrackCallbacks.kv_pre_events": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.kv_applied_events": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.kv_post_events": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.events_in_pre": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.events_in_applied": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.events_in_post": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.instantiated_widgets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.root_widget": [
            {
                "type": "attr",
                "anno": "unittest.TestCase"
            }
        ],
        "TrackCallbacks.base_widget": [
            {
                "type": "attr",
                "anno": "unittest.Widget"
            }
        ],
        "TrackCallbacks.actual_root_widget": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "TrackCallbacks.actual_base_widget": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "TrackCallbacks.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TrackCallbacks.my_roots_expected_ids": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TrackCallbacks.actual_ids": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TrackCallbacks.expected_prop_values": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TrackCallbacks.actual_prop_values": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TrackCallbacks.TestEventsBase.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, str]"
            }
        ],
        "TrackCallbacks.TestEventsBase.instantiated_widgets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.TestEventsBase.events_in_pre": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.TestEventsBase.events_in_applied": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.TestEventsBase.events_in_post": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.TestEventsBase.actual_root_widget": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "TrackCallbacks.TestEventsBase.actual_base_widget": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "TrackCallbacks.TestEventsBase.actual_prop_values": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TrackCallbacks.TestEventsBase.actual_ids": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TestKvEvents.TestEventsPureAuto.instantiated_widgets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestKvEvents.TestEventsPure.instantiated_widgets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestKvEvents.TestEventsPure.events_in_pre": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestKvEvents.TestEventsPure.events_in_applied": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestKvEvents.TestEventsPure.events_in_post": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestKvEvents.TestEventsFromKV.instantiated_widgets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestKvEvents.TestEventsFromKVEvent.instantiated_widgets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestKvEvents.TestEventsFromKVChild.instantiated_widgets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TestKvEvents.TestEventsFromKVChildInherit.instantiated_widgets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TrackCallbacks.TestEventsBase.apply_class_lang_rules": [
            {
                "type": "method",
                "args": {
                    "root": "Widget",
                    "kwargs": "object"
                }
            }
        ],
        "TrackCallbacks.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TrackCallbacks.add": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "event": "str"
                }
            }
        ],
        "TestKvEvents.TestEventsPure.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "TrackCallbacks.TestEventsBase.on_kv_post": [
            {
                "type": "method",
                "args": {
                    "base_widget": "Widget"
                }
            }
        ],
        "TrackCallbacks.TestEventsBase.on_kv_applied": [
            {
                "type": "method",
                "args": {
                    "root_widget": "Widget"
                }
            }
        ],
        "TrackCallbacks.TestEventsBase.on_kv_pre": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TrackCallbacks.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "kwargs": "object"
                }
            }
        ],
        "TrackCallbacks.get_base_class": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TrackCallbacks.check_event": [
            {
                "type": "method",
                "args": {
                    "widget": "unittest.Widget",
                    "event_name": "str",
                    "testcase": "unittest.TestCase"
                }
            }
        ],
        "TrackCallbacks.check": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "testcase": "unittest.TestCase"
                }
            }
        ],
        "TestKvEvents.test_instantiate_from_kv_with_child_inherit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestKvEvents.test_instantiate_from_kv_with_child": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestKvEvents.test_instantiate_from_kv_with_event": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestKvEvents.test_instantiate_from_kv": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestKvEvents.test_pure_python_callbacks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TestKvEvents.test_pure_python_auto_binding": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_uix_gridlayout": {
        "GridLayoutTest.test_gridlayout_get_max_widgets_cols_rows_None": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridLayoutTest.test_gridlayout_get_max_widgets_rows_None": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridLayoutTest.test_gridlayout_get_max_widgets_cols_None": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GridLayoutTest.test_gridlayout_get_max_widgets_with_rows_cols": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixGridLayoutTest.test_rows_cols_sizes": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_multistroke": {
        "best_score": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "counter": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "counter_cb": [
            {
                "type": "func",
                "args": {
                    "result": "Vector"
                }
            }
        ],
        "TGesture": [
            {
                "type": "var",
                "anno": "Vector"
            }
        ],
        "NGesture": [
            {
                "type": "var",
                "anno": "Vector"
            }
        ],
        "Ncandidate": [
            {
                "type": "var",
                "anno": "Vector"
            }
        ],
        "MultistrokeTestCase.Tinvar": [
            {
                "type": "attr",
                "anno": "MultistrokeGesture"
            }
        ],
        "MultistrokeTestCase.Tbound": [
            {
                "type": "attr",
                "anno": "MultistrokeGesture"
            }
        ],
        "MultistrokeTestCase.Ninvar": [
            {
                "type": "attr",
                "anno": "MultistrokeGesture"
            }
        ],
        "MultistrokeTestCase.Nbound": [
            {
                "type": "attr",
                "anno": "MultistrokeGesture"
            }
        ],
        "MultistrokeTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.kivy_clock": [
            {
                "type": "attr",
                "anno": "kivy.multistroke.Clock"
            }
        ],
        "MultistrokeTestCase.set_clock": [
            {
                "type": "method",
                "args": {
                    "kivy_clock": "kivy.multistroke.Clock"
                }
            }
        ],
        "best_score_cb": [
            {
                "type": "func",
                "args": {
                    "result": "MultistrokeGesture"
                }
            }
        ],
        "MultistrokeTestCase.test_protractor_bound": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_protractor_invariant": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_priority_sorting": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_timeout_case_2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_timeout_case_1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_parallel_recognize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_scheduling_limits": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_scheduling": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_immediate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_transfer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_orientation_filter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_priority_filter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_numstrokes_filter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_numpoints_filter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_name_filter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_rotateby": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_resample": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_export_import_case_2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeTestCase.test_export_import_case_1": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_widget": {
        "WidgetTestCase.cls": [
            {
                "type": "attr",
                "anno": "type[Widget]"
            }
        ],
        "WidgetTestCase.root": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "WidgetTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WidgetTestCase.test_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WidgetTestCase.test_collision": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WidgetTestCase.test_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WidgetTestCase.test_invalid_add_widget": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WidgetTestCase.test_add_remove_widget": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WidgetTestCase.test_export_to_png": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_fonts": {
        "FontTestCase.temp_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontTestCase.font_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FontTestCase.tearDown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FontTestCase.test_unicode_name": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_uix_slider": {
        "UTMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UTMotionEvent.sx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "UTMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "UTMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "_TestSliderHandle.sensitivity": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_TestSliderHandle.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "_TestSliderAll.sensitivity": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_TestSliderAll.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "SliderMoveTestCase.framecount": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SliderMoveTestCase._trace": [
            {
                "type": "attr",
                "anno": "unittest.Trace"
            }
        ],
        "SliderMoveTestCase.builder": [
            {
                "type": "attr",
                "anno": "unittest.Builder"
            }
        ],
        "UTMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "SliderMoveTestCase.tearDown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SliderMoveTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SliderMoveTestCase.test_slider_move": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.perf_test_textinput": {
        "PerfApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PerfApp.tests": [
            {
                "type": "attr",
                "anno": "list[PerfApp]"
            }
        ],
        "PerfApp.test_done": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PerfApp.lt": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PerfApp.tot_time": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PerfApp.start_test": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "PerfApp.load_large_text": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "PerfApp.stress_selection": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "PerfApp.stress_del": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "PerfApp.stress_insert": [
            {
                "type": "method",
                "args": {
                    "largs": "object"
                }
            }
        ],
        "PerfApp.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ]
    },
    "tests.test_lang": {
        "BaseClass.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BaseClass.proxy_ref": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "BaseClass.children": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BaseClass.parent": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "BaseClass.binded_func": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BaseClass.id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseClass.ids": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BaseClass.cls": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BaseClass.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "BaseClass.dispatch": [
            {
                "type": "method",
                "args": {
                    "event_type": "str",
                    "largs": "str",
                    "kwargs": "object"
                }
            }
        ],
        "BaseClass.create_property": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "CodeType",
                    "default_value": "bool"
                }
            }
        ],
        "BaseClass.is_event_type": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "BaseClass.fbind": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "func": "Callable",
                    "largs": "str"
                }
            }
        ],
        "BaseClass.apply_class_lang_rules": [
            {
                "type": "method",
                "args": {
                    "root": "Widget",
                    "ignored_consts": "set[str]",
                    "rule_children": "list[CodeType]"
                }
            }
        ],
        "TLangClass.obj": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TLangClass2.obj": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TLangClass3.obj": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "LangTestCase.import_builder": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.MyObject.value": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LangTestCase.MyWidget.cheese": [
            {
                "type": "attr",
                "anno": "MyObject"
            }
        ],
        "BaseClass.add_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "LangTestCase.test_kv_python_init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_apply_rules": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_with_two_spaces": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_with_one_space": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_with_eight_spaces": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_with_multiline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_references_with_template_case_3": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_references_with_template_case_2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_references_with_template": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_references": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_parser_numeric_2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_parser_numeric_1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_loading_failed_1": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_load_utf8": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LangTestCase.test_property_trailingspace": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_uix_carousel": {
        "loop": [
            {
                "type": "func",
                "args": {
                    "request": "pytest.Request"
                }
            }
        ],
        "test_previous_and_next": [
            {
                "type": "func",
                "args": {
                    "n_slides": "int",
                    "index": "int",
                    "loop": "bool",
                    "index_of_previous_slide": "int",
                    "index_of_next_slide": "int"
                }
            }
        ],
        "test_remove_widget": [
            {
                "type": "func",
                "args": {
                    "loop": "bool"
                }
            }
        ]
    },
    "tests.test_fbo_py2py3": {
        "FboTest.positions": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FboTest.fbo": [
            {
                "type": "attr",
                "anno": "Fbo"
            }
        ],
        "FboTest.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "FBOPy2Py3TestCase.test_fbo_get_pixel_color": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_audio": {
        "pytestmark": [
            {
                "type": "var",
                "anno": "unittest.Mark"
            }
        ],
        "SAMPLE_FILE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SAMPLE_LENGTH": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "DELTA": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "DELAY": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "AudioTestCase.get_sound": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AudioGstreamerTestCase.make_sound": [
            {
                "type": "method",
                "args": {
                    "source": "str"
                }
            }
        ],
        "AudioPygameTestCase.make_sound": [
            {
                "type": "method",
                "args": {
                    "source": "str"
                }
            }
        ],
        "AudioTestCase.test_length_simple": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AudioTestCase.test_length_stopped": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AudioTestCase.test_length_playing": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_mouse_multitouchsim": {
        "MultitouchSimulatorTestCase.framecount": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MultitouchSimulatorTestCase.correct_y": [
            {
                "type": "method",
                "args": {
                    "win": "Mouse",
                    "y": "int"
                }
            }
        ],
        "MultitouchSimulatorTestCase.mouse_init": [
            {
                "type": "method",
                "args": {
                    "on_demand": "bool",
                    "disabled": "bool",
                    "scatter": "bool"
                }
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_appear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_dontappear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.multitouch_dot_move": [
            {
                "type": "method",
                "args": {
                    "button": "str",
                    "kwargs": "object"
                }
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_disabled_rightmove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_disabled_leftmove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_on_demand_scatter_rightmove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_on_demand_scatter_leftmove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_on_demand_noscatter_rightmove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_on_demand_noscatter_leftmove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_dot_rightmove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_dot_leftmove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.multitouch_dot_touch": [
            {
                "type": "method",
                "args": {
                    "button": "str",
                    "kwargs": "object"
                }
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_disabled_righttouch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_disabled_lefttouch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_on_demand_scatter_righttouch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_on_demand_scatter_lefttouch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_on_demand_noscatter_righttouch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_on_demand_noscatter_lefttouch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_dot_righttouch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultitouchSimulatorTestCase.test_multitouch_dot_lefttouch": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_properties": {
        "wid": [
            {
                "type": "var",
                "anno": "_TestProperty"
            }
        ],
        "PropertiesTestCase.kivy_clock": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PropertiesTestCase.set_clock": [
            {
                "type": "method",
                "args": {
                    "kivy_clock": "int"
                }
            }
        ],
        "PropertiesTestCase.ObjWidget.button": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "PropertiesTestCase.ObjWidgetRebindFalse.button": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "PropertiesTestCase.DictWidget.button": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "PropertiesTestCase.DictWidgetFalse.button": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "PropertiesTestCase.AliasWidget._button": [
            {
                "type": "attr",
                "anno": "unittest.Label"
            }
        ],
        "PropertiesTestCase.AliasWidget.setter": [
            {
                "type": "method",
                "args": {
                    "value": "unittest.Label"
                }
            }
        ],
        "PropertiesTestCase.AliasWidget.getter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.AliasWidget.button": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "PropertiesTestCase.CustomAlias.base_value": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PropertiesTestCase.CustomAlias.getter_called": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PropertiesTestCase.CustomAlias._get_prop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.CustomAlias.setter_called": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PropertiesTestCase.CustomAlias._set_prop": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "PropertiesTestCase.CustomAlias.prop": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "PropertiesTestCase.CustomAlias.callback_called": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PropertiesTestCase.CustomAlias.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "PropertiesTestCase.test_alias_property_cache_true_force_dispatch_true": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_alias_property_cache_true_with_bind": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_alias_property_with_force_dispatch_true": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_alias_property_cache_true": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_alias_property": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_alias_property_without_setter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_bounded_numeric_property": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "test_listproperty_is_none": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_dictproperty_is_none": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_color_property": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_numeric_string_without_units": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_numeric_string_with_units_check": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_bounded_numeric_property_error_handler": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_bounded_numeric_property_error_value": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_reference_child_update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_reference": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_propertynone": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_dictcheck": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_listcheck": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_numericcheck": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_stringcheck": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_objectcheck": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_observer": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_base": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_alias_property_with_bind": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_dict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PropertiesTestCase.test_property_rebind": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_uix_textinput": {
        "touch_id": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TextInputTest.test_txt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TextInputTest.on_focused": [
            {
                "type": "method",
                "args": {
                    "instance": "TextInput",
                    "value": "bool"
                }
            }
        ],
        "ti_height_for_x_lines": [
            {
                "type": "func",
                "args": {
                    "ti": "TextInput",
                    "x": "int"
                }
            }
        ],
        "TextInputTest.test_focusable_when_disabled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputTest.on_text": [
            {
                "type": "method",
                "args": {
                    "instance": "TextInput",
                    "value": "str"
                }
            }
        ],
        "TextInputTest.test_wordbreak": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.make_scrollable_text_input": [
            {
                "type": "method",
                "args": {
                    "num_of_lines": "int",
                    "n_lines_to_show": "int"
                }
            }
        ],
        "TextInputGraphicTest.test_scroll_doesnt_move_cursor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_selectall_copy_paste": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_cursor_blink": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_vertical_scroll_doesnt_depend_on_lines_rendering": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_keyboard_scroll": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_visible_lines_range": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_cursor_movement_control": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_no_shift_cursor_arrow_on_selection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_escape": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_del": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_selection_enter_singleline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_selection_enter_multiline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TextInputGraphicTest.test_text_validate": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests": {
        "UnitKivyApp": [
            {
                "type": "var",
                "anno": "UnitKivyApp"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ]
    },
    "tests.test_image": {
        "ImageTestCase.cls": [
            {
                "type": "attr",
                "anno": "type[Image]"
            }
        ],
        "ImageTestCase.image": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ImageTestCase.root": [
            {
                "type": "attr",
                "anno": "Image"
            }
        ],
        "ImageTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageTestCase.test_keep_data": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImageTestCase.test_save_into_bytesio": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_storage": {
        "StorageTestCase._do_store_test_nofolder": [
            {
                "type": "method",
                "args": {
                    "store_cls": "type"
                }
            }
        ],
        "StorageTestCase.test_json_storage_nofolder": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StorageTestCase.test_dict_storage_nofolder": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StorageTestCase._do_store_test_filled": [
            {
                "type": "method",
                "args": {
                    "store": "Store"
                }
            }
        ],
        "StorageTestCase._do_store_test_empty": [
            {
                "type": "method",
                "args": {
                    "store": "Store"
                }
            }
        ],
        "StorageTestCase.test_redis_storage": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StorageTestCase.test_json_storage": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StorageTestCase.test_dict_storage": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.pyinstaller.test_pyinstaller": {
        "pytestmark": [
            {
                "type": "var",
                "anno": "pytest.Mark"
            }
        ],
        "PyinstallerBase.pinstall_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PyinstallerBase.env": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PyinstallerBase.get_run_env": [
            {
                "type": "method",
                "args": {
                    "cls": "Pyinstaller"
                }
            }
        ],
        "TestSimpleWidget.pinstall_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TestVideoWidget.pinstall_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PyinstallerBase.teardown_class": [
            {
                "type": "method",
                "args": {
                    "cls": "PyinstallerBase"
                }
            }
        ],
        "PyinstallerBase.get_env": [
            {
                "type": "method",
                "args": {
                    "cls": "PyinstallerBase"
                }
            }
        ],
        "TestVideoWidget.get_env": [
            {
                "type": "method",
                "args": {
                    "cls": "PyinstallerBase"
                }
            }
        ],
        "PyinstallerBase.setup_class": [
            {
                "type": "method",
                "args": {
                    "cls": "PyinstallerBase"
                }
            }
        ],
        "TestVideoWidget.get_run_env": [
            {
                "type": "method",
                "args": {
                    "cls": "Pyinstaller"
                }
            }
        ],
        "PyinstallerBase.test_packaged_project": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PyinstallerBase.test_packaging": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PyinstallerBase.test_project": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.pyinstaller.video_widget.project": {
        "VideoApp.player": [
            {
                "type": "attr",
                "anno": "VideoPlayer"
            }
        ],
        "VideoApp.start_t": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "VideoApp.start_player": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "VideoApp.stop_player": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "VideoApp.check_position": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "VideoApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_vector": {
        "VectorTestCase.test_initializer_oneparameter_as_int": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_initializer_noparameter": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_initializer_threeparameters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sum_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sub_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sum_oversizedlist": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_inbbox": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_intersection_roundingerror": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_length_zerozero": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_length2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_distance2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_dot": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_angle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_distance": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_rotate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_negation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_rdiv_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_rdiv_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_div_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_div_inplace_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_div_inplace": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_truediv_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_truediv_twovectors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_div_twovectors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_rmul_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_rmul_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_mul_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_mul_inplace_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_mul_inplace": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_mul_twovectors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sub_inplace_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sub_inplace": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sub_twovectors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sum_inplace_scalar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sum_inplace": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_sum_twovectors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_initializer_twoparameters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_initializer_oneparameter_as_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_normalize_zerovector": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VectorTestCase.test_normalize": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_urlrequest": {
        "ensure_called_from_thread": [
            {
                "type": "func",
                "args": {
                    "queue": "list"
                }
            }
        ],
        "check_queue_values": [
            {
                "type": "func",
                "args": {
                    "queue": "list"
                }
            }
        ],
        "UrlRequestQueue.queue": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "UrlRequestQueue.__init__": [
            {
                "type": "method",
                "args": {
                    "queue": "list"
                }
            }
        ],
        "UrlRequestQueue._on_progress": [
            {
                "type": "method",
                "args": {
                    "req": "UrlRequest",
                    "args": "str"
                }
            }
        ],
        "UrlRequestQueue._on_error": [
            {
                "type": "method",
                "args": {
                    "req": "UrlRequest",
                    "args": "str"
                }
            }
        ],
        "UrlRequestQueue._on_redirect": [
            {
                "type": "method",
                "args": {
                    "req": "UrlRequest",
                    "args": "str"
                }
            }
        ],
        "UrlRequestQueue._on_success": [
            {
                "type": "method",
                "args": {
                    "req": "UrlRequest",
                    "args": "str"
                }
            }
        ],
        "wait_request_is_finished": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "threading.Clock",
                    "request": "UrlRequest",
                    "timeout": "int"
                }
            }
        ],
        "test_ca_file": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "threading.Clock",
                    "scheme": "str"
                }
            }
        ],
        "test_auth_auto": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "threading.Clock"
                }
            }
        ],
        "test_auth_header": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "threading.Clock"
                }
            }
        ],
        "test_callbacks": [
            {
                "type": "func",
                "args": {
                    "kivy_clock": "threading.Clock"
                }
            }
        ]
    },
    "tests.test_uix_asyncimage": {
        "AsyncImageTestCase.setUpClass": [
            {
                "type": "method",
                "args": {
                    "cls": "type[AsyncImage]"
                }
            }
        ],
        "AsyncImageTestCase.maxfps": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AsyncImageTestCase.zip_frames": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "AsyncImageTestCase.check_sequence_frames": [
            {
                "type": "method",
                "args": {
                    "img": "AsyncImage",
                    "frames": "int",
                    "slides": "int"
                }
            }
        ],
        "AsyncImageTestCase.setUp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AsyncImageTestCase.test_reload_asyncimage": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AsyncImageTestCase.load_zipimage": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "frames": "int"
                }
            }
        ],
        "AsyncImageTestCase.test_local_zipsequence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AsyncImageTestCase.test_remote_zipsequence": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "config": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_is_rpi": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "KIVY_CONFIG_VERSION": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ConfigParser._sections": [
            {
                "type": "attr",
                "anno": "OrderedDict"
            }
        ],
        "ConfigParser.filename": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ConfigParser._callbacks": [
            {
                "type": "attr",
                "anno": "OrderedDict"
            }
        ],
        "ConfigParser._do_callbacks": [
            {
                "type": "method",
                "args": {
                    "section": "str",
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "ConfigParser.set": [
            {
                "type": "method",
                "args": {
                    "section": "str",
                    "option": "str",
                    "value": "str"
                }
            }
        ],
        "ConfigParser.setall": [
            {
                "type": "method",
                "args": {
                    "section": "str",
                    "keyvalues": "dict"
                }
            }
        ],
        "ConfigParser.write": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigParser._named_configs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConfigParser.get_configparser": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ConfigParser._name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "need_save": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "probesysfs": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "is_desktop": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "section": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "name": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "sections_to_check": [
            {
                "type": "var",
                "anno": "set[str]"
            }
        ],
        "ConfigParser.get": [
            {
                "type": "method",
                "args": {
                    "section": "int",
                    "option": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ConfigParser.remove_callback": [
            {
                "type": "method",
                "args": {
                    "callback": "str",
                    "section": "str",
                    "key": "str"
                }
            }
        ],
        "ConfigParser.add_callback": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[], str]",
                    "section": "str",
                    "key": "str"
                }
            }
        ],
        "ConfigParser._register_named_property": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "widget_ref": "object",
                    "largs": "str"
                }
            }
        ],
        "ConfigParser.name": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "ConfigParser.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ConfigParser.adddefaultsection": [
            {
                "type": "method",
                "args": {
                    "section": "str"
                }
            }
        ],
        "ConfigParser.getdefault": [
            {
                "type": "method",
                "args": {
                    "section": "int",
                    "option": "str",
                    "defaultvalue": "str"
                }
            }
        ],
        "ConfigParser.getdefaultint": [
            {
                "type": "method",
                "args": {
                    "section": "int",
                    "option": "str",
                    "defaultvalue": "str"
                }
            }
        ],
        "ConfigParser.setdefault": [
            {
                "type": "method",
                "args": {
                    "section": "str",
                    "option": "str",
                    "value": "str"
                }
            }
        ],
        "ConfigParser.setdefaults": [
            {
                "type": "method",
                "args": {
                    "section": "str",
                    "keyvalues": "dict"
                }
            }
        ],
        "ConfigParser.read": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "ConfigParser.update_config": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "overwrite": "bool"
                }
            }
        ],
        "Config": [
            {
                "type": "var",
                "anno": "ConfigParser"
            }
        ],
        "version": [
            {
                "type": "var",
                "anno": "int"
            }
        ]
    },
    "compat": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "PY2": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "clock": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "string_types": [
            {
                "type": "var",
                "anno": "text_type"
            }
        ],
        "text_type": [
            {
                "type": "var",
                "anno": "string_types"
            }
        ],
        "unichr": [
            {
                "type": "var",
                "anno": "text_type"
            }
        ],
        "itervalues": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "iteritems": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "_isclose": [
            {
                "type": "func",
                "args": {
                    "a": "float",
                    "b": "float",
                    "rel_tol": "float",
                    "abs_tol": "float"
                }
            }
        ],
        "isclose": [
            {
                "type": "var",
                "anno": "isclose"
            }
        ],
        "iterkeys": [
            {
                "type": "var",
                "anno": "Callable[[AbstractStore], iter[str]]"
            }
        ]
    },
    "input.shape": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "ShapeRect.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ShapeRect.width": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ShapeRect.height": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ShapeRect.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.factory": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[type[MotionEventFactory], ...]"
            }
        ],
        "MotionEventFactory.__providers__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MotionEventFactory.register": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "classname": "str"
                }
            }
        ],
        "MotionEventFactory.list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEventFactory.get": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ]
    },
    "input.recorder": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Recorder.window": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Recorder.counter": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Recorder.play": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Recorder.record": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Recorder.filename": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "Recorder.record_attrs": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Recorder.record_profile_mask": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Recorder.record_fd": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "Recorder.record_time": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "Recorder.__events__": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "Recorder.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Recorder.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Recorder.play_data": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "Recorder.play_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Recorder.play_me": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Recorder.on_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Recorder.on_keyboard": [
            {
                "type": "method",
                "args": {
                    "etype": "str",
                    "window": "Window",
                    "key": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Recorder.on_record": [
            {
                "type": "method",
                "args": {
                    "instance": "EventLoop",
                    "value": "bool"
                }
            }
        ],
        "RecorderMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "Recorder.on_play": [
            {
                "type": "method",
                "args": {
                    "instance": "EventLoop",
                    "value": "bool"
                }
            }
        ],
        "Recorder.on_motion": [
            {
                "type": "method",
                "args": {
                    "window": "Window",
                    "etype": "str",
                    "motionevent": "MotionEvent"
                }
            }
        ],
        "Recorder.release": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Recorder.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "str",
                    "ctx": "dict"
                }
            }
        ],
        "Recorder.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, RecorderMotionEvent], None]"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "EventLoop",
                    "ctx": "EventLoop"
                }
            }
        ]
    },
    "input.providers.mactouch": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "CFArrayRef": [
            {
                "type": "var",
                "anno": "CFArrayRef"
            }
        ],
        "CFMutableArrayRef": [
            {
                "type": "var",
                "anno": "CFArrayRef"
            }
        ],
        "CFIndex": [
            {
                "type": "var",
                "anno": "CFIndex"
            }
        ],
        "dll": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "MultitouchSupport": [
            {
                "type": "var",
                "anno": "Cdl"
            }
        ],
        "CFArrayGetCount": [
            {
                "type": "var",
                "anno": "CFArrayRef"
            }
        ],
        "CFArrayGetValueAtIndex": [
            {
                "type": "var",
                "anno": "CFArrayRef"
            }
        ],
        "MTDeviceCreateList": [
            {
                "type": "var",
                "anno": "MultitouchSupport"
            }
        ],
        "MTPoint._fields_": [
            {
                "type": "attr",
                "anno": "ctypes.List[tuple]"
            }
        ],
        "MTVector._fields_": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "MTData._fields_": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "MTDataRef": [
            {
                "type": "var",
                "anno": "ctypes.POINTER[MTData]"
            }
        ],
        "MTContactCallbackFunction": [
            {
                "type": "var",
                "anno": "CFUNCTYPE[int]"
            }
        ],
        "MTDeviceRef": [
            {
                "type": "var",
                "anno": "CFArrayRef"
            }
        ],
        "MTRegisterContactFrameCallback": [
            {
                "type": "var",
                "anno": "MTRegisterContactFrameCallback"
            }
        ],
        "MTDeviceStart": [
            {
                "type": "var",
                "anno": "MTDeviceStart"
            }
        ],
        "MacMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MacMotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "MacMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "_instance": [
            {
                "type": "var",
                "anno": "MacMotionEventProvider"
            }
        ],
        "MacMotionEventProvider.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "MacMotionEventProvider.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MacMotionEventProvider.touches": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MacMotionEventProvider.lock": [
            {
                "type": "attr",
                "anno": "threading.Lock"
            }
        ],
        "MacMotionEventProvider.queue": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MacMotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, str], None]"
                }
            }
        ],
        "MacMotionEventProvider.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MacMotionEvent.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MacMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "MacMotionEventProvider._mts_callback": [
            {
                "type": "method",
                "args": {
                    "device": "MTDeviceRef",
                    "data_ptr": "MTDataRef",
                    "n_fingers": "int",
                    "timestamp": "int",
                    "frame": "int"
                }
            }
        ],
        "MacMotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.providers.mouse": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Color": [
            {
                "type": "var",
                "anno": "Color"
            }
        ],
        "Ellipse": [
            {
                "type": "var",
                "anno": "Ellipse"
            }
        ],
        "MouseMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MouseMotionEvent.button": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MouseMotionEvent.multitouch_sim": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MouseMotionEventProvider.__handlers__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MouseMotionEventProvider.waiting_event": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "MouseMotionEventProvider.touches": [
            {
                "type": "attr",
                "anno": "dict[str, MouseMotionEvent]"
            }
        ],
        "MouseMotionEventProvider.counter": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MouseMotionEventProvider.current_drag": [
            {
                "type": "attr",
                "anno": "MouseMotionEvent"
            }
        ],
        "MouseMotionEventProvider.alt_touch": [
            {
                "type": "attr",
                "anno": "MouseMotionEvent"
            }
        ],
        "MouseMotionEventProvider.disable_on_activity": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MouseMotionEventProvider.disable_multitouch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MouseMotionEventProvider.multitouch_on_demand": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MouseMotionEventProvider.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "args": "str"
                }
            }
        ],
        "MouseMotionEventProvider.test_activity": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MouseMotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[int], None]"
                }
            }
        ],
        "MouseMotionEventProvider.find_touch": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "MouseMotionEvent.clear_graphics": [
            {
                "type": "method",
                "args": {
                    "win": "EventLoop.window"
                }
            }
        ],
        "MouseMotionEventProvider.remove_touch": [
            {
                "type": "method",
                "args": {
                    "cur": "MouseMotionEvent"
                }
            }
        ],
        "MouseMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "MouseMotionEvent.update_graphics": [
            {
                "type": "method",
                "args": {
                    "win": "EventLoop.Window",
                    "create": "bool"
                }
            }
        ],
        "MouseMotionEventProvider.on_mouse_release": [
            {
                "type": "method",
                "args": {
                    "win": "EventLoop.Window",
                    "x": "int",
                    "y": "int",
                    "button": "str",
                    "modifiers": "list"
                }
            }
        ],
        "MouseMotionEventProvider.create_touch": [
            {
                "type": "method",
                "args": {
                    "rx": "float",
                    "ry": "float",
                    "is_double_tap": "bool",
                    "do_graphics": "bool",
                    "button": "str"
                }
            }
        ],
        "MouseMotionEventProvider.on_mouse_press": [
            {
                "type": "method",
                "args": {
                    "win": "EventLoop.Window",
                    "x": "int",
                    "y": "int",
                    "button": "str",
                    "modifiers": "list"
                }
            }
        ],
        "MouseMotionEventProvider.on_mouse_motion": [
            {
                "type": "method",
                "args": {
                    "win": "EventLoop.Window",
                    "x": "int",
                    "y": "int",
                    "modifiers": "list"
                }
            }
        ],
        "MouseMotionEventProvider.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MouseMotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.providers.hidinput": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[HIDInputMotionEventProvider, ...]"
            }
        ],
        "Window": [
            {
                "type": "var",
                "anno": "Window"
            }
        ],
        "Keyboard": [
            {
                "type": "var",
                "anno": "Keyboard"
            }
        ],
        "HIDMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HIDMotionEvent.sx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HIDMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HIDMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "HIDMotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "HIDMotionEvent.pressure": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "HIDMotionEvent.button": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "EV_SYN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_KEY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_REL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_ABS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_MSC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_SW": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_LED": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_SND": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_REP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_FF": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_PWR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_FF_STATUS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_MAX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_CNT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KEY_MAX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SYN_REPORT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SYN_CONFIG": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SYN_MT_REPORT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_SERIAL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_PULSELED": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_GESTURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_RAW": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_SCAN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_MAX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_CNT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_X": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_Y": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_PRESSURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_TOUCH_MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_TOUCH_MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_WIDTH_MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_WIDTH_MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_ORIENTATION": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_POSITION_X": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_POSITION_Y": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_TOOL_TYPE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_BLOB_ID": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_TRACKING_ID": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_PRESSURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EVIOCGNAME": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EVIOCGBIT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EVIOCGABS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "keyboard_keys": [
            {
                "type": "var",
                "anno": "dict[int, tuple[str, ...]]"
            }
        ],
        "keys_str": [
            {
                "type": "var",
                "anno": "dict[str, str]"
            }
        ],
        "struct_input_event_sz": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "struct_input_absinfo_sz": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "sz_l": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "HIDInputMotionEventProvider.options": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "HIDInputMotionEventProvider.input_fn": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HIDInputMotionEventProvider.default_ranges": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "HIDInputMotionEventProvider.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HIDInputMotionEventProvider.queue": [
            {
                "type": "attr",
                "anno": "collections.deque"
            }
        ],
        "HIDInputMotionEventProvider.dispatch_queue": [
            {
                "type": "attr",
                "anno": "list[HIDMotionEvent]"
            }
        ],
        "HIDInputMotionEventProvider.thread": [
            {
                "type": "attr",
                "anno": "threading.Thread"
            }
        ],
        "HIDInputMotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, int], None]"
                }
            }
        ],
        "HIDInputMotionEventProvider.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "args": "str"
                }
            }
        ],
        "HIDMotionEvent.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HIDInputMotionEventProvider._thread_run": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "HIDMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "HIDInputMotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.providers.androidjoystick": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "AndroidMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AndroidMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AndroidMotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "AndroidMotionEventProvider.joysticks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AndroidMotionEventProvider.touches": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AndroidMotionEventProvider.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AndroidMotionEventProvider.window": [
            {
                "type": "attr",
                "anno": "Window"
            }
        ],
        "AndroidMotionEventProvider.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "android.device",
                    "args": "dict"
                }
            }
        ],
        "AndroidMotionEventProvider.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AndroidMotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, MotionEvent], None]"
                }
            }
        ],
        "AndroidMotionEventProvider.create_joystick": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "AndroidMotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AndroidMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ]
    },
    "tests.test_window_info": {
        "WindowInfoTest.test_window_info_nonzero": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.providers.tuio": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "TuioMotionEventProvider.__handlers__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TuioMotionEventProvider.port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TuioMotionEventProvider.handlers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TuioMotionEventProvider.oscid": [
            {
                "type": "attr",
                "anno": "OSCThreadServer"
            }
        ],
        "TuioMotionEventProvider.tuio_event_q": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "TuioMotionEventProvider.touches": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TuioMotionEventProvider.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "args": "str"
                }
            }
        ],
        "TuioMotionEventProvider.register": [
            {
                "type": "method",
                "args": {
                    "oscpath": "str",
                    "classname": "str"
                }
            }
        ],
        "TuioMotionEventProvider.unregister": [
            {
                "type": "method",
                "args": {
                    "oscpath": "str",
                    "classname": "str"
                }
            }
        ],
        "TuioMotionEventProvider.create": [
            {
                "type": "method",
                "args": {
                    "oscpath": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "TuioMotionEventProvider._osc_tuio_cb": [
            {
                "type": "method",
                "args": {
                    "oscpath": "str",
                    "address": "str",
                    "args": "str"
                }
            }
        ],
        "TuioMotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TuioMotionEvent.__attrs__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "TuioMotionEvent.a": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.b": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.c": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.X": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.Y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.Z": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.A": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.B": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.C": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.m": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.r": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "id": "str",
                    "args": "dict"
                }
            }
        ],
        "TuioMotionEvent.angle": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "TuioMotionEvent.mot_accel": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "TuioMotionEvent.rot_accel": [
            {
                "type": "attr",
                "anno": "Property[TuioMotionEvent, float]"
            }
        ],
        "TuioMotionEvent.xmot": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "TuioMotionEvent.ymot": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "TuioMotionEvent.zmot": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "Tuio2dCurMotionEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "id": "str",
                    "args": "dict"
                }
            }
        ],
        "Tuio2dCurMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Tuio2dCurMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Tuio2dCurMotionEvent.Y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Tuio2dCurMotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "Tuio2dCurMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Tuio2dObjMotionEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "id": "str",
                    "args": "dict"
                }
            }
        ],
        "Tuio2dObjMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Tuio2dObjMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tuio2dObjMotionEvent.Y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Tuio2dObjMotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "Tuio2dObjMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Tuio2dBlbMotionEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "id": "str",
                    "args": "dict"
                }
            }
        ],
        "Tuio2dBlbMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Tuio2dBlbMotionEvent.Y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Tuio2dBlbMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Tuio2dBlbMotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "Tuio2dBlbMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TuioMotionEventProvider._update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable",
                    "value": "dict"
                }
            }
        ],
        "TuioMotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable"
                }
            }
        ],
        "Tuio2dCurMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "Tuio2dObjMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "Tuio2dBlbMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "TuioMotionEventProvider.stop": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.providers.wm_touch": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[WM_MotionEventProvider, ...]"
            }
        ],
        "Window": [
            {
                "type": "var",
                "anno": "Window"
            }
        ],
        "WM_MotionEvent.__attrs__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "WM_MotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WM_MotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "WM_MotionEvent.size": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "WM_MotionEvent.profile": [
            {
                "type": "attr",
                "anno": "tuple[int, ...]"
            }
        ],
        "WM_MotionEventProvider.touch_events": [
            {
                "type": "attr",
                "anno": "deque[WM_MotionEvent]"
            }
        ],
        "WM_MotionEventProvider.touches": [
            {
                "type": "attr",
                "anno": "dict[int, WM_MotionEvent]"
            }
        ],
        "WM_MotionEventProvider.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WM_MotionEventProvider.hwnd": [
            {
                "type": "attr",
                "anno": "Window"
            }
        ],
        "WM_MotionEventProvider.new_windProc": [
            {
                "type": "attr",
                "anno": "WNDPROC"
            }
        ],
        "WM_MotionEventProvider.old_windProc": [
            {
                "type": "attr",
                "anno": "WNDPROC"
            }
        ],
        "WM_MotionEventProvider.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WM_MotionEventProvider._touch_handler": [
            {
                "type": "method",
                "args": {
                    "msg": "int",
                    "wParam": "int",
                    "lParam": "int"
                }
            }
        ],
        "WM_MotionEventProvider._mouse_handler": [
            {
                "type": "method",
                "args": {
                    "msg": "int",
                    "wparam": "int",
                    "lParam": "int"
                }
            }
        ],
        "WM_MotionEventProvider._touch_wndProc": [
            {
                "type": "method",
                "args": {
                    "hwnd": "Window",
                    "msg": "int",
                    "wParam": "int",
                    "lParam": "int"
                }
            }
        ],
        "WM_MotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WM_MotionEvent.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WM_MotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "WM_MotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, WM_MotionEvent], None]"
                }
            }
        ]
    },
    "input.providers.probesysfs": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "EventLoop": [
            {
                "type": "var",
                "anno": "EventLoop"
            }
        ],
        "ABS_MT_POSITION_X": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_cache_input": [
            {
                "type": "var",
                "anno": "list[Input]"
            }
        ],
        "_cache_xinput": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "Input.path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Input.device": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Input.is_mouse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "getout": [
            {
                "type": "func",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ProbeSysfsHardwareProbe.__new__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "args": "list"
                }
            }
        ],
        "ProbeSysfsHardwareProbe.provider": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ProbeSysfsHardwareProbe.match": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ProbeSysfsHardwareProbe.input_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ProbeSysfsHardwareProbe.select_all": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ProbeSysfsHardwareProbe.use_mouse": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ProbeSysfsHardwareProbe.use_regex": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ProbeSysfsHardwareProbe.args": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "ProbeSysfsHardwareProbe.should_use_mouse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "query_xinput": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Input.__init__": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "read_line": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "Input.get_capabilities": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Input.has_capability": [
            {
                "type": "method",
                "args": {
                    "capability": "int"
                }
            }
        ],
        "Input.name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "get_inputs": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ProbeSysfsHardwareProbe.probe": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProbeSysfsHardwareProbe.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "args": "str"
                }
            }
        ]
    },
    "input.providers.wm_common": {
        "WM_MOUSEFIRST": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_MOUSEMOVE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_LBUTTONDOWN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_LBUTTONUP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_LBUTTONDBLCLK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_RBUTTONDOWN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_RBUTTONUP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_RBUTTONDBLCLK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_MBUTTONDOWN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_MBUTTONUP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_MBUTTONDBLCLK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_MOUSEWHEEL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_MOUSELAST": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_TOUCH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TOUCHEVENTF_MOVE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TOUCHEVENTF_DOWN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TOUCHEVENTF_UP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "PEN_OR_TOUCH_SIGNATURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "PEN_OR_TOUCH_MASK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "PEN_EVENT_TOUCH_MASK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SM_CYCAPTION": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WM_TABLET_QUERYSYSTEMGESTURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_PRESSANDHOLD": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_PENTAPFEEDBACK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_PENBARRELFEEDBACK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_TOUCHUIFORCEON": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_TOUCHUIFORCEOFF": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_TOUCHSWITCH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_FLICKS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_ENABLE_FLICKSONCONTEXT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_ENABLE_FLICKLEARNINGMODE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_SMOOTHSCROLLING": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TABLET_DISABLE_FLICKFALLBACKKEYS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "GWL_WNDPROC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "QUERYSYSTEMGESTURE_WNDPROC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "RECT.x": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "LRESULT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "WNDPROC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "TOUCHINPUT._fields_": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TOUCHINPUT.size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TOUCHINPUT._event_type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TOUCHINPUT.event_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LONG_PTR": [
            {
                "type": "var",
                "anno": "CType[c_longlong]"
            }
        ],
        "SetWindowLong_WndProc_wrapper_generator": [
            {
                "type": "func",
                "args": {
                    "func": "Callable[[int, int], c_void_p]"
                }
            }
        ],
        "SetWindowLong_WndProc_wrapper": [
            {
                "type": "var",
                "anno": "Callable[[int, int], c_void_p]"
            }
        ],
        "TOUCHINPUT.screen_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RECT.w": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "RECT.h": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "RECT.y": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "TOUCHINPUT.screen_y": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.providers.leapfinger": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[Type[LeapFingerEventProvider], ...]"
            }
        ],
        "_LEAP_QUEUE": [
            {
                "type": "var",
                "anno": "deque"
            }
        ],
        "Leap": [
            {
                "type": "var",
                "anno": "Leap"
            }
        ],
        "InteractionBox": [
            {
                "type": "var",
                "anno": "Leap"
            }
        ],
        "normalize": [
            {
                "type": "func",
                "args": {
                    "value": "int",
                    "a": "int",
                    "b": "int"
                }
            }
        ],
        "LeapFingerEvent.profile": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LeapFingerEvent.sx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LeapFingerEvent.sy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LeapFingerEvent.sz": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LeapFingerEvent.z": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LeapFingerEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LeapFingerEventProvider.__handlers__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LeapFingerEventProvider.LeapMotionListener.on_init": [
            {
                "type": "method",
                "args": {
                    "controller": "Leap.Controller"
                }
            }
        ],
        "LeapFingerEventProvider.LeapMotionListener.on_connect": [
            {
                "type": "method",
                "args": {
                    "controller": "Leap.Controller"
                }
            }
        ],
        "LeapFingerEventProvider.LeapMotionListener.on_disconnect": [
            {
                "type": "method",
                "args": {
                    "controller": "Leap.Controller"
                }
            }
        ],
        "LeapFingerEventProvider.LeapMotionListener.on_exit": [
            {
                "type": "method",
                "args": {
                    "controller": "Leap.Controller"
                }
            }
        ],
        "LeapFingerEventProvider.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LeapFingerEventProvider.touches": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LeapFingerEventProvider.listener": [
            {
                "type": "attr",
                "anno": "Leap.Listener"
            }
        ],
        "LeapFingerEventProvider.controller": [
            {
                "type": "attr",
                "anno": "Leap.Controller"
            }
        ],
        "LeapFingerEventProvider.LeapMotionListener.on_frame": [
            {
                "type": "method",
                "args": {
                    "controller": "Leap.Controller"
                }
            }
        ],
        "LeapFingerEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LeapFingerEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "LeapFingerEventProvider.process_frame": [
            {
                "type": "method",
                "args": {
                    "frame": "Leap"
                }
            }
        ],
        "LeapFingerEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable"
                }
            }
        ]
    },
    "input.providers": {
        "platform": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "err": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "input.providers.wm_pen": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[WM_PenProvider, ...]"
            }
        ],
        "WM_Pen.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "win_rect": [
            {
                "type": "var",
                "anno": "RECT"
            }
        ],
        "WM_PenProvider._is_pen_message": [
            {
                "type": "method",
                "args": {
                    "msg": "str"
                }
            }
        ],
        "WM_PenProvider.pen_status": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "WM_PenProvider.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "WM_PenProvider.pen": [
            {
                "type": "attr",
                "anno": "WM_Pen"
            }
        ],
        "WM_PenProvider.pen_events": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "WM_PenProvider.hwnd": [
            {
                "type": "attr",
                "anno": "windll.user32.ActiveWindow"
            }
        ],
        "WM_PenProvider.new_windProc": [
            {
                "type": "attr",
                "anno": "WNDPROC"
            }
        ],
        "WM_PenProvider.old_windProc": [
            {
                "type": "attr",
                "anno": "WNDPROC"
            }
        ],
        "WM_PenProvider.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WM_Pen.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WM_PenProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, WM_Pen], None]"
                }
            }
        ],
        "WM_Pen.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "WM_PenProvider._pen_handler": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "wParam": "int",
                    "lParam": "int"
                }
            }
        ],
        "WM_PenProvider._pen_wndProc": [
            {
                "type": "method",
                "args": {
                    "hwnd": "windll.user32.ActiveWindow",
                    "msg": "str",
                    "wParam": "int",
                    "lParam": "int"
                }
            }
        ],
        "WM_PenProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.providers.mtdev": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "MTDMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MTDMotionEvent.sx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MTDMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MTDMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MTDMotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "MTDMotionEvent.pressure": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MTDMotionEventProvider.options": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MTDMotionEventProvider._device": [
            {
                "type": "attr",
                "anno": "Device"
            }
        ],
        "MTDMotionEventProvider.input_fn": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MTDMotionEventProvider.default_ranges": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MTDMotionEventProvider.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MTDMotionEventProvider.queue": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MTDMotionEventProvider.thread": [
            {
                "type": "attr",
                "anno": "threading.Thread"
            }
        ],
        "MTDMotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, str], None]"
                }
            }
        ],
        "MTDMotionEventProvider.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "Device",
                    "args": "str"
                }
            }
        ],
        "MTDMotionEvent.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MTDMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "MTDMotionEventProvider._thread_run": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "MTDMotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.providers.linuxwacom": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "LinuxWacomMotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LinuxWacomMotionEvent.sx": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LinuxWacomMotionEvent.sy": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LinuxWacomMotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LinuxWacomMotionEvent.shape": [
            {
                "type": "attr",
                "anno": "ShapeRect"
            }
        ],
        "LinuxWacomMotionEvent.pressure": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "EV_SYN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_KEY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_REL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_ABS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_MSC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_SW": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_LED": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_SND": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_REP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_FF": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_PWR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_FF_STATUS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_MAX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EV_CNT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KEY_MAX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SYN_REPORT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SYN_CONFIG": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SYN_MT_REPORT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_SERIAL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_PULSELED": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_GESTURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_RAW": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_SCAN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_MAX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MSC_CNT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_X": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_Y": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_PRESSURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MISC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_TOUCH_MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_TOUCH_MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_WIDTH_MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_WIDTH_MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_ORIENTATION": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_POSITION_X": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_POSITION_Y": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_TOOL_TYPE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_BLOB_ID": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_TRACKING_ID": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ABS_MT_PRESSURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EVIOCGNAME": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EVIOCGBIT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EVIOCGABS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "struct_input_event_sz": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "struct_input_absinfo_sz": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "sz_l": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "LinuxWacomMotionEventProvider.options": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "LinuxWacomMotionEventProvider.input_fn": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxWacomMotionEventProvider.default_ranges": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LinuxWacomMotionEventProvider.mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxWacomMotionEventProvider.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "args": "str"
                }
            }
        ],
        "LinuxWacomMotionEventProvider.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LinuxWacomMotionEventProvider.queue": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LinuxWacomMotionEventProvider.thread": [
            {
                "type": "attr",
                "anno": "threading.Thread"
            }
        ],
        "LinuxWacomMotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[str, str], None]"
                }
            }
        ],
        "LinuxWacomMotionEvent.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxWacomMotionEventProvider._thread_run": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "LinuxWacomMotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "LinuxWacomMotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.postproc.doubletap": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "InputPostprocDoubleTap.double_tap_distance": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InputPostprocDoubleTap.double_tap_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InputPostprocDoubleTap.touches": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InputPostprocDoubleTap.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InputPostprocDoubleTap.find_double_tap": [
            {
                "type": "method",
                "args": {
                    "ref": "InputPostprocDoubleTap"
                }
            }
        ],
        "InputPostprocDoubleTap.process": [
            {
                "type": "method",
                "args": {
                    "events": "list"
                }
            }
        ]
    },
    "input.postproc.ignorelist": {
        "__all__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InputPostprocIgnoreList.ignore_list": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InputPostprocIgnoreList.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InputPostprocIgnoreList.collide_ignore": [
            {
                "type": "method",
                "args": {
                    "touch": "InputPostprocIgnoreList"
                }
            }
        ],
        "InputPostprocIgnoreList.process": [
            {
                "type": "method",
                "args": {
                    "events": "list"
                }
            }
        ]
    },
    "input.postproc.dejitter": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "InputPostprocDejitter.jitterdist": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InputPostprocDejitter.ignore_devices": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "InputPostprocDejitter.last_touches": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InputPostprocDejitter.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InputPostprocDejitter.taxicab_distance": [
            {
                "type": "method",
                "args": {
                    "p": "tuple",
                    "q": "tuple"
                }
            }
        ],
        "InputPostprocDejitter.process": [
            {
                "type": "method",
                "args": {
                    "events": "list"
                }
            }
        ]
    },
    "input.postproc.tripletap": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "InputPostprocTripleTap.triple_tap_distance": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InputPostprocTripleTap.triple_tap_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InputPostprocTripleTap.touches": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InputPostprocTripleTap.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InputPostprocTripleTap.find_triple_tap": [
            {
                "type": "method",
                "args": {
                    "ref": "InputPostprocTripleTap"
                }
            }
        ],
        "InputPostprocTripleTap.process": [
            {
                "type": "method",
                "args": {
                    "events": "list"
                }
            }
        ]
    },
    "input.postproc.calibration": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "InputPostprocCalibration.devices": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InputPostprocCalibration.frame": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InputPostprocCalibration.provider_map": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InputPostprocCalibration._get_provider_map": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InputPostprocCalibration.auto_calibrate": [
            {
                "type": "method",
                "args": {
                    "sx": "float",
                    "sy": "float",
                    "size": "tuple"
                }
            }
        ],
        "InputPostprocCalibration._get_provider_key": [
            {
                "type": "method",
                "args": {
                    "event": "MotionEvent"
                }
            }
        ],
        "InputPostprocCalibration.process": [
            {
                "type": "method",
                "args": {
                    "events": "list"
                }
            }
        ],
        "InputPostprocCalibration.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "input.postproc.retaintouch": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "InputPostprocRetainTouch.timeout": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InputPostprocRetainTouch.distance": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "InputPostprocRetainTouch._available": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "InputPostprocRetainTouch._links": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InputPostprocRetainTouch.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InputPostprocRetainTouch.process": [
            {
                "type": "method",
                "args": {
                    "events": "list"
                }
            }
        ]
    },
    "input.postproc": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "kivy_postproc_modules": [
            {
                "type": "var",
                "anno": "dict"
            }
        ]
    },
    "input.provider": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "MotionEventProvider.device": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MotionEventProvider.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "args": "dict"
                }
            }
        ],
        "MotionEventProvider.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEventProvider.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEventProvider.update": [
            {
                "type": "method",
                "args": {
                    "dispatch_fn": "Callable[[object], None]"
                }
            }
        ]
    },
    "input": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ]
    },
    "input.motionevent": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "EnhancedDictionary.__getattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str"
                }
            }
        ],
        "EnhancedDictionary.__setattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "value": "object"
                }
            }
        ],
        "MotionEventMetaclass.__new__": [
            {
                "type": "method",
                "args": {
                    "mcs": "type",
                    "name": "str",
                    "bases": "tuple",
                    "attrs": "dict"
                }
            }
        ],
        "MotionEventBase": [
            {
                "type": "var",
                "anno": "MotionEventMetaclass"
            }
        ],
        "MotionEvent.__uniq_id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MotionEvent.__attrs__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MotionEvent.is_touch": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MotionEvent.push_attrs_stack": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MotionEvent.push_attrs": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MotionEvent.uid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MotionEvent.device": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MotionEvent.grab_list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MotionEvent.grab_exclusive_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "MotionEvent.grab_state": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MotionEvent.grab_current": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "MotionEvent.profile": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "MotionEvent.id": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MotionEvent.shape": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MotionEvent.sx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.sy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.sz": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.osx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.osy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.osz": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.psx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.psy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.psz": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.dsx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.dsy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.dsz": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.x": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.z": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.ox": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.oy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.oz": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.px": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.py": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.pz": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.dx": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.dy": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.dz": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.pos": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "MotionEvent.time_start": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.time_update": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.time_end": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.is_double_tap": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MotionEvent.is_triple_tap": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MotionEvent.double_tap_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.triple_tap_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MotionEvent.ud": [
            {
                "type": "attr",
                "anno": "EnhancedDictionary"
            }
        ],
        "MotionEvent.depack": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "MotionEvent.__init__": [
            {
                "type": "method",
                "args": {
                    "device": "str",
                    "id": "int",
                    "args": "dict"
                }
            }
        ],
        "MotionEvent.move": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "MotionEvent.scale_for_screen": [
            {
                "type": "method",
                "args": {
                    "w": "float",
                    "h": "float",
                    "p": "float",
                    "rotation": "int",
                    "smode": "str",
                    "kheight": "int"
                }
            }
        ],
        "MotionEvent.apply_transform_2d": [
            {
                "type": "method",
                "args": {
                    "transform": "Vector"
                }
            }
        ],
        "MotionEvent.copy_to": [
            {
                "type": "method",
                "args": {
                    "to": "type"
                }
            }
        ],
        "MotionEvent.update_time_end": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEvent.dpos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEvent.opos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEvent.ppos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEvent.spos": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEvent.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEvent.is_mouse_scrolling": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "MotionEvent.pop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEvent.ungrab": [
            {
                "type": "method",
                "args": {
                    "class_instance": "type"
                }
            }
        ],
        "MotionEvent.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MotionEvent.grab": [
            {
                "type": "method",
                "args": {
                    "class_instance": "type",
                    "exclusive": "bool"
                }
            }
        ],
        "MotionEvent.distance": [
            {
                "type": "method",
                "args": {
                    "other_touch": "MotionEvent"
                }
            }
        ],
        "MotionEvent.push": [
            {
                "type": "method",
                "args": {
                    "attrs": "tuple"
                }
            }
        ]
    },
    "logger": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "PermissionError": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "Logger": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "RESET_SEQ": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "COLOR_SEQ": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "BOLD_SEQ": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "previous_stderr": [
            {
                "type": "var",
                "anno": "logging.Logger"
            }
        ],
        "formatter_message": [
            {
                "type": "func",
                "args": {
                    "message": "str",
                    "use_color": "bool"
                }
            }
        ],
        "COLORS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "LOG_LEVELS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "FileHandler.history": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "FileHandler.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileHandler.fd": [
            {
                "type": "attr",
                "anno": "logging.Handler"
            }
        ],
        "FileHandler.log_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileHandler.encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ColoredFormatter.use_color": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ColoredFormatter.__init__": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "use_color": "bool"
                }
            }
        ],
        "ColoredFormatter.format": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ],
        "LogFile.buffer": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogFile.func": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "LogFile.channel": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogFile.errors": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LogFile.__init__": [
            {
                "type": "method",
                "args": {
                    "channel": "str",
                    "func": "Callable"
                }
            }
        ],
        "LogFile.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LogFile.write": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ],
        "ConsoleHandler.filter": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ],
        "FileHandler._write_message": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ],
        "LogFile.isatty": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "file_log_handler": [
            {
                "type": "var",
                "anno": "logging.Handler"
            }
        ],
        "use_color": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "color_fmt": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "formatter": [
            {
                "type": "var",
                "anno": "logging.Formatter"
            }
        ],
        "console": [
            {
                "type": "var",
                "anno": "ConsoleHandler"
            }
        ],
        "LoggerHistory": [
            {
                "type": "var",
                "anno": "kivy.LoggerHistory"
            }
        ],
        "logger_config_update": [
            {
                "type": "func",
                "args": {
                    "section": "int",
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "FileHandler._configure": [
            {
                "type": "method",
                "args": {
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FileHandler.emit": [
            {
                "type": "method",
                "args": {
                    "message": "str"
                }
            }
        ],
        "FileHandler.purge_logs": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "core": {
        "handle_win_lib_import_error": [
            {
                "type": "func",
                "args": {
                    "category": "str",
                    "provider": "str",
                    "mod_name": "str"
                }
            }
        ],
        "core_register_libs": [
            {
                "type": "func",
                "args": {
                    "category": "str",
                    "libs": "list",
                    "base": "str"
                }
            }
        ],
        "core_select_lib": [
            {
                "type": "func",
                "args": {
                    "category": "str",
                    "llist": "list",
                    "create_instance": "bool",
                    "base": "str",
                    "basemodule": "str"
                }
            }
        ]
    },
    "context": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "_contexts": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_context_stack": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "ProxyContext.__slots__": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ProxyContext.__init__": [
            {
                "type": "method",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "ProxyContext.__getattribute__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ProxyContext.__delattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ProxyContext.__setattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "ProxyContext.__bool__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProxyContext.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProxyContext.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Context.sandbox": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Context.__init__": [
            {
                "type": "method",
                "args": {
                    "init": "bool"
                }
            }
        ],
        "_default_context": [
            {
                "type": "var",
                "anno": "Context"
            }
        ],
        "register_context": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "cls": "type",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "get_current_context": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Context.pop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Context.push": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "factory_registers": {
        "r": [
            {
                "type": "var",
                "anno": "Callable[[], None]"
            }
        ]
    },
    "lang.builder": {
        "__all__": [
            {
                "type": "var",
                "anno": "CodeType"
            }
        ],
        "trace": [
            {
                "type": "var",
                "anno": "Callable[[str], Instruction]"
            }
        ],
        "Instruction": [
            {
                "type": "var",
                "anno": "Instruction | None"
            }
        ],
        "_delayed_start": [
            {
                "type": "var",
                "anno": "Instruction"
            }
        ],
        "get_proxy": [
            {
                "type": "func",
                "args": {
                    "widget": "CodeType"
                }
            }
        ],
        "delayed_call_fn": [
            {
                "type": "func",
                "args": {
                    "args": "list",
                    "instance": "object",
                    "v": "object"
                }
            }
        ],
        "BuilderBase._match_cache": [
            {
                "type": "attr",
                "anno": "Cache"
            }
        ],
        "BuilderBase._match_name_cache": [
            {
                "type": "attr",
                "anno": "Cache"
            }
        ],
        "BuilderBase.files": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "BuilderBase.dynamic_classes": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "BuilderBase.templates": [
            {
                "type": "attr",
                "anno": "dict[str, tuple[CodeType, ParserSelectorClass, str]]"
            }
        ],
        "BuilderBase.rules": [
            {
                "type": "attr",
                "anno": "list[tuple[str, ParserRuleProperty]]"
            }
        ],
        "BuilderBase.rulectx": [
            {
                "type": "attr",
                "anno": "dict[ParserRuleProperty, dict]"
            }
        ],
        "BuilderBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BuilderBase._current_filename": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "BuilderBase.unbind_widget": [
            {
                "type": "method",
                "args": {
                    "uid": "str"
                }
            }
        ],
        "BuilderBase.unbind_property": [
            {
                "type": "method",
                "args": {
                    "widget": "CodeType",
                    "name": "str"
                }
            }
        ],
        "custom_callback": [
            {
                "type": "func",
                "args": {
                    "__kvlang__": "CodeType",
                    "idmap": "dict",
                    "largs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "BuilderBase.create_from": [
            {
                "type": "method",
                "args": {
                    "cls": "Type[BuilderBase]",
                    "builder": "Parser"
                }
            }
        ],
        "BuilderBase.match_rule_name": [
            {
                "type": "method",
                "args": {
                    "rule_name": "str"
                }
            }
        ],
        "update_intermediates": [
            {
                "type": "func",
                "args": {
                    "base": "object",
                    "keys": "list",
                    "bound": "list",
                    "s": "int",
                    "fn": "Callable",
                    "args": "list",
                    "instance": "object",
                    "value": "object"
                }
            }
        ],
        "BuilderBase._clear_matchcache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "call_fn": [
            {
                "type": "func",
                "args": {
                    "args": "list",
                    "instance": "object",
                    "v": "object"
                }
            }
        ],
        "BuilderBase.sync": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "match_rule": [
            {
                "type": "func",
                "args": {
                    "fn": "str",
                    "index": "int",
                    "rule": "ParserRuleProperty"
                }
            }
        ],
        "dump_builder_stats": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "BuilderBase.unload_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "create_handler": [
            {
                "type": "func",
                "args": {
                    "iself": "BuilderBase",
                    "element": "object",
                    "key": "str",
                    "value": "object",
                    "rule": "ParserRuleProperty",
                    "idmap": "dict",
                    "delayed": "bool"
                }
            }
        ],
        "BuilderBase._build_canvas": [
            {
                "type": "method",
                "args": {
                    "canvas": "Canvas",
                    "widget": "CodeType",
                    "rule": "ParserRuleProperty",
                    "rootrule": "str"
                }
            }
        ],
        "BuilderBase.match": [
            {
                "type": "method",
                "args": {
                    "widget": "CodeType"
                }
            }
        ],
        "BuilderBase._apply_rule": [
            {
                "type": "method",
                "args": {
                    "widget": "CodeType",
                    "rule": "ParserRuleProperty",
                    "rootrule": "str",
                    "template_ctx": "str",
                    "ignored_consts": "set[str]",
                    "rule_children": "list[CodeType]"
                }
            }
        ],
        "BuilderBase.apply": [
            {
                "type": "method",
                "args": {
                    "widget": "CodeType",
                    "ignored_consts": "set[str]",
                    "rule_children": "list[CodeType]",
                    "dispatch_kv_post": "bool"
                }
            }
        ],
        "BuilderBase.apply_rules": [
            {
                "type": "method",
                "args": {
                    "widget": "CodeType",
                    "rule_name": "str",
                    "ignored_consts": "set[str]",
                    "rule_children": "list[CodeType]",
                    "dispatch_kv_post": "bool"
                }
            }
        ],
        "BuilderBase.template": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "ctx": "str"
                }
            }
        ],
        "BuilderBase.load_string": [
            {
                "type": "method",
                "args": {
                    "string": "str",
                    "kwargs": "str"
                }
            }
        ],
        "BuilderBase.load_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "encoding": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "lang.parser": {
        "__all__": [
            {
                "type": "var",
                "anno": "CodeType"
            }
        ],
        "trace": [
            {
                "type": "var",
                "anno": "Callable[[str], None]"
            }
        ],
        "global_idmap": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "__KV_INCLUDES__": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "lang_str": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "lang_key": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "lang_keyvalue": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "lang_tr": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "lang_cls_split_pat": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_handlers": [
            {
                "type": "var",
                "anno": "defaultdict"
            }
        ],
        "ProxyApp.__slots__": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "ProxyApp.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProxyApp.__getattribute__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ProxyApp.__delattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ProxyApp.__setattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "value": "object"
                }
            }
        ],
        "ProxyApp.__bool__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProxyApp.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProxyApp.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserException.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserException.line": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ParserRuleProperty.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "ParserRuleProperty.ctx": [
            {
                "type": "attr",
                "anno": "ParserRule"
            }
        ],
        "ParserRuleProperty.line": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ParserRuleProperty.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserRuleProperty.value": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserRuleProperty.co_value": [
            {
                "type": "attr",
                "anno": "CodeType | None"
            }
        ],
        "ParserRuleProperty.mode": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ParserRuleProperty.watched_keys": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ParserRuleProperty.count": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ParserRuleProperty.ignore_prev": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ParserRuleProperty.__init__": [
            {
                "type": "method",
                "args": {
                    "ctx": "ParserRule",
                    "line": "int",
                    "name": "str",
                    "value": "str",
                    "ignore_prev": "bool"
                }
            }
        ],
        "ParserRule.__slots__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "ParserRule.level": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ParserRule.ctx": [
            {
                "type": "attr",
                "anno": "ParserSelector"
            }
        ],
        "ParserRule.line": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ParserRule.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserRule.children": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ParserRule.id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserRule.properties": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ParserRule.canvas_root": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserRule.canvas_before": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserRule.canvas_after": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserRule.handlers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ParserRule.cache_marked": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ParserRule.avoid_previous_rules": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ParserRule.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Parser.PROP_ALLOWED": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Parser.CLASS_RANGE": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "Parser.PROP_RANGE": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "Parser.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Parser.rules": [
            {
                "type": "attr",
                "anno": "list[tuple[str, ParserRuleProperty]]"
            }
        ],
        "Parser.templates": [
            {
                "type": "attr",
                "anno": "list[tuple[str, ParserSelectorClass, str]]"
            }
        ],
        "Parser.root": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Parser.sourcecode": [
            {
                "type": "attr",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "Parser.directives": [
            {
                "type": "attr",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "Parser.dynamic_classes": [
            {
                "type": "attr",
                "anno": "dict[str, ParserSelectorClass]"
            }
        ],
        "Parser.filename": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ParserSelector.key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ParserSelector.__init__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "ParserSelector.match": [
            {
                "type": "method",
                "args": {
                    "widget": "str"
                }
            }
        ],
        "ParserSelector.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserSelectorClass.match": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "ParserSelectorName.parents": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "ParserSelectorName.get_bases": [
            {
                "type": "method",
                "args": {
                    "cls": "CodeType"
                }
            }
        ],
        "ParserSelectorName.match_rule_name": [
            {
                "type": "method",
                "args": {
                    "rule_name": "str"
                }
            }
        ],
        "Parser.strip_comments": [
            {
                "type": "method",
                "args": {
                    "lines": "list[tuple[str, str]]"
                }
            }
        ],
        "ParserRule.create_missing": [
            {
                "type": "method",
                "args": {
                    "widget": "CodeType"
                }
            }
        ],
        "ProxyApp._ensure_app": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserRuleProperty.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserException.__init__": [
            {
                "type": "method",
                "args": {
                    "context": "ParserSelector",
                    "line": "int",
                    "message": "str",
                    "cause": "Exception"
                }
            }
        ],
        "Parser.execute_directives": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserRule._build_template": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserRule._build_rule": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserRule._detect_selectors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserRule._forbid_selectors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserRule.__init__": [
            {
                "type": "method",
                "args": {
                    "ctx": "ParserSelector",
                    "line": "int",
                    "name": "str",
                    "level": "int"
                }
            }
        ],
        "Parser.parse_level": [
            {
                "type": "method",
                "args": {
                    "level": "int",
                    "lines": "list[tuple[str, str]]",
                    "spaces": "int"
                }
            }
        ],
        "ParserSelectorName.match": [
            {
                "type": "method",
                "args": {
                    "widget": "CodeType"
                }
            }
        ],
        "ParserRuleProperty.precompile": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ParserRule.precompile": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Parser.parse": [
            {
                "type": "method",
                "args": {
                    "content": "str"
                }
            }
        ],
        "Parser.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ]
    },
    "tests.test_widget_walk": {
        "FileWidgetWalk.test_walk_single": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileWidgetWalk.test_walk_large_tree": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "lang": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ]
    },
    "weakmethod": {
        "WeakMethod.method": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "WeakMethod.method_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "WeakMethod.proxy": [
            {
                "type": "attr",
                "anno": "weakref.weakref.weakref.weakref.weakref.weakref.weakref.weakref"
            }
        ],
        "WeakMethod.__init__": [
            {
                "type": "method",
                "args": {
                    "method": "Any"
                }
            }
        ],
        "WeakMethod.__call__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WeakMethod.is_dead": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WeakMethod.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "WeakMethod.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_weakmethod": {
        "test_weak_method_func": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_weak_method_on_obj": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "multistroke": {
        "__all__": [
            {
                "type": "var",
                "anno": "List[str]"
            }
        ],
        "xrange": [
            {
                "type": "var",
                "anno": "range"
            }
        ],
        "DEFAULT_GPF": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SQUARESIZE": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "ONEDTHRESHOLD": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "ORIGIN": [
            {
                "type": "var",
                "anno": "Vector"
            }
        ],
        "Recognizer.db": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Recognizer.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Recognizer.on_search_start": [
            {
                "type": "method",
                "args": {
                    "result": "str"
                }
            }
        ],
        "Recognizer.on_search_complete": [
            {
                "type": "method",
                "args": {
                    "result": "str"
                }
            }
        ],
        "ProgressTracker.status": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ProgressTracker.candidate": [
            {
                "type": "attr",
                "anno": "Candidate"
            }
        ],
        "ProgressTracker.results": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ProgressTracker.tasks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ProgressTracker._start_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ProgressTracker._match_ops": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ProgressTracker._completed": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ProgressTracker._break_flag": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ProgressTracker.__init__": [
            {
                "type": "method",
                "args": {
                    "candidate": "Candidate",
                    "tasks": "int",
                    "kwargs": "object"
                }
            }
        ],
        "ProgressTracker.progress": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProgressTracker.best": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProgressTracker.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProgressTracker.on_complete": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProgressTracker.on_progress": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProgressTracker.on_result": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "MultistrokeGesture.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MultistrokeGesture.priority": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MultistrokeGesture.numpoints": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "MultistrokeGesture.stroke_sens": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MultistrokeGesture.orientation_sens": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "MultistrokeGesture.angle_similarity": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "MultistrokeGesture.strokes": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "MultistrokeGesture.templates": [
            {
                "type": "attr",
                "anno": "list[UnistrokeTemplate]"
            }
        ],
        "MultistrokeGesture.angle_similarity_threshold": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeGesture._order": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "MultistrokeGesture._orders": [
            {
                "type": "attr",
                "anno": "list[ListProperty]"
            }
        ],
        "UnistrokeTemplate.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UnistrokeTemplate.numpoints": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UnistrokeTemplate.orientation_sens": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UnistrokeTemplate.db": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UnistrokeTemplate.points": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Candidate.skip_invariant": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Candidate.skip_bounded": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Candidate.numpoints": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Candidate.db": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Candidate.strokes": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "centroid": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty"
                }
            }
        ],
        "indicative_angle": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty"
                }
            }
        ],
        "bounding_box": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty"
                }
            }
        ],
        "distance": [
            {
                "type": "func",
                "args": {
                    "p1": "Vector",
                    "p2": "Vector"
                }
            }
        ],
        "path_length": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty"
                }
            }
        ],
        "start_unit_vector": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty",
                    "index": "float"
                }
            }
        ],
        "vectorize": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty",
                    "use_bounded_rotation_invariance": "bool"
                }
            }
        ],
        "translate_to": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty",
                    "pt": "Vector"
                }
            }
        ],
        "scale_dim": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty",
                    "size": "float",
                    "oneDratio": "float"
                }
            }
        ],
        "rotate_by": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty",
                    "radians": "float"
                }
            }
        ],
        "resample": [
            {
                "type": "func",
                "args": {
                    "points": "ListProperty",
                    "n": "int"
                }
            }
        ],
        "Candidate.prepare": [
            {
                "type": "method",
                "args": {
                    "numpoints": "int"
                }
            }
        ],
        "Candidate._get_db_key": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "numpoints": "int",
                    "orientation_sens": "bool"
                }
            }
        ],
        "Candidate.get_protractor_vector": [
            {
                "type": "method",
                "args": {
                    "numpoints": "int",
                    "orientation_sens": "bool"
                }
            }
        ],
        "Candidate.get_start_unit_vector": [
            {
                "type": "method",
                "args": {
                    "numpoints": "int",
                    "orientation_sens": "bool"
                }
            }
        ],
        "UnistrokeTemplate.prepare": [
            {
                "type": "method",
                "args": {
                    "numpoints": "int"
                }
            }
        ],
        "UnistrokeTemplate._get_db_key": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "numpoints": "int"
                }
            }
        ],
        "UnistrokeTemplate.get_points": [
            {
                "type": "method",
                "args": {
                    "numpoints": "int"
                }
            }
        ],
        "UnistrokeTemplate.get_vector": [
            {
                "type": "method",
                "args": {
                    "numpoints": "int"
                }
            }
        ],
        "MultistrokeGesture.get_distance": [
            {
                "type": "method",
                "args": {
                    "cand": "Candidate",
                    "tpl": "UnistrokeTemplate",
                    "numpoints": "int"
                }
            }
        ],
        "UnistrokeTemplate.get_start_unit_vector": [
            {
                "type": "method",
                "args": {
                    "numpoints": "int"
                }
            }
        ],
        "UnistrokeTemplate.add_point": [
            {
                "type": "method",
                "args": {
                    "p": "Point"
                }
            }
        ],
        "MultistrokeGesture._make_unistrokes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeGesture._heap_permute": [
            {
                "type": "method",
                "args": {
                    "n": "int"
                }
            }
        ],
        "Candidate.get_angle_similarity": [
            {
                "type": "method",
                "args": {
                    "tpl": "UnistrokeTemplate",
                    "kwargs": "object"
                }
            }
        ],
        "Candidate.__init__": [
            {
                "type": "method",
                "args": {
                    "strokes": "ListProperty",
                    "numpoints": "int",
                    "kwargs": "object"
                }
            }
        ],
        "Candidate.add_stroke": [
            {
                "type": "method",
                "args": {
                    "stroke": "Vector"
                }
            }
        ],
        "UnistrokeTemplate.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "points": "ListProperty",
                    "kwargs": "str"
                }
            }
        ],
        "MultistrokeGesture.permute": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MultistrokeGesture.add_stroke": [
            {
                "type": "method",
                "args": {
                    "stroke": "ListProperty",
                    "permute": "bool"
                }
            }
        ],
        "MultistrokeGesture.match_candidate": [
            {
                "type": "method",
                "args": {
                    "cand": "Candidate",
                    "kwargs": "object"
                }
            }
        ],
        "MultistrokeGesture.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "strokes": "ListProperty",
                    "kwargs": "str"
                }
            }
        ],
        "Recognizer.add_gesture": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "strokes": "ListProperty",
                    "kwargs": "str"
                }
            }
        ],
        "Recognizer._candidate": [
            {
                "type": "method",
                "args": {
                    "strokes": "ListProperty",
                    "kwargs": "object"
                }
            }
        ],
        "ProgressTracker._add_result": [
            {
                "type": "method",
                "args": {
                    "gesture": "MultistrokeGesture",
                    "dist": "float",
                    "tpl": "int",
                    "res": "Vector"
                }
            }
        ],
        "Recognizer.filter": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Recognizer.recognize": [
            {
                "type": "method",
                "args": {
                    "strokes": "ListProperty",
                    "goodscore": "float",
                    "timeout": "float",
                    "delay": "float",
                    "kwargs": "object"
                }
            }
        ],
        "Recognizer.prepare_templates": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Recognizer.transfer_gesture": [
            {
                "type": "method",
                "args": {
                    "tgt": "Recognizer",
                    "kwargs": "object"
                }
            }
        ],
        "Recognizer.export_gesture": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "kwargs": "object"
                }
            }
        ],
        "Recognizer.parse_gesture": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "Recognizer.import_gesture": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "filename": "str",
                    "kwargs": "object"
                }
            }
        ]
    },
    "resources": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "resource_paths": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "resource_find": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "resource_remove_path": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "resource_add_path": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ]
    },
    "geometry": {
        "__all__": [
            {
                "type": "var",
                "anno": "Vector"
            }
        ],
        "circumcircle": [
            {
                "type": "func",
                "args": {
                    "a": "tuple[int, int]",
                    "b": "tuple[int, int]",
                    "c": "tuple[int, int]"
                }
            }
        ],
        "minimum_bounding_circle": [
            {
                "type": "func",
                "args": {
                    "points": "list"
                }
            }
        ]
    },
    "setupconfig": {
        "PY3": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "CYTHON_MIN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CYTHON_MAX": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CYTHON_BAD": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "USE_RPI": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_EGL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_OPENGL_ES2": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_OPENGL_MOCK": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_SDL2": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_PANGOFT2": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_IOS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_ANDROID": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_MESAGL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_X11": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_WAYLAND": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_GSTREAMER": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_AVFOUNDATION": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "USE_OSX_FRAMEWORKS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DEBUG_GL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "KIVY_SDL_GL_ALPHA_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DEBUG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PLATFORM": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "vector": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Vector.__init__": [
            {
                "type": "method",
                "args": {
                    "largs": "Vector"
                }
            }
        ],
        "Vector._get_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vector._set_x": [
            {
                "type": "method",
                "args": {
                    "x": "float"
                }
            }
        ],
        "Vector.x": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "Vector._get_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vector._set_y": [
            {
                "type": "method",
                "args": {
                    "y": "float"
                }
            }
        ],
        "Vector.y": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "Vector.__getslice__": [
            {
                "type": "method",
                "args": {
                    "i": "int",
                    "j": "int"
                }
            }
        ],
        "Vector.__add__": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "Vector.__sub__": [
            {
                "type": "method",
                "args": {
                    "val": "Vector"
                }
            }
        ],
        "Vector.__rmul__": [
            {
                "type": "method",
                "args": {
                    "val": "Vector"
                }
            }
        ],
        "Vector.__rtruediv__": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "Vector.__rdiv__": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "Vector.length": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vector.length2": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vector.distance": [
            {
                "type": "method",
                "args": {
                    "to": "tuple"
                }
            }
        ],
        "Vector.distance2": [
            {
                "type": "method",
                "args": {
                    "to": "Vector"
                }
            }
        ],
        "Vector.normalize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vector.dot": [
            {
                "type": "method",
                "args": {
                    "a": "Vector"
                }
            }
        ],
        "Vector.angle": [
            {
                "type": "method",
                "args": {
                    "a": "tuple[int, int]"
                }
            }
        ],
        "Vector.rotate": [
            {
                "type": "method",
                "args": {
                    "angle": "float"
                }
            }
        ],
        "Vector.line_intersection": [
            {
                "type": "method",
                "args": {
                    "v1": "Vector",
                    "v2": "Vector",
                    "v3": "Vector",
                    "v4": "Vector"
                }
            }
        ],
        "Vector.segment_intersection": [
            {
                "type": "method",
                "args": {
                    "v1": "Vector",
                    "v2": "Vector",
                    "v3": "Vector",
                    "v4": "Vector"
                }
            }
        ],
        "Vector.in_bbox": [
            {
                "type": "method",
                "args": {
                    "point": "float",
                    "a": "float",
                    "b": "float"
                }
            }
        ],
        "Vector.__div__": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "Vector.__truediv__": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "Vector.__mul__": [
            {
                "type": "method",
                "args": {
                    "val": "int"
                }
            }
        ],
        "Vector.__neg__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Vector.__idiv__": [
            {
                "type": "method",
                "args": {
                    "val": "Vector"
                }
            }
        ],
        "Vector.__imul__": [
            {
                "type": "method",
                "args": {
                    "val": "Vector"
                }
            }
        ],
        "Vector.__isub__": [
            {
                "type": "method",
                "args": {
                    "val": "Vector"
                }
            }
        ],
        "Vector.__iadd__": [
            {
                "type": "method",
                "args": {
                    "val": "Vector"
                }
            }
        ]
    },
    "metrics": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "pt": [
            {
                "type": "func",
                "args": {
                    "value": "float"
                }
            }
        ],
        "inch": [
            {
                "type": "func",
                "args": {
                    "value": "str"
                }
            }
        ],
        "cm": [
            {
                "type": "func",
                "args": {
                    "value": "float"
                }
            }
        ],
        "mm": [
            {
                "type": "func",
                "args": {
                    "value": "float"
                }
            }
        ],
        "dp": [
            {
                "type": "func",
                "args": {
                    "value": "float"
                }
            }
        ],
        "sp": [
            {
                "type": "func",
                "args": {
                    "value": "float"
                }
            }
        ],
        "MetricsBase.dpi": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MetricsBase.dpi_rounded": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MetricsBase.density": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MetricsBase.fontscale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Metrics": [
            {
                "type": "var",
                "anno": "MetricsBase"
            }
        ]
    },
    "app": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "App.title": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "App.icon": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "App.use_kivy_settings": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "App.settings_cls": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "App.kv_directory": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "App.kv_file": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "App._running_app": [
            {
                "type": "attr",
                "anno": "App"
            }
        ],
        "App.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "App._user_data_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "App._app_directory": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "App._app_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "App._app_settings": [
            {
                "type": "attr",
                "anno": "Settings"
            }
        ],
        "App._app_window": [
            {
                "type": "attr",
                "anno": "Window"
            }
        ],
        "App.built": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "App.options": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "App.config": [
            {
                "type": "attr",
                "anno": "ConfigParser"
            }
        ],
        "App.root": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "App.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "App.build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.build_config": [
            {
                "type": "method",
                "args": {
                    "config": "ConfigParser"
                }
            }
        ],
        "App.build_settings": [
            {
                "type": "method",
                "args": {
                    "settings": "Settings"
                }
            }
        ],
        "App.load_kv": [
            {
                "type": "method",
                "args": {
                    "filename": "StringProperty"
                }
            }
        ],
        "App.get_application_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.get_application_icon": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.root_window": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.directory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App._get_user_data_dir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.user_data_dir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.get_application_config": [
            {
                "type": "method",
                "args": {
                    "defaultpath": "str"
                }
            }
        ],
        "App.on_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.on_stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.on_pause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.on_resume": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.get_running_app": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.on_config_change": [
            {
                "type": "method",
                "args": {
                    "config": "ConfigParser",
                    "section": "str",
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "App.destroy_settings": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App._on_config_change": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "App.on_title": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "title": "str"
                }
            }
        ],
        "App.on_icon": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "icon": "StringProperty"
                }
            }
        ],
        "App.load_config": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.close_settings": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "App.stop": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "App.display_settings": [
            {
                "type": "method",
                "args": {
                    "settings": "str"
                }
            }
        ],
        "App.create_settings": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.open_settings": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "App._on_keyboard_settings": [
            {
                "type": "method",
                "args": {
                    "window": "Window",
                    "largs": "str"
                }
            }
        ],
        "App._install_settings_keys": [
            {
                "type": "method",
                "args": {
                    "window": "Window"
                }
            }
        ],
        "App._run_prepare": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "App.async_run": [
            {
                "type": "method",
                "args": {
                    "async_lib": "str"
                }
            }
        ],
        "App.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_app": {
        "AppTest.test_user_data_dir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "kv_app_default_ref_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_leak_app_default_kv_property": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "UnitKivyApp"
                }
            }
        ],
        "kv_app_ref_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_leak_app_kv_property": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "UnitKivyApp"
                }
            }
        ],
        "graphics_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_graphics_app": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "UnitKivyApp"
                }
            }
        ],
        "text_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_text_app": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "App"
                }
            }
        ],
        "scatter_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_drag_app": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "UnitKivyApp"
                }
            }
        ],
        "button_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_button_app": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "App"
                }
            }
        ],
        "basic_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_basic_app": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "App"
                }
            }
        ],
        "AppTest.test_start_app_with_kv": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AppTest.test_start_raw_app": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "atlas": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "CoreImage": [
            {
                "type": "var",
                "anno": "CoreImage"
            }
        ],
        "Atlas.original_textures": [
            {
                "type": "attr",
                "anno": "ListProperty"
            }
        ],
        "Atlas.textures": [
            {
                "type": "attr",
                "anno": "DictProperty"
            }
        ],
        "Atlas._filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Atlas._get_filename": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Atlas.filename": [
            {
                "type": "attr",
                "anno": "AliasProperty"
            }
        ],
        "Atlas.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "argv": [
            {
                "type": "var",
                "anno": "List[str]"
            }
        ],
        "options": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "option": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "outname": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "size": [
            {
                "type": "var",
                "anno": "List[int]"
            }
        ],
        "filenames": [
            {
                "type": "var",
                "anno": "List[str]"
            }
        ],
        "Atlas._load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Atlas.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Atlas.create": [
            {
                "type": "method",
                "args": {
                    "outname": "str",
                    "filenames": "List[str]",
                    "size": "Union[int, tuple]",
                    "padding": "int",
                    "use_path": "bool"
                }
            }
        ],
        "ret": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ]
    },
    "garden": {
        "__path__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "garden_system_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "garden_kivy_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main_py_file": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "garden_app_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "GardenImporter.find_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str",
                    "path": "str"
                }
            }
        ],
        "GardenImporter._load_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str",
                    "moddir": "str"
                }
            }
        ],
        "GardenImporter.load_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str"
                }
            }
        ]
    },
    "network.urlrequest": {
        "HTTPSConnection": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "g_requests": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "UrlRequest._queue": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "UrlRequest._trigger_result": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "UrlRequest.daemon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UrlRequest.on_success": [
            {
                "type": "attr",
                "anno": "WeakMethod"
            }
        ],
        "UrlRequest.on_redirect": [
            {
                "type": "attr",
                "anno": "WeakMethod"
            }
        ],
        "UrlRequest.on_failure": [
            {
                "type": "attr",
                "anno": "WeakMethod"
            }
        ],
        "UrlRequest.on_error": [
            {
                "type": "attr",
                "anno": "WeakMethod"
            }
        ],
        "UrlRequest.on_progress": [
            {
                "type": "attr",
                "anno": "WeakMethod"
            }
        ],
        "UrlRequest.on_cancel": [
            {
                "type": "attr",
                "anno": "WeakMethod"
            }
        ],
        "UrlRequest.decode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UrlRequest.file_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UrlRequest._debug": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UrlRequest._result": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UrlRequest._error": [
            {
                "type": "attr",
                "anno": "WeakMethod"
            }
        ],
        "UrlRequest._is_finished": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UrlRequest._resp_status": [
            {
                "type": "attr",
                "anno": "WeakMethod"
            }
        ],
        "UrlRequest._resp_headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UrlRequest._resp_length": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UrlRequest._chunk_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UrlRequest._timeout": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "UrlRequest._method": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UrlRequest.verify": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "UrlRequest._proxy_host": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UrlRequest._proxy_port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "UrlRequest._proxy_headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UrlRequest._cancel_event": [
            {
                "type": "attr",
                "anno": "Event"
            }
        ],
        "UrlRequest.ca_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UrlRequest.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UrlRequest.req_body": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UrlRequest.req_headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "UrlRequest._parse_url": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "UrlRequest.get_connection_for_scheme": [
            {
                "type": "method",
                "args": {
                    "scheme": "str"
                }
            }
        ],
        "UrlRequest.decode_result": [
            {
                "type": "method",
                "args": {
                    "result": "str",
                    "resp": "dict"
                }
            }
        ],
        "UrlRequest.is_finished": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UrlRequest.result": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UrlRequest.resp_headers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UrlRequest.resp_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UrlRequest.error": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UrlRequest.chunk_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UrlRequest.cancel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "on_success": [
            {
                "type": "func",
                "args": {
                    "req": "UrlRequest",
                    "result": "dict"
                }
            }
        ],
        "on_error": [
            {
                "type": "func",
                "args": {
                    "req": "UrlRequest",
                    "error": "dict"
                }
            }
        ],
        "UrlRequest._dispatch_result": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "UrlRequest.wait": [
            {
                "type": "method",
                "args": {
                    "delay": "float"
                }
            }
        ],
        "UrlRequest._fetch_url": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "body": "dict",
                    "headers": "dict",
                    "q": "Clock.Trigger"
                }
            }
        ],
        "UrlRequest.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UrlRequest.__init__": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "on_success": "WeakMethod",
                    "on_redirect": "WeakMethod",
                    "on_failure": "WeakMethod",
                    "on_error": "WeakMethod",
                    "on_progress": "WeakMethod",
                    "req_body": "dict",
                    "req_headers": "dict",
                    "chunk_size": "int",
                    "timeout": "int",
                    "method": "str",
                    "decode": "bool",
                    "debug": "bool",
                    "file_path": "str",
                    "ca_file": "str",
                    "verify": "bool",
                    "proxy_host": "str",
                    "proxy_port": "int",
                    "proxy_headers": "dict",
                    "user_agent": "str",
                    "on_cancel": "WeakMethod"
                }
            }
        ],
        "req": [
            {
                "type": "var",
                "anno": "UrlRequest"
            }
        ]
    },
    "extras.highlight": {
        "KivyLexer.name": [
            {
                "type": "attr",
                "anno": "Text"
            }
        ],
        "KivyLexer.aliases": [
            {
                "type": "attr",
                "anno": "List[Text]"
            }
        ],
        "KivyLexer.filenames": [
            {
                "type": "attr",
                "anno": "List[Text]"
            }
        ],
        "KivyLexer.tokens": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "k": [
            {
                "type": "var",
                "anno": "Text"
            }
        ]
    },
    "loader": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ProxyImage.__events__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ProxyImage.loaded": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ProxyImage.__init__": [
            {
                "type": "method",
                "args": {
                    "arg": "Image",
                    "kwargs": "str"
                }
            }
        ],
        "ProxyImage.on_load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ProxyImage.on_error": [
            {
                "type": "method",
                "args": {
                    "error": "Exception"
                }
            }
        ],
        "LoaderBase._trigger_update": [
            {
                "type": "attr",
                "anno": "Clock.Trigger"
            }
        ],
        "LoaderBase.EXT_ALIAS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LoaderBase._loading_image": [
            {
                "type": "attr",
                "anno": "ImageLoader"
            }
        ],
        "LoaderBase._error_image": [
            {
                "type": "attr",
                "anno": "ImageLoader"
            }
        ],
        "LoaderBase._num_workers": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LoaderBase._max_upload_per_frame": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LoaderBase._paused": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LoaderBase._resume_cond": [
            {
                "type": "attr",
                "anno": "threading.Condition"
            }
        ],
        "LoaderBase._q_load": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "LoaderBase._q_done": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "LoaderBase._client": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LoaderBase._running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LoaderBase._start_wanted": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LoaderBase._set_num_workers": [
            {
                "type": "method",
                "args": {
                    "num": "int"
                }
            }
        ],
        "LoaderBase._get_num_workers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase.num_workers": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LoaderBase._set_max_upload_per_frame": [
            {
                "type": "method",
                "args": {
                    "num": "int"
                }
            }
        ],
        "LoaderBase._get_max_upload_per_frame": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase.max_upload_per_frame": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LoaderBase._get_loading_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase._set_loading_image": [
            {
                "type": "method",
                "args": {
                    "image": "ImageLoader"
                }
            }
        ],
        "LoaderBase.loading_image": [
            {
                "type": "attr",
                "anno": "ImageLoader"
            }
        ],
        "LoaderBase._get_error_image": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase._set_error_image": [
            {
                "type": "method",
                "args": {
                    "image": "ImageLoader"
                }
            }
        ],
        "LoaderBase.error_image": [
            {
                "type": "attr",
                "anno": "ImageLoaderBase"
            }
        ],
        "LoaderBase.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase.run": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "LoaderBase.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase.pause": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase._load_local": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "LoaderBase.remove_from_cache": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "_Worker.tasks": [
            {
                "type": "attr",
                "anno": "threading.Future"
            }
        ],
        "_Worker.daemon": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_Worker.pool": [
            {
                "type": "attr",
                "anno": "_ThreadPool"
            }
        ],
        "_ThreadPool.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "_ThreadPool.tasks": [
            {
                "type": "attr",
                "anno": "threading.Future"
            }
        ],
        "_ThreadPool.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderThreadPool.pool": [
            {
                "type": "attr",
                "anno": "_ThreadPool"
            }
        ],
        "LoaderThreadPool.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Loader": [
            {
                "type": "var",
                "anno": "Loader"
            }
        ],
        "_Worker.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase.image": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "load_callback": "object",
                    "post_callback": "object",
                    "kwargs": "str"
                }
            }
        ],
        "LoaderBase._load_urllib": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "LoaderBase._load": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "LoaderThreadPool.run": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "LoaderThreadPool.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase.__del__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase._update": [
            {
                "type": "method",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "LoaderBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase._wait_for_resume": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderBase.resume": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoaderThreadPool.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Worker.__init__": [
            {
                "type": "method",
                "args": {
                    "pool": "_ThreadPool",
                    "tasks": "threading.Future"
                }
            }
        ],
        "_ThreadPool.__init__": [
            {
                "type": "method",
                "args": {
                    "num_threads": "int"
                }
            }
        ],
        "_ThreadPool.add_task": [
            {
                "type": "method",
                "args": {
                    "func": "Callable",
                    "args": "str",
                    "kargs": "str"
                }
            }
        ]
    },
    "cache": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "Cache._categories": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Cache._objects": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Cache.register": [
            {
                "type": "method",
                "args": {
                    "category": "str",
                    "limit": "int",
                    "timeout": "int"
                }
            }
        ],
        "Cache.get": [
            {
                "type": "method",
                "args": {
                    "category": "str",
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "Cache.get_timestamp": [
            {
                "type": "method",
                "args": {
                    "category": "str",
                    "key": "str",
                    "default": "int"
                }
            }
        ],
        "Cache.get_lastaccess": [
            {
                "type": "method",
                "args": {
                    "category": "str",
                    "key": "str",
                    "default": "str"
                }
            }
        ],
        "Cache.remove": [
            {
                "type": "method",
                "args": {
                    "category": "str",
                    "key": "str"
                }
            }
        ],
        "Cache._purge_oldest": [
            {
                "type": "method",
                "args": {
                    "category": "str",
                    "maxpurge": "int"
                }
            }
        ],
        "Cache.append": [
            {
                "type": "method",
                "args": {
                    "category": "str",
                    "key": "str",
                    "obj": "object",
                    "timeout": "float"
                }
            }
        ],
        "Cache.print_usage": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Cache._purge_by_timeout": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ]
    },
    "clock": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_kernel32": [
            {
                "type": "var",
                "anno": "ctypes.Wellll"
            }
        ],
        "_get_sleep_obj": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_libc": [
            {
                "type": "var",
                "anno": "ctypes.CDLL"
            }
        ],
        "_usleep": [
            {
                "type": "func",
                "args": {
                    "microseconds": "int",
                    "obj": "object"
                }
            }
        ],
        "ClockBaseBehavior._dt": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._last_fps_tick": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._start_tick": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._fps": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._rfps": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._fps_counter": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._rfps_counter": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._frames": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._frames_displayed": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._events_duration": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._duration_count": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._sleep_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._duration_ts0": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior.MIN_SLEEP": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior.SLEEP_UNDERSHOOT": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._async_lib": [
            {
                "type": "attr",
                "anno": "asyncio.AbstractEventLoop"
            }
        ],
        "ClockBaseBehavior._async_wait_for": [
            {
                "type": "attr",
                "anno": "asyncio.AbstractEventLoop"
            }
        ],
        "ClockBaseBehavior._last_tick": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior._max_fps": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseBehavior.init_async_lib": [
            {
                "type": "method",
                "args": {
                    "lib": "str"
                }
            }
        ],
        "ClockBaseBehavior.frametime": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.frames": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.frames_displayed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.usleep": [
            {
                "type": "method",
                "args": {
                    "microseconds": "float"
                }
            }
        ],
        "ClockBaseBehavior.get_fps": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.get_rfps": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.get_time": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.get_boottime": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.handle_exception": [
            {
                "type": "method",
                "args": {
                    "e": "BaseException"
                }
            }
        ],
        "ClockBaseInterruptBehavior.interupt_next_only": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ClockBaseInterruptBehavior._event": [
            {
                "type": "attr",
                "anno": "ThreadingEvent"
            }
        ],
        "ClockBaseInterruptBehavior._async_event": [
            {
                "type": "attr",
                "anno": "ThreadingEvent"
            }
        ],
        "ClockBaseInterruptBehavior._get_min_timeout_func": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "ClockBaseInterruptBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "interupt_next_only": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "ClockBaseInterruptBehavior.init_async_lib": [
            {
                "type": "method",
                "args": {
                    "lib": "str"
                }
            }
        ],
        "ClockBaseInterruptBehavior._dt": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseInterruptBehavior._last_tick": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseInterruptFreeBehavior._get_min_timeout_func": [
            {
                "type": "attr",
                "anno": "Callable[[], float]"
            }
        ],
        "ClockBaseInterruptFreeBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "Any"
                }
            }
        ],
        "ClockBase._sleep_obj": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ClockBase.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ClockBase.usleep": [
            {
                "type": "method",
                "args": {
                    "microseconds": "int"
                }
            }
        ],
        "ClockBaseFreeInterruptOnly._dt": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "ClockBaseFreeInterruptOnly._last_tick": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "_classes": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_clk": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "mainthread": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "ClockBaseInterruptBehavior.async_usleep": [
            {
                "type": "method",
                "args": {
                    "microseconds": "int"
                }
            }
        ],
        "ClockBaseInterruptBehavior.usleep": [
            {
                "type": "method",
                "args": {
                    "microseconds": "int"
                }
            }
        ],
        "_libc_usleep": [
            {
                "type": "var",
                "anno": "ctypes.CFuncCall_"
            }
        ],
        "_libc_clock_gettime_wrapper": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_default_time": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "ClockBaseBehavior.time": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "ClockBaseFreeInterruptOnly.async_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseFreeInterruptOnly.idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseInterruptBehavior._check_ready": [
            {
                "type": "method",
                "args": {
                    "fps": "float",
                    "min_sleep": "float",
                    "undershoot": "float",
                    "event": "ThreadingEvent"
                }
            }
        ],
        "ClockBaseInterruptBehavior.async_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseInterruptBehavior.idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseInterruptBehavior.on_schedule": [
            {
                "type": "method",
                "args": {
                    "event": "ClockEvent"
                }
            }
        ],
        "ClockBaseInterruptFreeBehavior.on_schedule": [
            {
                "type": "method",
                "args": {
                    "event": "ClockEvent"
                }
            }
        ],
        "ClockBaseBehavior._check_ready": [
            {
                "type": "method",
                "args": {
                    "fps": "float",
                    "min_sleep": "float",
                    "undershoot": "float"
                }
            }
        ],
        "ClockBaseBehavior.__init__": [
            {
                "type": "method",
                "args": {
                    "async_lib": "str",
                    "kwargs": "Any"
                }
            }
        ],
        "ClockBaseBehavior.tick_draw": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.post_idle": [
            {
                "type": "method",
                "args": {
                    "ts": "float",
                    "current": "float"
                }
            }
        ],
        "ClockBaseBehavior.pre_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.async_idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.async_tick": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.idle": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ClockBaseBehavior.tick": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "triggered": [
            {
                "type": "func",
                "args": {
                    "timeout": "int",
                    "interval": "bool"
                }
            }
        ]
    },
    "version": {
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__hash__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__date__": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "storage.dictstore": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "DictStore.filename": [
            {
                "type": "attr",
                "anno": "str | dict"
            }
        ],
        "DictStore._data": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DictStore._is_changed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DictStore.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str | dict",
                    "data": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "DictStore.store_sync": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DictStore.store_exists": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "DictStore.store_get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "DictStore.store_put": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "DictStore.store_delete": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "DictStore.store_find": [
            {
                "type": "method",
                "args": {
                    "filters": "dict"
                }
            }
        ],
        "DictStore.store_count": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DictStore.store_keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DictStore.store_load": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "storage.redisstore": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "RedisStore.prefix": [
            {
                "type": "attr",
                "anno": "StringProperty"
            }
        ],
        "RedisStore.redis_params": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RedisStore.r": [
            {
                "type": "attr",
                "anno": "redis.StrictRedis"
            }
        ],
        "RedisStore.__init__": [
            {
                "type": "method",
                "args": {
                    "redis_params": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "RedisStore.store_load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RedisStore.store_sync": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RedisStore.store_exists": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "RedisStore.store_delete": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "RedisStore.store_put": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "values": "dict"
                }
            }
        ],
        "RedisStore.store_get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "RedisStore.store_keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RedisStore.store_find": [
            {
                "type": "method",
                "args": {
                    "filters": "dict"
                }
            }
        ]
    },
    "storage": {
        "AbstractStore.store_load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "AbstractStore.store_sync": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.store_get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.store_put": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "dict"
                }
            }
        ],
        "AbstractStore.put": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "values": "dict"
                }
            }
        ],
        "AbstractStore.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "values": "dict"
                }
            }
        ],
        "AbstractStore.store_exists": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.exists": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.__contains__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.store_delete": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.delete": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.store_find": [
            {
                "type": "method",
                "args": {
                    "filters": "dict"
                }
            }
        ],
        "AbstractStore.find": [
            {
                "type": "method",
                "args": {
                    "filters": "dict"
                }
            }
        ],
        "AbstractStore.store_keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AbstractStore.store_count": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.count": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.store_clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.clear": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AbstractStore.store_get_async": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "callback": "Callable[[AbstractStore, str, str], None]"
                }
            }
        ],
        "AbstractStore.store_put_async": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str",
                    "callback": "Callable[[AbstractStore, str, str], None]"
                }
            }
        ],
        "AbstractStore.store_exists_async": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "callback": "Callable[[AbstractStore, str, bool], None]"
                }
            }
        ],
        "AbstractStore.store_delete_async": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "callback": "Callable[[AbstractStore, str, str], None]"
                }
            }
        ],
        "AbstractStore.store_find_async": [
            {
                "type": "method",
                "args": {
                    "filters": "dict",
                    "callback": "Callable[[AbstractStore, dict], None]"
                }
            }
        ],
        "AbstractStore.store_count_async": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, int], None]"
                }
            }
        ],
        "AbstractStore.store_keys_async": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, list], None]"
                }
            }
        ],
        "AbstractStore.store_clear_async": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore], None]"
                }
            }
        ],
        "AbstractStore._schedule": [
            {
                "type": "method",
                "args": {
                    "cb": "Callable[[str], None]",
                    "kwargs": "str"
                }
            }
        ],
        "AbstractStore.async_clear": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore], None]"
                }
            }
        ],
        "AbstractStore.async_count": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, int], None]"
                }
            }
        ],
        "AbstractStore.async_keys": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, list], None]"
                }
            }
        ],
        "AbstractStore.async_find": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, dict], None]",
                    "filters": "dict"
                }
            }
        ],
        "AbstractStore.async_delete": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, str, str], None]",
                    "key": "str"
                }
            }
        ],
        "AbstractStore.async_put": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, str, str], None]",
                    "key": "str",
                    "values": "str"
                }
            }
        ],
        "AbstractStore.async_get": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, str, str], None]",
                    "key": "str"
                }
            }
        ],
        "AbstractStore.async_exists": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable[[AbstractStore, str, bool], None]",
                    "key": "str"
                }
            }
        ]
    },
    "tests.test_knspace": {
        "KNSpaceTestCase.test_simple_multiple_names": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_not_exists_property": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_not_exists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_simple_name_change": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_fork": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_re_assign": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_constructor": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_proxy_ref": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_allow_none": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_fork_binding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_fork_string": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_simple_binding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KNSpaceTestCase.test_simple": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "storage.jsonstore": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "JsonStore.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "JsonStore.indent": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "JsonStore.sort_keys": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "JsonStore._data": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "JsonStore._is_changed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "JsonStore.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "indent": "int",
                    "sort_keys": "bool",
                    "kwargs": "dict"
                }
            }
        ],
        "JsonStore.store_sync": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JsonStore.store_exists": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "JsonStore.store_get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "JsonStore.store_put": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "JsonStore.store_delete": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "JsonStore.store_find": [
            {
                "type": "method",
                "args": {
                    "filters": "dict"
                }
            }
        ],
        "JsonStore.store_count": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JsonStore.store_keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JsonStore.store_load": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "gesture": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "GestureDatabase.db": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GestureDatabase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureDatabase.add_gesture": [
            {
                "type": "method",
                "args": {
                    "gesture": "Gesture"
                }
            }
        ],
        "GestureDatabase.gesture_to_str": [
            {
                "type": "method",
                "args": {
                    "gesture": "Gesture"
                }
            }
        ],
        "GesturePoint.x": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GesturePoint.y": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "GesturePoint.__init__": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "GesturePoint.scale": [
            {
                "type": "method",
                "args": {
                    "factor": "float"
                }
            }
        ],
        "GesturePoint.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureStroke.points": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GestureStroke.screenpoints": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GestureStroke.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureStroke.add_point": [
            {
                "type": "method",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "Gesture.DEFAULT_TOLERANCE": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Gesture.width": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Gesture.height": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Gesture.gesture_product": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Gesture.strokes": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Gesture.tolerance": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Gesture.__init__": [
            {
                "type": "method",
                "args": {
                    "tolerance": "float"
                }
            }
        ],
        "Gesture.add_stroke": [
            {
                "type": "method",
                "args": {
                    "point_list": "tuple"
                }
            }
        ],
        "Gesture.__lt__": [
            {
                "type": "method",
                "args": {
                    "comparison_gesture": "Gesture"
                }
            }
        ],
        "Gesture.__gt__": [
            {
                "type": "method",
                "args": {
                    "comparison_gesture": "Gesture"
                }
            }
        ],
        "Gesture.__le__": [
            {
                "type": "method",
                "args": {
                    "comparison_gesture": "Gesture"
                }
            }
        ],
        "Gesture.__ge__": [
            {
                "type": "method",
                "args": {
                    "comparison_gesture": "Gesture"
                }
            }
        ],
        "GestureStroke.min_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureStroke.max_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Gesture.dot_product": [
            {
                "type": "method",
                "args": {
                    "comparison_gesture": "Gesture"
                }
            }
        ],
        "Gesture.rotate": [
            {
                "type": "method",
                "args": {
                    "angle": "float"
                }
            }
        ],
        "Gesture.get_rigid_rotation": [
            {
                "type": "method",
                "args": {
                    "dstpts": "GestureStroke"
                }
            }
        ],
        "Gesture.get_score": [
            {
                "type": "method",
                "args": {
                    "comparison_gesture": "object",
                    "rotation_invariant": "bool"
                }
            }
        ],
        "Gesture.__eq__": [
            {
                "type": "method",
                "args": {
                    "comparison_gesture": "object"
                }
            }
        ],
        "Gesture.__ne__": [
            {
                "type": "method",
                "args": {
                    "comparison_gesture": "object"
                }
            }
        ],
        "GestureDatabase.find": [
            {
                "type": "method",
                "args": {
                    "gesture": "Gesture",
                    "minscore": "float",
                    "rotation_invariant": "bool"
                }
            }
        ],
        "GestureStroke.center_stroke": [
            {
                "type": "method",
                "args": {
                    "offset_x": "float",
                    "offset_y": "float"
                }
            }
        ],
        "Gesture._center_gesture": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureStroke.points_distance": [
            {
                "type": "method",
                "args": {
                    "point1": "GesturePoint",
                    "point2": "GesturePoint"
                }
            }
        ],
        "GestureStroke.stroke_length": [
            {
                "type": "method",
                "args": {
                    "point_list": "list"
                }
            }
        ],
        "GestureStroke.normalize_stroke": [
            {
                "type": "method",
                "args": {
                    "sample_points": "int"
                }
            }
        ],
        "GestureStroke.min_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureStroke.max_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GestureStroke.scale_stroke": [
            {
                "type": "method",
                "args": {
                    "scale_factor": "float"
                }
            }
        ],
        "Gesture._scale_gesture": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Gesture.normalize": [
            {
                "type": "method",
                "args": {
                    "stroke_samples": "int"
                }
            }
        ],
        "GestureDatabase.str_to_gesture": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ]
    },
    "interactive": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "safeWait": [
            {
                "type": "func",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "SafeMembrane.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "SafeMembrane.confirmed": [
            {
                "type": "attr",
                "anno": "EventLoop"
            }
        ],
        "SafeMembrane.safe": [
            {
                "type": "attr",
                "anno": "EventLoop"
            }
        ],
        "SafeMembrane._ref": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "SafeMembrane.__init__": [
            {
                "type": "method",
                "args": {
                    "ob": "object",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "SafeMembrane.safeIn": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SafeMembrane.safeOut": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SafeMembrane.isMethod": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "SafeMembrane.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SafeMembrane.__getattribute__": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "oga": "Callable"
                }
            }
        ],
        "SafeMembrane.__getattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "oga": "Callable"
                }
            }
        ],
        "SafeMembrane.__delattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "oda": "Callable[[], None]"
                }
            }
        ],
        "SafeMembrane.__bool__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SafeMembrane.__getitem__": [
            {
                "type": "method",
                "args": {
                    "arg": "int"
                }
            }
        ],
        "SafeMembrane.__delitem__": [
            {
                "type": "method",
                "args": {
                    "arg": "int"
                }
            }
        ],
        "SafeMembrane.__getslice__": [
            {
                "type": "method",
                "args": {
                    "i": "int",
                    "j": "int"
                }
            }
        ],
        "SafeMembrane.__delslice__": [
            {
                "type": "method",
                "args": {
                    "i": "int",
                    "j": "int"
                }
            }
        ],
        "SafeMembrane.__enter__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "SafeMembrane.__exit__": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "InteractiveLauncher.__slots__": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "InteractiveLauncher.safe": [
            {
                "type": "attr",
                "anno": "Event"
            }
        ],
        "InteractiveLauncher.confirmed": [
            {
                "type": "attr",
                "anno": "Event"
            }
        ],
        "InteractiveLauncher.app": [
            {
                "type": "attr",
                "anno": "App"
            }
        ],
        "InteractiveLauncher.thread": [
            {
                "type": "attr",
                "anno": "Thread"
            }
        ],
        "InteractiveLauncher._ref": [
            {
                "type": "attr",
                "anno": "App"
            }
        ],
        "unwrap": [
            {
                "type": "func",
                "args": {
                    "ob": "object"
                }
            }
        ],
        "SafeMembrane.__setslice__": [
            {
                "type": "method",
                "args": {
                    "i": "int",
                    "j": "int",
                    "val": "object"
                }
            }
        ],
        "SafeMembrane.__setitem__": [
            {
                "type": "method",
                "args": {
                    "arg": "object",
                    "val": "object"
                }
            }
        ],
        "SafeMembrane.__setattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "val": "object",
                    "osa": "Callable[[object, str, object], object]"
                }
            }
        ],
        "SafeMembrane.__call__": [
            {
                "type": "method",
                "args": {
                    "args": "int",
                    "kw": "int"
                }
            }
        ],
        "InteractiveLauncher.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InteractiveLauncher.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InteractiveLauncher.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InteractiveLauncher.__init__": [
            {
                "type": "method",
                "args": {
                    "app": "App",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "parser": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "color_error": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "parse_bool": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "parse_string": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "parse_filename": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "parse_int": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "parse_float": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "parse_float4": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "parse_int2": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "parse_color": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ]
    },
    "": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MICRO": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "RELEASE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__hash__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__date__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__kivy_post_configuration": [
            {
                "type": "var",
                "anno": "list[Callable[[], None]]"
            }
        ],
        "r": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "parse_kivy_version": [
            {
                "type": "func",
                "args": {
                    "version": "str"
                }
            }
        ],
        "require": [
            {
                "type": "func",
                "args": {
                    "version": "str"
                }
            }
        ],
        "kivy_configure": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_includes": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "kivy_register_post_configuration": [
            {
                "type": "func",
                "args": {
                    "callback": "Callable[[], None]"
                }
            }
        ],
        "kivy_usage": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "kivy_options": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "key": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_base_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_modules_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_data_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_binary_deps_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_shader_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_icons_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_examples_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_packages": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "_logging_msgs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "mod": [
            {
                "type": "var",
                "anno": "imp.Module"
            }
        ],
        "version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "user_home_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_home_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_usermodules_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_config_fn": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "icon_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "level": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "sys_argv": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "mp_fork": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "opts": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "args": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "need_save": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "ol": [
            {
                "type": "var",
                "anno": "list"
            }
        ]
    },
    "modules.webdebugger": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "start": [
            {
                "type": "var",
                "anno": "Callable[[], bool]"
            }
        ],
        "stop": [
            {
                "type": "var",
                "anno": "start"
            }
        ]
    },
    "modules._webdebugger": {
        "history_max": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MissingOrderedDict.__missing__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "metrics": [
            {
                "type": "var",
                "anno": "MissingOrderedDict"
            }
        ],
        "app": [
            {
                "type": "var",
                "anno": "Flask"
            }
        ],
        "metrics_json": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "getfile": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "FlaskThread.dump_metrics": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "Flask",
                    "ctx": "Flask"
                }
            }
        ],
        "html_index": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "index": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "jquery_js": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "g_raphael_js": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "g_raphael_line_js": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "raphael_js": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "background_jpg": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "Flask",
                    "ctx": "FlaskContext"
                }
            }
        ],
        "FlaskThread.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "modules.inspector": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "TreeViewProperty.widget_ref": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TreeViewProperty._get_widget": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TreeViewProperty.widget": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TreeViewProperty.key": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TreeViewProperty.inspector": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TreeViewProperty.refresh": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TreeViewWidget.widget": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "WidgetTree.selected_widget": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "WidgetTree.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "WidgetTree.update_scroll": [
            {
                "type": "attr",
                "anno": "Callable[[], None]"
            }
        ],
        "WidgetTree.on_select_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "TreeViewWidget"
                }
            }
        ],
        "Inspector.widget": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Inspector.layout": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Inspector.widgettree": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Inspector.treeview": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Inspector.inspect_enabled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Inspector.activated": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Inspector.widget_info": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Inspector.content": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Inspector.at_bottom": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Inspector._update_widget_tree_ev": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Inspector.win": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "Inspector.avoid_bring_to_top": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Inspector.gcolor": [
            {
                "type": "attr",
                "anno": "Color"
            }
        ],
        "Inspector.gtransform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "Inspector.grect": [
            {
                "type": "attr",
                "anno": "Rectangle"
            }
        ],
        "Inspector._window_node": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Inspector.keyboard_shortcut": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "scancode": "int",
                    "largs": "int"
                }
            }
        ],
        "Inspector.save_property_boolean": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "key": "str",
                    "index": "int",
                    "instance": "object"
                }
            }
        ],
        "Inspector._update_widget_tree_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewWidget",
                    "widget": "object",
                    "is_open": "bool"
                }
            }
        ],
        "WidgetTree.select_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode",
                    "select_widget": "bool"
                }
            }
        ],
        "WidgetTree.update_selected_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Inspector.update_widget_tree": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "WidgetTree._update_scroll": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "WidgetTree.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "WidgetTree.find_node_by_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Inspector.pick": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Inspector.update_widget_graphics": [
            {
                "type": "method",
                "args": {
                    "l": "object"
                }
            }
        ],
        "Inspector.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Inspector.animation_close": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "object"
                }
            }
        ],
        "Inspector.on_window_children": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "children": "object"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "Window",
                    "ctx": "object"
                }
            }
        ],
        "create_inspector": [
            {
                "type": "func",
                "args": {
                    "win": "Widget",
                    "ctx": "Any",
                    "l": "int"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "Widget",
                    "ctx": "Any"
                }
            }
        ],
        "Inspector.save_property_option": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "key": "str",
                    "instance": "object",
                    "l": "str"
                }
            }
        ],
        "Inspector.save_property_text": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "key": "str",
                    "index": "int",
                    "instance": "object",
                    "value": "str"
                }
            }
        ],
        "Inspector.save_property_numeric": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "key": "str",
                    "index": "int",
                    "instance": "object",
                    "value": "str"
                }
            }
        ],
        "Inspector.toggle_position": [
            {
                "type": "method",
                "args": {
                    "button": "ToggleButton"
                }
            }
        ],
        "Inspector.update_node_content": [
            {
                "type": "method",
                "args": {
                    "node": "object",
                    "l": "str"
                }
            }
        ],
        "Inspector.show_widget_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Inspector.highlight_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "info": "bool",
                    "largs": "str"
                }
            }
        ],
        "Inspector.show_property": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "value": "object",
                    "key": "str",
                    "index": "int",
                    "l": "str"
                }
            }
        ],
        "Inspector.highlight_at": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Inspector.on_activated": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "activated": "bool"
                }
            }
        ],
        "WidgetTree.on_selected_widget": [
            {
                "type": "method",
                "args": {
                    "inst": "object",
                    "widget": "object"
                }
            }
        ],
        "Inspector.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "Event"
                }
            }
        ],
        "Inspector.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "Event"
                }
            }
        ],
        "Inspector.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "modules.monitor": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "_statsinput": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_maxinput": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "StatsInput.process": [
            {
                "type": "method",
                "args": {
                    "events": "list"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "Window",
                    "ctx": "Label"
                }
            }
        ],
        "_update_monitor_canvas": [
            {
                "type": "func",
                "args": {
                    "win": "StatsInput",
                    "ctx": "StatsInput",
                    "largs": "str"
                }
            }
        ],
        "update_stats": [
            {
                "type": "func",
                "args": {
                    "win": "StatsInput",
                    "ctx": "StatsInput",
                    "largs": "str"
                }
            }
        ],
        "update_fps": [
            {
                "type": "func",
                "args": {
                    "ctx": "StatsInput",
                    "largs": "str"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "StatsInput",
                    "ctx": "StatsInput"
                }
            }
        ]
    },
    "modules.recorder": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "Logger",
                    "ctx": "Logger"
                }
            }
        ],
        "replay": [
            {
                "type": "func",
                "args": {
                    "recorder": "Recorder",
                    "args": "str"
                }
            }
        ],
        "on_recorder_key": [
            {
                "type": "func",
                "args": {
                    "recorder": "Recorder",
                    "window": "Window",
                    "key": "int",
                    "largs": "str"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "Window",
                    "ctx": "ModuleContext"
                }
            }
        ]
    },
    "modules.joycursor": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "JoyCursor.win": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "JoyCursor.activated": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "JoyCursor.cursor_width": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "JoyCursor.cursor_hold": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "JoyCursor.intensity": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "JoyCursor.dead_zone": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "JoyCursor.offset_x": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "JoyCursor.offset_y": [
            {
                "type": "attr",
                "anno": "NumericProperty"
            }
        ],
        "JoyCursor.avoid_bring_to_top": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "JoyCursor.size_hint": [
            {
                "type": "attr",
                "anno": "tuple[None, None]"
            }
        ],
        "JoyCursor.size": [
            {
                "type": "attr",
                "anno": "tuple[str, str]"
            }
        ],
        "JoyCursor.cursor_ox": [
            {
                "type": "attr",
                "anno": "Line"
            }
        ],
        "JoyCursor.cursor_oy": [
            {
                "type": "attr",
                "anno": "Line"
            }
        ],
        "JoyCursor.cursor_x": [
            {
                "type": "attr",
                "anno": "Line"
            }
        ],
        "JoyCursor.cursor_y": [
            {
                "type": "attr",
                "anno": "Line"
            }
        ],
        "JoyCursor.pos": [
            {
                "type": "attr",
                "anno": "tuple[float, float]"
            }
        ],
        "JoyCursor.move": [
            {
                "type": "attr",
                "anno": "Clock.Schedule"
            }
        ],
        "JoyCursor.cursor_pts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "JoyCursor.set_cursor": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "JoyCursor.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "JoyCursor.check_cursor": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "stickid": "str",
                    "axisid": "int",
                    "value": "float"
                }
            }
        ],
        "JoyCursor.set_intensity": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "stickid": "str",
                    "buttonid": "int"
                }
            }
        ],
        "JoyCursor.stop_cursor": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "mouse_pos": "tuple[float, float]"
                }
            }
        ],
        "JoyCursor.on_pos": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "new_pos": "int"
                }
            }
        ],
        "JoyCursor.keyboard_shortcuts": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "scancode": "int",
                    "args": "str"
                }
            }
        ],
        "JoyCursor.move_cursor": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "JoyCursor.check_dispatch": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "stickid": "str",
                    "buttonid": "int"
                }
            }
        ],
        "JoyCursor.joystick_shortcuts": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "stickid": "int",
                    "buttonid": "int"
                }
            }
        ],
        "JoyCursor.on_activated": [
            {
                "type": "method",
                "args": {
                    "instance": "Widget",
                    "activated": "bool"
                }
            }
        ],
        "JoyCursor.on_window_children": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "args": "str"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "Widget",
                    "ctx": "Context"
                }
            }
        ],
        "create_joycursor": [
            {
                "type": "func",
                "args": {
                    "win": "Widget",
                    "ctx": "Logger",
                    "args": "str"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "Widget",
                    "ctx": "Logger"
                }
            }
        ]
    },
    "modules.keybinding": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "_on_keyboard_handler": [
            {
                "type": "func",
                "args": {
                    "instance": "platform.Widget",
                    "key": "int",
                    "scancode": "int",
                    "codepoint": "int",
                    "modifiers": "list"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "platform.Window",
                    "ctx": "platform.Context"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "platform.Window",
                    "ctx": "platform.Context"
                }
            }
        ]
    },
    "modules.screen": {
        "devices": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "str",
                    "ctx": "str"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "str",
                    "ctx": "str"
                }
            }
        ],
        "apply_device": [
            {
                "type": "func",
                "args": {
                    "device": "str",
                    "scale": "float",
                    "orientation": "str"
                }
            }
        ],
        "usage": [
            {
                "type": "func",
                "args": {
                    "device": "str"
                }
            }
        ],
        "configure": [
            {
                "type": "func",
                "args": {
                    "ctx": "dict"
                }
            }
        ]
    },
    "modules.showborder": {
        "__all__": [
            {
                "type": "var",
                "anno": "Builder"
            }
        ],
        "KV_CODE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "Widget",
                    "ctx": "Context"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "str",
                    "ctx": "str"
                }
            }
        ]
    },
    "modules": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "ModuleContext.config": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ModuleContext.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModuleContext.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModuleBase.mods": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ModuleBase.wins": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ModuleBase.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "ModuleBase.add_path": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ModuleBase.list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModuleBase.import_module": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ModuleBase.usage_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Modules": [
            {
                "type": "var",
                "anno": "ModuleBase"
            }
        ],
        "ModuleBase.configure": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModuleBase._configure_module": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ModuleBase.activate_module": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "win": "str"
                }
            }
        ],
        "ModuleBase.update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModuleBase.unregister_window": [
            {
                "type": "method",
                "args": {
                    "win": "str"
                }
            }
        ],
        "ModuleBase.register_window": [
            {
                "type": "method",
                "args": {
                    "win": "str"
                }
            }
        ],
        "ModuleBase.deactivate_module": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "win": "str"
                }
            }
        ]
    },
    "modules.console": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ignore_exception": [
            {
                "type": "func",
                "args": {
                    "f": "Callable"
                }
            }
        ],
        "TreeViewProperty.key": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TreeViewProperty.refresh": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TreeViewProperty.widget_ref": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TreeViewProperty._get_widget": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TreeViewProperty.widget": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ConsoleAddon.console": [
            {
                "type": "attr",
                "anno": "Console"
            }
        ],
        "ConsoleAddon.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddon.__init__": [
            {
                "type": "method",
                "args": {
                    "console": "Console"
                }
            }
        ],
        "ConsoleAddon.activate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddon.deactivate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonSelect.btn": [
            {
                "type": "attr",
                "anno": "ConsoleToggleButton"
            }
        ],
        "ConsoleAddonSelect.on_inspect_enabled": [
            {
                "type": "method",
                "args": {
                    "instance": "Console",
                    "value": "bool"
                }
            }
        ],
        "ConsoleAddonFps._update_ev": [
            {
                "type": "attr",
                "anno": "Event"
            }
        ],
        "ConsoleAddonFps.lbl": [
            {
                "type": "attr",
                "anno": "ConsoleLabel"
            }
        ],
        "ConsoleAddonBreadcrumbView.widget": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ConsoleAddonBreadcrumbView.parents": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ConsoleAddonBreadcrumb.view": [
            {
                "type": "attr",
                "anno": "ConsoleAddonBreadcrumbView"
            }
        ],
        "ConsoleAddonWidgetPanel.root": [
            {
                "type": "attr",
                "anno": "BoxLayout"
            }
        ],
        "ConsoleAddonWidgetPanel.sv": [
            {
                "type": "attr",
                "anno": "ScrollView"
            }
        ],
        "ConsoleAddonWidgetPanel.save_property_boolean": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "key": "str",
                    "index": "int",
                    "instance": "ConsoleAddon"
                }
            }
        ],
        "TreeViewWidget.widget": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ConsoleAddonWidgetTreeImpl.selected_widget": [
            {
                "type": "attr",
                "anno": "TreeViewWidget"
            }
        ],
        "ConsoleAddonWidgetTreeImpl.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "ConsoleAddonWidgetTreeImpl.update_scroll": [
            {
                "type": "attr",
                "anno": "Callable[[], None]"
            }
        ],
        "ConsoleAddonWidgetTreeImpl.on_select_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "TreeViewWidget"
                }
            }
        ],
        "ConsoleAddonWidgetTreeView.widget": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ConsoleAddonWidgetTreeView._window_node": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ConsoleAddonWidgetTree.content": [
            {
                "type": "attr",
                "anno": "ConsoleAddonWidgetTreeView"
            }
        ],
        "Console.addons": [
            {
                "type": "attr",
                "anno": "list[ConsoleAddon]"
            }
        ],
        "Console.mode": [
            {
                "type": "attr",
                "anno": "OptionProperty"
            }
        ],
        "Console.widget": [
            {
                "type": "attr",
                "anno": "ObjectProperty"
            }
        ],
        "ConsoleAddonWidgetTreeView._update_widget_tree_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode",
                    "widget": "object",
                    "is_open": "bool"
                }
            }
        ],
        "ConsoleAddonBreadcrumb.update_content": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ConsoleAddonBreadcrumb.deactivate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonBreadcrumb.activate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonBreadcrumbView.highlight_widget": [
            {
                "type": "method",
                "args": {
                    "instance": "ConsoleAddon"
                }
            }
        ],
        "Console.inspect_enabled": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "ConsoleAddonSelect.on_button_state": [
            {
                "type": "method",
                "args": {
                    "instance": "Console",
                    "value": "str"
                }
            }
        ],
        "Console.activated": [
            {
                "type": "attr",
                "anno": "BooleanProperty"
            }
        ],
        "Console.win": [
            {
                "type": "attr",
                "anno": "Console"
            }
        ],
        "Console.avoid_bring_to_top": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Console.gcolor": [
            {
                "type": "attr",
                "anno": "Color"
            }
        ],
        "Console.gtransform": [
            {
                "type": "attr",
                "anno": "Transform"
            }
        ],
        "Console.grect": [
            {
                "type": "attr",
                "anno": "Rectangle"
            }
        ],
        "Console._toolbar": [
            {
                "type": "attr",
                "anno": "dict[str, list[ConsoleButton]]"
            }
        ],
        "Console._addons": [
            {
                "type": "attr",
                "anno": "list[ConsoleAddon]"
            }
        ],
        "Console._panel": [
            {
                "type": "attr",
                "anno": "ConsoleButton"
            }
        ],
        "Console.register_addon": [
            {
                "type": "method",
                "args": {
                    "cls": "Console",
                    "addon": "ConsoleAddon"
                }
            }
        ],
        "Console.add_toolbar_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "ConsoleButton",
                    "right": "bool"
                }
            }
        ],
        "ConsoleAddonFps.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonSelect.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonMode.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Console.y": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Console._window_node": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Console.keyboard_shortcut": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "scancode": "int",
                    "largs": "int"
                }
            }
        ],
        "ConsoleAddonWidgetTree.update_content": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "ConsoleAddonWidgetTree.deactivate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonWidgetTree.panel_activate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonWidgetTree.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonWidgetTreeImpl._update_scroll": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "ConsoleAddonWidgetTreeImpl.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "ConsoleAddonWidgetTreeImpl.select_node": [
            {
                "type": "method",
                "args": {
                    "node": "TreeViewNode",
                    "select_widget": "bool"
                }
            }
        ],
        "ConsoleAddonWidgetTreeImpl.find_node_by_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "ConsoleAddonFps.deactivated": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Console.pick": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget",
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Console.update_widget_graphics": [
            {
                "type": "method",
                "args": {
                    "l": "object"
                }
            }
        ],
        "Console.highlight_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget",
                    "largs": "str"
                }
            }
        ],
        "Console.highlight_at": [
            {
                "type": "method",
                "args": {
                    "x": "int",
                    "y": "int"
                }
            }
        ],
        "Console.on_window_children": [
            {
                "type": "method",
                "args": {
                    "win": "Widget",
                    "children": "object"
                }
            }
        ],
        "Console._init_toolbar": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Console.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Console.set_content": [
            {
                "type": "method",
                "args": {
                    "content": "object"
                }
            }
        ],
        "Console._activate_panel": [
            {
                "type": "method",
                "args": {
                    "instance": "ConsoleButton"
                }
            }
        ],
        "Console.add_panel": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "cb_activate": "ConsoleToggleButton",
                    "cb_deactivate": "ConsoleToggleButton",
                    "cb_refresh": "ConsoleToggleButton"
                }
            }
        ],
        "Console.remove_toolbar_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "ConsoleAddonBreadcrumb.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonBreadcrumbView.on_widget": [
            {
                "type": "method",
                "args": {
                    "instance": "ConsoleAddon",
                    "value": "object"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "Window",
                    "ctx": "ConsoleAddon"
                }
            }
        ],
        "create_console": [
            {
                "type": "func",
                "args": {
                    "win": "Widget",
                    "ctx": "ConsoleAddon",
                    "l": "int"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "Widget",
                    "ctx": "ConsoleAddon"
                }
            }
        ],
        "ConsoleAddonWidgetPanel.save_property_option": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "key": "str",
                    "instance": "ConsoleAddon",
                    "l": "str"
                }
            }
        ],
        "ConsoleAddonWidgetPanel.save_property_text": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "key": "str",
                    "index": "int",
                    "instance": "ConsoleAddon",
                    "value": "str"
                }
            }
        ],
        "ConsoleAddonWidgetPanel.save_property_numeric": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "key": "str",
                    "index": "int",
                    "instance": "ConsoleAddon",
                    "value": "float"
                }
            }
        ],
        "ConsoleAddonFps.update_fps": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ConsoleAddonFps.activate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Console._activate_console": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonWidgetPanel.show_property": [
            {
                "type": "method",
                "args": {
                    "instance": "ConsoleAddon",
                    "value": "object",
                    "key": "str",
                    "index": "int",
                    "l": "str"
                }
            }
        ],
        "ConsoleAddonWidgetPanel.update_content": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "ConsoleAddonWidgetPanel.deactivate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Console._deactivate_console": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Console.on_activated": [
            {
                "type": "method",
                "args": {
                    "instance": "ConsoleAddon",
                    "activated": "bool"
                }
            }
        ],
        "ConsoleAddonWidgetPanel.panel_activate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonWidgetPanel.init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonWidgetTreeImpl.update_selected_widget": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "ConsoleAddonWidgetTreeView.update_widget_tree": [
            {
                "type": "method",
                "args": {
                    "args": "object"
                }
            }
        ],
        "ConsoleAddonWidgetTree.panel_refresh": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleAddonWidgetTreeImpl.on_selected_widget": [
            {
                "type": "method",
                "args": {
                    "inst": "object",
                    "widget": "object"
                }
            }
        ],
        "Console.on_touch_down": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ],
        "Console.on_touch_move": [
            {
                "type": "method",
                "args": {
                    "touch": "MotionEvent"
                }
            }
        ],
        "Console.on_touch_up": [
            {
                "type": "method",
                "args": {
                    "touch": "ObjectProperty"
                }
            }
        ]
    },
    "modules.cursor": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_mouse_move": [
            {
                "type": "func",
                "args": {
                    "texture": "Texture",
                    "size": "tuple[int, int]",
                    "offset": "tuple[int, int]",
                    "win": "Window",
                    "pos": "tuple",
                    "args": "tuple"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "Window",
                    "ctx": "Context"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "Window",
                    "ctx": "Any"
                }
            }
        ]
    },
    "modules.touchring": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "pointer_image": [
            {
                "type": "var",
                "anno": "Image"
            }
        ],
        "pointer_scale": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "pointer_alpha": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "_touch_up": [
            {
                "type": "func",
                "args": {
                    "win": "object",
                    "touch": "MotionEvent"
                }
            }
        ],
        "_touch_down": [
            {
                "type": "func",
                "args": {
                    "win": "object",
                    "touch": "MotionEvent"
                }
            }
        ],
        "_touch_move": [
            {
                "type": "func",
                "args": {
                    "win": "object",
                    "touch": "MotionEvent"
                }
            }
        ],
        "stop": [
            {
                "type": "func",
                "args": {
                    "win": "object",
                    "ctx": "Context"
                }
            }
        ],
        "start": [
            {
                "type": "func",
                "args": {
                    "win": "object",
                    "ctx": "ModuleContext"
                }
            }
        ]
    },
    "lib.gstplayer": {
        "GstPlayer": [
            {
                "type": "var",
                "anno": "GstPlayer"
            }
        ],
        "get_gst_version": [
            {
                "type": "var",
                "anno": "GstPlayer"
            }
        ],
        "glib_iteration": [
            {
                "type": "var",
                "anno": "int"
            }
        ]
    },
    "lib.mtdev": {
        "libmtdev": [
            {
                "type": "var",
                "anno": "cdll.Library"
            }
        ],
        "MTDEV_CODE_SLOT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_TOUCH_MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_TOUCH_MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_WIDTH_MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_WIDTH_MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_ORIENTATION": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_POSITION_X": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_POSITION_Y": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_TOOL_TYPE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BLOB_ID": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_TRACKING_ID": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_PRESSURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_ABS_X": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_ABS_Y": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_ABS_Z": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_DIGI": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_PEN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_RUBBER": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_BRUSH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_PENCIL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_AIRBRUSH": [
            {
                "type": "var",
                "anno": "c_ushort"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_FINGER": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_MOUSE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_LENS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOUCH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_STYLUS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_STYLUS2": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_DOUBLETAP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_TRIPLETAP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_CODE_BTN_TOOL_QUADTAP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_ABS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_SYN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_KEY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_REL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_MSC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_SW": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_LED": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_SND": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_REP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_FF": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_PWR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_TYPE_EV_FF_STATUS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_TRACKING_ID": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_POSITION_X": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_POSITION_Y": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_TOUCH_MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_TOUCH_MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_WIDTH_MAJOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_WIDTH_MINOR": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_ORIENTATION": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "MTDEV_ABS_SIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "timeval._fields_": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "input_event._fields_": [
            {
                "type": "attr",
                "anno": "Structure"
            }
        ],
        "input_absinfo._fields_": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "mtdev_caps._fields_": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "mtdev._fields_": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "mtdev_open": [
            {
                "type": "var",
                "anno": "Callable[[pointer, int], int]"
            }
        ],
        "mtdev_get": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "mtdev_idle": [
            {
                "type": "var",
                "anno": "cdll.Function"
            }
        ],
        "mtdev_close": [
            {
                "type": "var",
                "anno": "cdll.Function"
            }
        ],
        "Device._filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Device._fd": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Device._device": [
            {
                "type": "attr",
                "anno": "mtdev"
            }
        ],
        "Device.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Device.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Device.idle": [
            {
                "type": "method",
                "args": {
                    "ms": "int"
                }
            }
        ],
        "Device.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Device.has_mtdata": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Device.has_slot": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Device.has_abs": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ],
        "Device.get_max_abs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Device.get_slot": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Device.get_abs": [
            {
                "type": "method",
                "args": {
                    "index": "int"
                }
            }
        ]
    },
    "tests.test_invalid_lang": {
        "InvalidLangTestCase.test_invalid_childname_before": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InvalidLangTestCase.test_invalid_childname": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "lib.ddsfile": {
        "DDSD_CAPS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSD_HEIGHT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSD_WIDTH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSD_PITCH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSD_PIXELFORMAT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSD_MIPMAPCOUNT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSD_LINEARSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSD_DEPTH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDPF_ALPHAPIXELS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDPF_FOURCC": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDPF_RGB": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDPF_LUMINANCE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS_COMPLEX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS_TEXTURE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS_MIPMAP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS2_CUBEMAP": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS2_CUBEMAP_POSITIVEX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS2_CUBEMAP_NEGATIVEX": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS2_CUBEMAP_POSITIVEY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS2_CUBEMAP_NEGATIVEY": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS2_CUBEMAP_POSITIVEZ": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS2_CUBEMAP_NEGATIVEZ": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDSCAPS2_VOLUME": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDS_DXTN": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDS_DXT1": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDS_DXT2": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDS_DXT3": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDS_DXT4": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "DDS_DXT5": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "dxt_to_str": [
            {
                "type": "func",
                "args": {
                    "dxt": "int"
                }
            }
        ],
        "str_to_dxt": [
            {
                "type": "func",
                "args": {
                    "dxt": "str"
                }
            }
        ],
        "align_value": [
            {
                "type": "func",
                "args": {
                    "val": "int",
                    "b": "int"
                }
            }
        ],
        "check_flags": [
            {
                "type": "func",
                "args": {
                    "val": "int",
                    "fl": "int"
                }
            }
        ],
        "dxt_size": [
            {
                "type": "func",
                "args": {
                    "w": "int",
                    "h": "int",
                    "dxt": "int"
                }
            }
        ],
        "QueryDict.__getattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str"
                }
            }
        ],
        "QueryDict.__setattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "value": "str"
                }
            }
        ],
        "DDSFile.fields": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "DDSFile._dxt": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DDSFile._fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DDSFile.meta": [
            {
                "type": "attr",
                "anno": "QueryDict"
            }
        ],
        "DDSFile.count": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DDSFile.images": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "DDSFile.images_size": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "DDSFile.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DDSFile.save": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "DDSFile._get_dxt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DDSFile._set_dxt": [
            {
                "type": "method",
                "args": {
                    "dxt": "str"
                }
            }
        ],
        "DDSFile.dxt": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "DDSFile._get_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DDSFile._set_size": [
            {
                "type": "method",
                "args": {
                    "size": "tuple"
                }
            }
        ],
        "DDSFile.size": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "DDSFile.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DDSFile.add_image": [
            {
                "type": "method",
                "args": {
                    "level": "int",
                    "bpp": "int",
                    "fmt": "str",
                    "width": "int",
                    "height": "int",
                    "data": "str"
                }
            }
        ],
        "DDSFile.load": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "DDSFile.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "dds": [
            {
                "type": "var",
                "anno": "DDSFile"
            }
        ]
    },
    "tools.changelog_parser": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "_remove_escaping": [
            {
                "type": "func",
                "args": {
                    "value": "str"
                }
            }
        ],
        "_format_pr_list": [
            {
                "type": "func",
                "args": {
                    "items": "list",
                    "indent": "int"
                }
            }
        ],
        "_get_pulls": [
            {
                "type": "func",
                "args": {
                    "filename_in": "str"
                }
            }
        ],
        "process_changelog": [
            {
                "type": "func",
                "args": {
                    "filename_in": "str",
                    "filename_out": "str"
                }
            }
        ]
    },
    "tools.texturecompress": {
        "Tool.options": [
            {
                "type": "attr",
                "anno": "argparse.Namespace"
            }
        ],
        "Tool.source_fn": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Tool.dest_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Tool.tex_fn": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tool.compress": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tool.nearest_pow2": [
            {
                "type": "method",
                "args": {
                    "v": "int"
                }
            }
        ],
        "Tool.runcmd": [
            {
                "type": "method",
                "args": {
                    "cmd": "list"
                }
            }
        ],
        "Tool.write_tex": [
            {
                "type": "method",
                "args": {
                    "data": "str",
                    "fmt": "str",
                    "image_size": "int",
                    "texture_size": "int",
                    "mipmap": "bool",
                    "formatinfo": "str"
                }
            }
        ],
        "Etc1Tool.etc1tool": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Etc1Tool.locate_etc1tool": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Etc1Tool.__init__": [
            {
                "type": "method",
                "args": {
                    "options": "dict"
                }
            }
        ],
        "PvrtcTool.texturetool": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PvrtcTool.locate_texturetool": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PvrtcTool.__init__": [
            {
                "type": "method",
                "args": {
                    "options": "dict"
                }
            }
        ],
        "Tool.__init__": [
            {
                "type": "method",
                "args": {
                    "options": "argparse.Namespace"
                }
            }
        ],
        "Etc1Tool.compress": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PvrtcTool.compress": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Tool.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tools.image-testsuite.gimp28-testsuite": {
        "TESTSUITE_CONFIG": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "v0_PIXELS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "v0_pattern_pixel": [
            {
                "type": "func",
                "args": {
                    "char": "str",
                    "alpha": "int",
                    "fmt": "str"
                }
            }
        ],
        "v0_filename": [
            {
                "type": "func",
                "args": {
                    "w": "int",
                    "h": "int",
                    "pat": "str",
                    "alpha": "int",
                    "fmtinfo": "str",
                    "testname": "str",
                    "ext": "str"
                }
            }
        ],
        "save_image": [
            {
                "type": "func",
                "args": {
                    "dirname": "str",
                    "img": "str",
                    "lyr": "str",
                    "w": "int",
                    "h": "int",
                    "pat": "str",
                    "alpha": "int",
                    "v0_fmtinfo": "str",
                    "testname": "str",
                    "ext": "str"
                }
            }
        ],
        "draw_pattern": [
            {
                "type": "func",
                "args": {
                    "lyr": "str",
                    "pat": "str",
                    "alpha": "int",
                    "direction": "str",
                    "pixelgetter": "Callable[[str, int], str]"
                }
            }
        ],
        "make_images": [
            {
                "type": "func",
                "args": {
                    "testname": "str",
                    "pattern": "str",
                    "alpha": "int",
                    "layertype_in": "str",
                    "extensions": "list",
                    "dirname": "str"
                }
            }
        ],
        "makepatterns": [
            {
                "type": "func",
                "args": {
                    "allow": "str",
                    "include": "str",
                    "exclude": "str"
                }
            }
        ],
        "plugin_main": [
            {
                "type": "func",
                "args": {
                    "dirname": "str",
                    "do_opaque": "str",
                    "do_binary": "str",
                    "do_alpha": "str"
                }
            }
        ]
    },
    "tools.coverage": {
        "CoverageKVParser.execute_directives": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "walk_parser_rules": [
            {
                "type": "func",
                "args": {
                    "parser_rule": "ParserRule"
                }
            }
        ],
        "walk_parser_rules_properties": [
            {
                "type": "func",
                "args": {
                    "parser_rule": "ParserRule"
                }
            }
        ],
        "KivyCoveragePlugin.file_reporter": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "KivyCoveragePlugin.find_executable_files": [
            {
                "type": "method",
                "args": {
                    "src_dir": "str"
                }
            }
        ],
        "KivyFileTracer.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KivyFileTracer.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "kwargs": "coverage.Plugin.Option"
                }
            }
        ],
        "KivyCoveragePlugin.file_tracer": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "KivyFileTracer.source_filename": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "coverage_init": [
            {
                "type": "func",
                "args": {
                    "reg": "coverage.CoveragePlugin",
                    "options": "coverage.CoverageOptions"
                }
            }
        ],
        "walk_parser": [
            {
                "type": "func",
                "args": {
                    "parser": "Parser"
                }
            }
        ],
        "CoverageKVParser.get_coverage_lines": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KivyFileReporter.lines": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tools.pep8checker.pep8kivy": {
        "pep8_ignores": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "usage": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "targets": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "errors": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "exclude_dirs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "exclude_files": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "cont": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "dpath": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "complete_filename": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "KivyStyleChecker.report_error": [
            {
                "type": "method",
                "args": {
                    "line_number": "int",
                    "offset": "int",
                    "text": "str",
                    "check": "pep8.Checker"
                }
            }
        ],
        "KivyStyleChecker.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "check": [
            {
                "type": "func",
                "args": {
                    "fn": "str"
                }
            }
        ]
    },
    "tools.pep8checker.pep8": {
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DEFAULT_EXCLUDE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DEFAULT_IGNORE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "USER_CONFIG": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "PROJECT_CONFIG": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "TESTSUITE_PATH": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "MAX_LINE_LENGTH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "REPORT_FORMAT": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "PyCF_ONLY_AST": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "SINGLETONS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "KEYWORDS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "UNARY_OPERATORS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "ARITHMETIC_OP": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "WS_OPTIONAL_OPERATORS": [
            {
                "type": "var",
                "anno": "frozenset[str]"
            }
        ],
        "WS_NEEDED_OPERATORS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "WHITESPACE": [
            {
                "type": "var",
                "anno": "frozenset[str]"
            }
        ],
        "NEWLINE": [
            {
                "type": "var",
                "anno": "frozenset[tokenize]"
            }
        ],
        "SKIP_TOKENS": [
            {
                "type": "var",
                "anno": "frozenset[tokenize]"
            }
        ],
        "SKIP_COMMENTS": [
            {
                "type": "var",
                "anno": "frozenset[tokenize]"
            }
        ],
        "BENCHMARK_KEYS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "INDENT_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "RAISE_COMMA_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "RERAISE_COMMA_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "ERRORCODE_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "DOCSTRING_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "EXTRANEOUS_WHITESPACE_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "WHITESPACE_AFTER_COMMA_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "COMPARE_SINGLETON_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "COMPARE_NEGATIVE_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "COMPARE_TYPE_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "KEYWORD_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "OPERATOR_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "LAMBDA_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "HUNK_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "COMMENT_WITH_NL": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "trailing_whitespace": [
            {
                "type": "func",
                "args": {
                    "physical_line": "str"
                }
            }
        ],
        "trailing_blank_lines": [
            {
                "type": "func",
                "args": {
                    "physical_line": "str",
                    "lines": "str",
                    "line_number": "int",
                    "total_lines": "int"
                }
            }
        ],
        "maximum_line_length": [
            {
                "type": "func",
                "args": {
                    "physical_line": "str",
                    "max_line_length": "int",
                    "multiline": "bool",
                    "noqa": "bool"
                }
            }
        ],
        "missing_whitespace": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "indentation": [
            {
                "type": "func",
                "args": {
                    "logical_line": "bool",
                    "previous_logical": "str",
                    "indent_char": "str",
                    "indent_level": "int",
                    "previous_indent_level": "int"
                }
            }
        ],
        "whitespace_before_parameters": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "tokens": "list"
                }
            }
        ],
        "missing_whitespace_around_operator": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "tokens": "list"
                }
            }
        ],
        "whitespace_around_named_parameter_equals": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "tokens": "list"
                }
            }
        ],
        "whitespace_before_comment": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "tokens": "Iterable[tuple[int, str, str]]"
                }
            }
        ],
        "module_imports_on_top_of_file": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "indent_level": "bool",
                    "checker_state": "dict",
                    "noqa": "bool"
                }
            }
        ],
        "explicit_line_join": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "tokens": "list"
                }
            }
        ],
        "break_around_binary_operator": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "tokens": "list"
                }
            }
        ],
        "ambiguous_identifier": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "tokens": "list"
                }
            }
        ],
        "stdin_get_value": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "noqa": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "expand_indent": [
            {
                "type": "func",
                "args": {
                    "line": "str"
                }
            }
        ],
        "continued_indentation": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "tokens": "list",
                    "indent_level": "int",
                    "hang_closing": "bool",
                    "indent_char": "str",
                    "noqa": "bool",
                    "verbose": "int"
                }
            }
        ],
        "mute_string": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "normalize_paths": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "parent": "str"
                }
            }
        ],
        "filename_match": [
            {
                "type": "func",
                "args": {
                    "filename": "str",
                    "patterns": "str",
                    "default": "bool"
                }
            }
        ],
        "update_counts": [
            {
                "type": "func",
                "args": {
                    "s": "str",
                    "counts": "dict"
                }
            }
        ],
        "_is_eol_token": [
            {
                "type": "func",
                "args": {
                    "token": "tokenize.Token",
                    "_eol_token": "Callable[[], bool]"
                }
            }
        ],
        "_checks": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "Checker._io_error": [
            {
                "type": "attr",
                "anno": "TextIOWrapper"
            }
        ],
        "Checker._physical_checks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Checker._logical_checks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Checker._ast_checks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Checker.max_line_length": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Checker.multiline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Checker.hang_closing": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Checker.verbose": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Checker.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Checker._checker_states": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Checker.lines": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Checker.report": [
            {
                "type": "attr",
                "anno": "BaseReport"
            }
        ],
        "Checker.report_error": [
            {
                "type": "attr",
                "anno": "TextIOWrapper"
            }
        ],
        "Checker.noqa": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Checker.report_invalid_syntax": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Checker.indent_char": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Checker.run_check": [
            {
                "type": "method",
                "args": {
                    "check": "Callable",
                    "argument_names": "list"
                }
            }
        ],
        "Checker.checker_state": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Checker.init_checker_state": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "argument_names": "list"
                }
            }
        ],
        "Checker.physical_line": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Checker.logical_line": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Checker.indent_level": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Checker.blank_before": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Checker.previous_indent_level": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Checker.previous_logical": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Checker.previous_unindented_logical_line": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Checker.blank_lines": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Checker.tokens": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Checker.build_tokens_line": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Checker.line_number": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Checker.check_physical": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "Checker.maybe_check_physical": [
            {
                "type": "method",
                "args": {
                    "token": "tokenize.Token"
                }
            }
        ],
        "Checker.total_lines": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Checker.readline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "readlines": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Checker.generate_tokens": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseReport.print_filename": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BaseReport._benchmark_keys": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BaseReport._ignore_code": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BaseReport.elapsed": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BaseReport.total_errors": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BaseReport.counters": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BaseReport.messages": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BaseReport._start_time": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BaseReport.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseReport.stop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseReport.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseReport.lines": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseReport.expected": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "BaseReport.line_offset": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BaseReport.file_errors": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "BaseReport.init_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "lines": "str",
                    "expected": "tuple",
                    "line_offset": "int"
                }
            }
        ],
        "BaseReport.increment_logical_line": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Checker.check_logical": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseReport.error": [
            {
                "type": "method",
                "args": {
                    "line_number": "int",
                    "offset": "int",
                    "text": "str",
                    "check": "str"
                }
            }
        ],
        "BaseReport.get_file_results": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseReport.get_count": [
            {
                "type": "method",
                "args": {
                    "prefix": "str"
                }
            }
        ],
        "BaseReport.get_statistics": [
            {
                "type": "method",
                "args": {
                    "prefix": "str"
                }
            }
        ],
        "BaseReport.print_statistics": [
            {
                "type": "method",
                "args": {
                    "prefix": "str"
                }
            }
        ],
        "BaseReport.print_benchmark": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileReport.print_filename": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StandardReport._fmt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "StandardReport._repeat": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StandardReport._show_source": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StandardReport._show_pep8": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StandardReport._deferred_print": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "StandardReport.init_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "lines": "str",
                    "expected": "tuple",
                    "line_offset": "int"
                }
            }
        ],
        "StandardReport.get_file_results": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DiffReport._selected": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DiffReport.__init__": [
            {
                "type": "method",
                "args": {
                    "options": "OptionParser"
                }
            }
        ],
        "DiffReport.error": [
            {
                "type": "method",
                "args": {
                    "line_number": "int",
                    "offset": "int",
                    "text": "str",
                    "check": "Checker"
                }
            }
        ],
        "StandardReport.error": [
            {
                "type": "method",
                "args": {
                    "line_number": "int",
                    "offset": "int",
                    "text": "str",
                    "check": "Checker"
                }
            }
        ],
        "StyleGuide.checker_class": [
            {
                "type": "attr",
                "anno": "Checker"
            }
        ],
        "StyleGuide.paths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "StyleGuide.runner": [
            {
                "type": "attr",
                "anno": "Callable[[str], int]"
            }
        ],
        "StyleGuide.options": [
            {
                "type": "attr",
                "anno": "OptionParser"
            }
        ],
        "StyleGuide.init_report": [
            {
                "type": "method",
                "args": {
                    "reporter": "BaseReport"
                }
            }
        ],
        "StyleGuide.excluded": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "parent": "str"
                }
            }
        ],
        "get_parser": [
            {
                "type": "func",
                "args": {
                    "prog": "str",
                    "version": "str"
                }
            }
        ],
        "read_config": [
            {
                "type": "func",
                "args": {
                    "options": "RawConfigParser",
                    "args": "list",
                    "arglist": "list",
                    "parser": "OptionParser"
                }
            }
        ],
        "_parse_multi_options": [
            {
                "type": "func",
                "args": {
                    "options": "str",
                    "split_token": "str"
                }
            }
        ],
        "StandardReport.__init__": [
            {
                "type": "method",
                "args": {
                    "options": "OptionParser"
                }
            }
        ],
        "StyleGuide.input_dir": [
            {
                "type": "method",
                "args": {
                    "dirname": "str"
                }
            }
        ],
        "_get_parameters": [
            {
                "type": "func",
                "args": {
                    "function": "Callable"
                }
            }
        ],
        "register_check": [
            {
                "type": "func",
                "args": {
                    "check": "Callable",
                    "codes": "list"
                }
            }
        ],
        "init_checks_registry": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "python_3000_backticks": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "python_3000_not_equal": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "python_3000_has_key": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "noqa": "bool"
                }
            }
        ],
        "imports_on_separate_lines": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "missing_whitespace_after_import_keyword": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "comparison_negative": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "comparison_to_singleton": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "noqa": "bool"
                }
            }
        ],
        "whitespace_around_comma": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "whitespace_around_operator": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "whitespace_around_keywords": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "extraneous_whitespace": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "StyleGuide.check_files": [
            {
                "type": "method",
                "args": {
                    "paths": "list"
                }
            }
        ],
        "parse_udiff": [
            {
                "type": "func",
                "args": {
                    "diff": "str",
                    "patterns": "str",
                    "parent": "str"
                }
            }
        ],
        "isidentifier": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "comparison_type": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "noqa": "bool"
                }
            }
        ],
        "compound_statements": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "python_3000_raise_comma": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str"
                }
            }
        ],
        "blank_lines": [
            {
                "type": "func",
                "args": {
                    "logical_line": "str",
                    "blank_lines": "int",
                    "indent_level": "int",
                    "line_number": "int",
                    "blank_before": "int",
                    "previous_logical": "str",
                    "previous_unindented_logical_line": "str",
                    "previous_indent_level": "int",
                    "lines": "list[str]"
                }
            }
        ],
        "tabs_obsolete": [
            {
                "type": "func",
                "args": {
                    "physical_line": "str"
                }
            }
        ],
        "tabs_or_spaces": [
            {
                "type": "func",
                "args": {
                    "physical_line": "str",
                    "indent_char": "str"
                }
            }
        ],
        "process_options": [
            {
                "type": "func",
                "args": {
                    "arglist": "list",
                    "parse_argv": "bool",
                    "config_file": "str",
                    "parser": "OptionParser"
                }
            }
        ],
        "StyleGuide.ignore_code": [
            {
                "type": "method",
                "args": {
                    "code": "str"
                }
            }
        ],
        "StyleGuide.get_checks": [
            {
                "type": "method",
                "args": {
                    "argument_name": "str"
                }
            }
        ],
        "BaseReport.__init__": [
            {
                "type": "method",
                "args": {
                    "options": "OptionParser"
                }
            }
        ],
        "Checker.check_ast": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Checker.check_all": [
            {
                "type": "method",
                "args": {
                    "expected": "tuple",
                    "line_offset": "int"
                }
            }
        ],
        "StyleGuide.input_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "lines": "list",
                    "expected": "tuple",
                    "line_offset": "int"
                }
            }
        ],
        "StyleGuide.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "_main": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Checker.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "lines": "list",
                    "options": "OptionGuide",
                    "report": "BaseReport",
                    "kwargs": "str"
                }
            }
        ]
    },
    "tools.gles_compat.subset_gles": {
        "gl": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "glext": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "gles": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "add_defines_to_set": [
            {
                "type": "func",
                "args": {
                    "header": "str"
                }
            }
        ],
        "extract_common_symbols": [
            {
                "type": "func",
                "args": {
                    "symbols1": "list",
                    "symbols2": "list",
                    "already_extracted": "list"
                }
            }
        ],
        "gl_symbols": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "glext_symbols": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "gles_symbols": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "already_extracted": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ]
    },
    "tools.stub-gl-debug": {
        "a": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "replace": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "lines": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "x": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "y": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "s": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "arg": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "pointer": [
            {
                "type": "var",
                "anno": "int"
            }
        ]
    },
    "tools.report": {
        "report": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "report_dict": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "title": [
            {
                "type": "func",
                "args": {
                    "t": "str"
                }
            }
        ],
        "ext": [
            {
                "type": "var",
                "anno": "str | None"
            }
        ],
        "testimport": [
            {
                "type": "func",
                "args": {
                    "libname": "str"
                }
            }
        ],
        "s": [
            {
                "type": "var",
                "anno": "StringIO"
            }
        ],
        "reply": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "send_report": [
            {
                "type": "func",
                "args": {
                    "dict_report": "dict"
                }
            }
        ],
        "paste_url": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "tools.gallery": {
        "base_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "examples_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "screenshots_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "generation_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "image_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "gallery_filename": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "enhance_info_description": [
            {
                "type": "func",
                "args": {
                    "info": "dict",
                    "line_length": "int"
                }
            }
        ],
        "make_gallery_page": [
            {
                "type": "func",
                "args": {
                    "infos": "kivy.Info"
                }
            }
        ],
        "make_detail_page": [
            {
                "type": "func",
                "args": {
                    "info": "kivy.Info"
                }
            }
        ],
        "write_file": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "s": "str"
                }
            }
        ],
        "make_index": [
            {
                "type": "func",
                "args": {
                    "infos": "kivy.Info"
                }
            }
        ],
        "parse_docstring_info": [
            {
                "type": "func",
                "args": {
                    "text": "str"
                }
            }
        ],
        "iter_filename_info": [
            {
                "type": "func",
                "args": {
                    "dir_name": "str"
                }
            }
        ],
        "iter_docstring_info": [
            {
                "type": "func",
                "args": {
                    "dir_name": "str"
                }
            }
        ],
        "get_infos": [
            {
                "type": "func",
                "args": {
                    "dir_name": "str"
                }
            }
        ],
        "write_all_rst_pages": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "tools.generate-icons": {
        "Converter.converters": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Converter.iterate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Converter.ensure_quality": [
            {
                "type": "method",
                "args": {
                    "image": "Image.open",
                    "force": "bool"
                }
            }
        ],
        "Converter.convert_to": [
            {
                "type": "method",
                "args": {
                    "source": "Image.open",
                    "icon_fn": "str",
                    "size": "int"
                }
            }
        ],
        "Converter.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tools.kviewer": {
        "PATH": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "TARGET": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "KvHandler.callback": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "KvHandler.target": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KvHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "callback": "Callable",
                    "target": "str",
                    "kwargs": "str"
                }
            }
        ],
        "KvHandler.on_any_event": [
            {
                "type": "method",
                "args": {
                    "event": "Observer"
                }
            }
        ],
        "KvViewerApp.update": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "KvViewerApp.build": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tools.packaging.factory": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "ignore_list": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "FactoryBuild.description": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FactoryBuild.user_options": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "FactoryBuild.initialize_options": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FactoryBuild.finalize_options": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FactoryBuild.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tools.packaging.cython_cfg": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "get_cython_versions": [
            {
                "type": "func",
                "args": {
                    "setup_cfg": "str"
                }
            }
        ],
        "get_cython_msg": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "tools.packaging.pyinstaller_hooks.hook-kivy": {
        "hiddenimports": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ]
    },
    "tools.packaging.pyinstaller_hooks.pyi_rth_kivy": {
        "root": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "sitepackages": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "tools.packaging.pyinstaller_hooks.__main__": {
        "args": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "src": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "formatted_lines": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "lines": [
            {
                "type": "var",
                "anno": "list"
            }
        ]
    },
    "tools.packaging.pyinstaller_hooks": {
        "old_deps": [
            {
                "type": "var",
                "anno": "old_deps"
            }
        ],
        "kivy_deps": [
            {
                "type": "var",
                "anno": "kivy_deps"
            }
        ],
        "curdir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "kivy_modules": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "excludedimports": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "datas": [
            {
                "type": "var",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "runtime_hooks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "hookspath": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_hooks": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "add_dep_paths": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_find_gst_plugin_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_factory_modules": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_find_gst_binaries": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_deps_all": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_deps_minimal": [
            {
                "type": "func",
                "args": {
                    "exclude_ignored": "bool",
                    "kwargs": "str"
                }
            }
        ]
    },
    "tools.benchmark": {
        "benchmark_version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "xrange": [
            {
                "type": "var",
                "anno": "Callable[[], int]"
            }
        ],
        "clockfn": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "bench_widget_creation.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_widget_draw.ctx": [
            {
                "type": "attr",
                "anno": "RenderContext"
            }
        ],
        "bench_widget_draw.root": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "bench_widget_draw.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_widget_dispatch.root": [
            {
                "type": "attr",
                "anno": "Widget"
            }
        ],
        "bench_widget_dispatch.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_label_creation.labels": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "bench_label_creation.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_button_creation.labels": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "bench_button_creation.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_button_creation.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_label_creation_with_tick.labels": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "bench_label_creation_with_tick.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_button_creation_with_tick.labels": [
            {
                "type": "attr",
                "anno": "List[str]"
            }
        ],
        "bench_button_creation_with_tick.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_button_creation_with_tick.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "report": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "report_newline": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "log": [
            {
                "type": "func",
                "args": {
                    "s": "str",
                    "newline": "bool"
                }
            }
        ],
        "clock_total": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "test": [
            {
                "type": "var",
                "anno": "kivy.Benchmark"
            }
        ],
        "clock_start": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "clock_end": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "reply": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "payload": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "r": [
            {
                "type": "var",
                "anno": "requests.Response"
            }
        ],
        "benchs": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "bench_label_creation_with_tick.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_label_creation.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_widget_dispatch.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_widget_draw.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "bench_widget_creation_with_root.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "animation": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "Animation._update_ev": [
            {
                "type": "attr",
                "anno": "Clock"
            }
        ],
        "Animation._instances": [
            {
                "type": "attr",
                "anno": "set[CompoundAnimation]"
            }
        ],
        "Animation.__events__": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "Animation._clock_installed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Animation._duration": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Animation._transition": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Animation._step": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Animation._animated_properties": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Animation._widgets": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Animation.__init__": [
            {
                "type": "method",
                "args": {
                    "kw": "object"
                }
            }
        ],
        "Animation.duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation.transition": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation.animated_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation.have_properties_to_animate": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "Animation._register": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation._unregister": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation.on_start": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Animation.on_progress": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "progress": "int"
                }
            }
        ],
        "Animation.on_complete": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "CompoundAnimation.transition": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sequence.repeat": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Sequence.anim1": [
            {
                "type": "attr",
                "anno": "Animation"
            }
        ],
        "Sequence.anim2": [
            {
                "type": "attr",
                "anno": "Animation"
            }
        ],
        "Parallel.anim1": [
            {
                "type": "attr",
                "anno": "Animation"
            }
        ],
        "Parallel.anim2": [
            {
                "type": "attr",
                "anno": "Animation"
            }
        ],
        "CompoundAnimation.animated_properties": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CompoundAnimation.have_properties_to_animate": [
            {
                "type": "method",
                "args": {
                    "widget": "Widget"
                }
            }
        ],
        "Parallel.duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sequence.duration": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Parallel.on_anim_complete": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "widget": "object"
                }
            }
        ],
        "Parallel.__init__": [
            {
                "type": "method",
                "args": {
                    "anim1": "Animation",
                    "anim2": "Animation"
                }
            }
        ],
        "Parallel.stop": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Animation._clock_uninstall": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation.cancel": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "CompoundAnimation.cancel": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Animation.cancel_property": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "prop": "str"
                }
            }
        ],
        "CompoundAnimation.cancel_property": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "prop": "str"
                }
            }
        ],
        "Animation.stop": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Animation.stop_property": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "prop": "str"
                }
            }
        ],
        "CompoundAnimation.stop_property": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "prop": "str"
                }
            }
        ],
        "Animation.cancel_all": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "largs": "str"
                }
            }
        ],
        "Animation._calculate": [
            {
                "type": "method",
                "args": {
                    "a": "object",
                    "b": "object",
                    "t": "float"
                }
            }
        ],
        "Animation._update": [
            {
                "type": "method",
                "args": {
                    "dt": "float"
                }
            }
        ],
        "Animation._clock_install": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Animation._initialize": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Animation.start": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Animation.stop_all": [
            {
                "type": "method",
                "args": {
                    "widget": "object",
                    "largs": "str"
                }
            }
        ],
        "Sequence.stop": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Sequence.start": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Parallel.start": [
            {
                "type": "method",
                "args": {
                    "widget": "object"
                }
            }
        ],
        "Sequence.on_anim1_complete": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "widget": "object"
                }
            }
        ],
        "Sequence.__init__": [
            {
                "type": "method",
                "args": {
                    "anim1": "Animation",
                    "anim2": "Animation"
                }
            }
        ],
        "Sequence.on_anim2_progress": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "widget": "object",
                    "progress": "float"
                }
            }
        ],
        "Sequence.on_anim2_complete": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "widget": "object"
                }
            }
        ],
        "Sequence.on_anim1_progress": [
            {
                "type": "method",
                "args": {
                    "instance": "object",
                    "widget": "object",
                    "progress": "float"
                }
            }
        ],
        "Animation.__add__": [
            {
                "type": "method",
                "args": {
                    "animation": "Animation"
                }
            }
        ],
        "Animation.__and__": [
            {
                "type": "method",
                "args": {
                    "animation": "Animation"
                }
            }
        ],
        "AnimationTransition.linear": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_quad": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_quad": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_quad": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_cubic": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_cubic": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_cubic": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_quart": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_quart": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_quart": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_quint": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_quint": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_quint": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_sine": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_sine": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_sine": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_expo": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_expo": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_expo": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_circ": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_circ": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_circ": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_elastic": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_elastic": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_elastic": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_back": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_back": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_back": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition._out_bounce_internal": [
            {
                "type": "method",
                "args": {
                    "t": "float",
                    "d": "float"
                }
            }
        ],
        "AnimationTransition._in_bounce_internal": [
            {
                "type": "method",
                "args": {
                    "t": "float",
                    "d": "float"
                }
            }
        ],
        "AnimationTransition.in_bounce": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.out_bounce": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ],
        "AnimationTransition.in_out_bounce": [
            {
                "type": "method",
                "args": {
                    "progress": "float"
                }
            }
        ]
    },
    "tests.pyinstaller.simple_widget.project.widget": {
        "MyWidget.__init__": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ]
    },
    "tests.pyinstaller.simple_widget.main": {
        "w": [
            {
                "type": "var",
                "anno": "MyWidget"
            }
        ]
    },
    "tests.test_uix_anchorlayout": {
        "UIXAnchorLayoutTestcase.box": [
            {
                "type": "method",
                "args": {
                    "r": "int",
                    "g": "int",
                    "b": "int"
                }
            }
        ],
        "UIXAnchorLayoutTestcase.test_anchor_layout_xy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXAnchorLayoutTestcase.test_anchorlayout_y": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXAnchorLayoutTestcase.test_anchorlayout_x": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXAnchorLayoutTestcase.test_anchorlayout_default": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_uix_boxlayout": {
        "UIXBoxLayoutTestcase.box": [
            {
                "type": "method",
                "args": {
                    "r": "int",
                    "g": "int",
                    "b": "int"
                }
            }
        ],
        "UIXBoxLayoutTestcase.test_boxlayout_padding_spacing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXBoxLayoutTestcase.test_boxlayout_padding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXBoxLayoutTestcase.test_boxlayout_spacing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UIXBoxLayoutTestcase.test_boxlayout_orientation": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_video": {
        "VideoTestCase.test_video_unload": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_rst_replace": {
        "_build_rst": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "RstSubstitutionTestCase.test_rst_replace": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_issues.test_issue_883": {
        "LabelEmptyMarkupTestCase.test_empty_markup": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_filechooser": {
        "FileChooserTestCase.test_filechooserlistview": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_issues.test_issue_609": {
        "Issue609.test_markup_pos": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_uix_stacklayout": {
        "UixStackLayoutTest.test_stacklayout_nospace": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixStackLayoutTest.test_stacklayout_overflow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixStackLayoutTest.test_stacklayout_spacing": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixStackLayoutTest.test_stacklayout_padding": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixStackLayoutTest.test_stacklayout_orientation_rlbt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixStackLayoutTest.test_stacklayout_orientation_btrl": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixStackLayoutTest.test_stacklayout_fixed_size": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixStackLayoutTest.test_stacklayout_default": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UixStackLayoutTest.test_stacklayout_no_children": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_issues.test_issue_1091": {
        "PaddingSpacingTestCase.test_tb_lr_stacklayout": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "tests.test_uix_modal": {
        "modal_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_modal_app": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "UnitKivyApp"
                }
            }
        ]
    },
    "tests.test_uix_dropdown": {
        "dropdown_app": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "test_dropdown_app": [
            {
                "type": "func",
                "args": {
                    "kivy_app": "UnitKivyApp"
                }
            }
        ]
    },
    "graphics": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ]
    },
    "support": {
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "install_gobject_iteration": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "g_android_redraw_count": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_redraw_event": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "_android_ask_redraw": [
            {
                "type": "func",
                "args": {
                    "largs": "str"
                }
            }
        ],
        "install_android": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_twisted_reactor_stopper": [
            {
                "type": "var",
                "anno": "None"
            }
        ],
        "_twisted_reactor_work": [
            {
                "type": "var",
                "anno": "None"
            }
        ],
        "install_twisted_reactor": [
            {
                "type": "func",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "uninstall_twisted_reactor": [
            {
                "type": "func",
                "args": {}
            }
        ]
    }
}