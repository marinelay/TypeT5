{
    "plugins.test.core": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "regex": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "pattern": "str",
                    "ignorecase": "bool",
                    "multiline": "bool",
                    "match_type": "str"
                }
            }
        ],
        "match": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "pattern": "str",
                    "ignorecase": "bool",
                    "multiline": "bool"
                }
            }
        ],
        "search": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "pattern": "str",
                    "ignorecase": "bool",
                    "multiline": "bool"
                }
            }
        ],
        "version_compare": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "version": "str",
                    "operator": "str",
                    "strict": "bool"
                }
            }
        ],
        "truthy": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "convert_bool": "bool"
                }
            }
        ],
        "falsy": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "convert_bool": "bool"
                }
            }
        ],
        "finished": [
            {
                "type": "func",
                "args": {
                    "result": "MutableMapping[str, int]"
                }
            }
        ],
        "started": [
            {
                "type": "func",
                "args": {
                    "result": "MutableMapping[str, int]"
                }
            }
        ],
        "skipped": [
            {
                "type": "func",
                "args": {
                    "result": "MutableMapping[str, int]"
                }
            }
        ],
        "changed": [
            {
                "type": "func",
                "args": {
                    "result": "MutableMapping[str, int]"
                }
            }
        ],
        "unreachable": [
            {
                "type": "func",
                "args": {
                    "result": "MutableMapping[str, int]"
                }
            }
        ],
        "reachable": [
            {
                "type": "func",
                "args": {
                    "result": "MutableMapping[str, int]"
                }
            }
        ],
        "failed": [
            {
                "type": "func",
                "args": {
                    "result": "MutableMapping[str, int]"
                }
            }
        ],
        "success": [
            {
                "type": "func",
                "args": {
                    "result": "MutableMapping[str, int]"
                }
            }
        ],
        "TestModule.tests": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.test.files": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "TestModule.tests": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.test": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "plugins.test.mathstuff": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "issubset": [
            {
                "type": "func",
                "args": {
                    "a": "int",
                    "b": "int"
                }
            }
        ],
        "issuperset": [
            {
                "type": "func",
                "args": {
                    "a": "int",
                    "b": "int"
                }
            }
        ],
        "isnotanumber": [
            {
                "type": "func",
                "args": {
                    "x": "int"
                }
            }
        ],
        "contains": [
            {
                "type": "func",
                "args": {
                    "seq": "list",
                    "value": "int"
                }
            }
        ],
        "TestModule.tests": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.action.gather_facts": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._get_module_args": [
            {
                "type": "method",
                "args": {
                    "fact_module": "str",
                    "task_vars": "dict"
                }
            }
        ],
        "ActionModule._combine_task_result": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "task_result": "dict"
                }
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.fetch": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.async_status": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.wait_for_connection": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset[str]"
            }
        ],
        "ActionModule.DEFAULT_CONNECT_TIMEOUT": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionModule.DEFAULT_DELAY": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionModule.DEFAULT_SLEEP": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionModule.DEFAULT_TIMEOUT": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionModule.do_until_success_or_timeout": [
            {
                "type": "method",
                "args": {
                    "what": "Callable[[], object]",
                    "timeout": "int",
                    "connect_timeout": "int",
                    "what_desc": "str",
                    "sleep": "int"
                }
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.service": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.UNUSED_PARAMS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ActionModule._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.yum": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "VALID_BACKENDS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.shell": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.copy": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._remove_tempfile_if_content_defined": [
            {
                "type": "method",
                "args": {
                    "content": "str",
                    "content_tempfile": "str"
                }
            }
        ],
        "REAL_FILE_ARGS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "_create_remote_copy_args": [
            {
                "type": "func",
                "args": {
                    "module_args": "dict"
                }
            }
        ],
        "_create_remote_file_args": [
            {
                "type": "func",
                "args": {
                    "module_args": "dict"
                }
            }
        ],
        "_walk_dirs": [
            {
                "type": "func",
                "args": {
                    "topdir": "str",
                    "base_path": "str | None",
                    "local_follow": "bool",
                    "trailing_slash_detector": "C[[str], bool]"
                }
            }
        ],
        "ActionModule._ensure_invocation": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "ActionModule._create_content_tempfile": [
            {
                "type": "method",
                "args": {
                    "content": "str"
                }
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ],
        "ActionModule._copy_file": [
            {
                "type": "method",
                "args": {
                    "source_full": "str",
                    "source_rel": "str",
                    "content": "str",
                    "content_tempfile": "str",
                    "dest": "str",
                    "task_vars": "dict",
                    "follow": "bool"
                }
            }
        ]
    },
    "plugins.action.raw": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.fail": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.set_fact": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.normal": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.unarchive": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.include_vars": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.VALID_FILE_EXTENSIONS": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ActionModule.VALID_DIR_ARGUMENTS": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ActionModule.VALID_FILE_ARGUMENTS": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ActionModule.VALID_ALL": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ActionModule.depth": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionModule.matcher": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ActionModule.ignore_files": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ActionModule.return_results_as_name": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ActionModule.source_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.source_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.files_matching": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.ignore_unknown_extensions": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.valid_extensions": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ActionModule.show_content": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.included_files": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ActionModule._traverse_dir_depth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionModule._is_valid_file_ext": [
            {
                "type": "method",
                "args": {
                    "source_file": "str"
                }
            }
        ],
        "ActionModule._ignore_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "ActionModule._set_dir_defaults": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionModule._set_root_dir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionModule._set_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ],
        "ActionModule._load_files": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "validate_extensions": "bool"
                }
            }
        ],
        "ActionModule._load_files_in_dir": [
            {
                "type": "method",
                "args": {
                    "root_dir": "str",
                    "var_files": "list"
                }
            }
        ]
    },
    "plugins.action.add_host": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ActionModule.BYPASS_HOST_LOOP": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.group_by": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.uri": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.debug": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.template": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.DEFAULT_NEWLINE_SEQUENCE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.assemble": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._assemble_from_fragments": [
            {
                "type": "method",
                "args": {
                    "src_path": "str",
                    "delimiter": "str | None",
                    "compiled_regexp": "str | None",
                    "ignore_hidden": "bool",
                    "decrypt": "bool"
                }
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.assert": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.reboot": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionModule.DEFAULT_REBOOT_TIMEOUT": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionModule.DEFAULT_CONNECT_TIMEOUT": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "ActionModule.DEFAULT_PRE_REBOOT_DELAY": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionModule.DEFAULT_POST_REBOOT_DELAY": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ActionModule.DEFAULT_TEST_COMMAND": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.DEFAULT_BOOT_TIME_COMMAND": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.DEFAULT_REBOOT_MESSAGE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.DEFAULT_SHUTDOWN_COMMAND": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.DEFAULT_SHUTDOWN_COMMAND_ARGS": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule.DEFAULT_SUDOABLE": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.DEPRECATED_ARGS": [
            {
                "type": "attr",
                "anno": "dict[str, str]"
            }
        ],
        "ActionModule.BOOT_TIME_COMMANDS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ActionModule.SHUTDOWN_COMMANDS": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "ActionModule.SHUTDOWN_COMMAND_ARGS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ActionModule.TEST_COMMANDS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ActionModule.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ActionModule._shutdown_command": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ActionModule._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.deprecated_args": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionModule._get_value_from_facts": [
            {
                "type": "method",
                "args": {
                    "variable_name": "str",
                    "distribution": "str",
                    "default_value": "str"
                }
            }
        ],
        "ActionModule._check_delay": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "int"
                }
            }
        ],
        "ActionModule.post_reboot_delay": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionModule.pre_reboot_delay": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionModule.get_shutdown_command_args": [
            {
                "type": "method",
                "args": {
                    "distribution": "str"
                }
            }
        ],
        "ActionModule.do_until_success_or_timeout": [
            {
                "type": "method",
                "args": {
                    "action": "Callable",
                    "reboot_timeout": "int",
                    "action_desc": "str",
                    "distribution": "str",
                    "action_kwargs": "dict"
                }
            }
        ],
        "ActionModule.run_test_command": [
            {
                "type": "method",
                "args": {
                    "distribution": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ActionModule.get_system_boot_time": [
            {
                "type": "method",
                "args": {
                    "distribution": "str"
                }
            }
        ],
        "ActionModule.check_boot_time": [
            {
                "type": "method",
                "args": {
                    "distribution": "str",
                    "previous_boot_time": "str"
                }
            }
        ],
        "ActionModule.validate_reboot": [
            {
                "type": "method",
                "args": {
                    "distribution": "str",
                    "original_connection_timeout": "int | None",
                    "action_kwargs": "dict"
                }
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ],
        "ActionModule.get_shutdown_command": [
            {
                "type": "method",
                "args": {
                    "task_vars": "dict",
                    "distribution": "str"
                }
            }
        ],
        "ActionModule.perform_reboot": [
            {
                "type": "method",
                "args": {
                    "task_vars": "dict",
                    "distribution": "str"
                }
            }
        ],
        "ActionModule.get_distribution": [
            {
                "type": "method",
                "args": {
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ActionBase._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionBase._task": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ActionBase._connection": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ActionBase._play_context": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ActionBase._loader": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ActionBase._templar": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ActionBase._shared_loader_obj": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ActionBase._cleanup_remote_tmp": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionBase._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionBase._supports_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionBase._discovered_interpreter_key": [
            {
                "type": "attr",
                "anno": "AnsibleUnsafeText"
            }
        ],
        "ActionBase._discovered_interpreter": [
            {
                "type": "attr",
                "anno": "AnsibleUnsafeText"
            }
        ],
        "ActionBase._discovery_deprecation_warnings": [
            {
                "type": "attr",
                "anno": "Sequence[str]"
            }
        ],
        "ActionBase._discovery_warnings": [
            {
                "type": "attr",
                "anno": "Sequence[str]"
            }
        ],
        "ActionBase._display": [
            {
                "type": "attr",
                "anno": "Display"
            }
        ],
        "ActionBase._used_interpreter": [
            {
                "type": "attr",
                "anno": "AnsibleUnsafeText"
            }
        ],
        "ActionBase.__init__": [
            {
                "type": "method",
                "args": {
                    "task": "object",
                    "connection": "object",
                    "play_context": "object",
                    "loader": "object",
                    "templar": "object",
                    "shared_loader_obj": "object"
                }
            }
        ],
        "ActionBase._early_needs_tmp_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionBase._should_remove_tmp_path": [
            {
                "type": "method",
                "args": {
                    "tmp_path": "str"
                }
            }
        ],
        "ActionBase._strip_success_message": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "ActionBase._find_needle": [
            {
                "type": "method",
                "args": {
                    "dirname": "str",
                    "needle": "str"
                }
            }
        ],
        "ActionBase.get_plugin_option": [
            {
                "type": "method",
                "args": {
                    "plugin": "object",
                    "option": "str",
                    "default": "object"
                }
            }
        ],
        "ActionBase.get_shell_option": [
            {
                "type": "method",
                "args": {
                    "option": "str",
                    "default": "object"
                }
            }
        ],
        "ActionBase._get_admin_users": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionBase.get_connection_option": [
            {
                "type": "method",
                "args": {
                    "option": "str",
                    "default": "object"
                }
            }
        ],
        "ActionBase._parse_returned_data": [
            {
                "type": "method",
                "args": {
                    "res": "dict"
                }
            }
        ],
        "ActionBase._get_remote_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionBase._is_pipelining_enabled": [
            {
                "type": "method",
                "args": {
                    "module_style": "str",
                    "wrap_async": "bool"
                }
            }
        ],
        "ActionBase.get_become_option": [
            {
                "type": "method",
                "args": {
                    "option": "str",
                    "default": "object"
                }
            }
        ],
        "ActionBase._low_level_execute_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "sudoable": "bool",
                    "in_data": "str",
                    "executable": "str",
                    "encoding_errors": "str",
                    "chdir": "str"
                }
            }
        ],
        "ActionBase._remote_set_user_facl": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "user": "str",
                    "mode": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "ActionBase._remote_chown": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "user": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "ActionBase._remote_chmod": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "mode": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "ActionBase._remote_file_exists": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ActionBase._remote_expand_user": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "sudoable": "bool",
                    "pathsep": "str"
                }
            }
        ],
        "ActionBase._is_become_unprivileged": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ActionBase._fixup_perms2": [
            {
                "type": "method",
                "args": {
                    "remote_paths": "list",
                    "remote_user": "str | None",
                    "execute": "bool"
                }
            }
        ],
        "ActionBase._make_tmp_path": [
            {
                "type": "method",
                "args": {
                    "remote_user": "str | None"
                }
            }
        ],
        "ActionBase._transfer_file": [
            {
                "type": "method",
                "args": {
                    "local_path": "str",
                    "remote_path": "str"
                }
            }
        ],
        "ActionBase._transfer_data": [
            {
                "type": "method",
                "args": {
                    "remote_path": "str",
                    "data": "dict"
                }
            }
        ],
        "ActionBase._remove_tmp_path": [
            {
                "type": "method",
                "args": {
                    "tmp_path": "str"
                }
            }
        ],
        "ActionBase.cleanup": [
            {
                "type": "method",
                "args": {
                    "force": "bool"
                }
            }
        ],
        "ActionBase.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ],
        "ActionBase._update_module_args": [
            {
                "type": "method",
                "args": {
                    "module_name": "str",
                    "module_args": "dict",
                    "task_vars": "dict"
                }
            }
        ],
        "ActionBase._compute_environment_string": [
            {
                "type": "method",
                "args": {
                    "raw_environment_out": "dict"
                }
            }
        ],
        "ActionBase._configure_module": [
            {
                "type": "method",
                "args": {
                    "module_name": "str",
                    "module_args": "dict",
                    "task_vars": "dict"
                }
            }
        ],
        "ActionBase._execute_module": [
            {
                "type": "method",
                "args": {
                    "module_name": "str | None",
                    "module_args": "dict",
                    "tmp": "str | None",
                    "task_vars": "dict",
                    "persist_files": "bool",
                    "delete_remote_tmp": "bool",
                    "wrap_async": "bool"
                }
            }
        ],
        "ActionBase._get_diff_data": [
            {
                "type": "method",
                "args": {
                    "destination": "str",
                    "source": "str",
                    "task_vars": "dict",
                    "source_file": "bool"
                }
            }
        ],
        "ActionBase._execute_remote_stat": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "all_vars": "dict",
                    "follow": "bool",
                    "tmp": "str | None",
                    "checksum": "bool"
                }
            }
        ],
        "ActionBase._remote_checksum": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "all_vars": "dict",
                    "follow": "bool"
                }
            }
        ]
    },
    "plugins.action.set_stats": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.pause": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "HAS_CURSES": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "MOVE_TO_BOL": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "CLEAR_TO_EOL": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "timeout_handler": [
            {
                "type": "func",
                "args": {
                    "signum": "int",
                    "frame": "int"
                }
            }
        ],
        "ActionModule.BYPASS_HOST_LOOP": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ActionModule._c_or_a": [
            {
                "type": "method",
                "args": {
                    "stdin": "Display"
                }
            }
        ],
        "clear_line": [
            {
                "type": "func",
                "args": {
                    "stdout": "Display"
                }
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.script": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.windows_absolute_path_detection": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.package": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ActionModule.TRANSFERS_FILES": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule._supports_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.action.command": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ActionModule._supports_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ActionModule.run": [
            {
                "type": "method",
                "args": {
                    "tmp": "str | None",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "plugins.terminal": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "TerminalBase.terminal_stdout_re": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "TerminalBase.terminal_stderr_re": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "TerminalBase.ansi_re": [
            {
                "type": "attr",
                "anno": "list[re.Pattern]"
            }
        ],
        "TerminalBase.terminal_initial_prompt": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "TerminalBase.terminal_initial_answer": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "TerminalBase.terminal_inital_prompt_newline": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TerminalBase._connection": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TerminalBase.__init__": [
            {
                "type": "method",
                "args": {
                    "connection": "object"
                }
            }
        ],
        "TerminalBase._get_prompt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TerminalBase.on_open_shell": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TerminalBase.on_close_shell": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TerminalBase.on_become": [
            {
                "type": "method",
                "args": {
                    "passwd": "str"
                }
            }
        ],
        "TerminalBase.on_unbecome": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TerminalBase.on_authorize": [
            {
                "type": "method",
                "args": {
                    "passwd": "str"
                }
            }
        ],
        "TerminalBase.on_deauthorize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TerminalBase._exec_cli_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "check_rc": "bool"
                }
            }
        ]
    },
    "plugins.filter.urls": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_URLENCODE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "unicode_urldecode": [
            {
                "type": "func",
                "args": {
                    "string": "str"
                }
            }
        ],
        "do_urldecode": [
            {
                "type": "func",
                "args": {
                    "string": "str"
                }
            }
        ],
        "unicode_urlencode": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "for_qs": "bool"
                }
            }
        ],
        "do_urlencode": [
            {
                "type": "func",
                "args": {
                    "value": "str"
                }
            }
        ],
        "FilterModule.filters": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.filter.core": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "UUID_NAMESPACE_ANSIBLE": [
            {
                "type": "var",
                "anno": "uuid.UUID"
            }
        ],
        "to_nice_yaml": [
            {
                "type": "func",
                "args": {
                    "a": "dict",
                    "indent": "int",
                    "args": "str",
                    "kw": "str"
                }
            }
        ],
        "to_json": [
            {
                "type": "func",
                "args": {
                    "a": "dict",
                    "args": "str",
                    "kw": "str"
                }
            }
        ],
        "to_nice_json": [
            {
                "type": "func",
                "args": {
                    "a": "dict",
                    "indent": "int",
                    "sort_keys": "bool",
                    "args": "str",
                    "kw": "str"
                }
            }
        ],
        "to_bool": [
            {
                "type": "func",
                "args": {
                    "a": "object"
                }
            }
        ],
        "to_datetime": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "format": "str"
                }
            }
        ],
        "strftime": [
            {
                "type": "func",
                "args": {
                    "string_format": "str",
                    "second": "object"
                }
            }
        ],
        "quote": [
            {
                "type": "func",
                "args": {
                    "a": "object"
                }
            }
        ],
        "fileglob": [
            {
                "type": "func",
                "args": {
                    "pathname": "str"
                }
            }
        ],
        "regex_replace": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "pattern": "str",
                    "replacement": "str",
                    "ignorecase": "bool",
                    "multiline": "bool"
                }
            }
        ],
        "regex_findall": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "regex": "str",
                    "multiline": "bool",
                    "ignorecase": "bool"
                }
            }
        ],
        "ternary": [
            {
                "type": "func",
                "args": {
                    "value": "object",
                    "true_val": "object",
                    "false_val": "object",
                    "none_val": "object"
                }
            }
        ],
        "regex_escape": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "re_type": "str"
                }
            }
        ],
        "from_yaml": [
            {
                "type": "func",
                "args": {
                    "data": "object"
                }
            }
        ],
        "from_yaml_all": [
            {
                "type": "func",
                "args": {
                    "data": "object"
                }
            }
        ],
        "rand": [
            {
                "type": "func",
                "args": {
                    "environment": "object",
                    "end": "object",
                    "start": "int",
                    "step": "int",
                    "seed": "int"
                }
            }
        ],
        "randomize_list": [
            {
                "type": "func",
                "args": {
                    "mylist": "object",
                    "seed": "int"
                }
            }
        ],
        "to_uuid": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "namespace": "uuid.UUID"
                }
            }
        ],
        "mandatory": [
            {
                "type": "func",
                "args": {
                    "a": "object",
                    "msg": "object"
                }
            }
        ],
        "extract": [
            {
                "type": "func",
                "args": {
                    "environment": "object",
                    "item": "str",
                    "container": "object",
                    "morekeys": "object"
                }
            }
        ],
        "do_groupby": [
            {
                "type": "func",
                "args": {
                    "environment": "object",
                    "value": "object",
                    "attribute": "str"
                }
            }
        ],
        "b64encode": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "encoding": "str"
                }
            }
        ],
        "b64decode": [
            {
                "type": "func",
                "args": {
                    "string": "str",
                    "encoding": "str"
                }
            }
        ],
        "list_of_dict_key_value_elements_to_dict": [
            {
                "type": "func",
                "args": {
                    "mylist": "object",
                    "key_name": "str",
                    "value_name": "str"
                }
            }
        ],
        "path_join": [
            {
                "type": "func",
                "args": {
                    "paths": "object"
                }
            }
        ],
        "to_yaml": [
            {
                "type": "func",
                "args": {
                    "a": "dict",
                    "args": "str",
                    "kw": "str"
                }
            }
        ],
        "dict_to_list_of_dict_key_value_elements": [
            {
                "type": "func",
                "args": {
                    "mydict": "object",
                    "key_name": "str",
                    "value_name": "str"
                }
            }
        ],
        "subelements": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "subelements": "object",
                    "skip_missing": "bool"
                }
            }
        ],
        "flatten": [
            {
                "type": "func",
                "args": {
                    "mylist": "object",
                    "levels": "int"
                }
            }
        ],
        "combine": [
            {
                "type": "func",
                "args": {
                    "terms": "object",
                    "kwargs": "object"
                }
            }
        ],
        "comment": [
            {
                "type": "func",
                "args": {
                    "text": "str",
                    "style": "str",
                    "kw": "str"
                }
            }
        ],
        "get_hash": [
            {
                "type": "func",
                "args": {
                    "data": "object",
                    "hashtype": "str"
                }
            }
        ],
        "get_encrypted_password": [
            {
                "type": "func",
                "args": {
                    "password": "str",
                    "hashtype": "str",
                    "salt": "str",
                    "salt_size": "int",
                    "rounds": "int"
                }
            }
        ],
        "regex_search": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "regex": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "FilterModule.filters": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.filter.urlsplit": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "split_url": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "query": "str",
                    "alias": "str"
                }
            }
        ],
        "FilterModule.filters": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.filter": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "plugins.filter.mathstuff": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_UNIQUE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "logarithm": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "base": "float"
                }
            }
        ],
        "power": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "y": "float"
                }
            }
        ],
        "inversepower": [
            {
                "type": "func",
                "args": {
                    "x": "float",
                    "base": "int"
                }
            }
        ],
        "human_readable": [
            {
                "type": "func",
                "args": {
                    "size": "int",
                    "isbits": "bool",
                    "unit": "str"
                }
            }
        ],
        "human_to_bytes": [
            {
                "type": "func",
                "args": {
                    "size": "int",
                    "default_unit": "str",
                    "isbits": "bool"
                }
            }
        ],
        "unique": [
            {
                "type": "func",
                "args": {
                    "environment": "str",
                    "a": "Hashable",
                    "case_sensitive": "bool",
                    "attribute": "str"
                }
            }
        ],
        "union": [
            {
                "type": "func",
                "args": {
                    "environment": "str",
                    "a": "Hashable",
                    "b": "Hashable"
                }
            }
        ],
        "difference": [
            {
                "type": "func",
                "args": {
                    "environment": "str",
                    "a": "Hashable",
                    "b": "Hashable"
                }
            }
        ],
        "intersect": [
            {
                "type": "func",
                "args": {
                    "environment": "str",
                    "a": "Hashable",
                    "b": "Hashable"
                }
            }
        ],
        "symmetric_difference": [
            {
                "type": "func",
                "args": {
                    "environment": "str",
                    "a": "Hashable",
                    "b": "Hashable"
                }
            }
        ],
        "rekey_on_member": [
            {
                "type": "func",
                "args": {
                    "data": "object",
                    "key": "str",
                    "duplicates": "str"
                }
            }
        ],
        "max": [
            {
                "type": "func",
                "args": {
                    "a": "Hashable"
                }
            }
        ],
        "min": [
            {
                "type": "func",
                "args": {
                    "a": "Hashable"
                }
            }
        ],
        "FilterModule.filters": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.cliconf": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_SCP": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "enable_mode": [
            {
                "type": "func",
                "args": {
                    "func": "type[CliconfBase]"
                }
            }
        ],
        "CliconfBase.__rpc__": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "CliconfBase._connection": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "CliconfBase.history": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "CliconfBase.response_logging": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CliconfBase.__init__": [
            {
                "type": "method",
                "args": {
                    "connection": "object"
                }
            }
        ],
        "CliconfBase.get_base_rpc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.get_history": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.reset_history": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.enable_response_logging": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.disable_response_logging": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.get_config": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "flags": "str",
                    "format": "str"
                }
            }
        ],
        "CliconfBase.edit_config": [
            {
                "type": "method",
                "args": {
                    "candidate": "dict",
                    "commit": "bool",
                    "replace": "bool",
                    "diff": "bool",
                    "comment": "str"
                }
            }
        ],
        "CliconfBase.get": [
            {
                "type": "method",
                "args": {
                    "command": "str | None",
                    "prompt": "str | None",
                    "answer": "str | None",
                    "sendonly": "bool",
                    "newline": "bool",
                    "output": "str | None",
                    "check_all": "bool"
                }
            }
        ],
        "CliconfBase.get_device_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.get_capabilities": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.rollback": [
            {
                "type": "method",
                "args": {
                    "rollback_id": "str",
                    "commit": "bool"
                }
            }
        ],
        "CliconfBase.get_diff": [
            {
                "type": "method",
                "args": {
                    "candidate": "str",
                    "running": "bool",
                    "diff_match": "str",
                    "diff_ignore_lines": "str",
                    "path": "str",
                    "diff_replace": "str"
                }
            }
        ],
        "CliconfBase.run_commands": [
            {
                "type": "method",
                "args": {
                    "commands": "str",
                    "check_rc": "bool"
                }
            }
        ],
        "CliconfBase.set_cli_prompt_context": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.discard_changes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CliconfBase.commit": [
            {
                "type": "method",
                "args": {
                    "comment": "str"
                }
            }
        ],
        "CliconfBase.send_command": [
            {
                "type": "method",
                "args": {
                    "command": "str",
                    "prompt": "str",
                    "answer": "str",
                    "sendonly": "bool",
                    "newline": "bool",
                    "prompt_retry_check": "bool",
                    "check_all": "bool"
                }
            }
        ],
        "CliconfBase._update_cli_prompt_context": [
            {
                "type": "method",
                "args": {
                    "config_context": "str",
                    "exit_command": "str"
                }
            }
        ],
        "CliconfBase.copy_file": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "destination": "str",
                    "proto": "str",
                    "timeout": "int"
                }
            }
        ],
        "CliconfBase.check_edit_config_capability": [
            {
                "type": "method",
                "args": {
                    "operations": "dict",
                    "candidate": "bool",
                    "commit": "bool",
                    "replace": "bool",
                    "comment": "bool"
                }
            }
        ],
        "CliconfBase.get_file": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "destination": "str",
                    "proto": "str",
                    "timeout": "int"
                }
            }
        ],
        "CliconfBase._alarm_handler": [
            {
                "type": "method",
                "args": {
                    "signum": "int",
                    "frame": "str"
                }
            }
        ]
    },
    "plugins.lookup.together": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule._lookup_variables": [
            {
                "type": "method",
                "args": {
                    "terms": "list"
                }
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict | None",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.url": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "str",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.pipe": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.varnames": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "str",
                    "variables": "dict | None",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.indexed_items": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.basedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LookupModule.__init__": [
            {
                "type": "method",
                "args": {
                    "basedir": "str",
                    "kwargs": "object"
                }
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "object"
                }
            }
        ]
    },
    "plugins.lookup.nested": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule._lookup_variables": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "list"
                }
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "list | None",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.random_choice": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "inject": "str | None",
                    "kwargs": "object"
                }
            }
        ]
    },
    "plugins.lookup.config": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.sequence": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "NUM": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SHORTCUT": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "LookupModule.start": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LookupModule.count": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LookupModule.end": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LookupModule.stride": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LookupModule.format": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LookupModule.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LookupModule.sanity_check": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LookupModule.generate_sequence": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LookupModule.parse_simple_args": [
            {
                "type": "method",
                "args": {
                    "term": "str"
                }
            }
        ],
        "LookupModule.parse_kv_args": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "str",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.fileglob": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict | None",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.ini": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_parse_params": [
            {
                "type": "func",
                "args": {
                    "term": "str"
                }
            }
        ],
        "LookupModule.cp": [
            {
                "type": "attr",
                "anno": "configparser.ConfigParser"
            }
        ],
        "LookupModule.get_value": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "section": "str",
                    "dflt": "object",
                    "is_regexp": "bool"
                }
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "str",
                    "variables": "str",
                    "kwargs": "object"
                }
            }
        ]
    },
    "plugins.lookup.password": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DEFAULT_LENGTH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "VALID_PARAMS": [
            {
                "type": "var",
                "anno": "frozenset[str]"
            }
        ],
        "_parse_content": [
            {
                "type": "func",
                "args": {
                    "content": "str"
                }
            }
        ],
        "_format_content": [
            {
                "type": "func",
                "args": {
                    "password": "str",
                    "salt": "str",
                    "encrypt": "bool"
                }
            }
        ],
        "_get_lock": [
            {
                "type": "func",
                "args": {
                    "b_path": "bytes"
                }
            }
        ],
        "_release_lock": [
            {
                "type": "func",
                "args": {
                    "lockfile": "str"
                }
            }
        ],
        "_gen_candidate_chars": [
            {
                "type": "func",
                "args": {
                    "characters": "list"
                }
            }
        ],
        "_read_password_file": [
            {
                "type": "func",
                "args": {
                    "b_path": "bytes"
                }
            }
        ],
        "_parse_parameters": [
            {
                "type": "func",
                "args": {
                    "term": "str"
                }
            }
        ],
        "_write_password_file": [
            {
                "type": "func",
                "args": {
                    "b_path": "bytes",
                    "content": "str"
                }
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.vars": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "str",
                    "variables": "dict",
                    "kwargs": "object"
                }
            }
        ]
    },
    "plugins.lookup.subelements": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FLAGS": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.unvault": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "str",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.env": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "str",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.template": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.inventory_hostnames": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.get_hosts": [
            {
                "type": "method",
                "args": {
                    "variables": "dict",
                    "pattern": "str"
                }
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict | None",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.first_found": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.file": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.lines": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "variables": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup.csvfile": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CSVRecoder.reader": [
            {
                "type": "attr",
                "anno": "CSVReader"
            }
        ],
        "CSVRecoder.__init__": [
            {
                "type": "method",
                "args": {
                    "f": "str",
                    "encoding": "str"
                }
            }
        ],
        "CSVRecoder.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CSVReader.reader": [
            {
                "type": "attr",
                "anno": "csv.Reader"
            }
        ],
        "CSVReader.__init__": [
            {
                "type": "method",
                "args": {
                    "f": "str",
                    "dialect": "str",
                    "encoding": "str",
                    "kwds": "str"
                }
            }
        ],
        "CSVReader.__next__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CSVReader.next": [
            {
                "type": "attr",
                "anno": "type[CSVReader]"
            }
        ],
        "CSVReader.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LookupModule.read_csv": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "key": "str",
                    "delimiter": "str",
                    "encoding": "str",
                    "dflt": "str",
                    "col": "int"
                }
            }
        ],
        "CSVRecoder.__next__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CSVRecoder.next": [
            {
                "type": "attr",
                "anno": "type[bytes]"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "str",
                    "variables": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "plugins.lookup.items": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "list",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.lookup": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "LookupBase._loader": [
            {
                "type": "attr",
                "anno": "DataLoader"
            }
        ],
        "LookupBase._templar": [
            {
                "type": "attr",
                "anno": "Template"
            }
        ],
        "LookupBase._display": [
            {
                "type": "attr",
                "anno": "Display"
            }
        ],
        "LookupBase.__init__": [
            {
                "type": "method",
                "args": {
                    "loader": "DataLoader",
                    "templar": "Template",
                    "kwargs": "object"
                }
            }
        ],
        "LookupBase.run": [
            {
                "type": "method",
                "args": {
                    "terms": "str",
                    "variables": "dict | None",
                    "kwargs": "object"
                }
            }
        ],
        "LookupBase.get_basedir": [
            {
                "type": "method",
                "args": {
                    "variables": "dict"
                }
            }
        ],
        "LookupBase._flatten_hash_to_list": [
            {
                "type": "method",
                "args": {
                    "terms": "dict"
                }
            }
        ],
        "LookupBase._flatten": [
            {
                "type": "method",
                "args": {
                    "terms": "list"
                }
            }
        ],
        "LookupBase._combine": [
            {
                "type": "method",
                "args": {
                    "a": "list",
                    "b": "list"
                }
            }
        ],
        "LookupBase.find_file_in_search_path": [
            {
                "type": "method",
                "args": {
                    "myvars": "dict",
                    "subdir": "str",
                    "needle": "str",
                    "ignore_missing": "bool"
                }
            }
        ]
    },
    "plugins.lookup.list": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "Sequence",
                    "kwargs": "object"
                }
            }
        ]
    },
    "plugins.lookup.dict": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "LookupModule.run": [
            {
                "type": "method",
                "args": {
                    "terms": "dict",
                    "variables": "dict | None",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "plugins.netconf": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_NCCLIENT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "NCCLIENT_IMP_ERR": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ensure_ncclient": [
            {
                "type": "func",
                "args": {
                    "func": "type"
                }
            }
        ],
        "NetconfBase.__rpc__": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "NetconfBase._connection": [
            {
                "type": "attr",
                "anno": "AnsibleError"
            }
        ],
        "NetconfBase.__init__": [
            {
                "type": "method",
                "args": {
                    "connection": "AnsibleError"
                }
            }
        ],
        "NetconfBase.m": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetconfBase.rpc": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "NetconfBase.get_config": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "filter": "str"
                }
            }
        ],
        "NetconfBase.edit_config": [
            {
                "type": "method",
                "args": {
                    "config": "dict",
                    "format": "str",
                    "target": "str",
                    "default_operation": "str",
                    "test_option": "str",
                    "error_option": "str"
                }
            }
        ],
        "NetconfBase.copy_config": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "target": "str"
                }
            }
        ],
        "NetconfBase.dispatch": [
            {
                "type": "method",
                "args": {
                    "rpc_command": "str",
                    "source": "str",
                    "filter": "str"
                }
            }
        ],
        "NetconfBase.lock": [
            {
                "type": "method",
                "args": {
                    "target": "str"
                }
            }
        ],
        "NetconfBase.get_schema": [
            {
                "type": "method",
                "args": {
                    "identifier": "str",
                    "version": "str",
                    "format": "str"
                }
            }
        ],
        "NetconfBase.delete_config": [
            {
                "type": "method",
                "args": {
                    "target": "str"
                }
            }
        ],
        "NetconfBase.locked": [
            {
                "type": "method",
                "args": {
                    "target": "str"
                }
            }
        ],
        "NetconfBase.get_capabilities": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetconfBase.guess_network_os": [
            {
                "type": "method",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "NetconfBase.get_base_rpc": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetconfBase.put_file": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "destination": "str"
                }
            }
        ],
        "NetconfBase.fetch_file": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "destination": "str"
                }
            }
        ],
        "NetconfBase.discard_changes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetconfBase.commit": [
            {
                "type": "method",
                "args": {
                    "confirmed": "bool",
                    "timeout": "int",
                    "persist": "bool"
                }
            }
        ],
        "NetconfBase.validate": [
            {
                "type": "method",
                "args": {
                    "source": "str"
                }
            }
        ],
        "NetconfBase.get_device_operations": [
            {
                "type": "method",
                "args": {
                    "server_capabilities": "list"
                }
            }
        ],
        "NetconfBase.unlock": [
            {
                "type": "method",
                "args": {
                    "target": "str"
                }
            }
        ],
        "NetconfBase.get": [
            {
                "type": "method",
                "args": {
                    "filter": "str | tuple[str, ...]",
                    "with_defaults": "bool"
                }
            }
        ]
    },
    "plugins.shell.sh": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ShellModule.COMPATIBLE_SHELLS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ShellModule.SHELL_FAMILY": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule.ECHO": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule.COMMAND_SEP": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_EMBEDDED_PY_EOL": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_REDIRECT_ALLNULL": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_AND": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_OR": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_SUB_LEFT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_SUB_RIGHT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_GROUP_LEFT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_GROUP_RIGHT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule.checksum": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "python_interp": "str"
                }
            }
        ]
    },
    "plugins.shell.cmd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_find_unsafe": [
            {
                "type": "var",
                "anno": "re.Match[str]"
            }
        ],
        "ShellModule.COMPATIBLE_SHELLS": [
            {
                "type": "attr",
                "anno": "frozenset[str]"
            }
        ],
        "ShellModule.SHELL_FAMILY": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_REDIRECT_ALLNULL": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_AND": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._IS_WINDOWS": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ShellModule.quote": [
            {
                "type": "method",
                "args": {
                    "s": "str"
                }
            }
        ]
    },
    "plugins.shell.powershell": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_powershell_version": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_common_args": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "ShellModule.COMPATIBLE_SHELLS": [
            {
                "type": "attr",
                "anno": "frozenset[str]"
            }
        ],
        "ShellModule.SHELL_FAMILY": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_REDIRECT_ALLNULL": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._SHELL_AND": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ShellModule._IS_WINDOWS": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ShellModule.env_prefix": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "ShellModule.get_remote_filename": [
            {
                "type": "method",
                "args": {
                    "pathname": "str"
                }
            }
        ],
        "ShellModule.chmod": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "mode": "str"
                }
            }
        ],
        "ShellModule.chown": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "user": "str"
                }
            }
        ],
        "ShellModule.set_user_facl": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "user": "str",
                    "mode": "str"
                }
            }
        ],
        "ShellModule.wrap_for_exec": [
            {
                "type": "method",
                "args": {
                    "cmd": "str"
                }
            }
        ],
        "ShellModule._encode_script": [
            {
                "type": "method",
                "args": {
                    "script": "str",
                    "as_list": "bool",
                    "strict_mode": "bool",
                    "preserve_rc": "bool"
                }
            }
        ],
        "ShellModule._escape": [
            {
                "type": "method",
                "args": {
                    "value": "str",
                    "include_vars": "bool"
                }
            }
        ],
        "ShellModule._unquote": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "ShellModule.build_module_command": [
            {
                "type": "method",
                "args": {
                    "env_string": "str",
                    "shebang": "str",
                    "cmd": "str",
                    "arg_path": "str"
                }
            }
        ],
        "ShellModule.checksum": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ShellModule.exists": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ShellModule.expand_user": [
            {
                "type": "method",
                "args": {
                    "user_home_path": "str",
                    "username": "str"
                }
            }
        ],
        "ShellModule.remove": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "recurse": "bool"
                }
            }
        ],
        "ShellModule.path_has_trailing_slash": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ShellModule.join_path": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ShellModule.mkdtemp": [
            {
                "type": "method",
                "args": {
                    "basefile": "str | None",
                    "system": "bool",
                    "mode": "str",
                    "tmpdir": "str"
                }
            }
        ],
        "_parse_clixml": [
            {
                "type": "func",
                "args": {
                    "data": "bytes",
                    "stream": "str"
                }
            }
        ]
    },
    "plugins.shell": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_USER_HOME_PATH_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "ShellBase.env": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ShellBase.tmpdir": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ShellBase.executable": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ShellBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ShellBase._generate_temp_dir_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ShellBase.join_path": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "ShellBase.get_remote_filename": [
            {
                "type": "method",
                "args": {
                    "pathname": "str"
                }
            }
        ],
        "ShellBase.path_has_trailing_slash": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ShellBase.remove": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "recurse": "bool"
                }
            }
        ],
        "ShellBase.exists": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ShellBase.expand_user": [
            {
                "type": "method",
                "args": {
                    "user_home_path": "str",
                    "username": "str"
                }
            }
        ],
        "ShellBase.pwd": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ShellBase.append_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "cmd_to_append": "str"
                }
            }
        ],
        "ShellBase.wrap_for_exec": [
            {
                "type": "method",
                "args": {
                    "cmd": "str"
                }
            }
        ],
        "ShellBase.quote": [
            {
                "type": "method",
                "args": {
                    "cmd": "str"
                }
            }
        ],
        "ShellBase.set_user_facl": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "user": "str",
                    "mode": "str"
                }
            }
        ],
        "ShellBase.chown": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "user": "str"
                }
            }
        ],
        "ShellBase.chmod": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "mode": "str"
                }
            }
        ],
        "ShellBase.build_module_command": [
            {
                "type": "method",
                "args": {
                    "env_string": "str",
                    "shebang": "str",
                    "cmd": "str",
                    "arg_path": "str"
                }
            }
        ],
        "ShellBase.env_prefix": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "ShellBase.mkdtemp": [
            {
                "type": "method",
                "args": {
                    "basefile": "str | None",
                    "system": "bool",
                    "mode": "int",
                    "tmpdir": "str | None"
                }
            }
        ],
        "ShellBase._normalize_system_tmpdirs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ShellBase.set_options": [
            {
                "type": "method",
                "args": {
                    "task_keys": "str",
                    "var_options": "str",
                    "direct": "dict"
                }
            }
        ]
    },
    "plugins.loader": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "imp": [
            {
                "type": "var",
                "anno": "imp"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "PluginLoader.class_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PluginLoader.base_class": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PluginLoader.package": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PluginLoader.subdir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PluginLoader.aliases": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PluginLoader.config": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PluginLoader._extra_dirs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PluginLoader._module_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PluginLoader._paths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PluginLoader._plugin_path_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PluginLoader._searched_paths": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "PluginLoader.__init__": [
            {
                "type": "method",
                "args": {
                    "class_name": "str",
                    "package": "str",
                    "config": "list",
                    "subdir": "str",
                    "aliases": "dict",
                    "required_base_class": "str"
                }
            }
        ],
        "PluginLoader._clear_caches": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PluginLoader.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PluginLoader.package_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PluginLoader._update_object": [
            {
                "type": "method",
                "args": {
                    "obj": "object",
                    "name": "str",
                    "path": "str"
                }
            }
        ],
        "_configure_collection_loader": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "fragment_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "action_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "cache_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "callback_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "connection_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "shell_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "module_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "module_utils_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "ps_module_utils_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "lookup_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "filter_loader": [
            {
                "type": "var",
                "anno": "Jinja2Loader"
            }
        ],
        "test_loader": [
            {
                "type": "var",
                "anno": "Jinja2Loader"
            }
        ],
        "strategy_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "terminal_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "vars_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "cliconf_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "netconf_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "inventory_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "httpapi_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "become_loader": [
            {
                "type": "var",
                "anno": "PluginLoader"
            }
        ],
        "PluginLoader._find_fq_plugin": [
            {
                "type": "method",
                "args": {
                    "fq_name": "str",
                    "extension": "str"
                }
            }
        ],
        "PluginLoader._all_directories": [
            {
                "type": "method",
                "args": {
                    "dir": "str"
                }
            }
        ],
        "PluginLoader._get_package_paths": [
            {
                "type": "method",
                "args": {
                    "subdirs": "bool"
                }
            }
        ],
        "PluginLoader._get_paths": [
            {
                "type": "method",
                "args": {
                    "subdirs": "bool"
                }
            }
        ],
        "PluginLoader.format_paths": [
            {
                "type": "method",
                "args": {
                    "paths": "list"
                }
            }
        ],
        "PluginLoader.print_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PluginLoader._load_module_source": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "path": "str"
                }
            }
        ],
        "PluginLoader._load_config_defs": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "module": "object",
                    "path": "str"
                }
            }
        ],
        "PluginLoader.get": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Jinja2Loader.get": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "PluginLoader._display_plugin_load": [
            {
                "type": "method",
                "args": {
                    "class_name": "str",
                    "name": "str",
                    "searched_paths": "list",
                    "path": "str",
                    "found_in_cache": "bool",
                    "class_only": "bool"
                }
            }
        ],
        "PluginLoader.add_directory": [
            {
                "type": "method",
                "args": {
                    "directory": "str",
                    "with_subdir": "bool"
                }
            }
        ],
        "add_dirs_to_loader": [
            {
                "type": "func",
                "args": {
                    "which_loader": "str",
                    "paths": "list"
                }
            }
        ],
        "get_all_plugin_loaders": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "add_all_plugin_dirs": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "_load_plugin_filter": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_PLUGIN_FILTERS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "PluginLoader.all": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Jinja2Loader.all": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "PluginLoader._find_plugin_legacy": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "ignore_deprecated": "bool",
                    "check_aliases": "bool",
                    "suffix": "str"
                }
            }
        ],
        "PluginLoader.find_plugin_with_name": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "mod_type": "str",
                    "ignore_deprecated": "bool",
                    "check_aliases": "bool",
                    "collection_list": "list"
                }
            }
        ],
        "PluginLoader.find_plugin": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "mod_type": "str",
                    "ignore_deprecated": "bool",
                    "check_aliases": "bool",
                    "collection_list": "list"
                }
            }
        ],
        "Jinja2Loader.find_plugin": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "collection_list": "list"
                }
            }
        ],
        "PluginLoader.has_plugin": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "collection_list": "list"
                }
            }
        ],
        "PluginLoader.__contains__": [
            {
                "type": "attr",
                "anno": "C[[str], bool]"
            }
        ],
        "PluginLoader.__setstate__": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "get_shell_plugin": [
            {
                "type": "func",
                "args": {
                    "shell_type": "str",
                    "executable": "str"
                }
            }
        ]
    },
    "plugins.strategy.free": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "StrategyModule.ALLOW_BASE_THROTTLING": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyModule._host_pinned": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyModule.__init__": [
            {
                "type": "method",
                "args": {
                    "tqm": "TaskQueueManager"
                }
            }
        ],
        "StrategyModule._filter_notified_hosts": [
            {
                "type": "method",
                "args": {
                    "notified_hosts": "list"
                }
            }
        ],
        "StrategyModule._filter_notified_failed_hosts": [
            {
                "type": "method",
                "args": {
                    "iterator": "PlayIterator",
                    "notified_hosts": "list"
                }
            }
        ],
        "StrategyModule.run": [
            {
                "type": "method",
                "args": {
                    "iterator": "PlayIterator",
                    "play_context": "C"
                }
            }
        ]
    },
    "plugins.strategy.linear": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "Templar"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "StrategyModule.noop_task": [
            {
                "type": "attr",
                "anno": "Task | None"
            }
        ],
        "StrategyModule._replace_with_noop": [
            {
                "type": "method",
                "args": {
                    "target": "Block"
                }
            }
        ],
        "StrategyModule._create_noop_block_from": [
            {
                "type": "method",
                "args": {
                    "original_block": "Block",
                    "parent": "Block"
                }
            }
        ],
        "StrategyModule._prepare_and_create_noop_block_from": [
            {
                "type": "method",
                "args": {
                    "original_block": "Block",
                    "parent": "Block",
                    "iterator": "PlayIterator"
                }
            }
        ],
        "StrategyModule._get_next_task_lockstep": [
            {
                "type": "method",
                "args": {
                    "hosts": "list",
                    "iterator": "PlayIterator"
                }
            }
        ],
        "StrategyModule.run": [
            {
                "type": "method",
                "args": {
                    "iterator": "PlayIterator",
                    "play_context": "PlayContext"
                }
            }
        ]
    },
    "plugins.strategy.host_pinned": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "StrategyModule._host_pinned": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyModule.__init__": [
            {
                "type": "method",
                "args": {
                    "tqm": "FreeStrategyModule"
                }
            }
        ]
    },
    "plugins.strategy.debug": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "StrategyModule.debugger_active": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyModule.__init__": [
            {
                "type": "method",
                "args": {
                    "tqm": "cmd.Parameter"
                }
            }
        ]
    },
    "plugins.strategy": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "ALWAYS_DELEGATE_FACT_PREFIXES": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "_sentinel": [
            {
                "type": "var",
                "anno": "StrategySentinel"
            }
        ],
        "StrategyBase.ALLOW_BASE_THROTTLING": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyBase._tqm": [
            {
                "type": "attr",
                "anno": "TaskQueueManager"
            }
        ],
        "StrategyBase._inventory": [
            {
                "type": "attr",
                "anno": "InventoryManager"
            }
        ],
        "StrategyBase._workers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "StrategyBase._variable_manager": [
            {
                "type": "attr",
                "anno": "VariableManager"
            }
        ],
        "StrategyBase._loader": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "StrategyBase._final_q": [
            {
                "type": "attr",
                "anno": "threading.Queue"
            }
        ],
        "StrategyBase._step": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyBase._diff": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyBase.flush_cache": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyBase._queued_task_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StrategyBase._display": [
            {
                "type": "attr",
                "anno": "Display"
            }
        ],
        "StrategyBase._pending_results": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "StrategyBase._cur_worker": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "StrategyBase._blocked_hosts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StrategyBase._flushed_hosts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StrategyBase._results": [
            {
                "type": "attr",
                "anno": "deque"
            }
        ],
        "StrategyBase._results_lock": [
            {
                "type": "attr",
                "anno": "Lock"
            }
        ],
        "StrategyBase._results_thread": [
            {
                "type": "attr",
                "anno": "threading.Thread"
            }
        ],
        "StrategyBase._active_connections": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "StrategyBase._hosts_cache": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "StrategyBase._hosts_cache_all": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "StrategyBase.debugger_active": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "StrategyBase._filter_notified_failed_hosts": [
            {
                "type": "method",
                "args": {
                    "iterator": "PlayIterator",
                    "notified_hosts": "list"
                }
            }
        ],
        "StrategyBase._filter_notified_hosts": [
            {
                "type": "method",
                "args": {
                    "notified_hosts": "list"
                }
            }
        ],
        "NextAction.REDO": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NextAction.CONTINUE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NextAction.EXIT": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NextAction.result": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "NextAction.__init__": [
            {
                "type": "method",
                "args": {
                    "result": "int"
                }
            }
        ],
        "Debugger.prompt_continuous": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Debugger.prompt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Debugger.intro": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Debugger.scope": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Debugger.next_action": [
            {
                "type": "attr",
                "anno": "NextAction"
            }
        ],
        "Debugger.__init__": [
            {
                "type": "method",
                "args": {
                    "task": "Task",
                    "host": "Host",
                    "task_vars": "dict",
                    "play_context": "str",
                    "result": "TaskResult",
                    "next_action": "NextAction"
                }
            }
        ],
        "Debugger.cmdloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Debugger.do_h": [
            {
                "type": "attr",
                "anno": "cmd.Cmd"
            }
        ],
        "Debugger.do_redo": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "Debugger.do_r": [
            {
                "type": "attr",
                "anno": "type[cmd.Cmd]"
            }
        ],
        "Debugger.do_continue": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "Debugger.do_c": [
            {
                "type": "attr",
                "anno": "C"
            }
        ],
        "StrategyBase._cond_not_supported_warn": [
            {
                "type": "method",
                "args": {
                    "task_name": "str"
                }
            }
        ],
        "SharedPluginLoaderObj": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "StrategyBase.get_hosts_left": [
            {
                "type": "method",
                "args": {
                    "iterator": "PlayIterator"
                }
            }
        ],
        "StrategyBase.get_task_hosts": [
            {
                "type": "method",
                "args": {
                    "iterator": "Host",
                    "task_host": "Host",
                    "task": "Task"
                }
            }
        ],
        "StrategyBase._set_hosts_cache": [
            {
                "type": "method",
                "args": {
                    "play": "Host",
                    "refresh": "bool"
                }
            }
        ],
        "StrategyBase.get_failed_hosts": [
            {
                "type": "method",
                "args": {
                    "play": "Host"
                }
            }
        ],
        "StrategyBase.get_hosts_remaining": [
            {
                "type": "method",
                "args": {
                    "play": "Host"
                }
            }
        ],
        "StrategyBase.add_tqm_variables": [
            {
                "type": "method",
                "args": {
                    "vars": "dict",
                    "play": "Host"
                }
            }
        ],
        "StrategyBase._copy_included_file": [
            {
                "type": "method",
                "args": {
                    "included_file": "IncludedFile"
                }
            }
        ],
        "StrategyBase.update_active_connections": [
            {
                "type": "method",
                "args": {
                    "results": "list"
                }
            }
        ],
        "StrategyBase.get_delegated_hosts": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "task": "Task"
                }
            }
        ],
        "StrategyBase._set_always_delegated_facts": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "task": "Task"
                }
            }
        ],
        "results_thread_main": [
            {
                "type": "func",
                "args": {
                    "strategy": "StrategyBase"
                }
            }
        ],
        "Debugger.execute": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Debugger.default": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "Debugger.evaluate": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Debugger.do_pprint": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "Debugger.do_p": [
            {
                "type": "attr",
                "anno": "Callable[[str], None]"
            }
        ],
        "Debugger.do_quit": [
            {
                "type": "method",
                "args": {
                    "args": "list"
                }
            }
        ],
        "Debugger.do_q": [
            {
                "type": "attr",
                "anno": "Callable[[list], bool]"
            }
        ],
        "Debugger.do_EOF": [
            {
                "type": "method",
                "args": {
                    "args": "list"
                }
            }
        ],
        "StrategyBase.__init__": [
            {
                "type": "method",
                "args": {
                    "tqm": "TaskQueueManager"
                }
            }
        ],
        "StrategyBase.cleanup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "StrategyBase._take_step": [
            {
                "type": "method",
                "args": {
                    "task": "Task",
                    "host": "str"
                }
            }
        ],
        "debug_closure": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "StrategyBase._load_included_file": [
            {
                "type": "method",
                "args": {
                    "included_file": "IncludedFile",
                    "iterator": "PlayIterator",
                    "is_handler": "bool"
                }
            }
        ],
        "StrategyBase._queue_task": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "task": "Host",
                    "task_vars": "dict",
                    "play_context": "str"
                }
            }
        ],
        "StrategyBase._add_group": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "result_item": "dict"
                }
            }
        ],
        "StrategyBase._add_host": [
            {
                "type": "method",
                "args": {
                    "host_info": "dict",
                    "iterator": "Host"
                }
            }
        ],
        "StrategyBase._process_pending_results": [
            {
                "type": "method",
                "args": {
                    "iterator": "Host",
                    "one_pass": "bool",
                    "max_passes": "int"
                }
            }
        ],
        "StrategyBase._wait_on_pending_results": [
            {
                "type": "method",
                "args": {
                    "iterator": "Host"
                }
            }
        ],
        "StrategyBase._wait_on_handler_results": [
            {
                "type": "method",
                "args": {
                    "iterator": "PlayIterator",
                    "handler": "Host",
                    "notified_hosts": "list"
                }
            }
        ],
        "StrategyBase._do_handler_run": [
            {
                "type": "method",
                "args": {
                    "handler": "Host",
                    "handler_name": "str",
                    "iterator": "PlayIterator",
                    "play_context": "str",
                    "notified_hosts": "list"
                }
            }
        ],
        "StrategyBase.run_handlers": [
            {
                "type": "method",
                "args": {
                    "iterator": "PlayIterator",
                    "play_context": "str"
                }
            }
        ],
        "StrategyBase.run": [
            {
                "type": "method",
                "args": {
                    "iterator": "PlayIterator",
                    "play_context": "str",
                    "result": "int"
                }
            }
        ],
        "Debugger.do_update_task": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "Debugger.do_u": [
            {
                "type": "attr",
                "anno": "type[cmd.Cmd]"
            }
        ],
        "StrategyBase._execute_meta": [
            {
                "type": "method",
                "args": {
                    "task": "Task",
                    "play_context": "C",
                    "iterator": "PlayIterator",
                    "target_host": "Host"
                }
            }
        ]
    },
    "plugins.inventory.auto": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule.verify_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "dict",
                    "loader": "PluginLoader",
                    "path": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.inventory.yaml": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "NoneType": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryModule._parse_host": [
            {
                "type": "method",
                "args": {
                    "host_pattern": "str"
                }
            }
        ],
        "InventoryModule.verify_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "InventoryModule._parse_group": [
            {
                "type": "method",
                "args": {
                    "group": "str",
                    "group_data": "MutableMapping"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "path": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.inventory.toml": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "MutableMapping[str, str]"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAS_TOML": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "WARNING_MSG": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "convert_yaml_objects_to_native": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "toml_dumps": [
            {
                "type": "func",
                "args": {
                    "data": "object"
                }
            }
        ],
        "InventoryModule._load_file": [
            {
                "type": "method",
                "args": {
                    "file_name": "str"
                }
            }
        ],
        "InventoryModule.verify_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "AnsibleTomlEncoder.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "kwargs": "dict"
                }
            }
        ],
        "InventoryModule._parse_group": [
            {
                "type": "method",
                "args": {
                    "group": "str",
                    "group_data": "MutableMapping"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "path": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.inventory.generator": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryModule.verify_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "InventoryModule.template": [
            {
                "type": "method",
                "args": {
                    "pattern": "str",
                    "variables": "dict"
                }
            }
        ],
        "InventoryModule.add_parents": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "child": "dict",
                    "parents": "list",
                    "template_vars": "dict"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "path": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.inventory.advanced_host_list": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule.verify_file": [
            {
                "type": "method",
                "args": {
                    "host_list": "str"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "host_list": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.inventory.ini": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule._COMMENT_MARKERS": [
            {
                "type": "attr",
                "anno": "frozenset[str]"
            }
        ],
        "InventoryModule.b_COMMENT_MARKERS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "InventoryModule.patterns": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InventoryModule._filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryModule.lineno": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "InventoryModule._raise_error": [
            {
                "type": "method",
                "args": {
                    "message": "str"
                }
            }
        ],
        "InventoryModule._parse_value": [
            {
                "type": "method",
                "args": {
                    "v": "str"
                }
            }
        ],
        "InventoryModule._parse_variable_definition": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "InventoryModule._compile_patterns": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryModule._expand_hostpattern": [
            {
                "type": "method",
                "args": {
                    "hostpattern": "str"
                }
            }
        ],
        "InventoryModule._parse_host_definition": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "InventoryModule._parse_group_name": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "InventoryModule._add_pending_children": [
            {
                "type": "method",
                "args": {
                    "group": "str",
                    "pending": "dict"
                }
            }
        ],
        "InventoryModule._parse": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "lines": "list"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "path": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.inventory.constructed": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule._cache": [
            {
                "type": "attr",
                "anno": "FactCache"
            }
        ],
        "InventoryModule.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryModule.verify_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "path": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.inventory.host_list": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule.verify_file": [
            {
                "type": "method",
                "args": {
                    "host_list": "str"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "host_list": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.inventory": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "to_safe_group_name": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "detect_range": [
            {
                "type": "func",
                "args": {
                    "line": "str"
                }
            }
        ],
        "BaseInventoryPlugin.TYPE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseInventoryPlugin._sanitize_group_name": [
            {
                "type": "attr",
                "anno": "Callable[[str], str]"
            }
        ],
        "BaseInventoryPlugin._options": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BaseInventoryPlugin.inventory": [
            {
                "type": "attr",
                "anno": "Cacheable"
            }
        ],
        "BaseInventoryPlugin.display": [
            {
                "type": "attr",
                "anno": "Display"
            }
        ],
        "BaseInventoryPlugin.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseInventoryPlugin.loader": [
            {
                "type": "attr",
                "anno": "PluginLoader"
            }
        ],
        "BaseInventoryPlugin.templar": [
            {
                "type": "attr",
                "anno": "Templar"
            }
        ],
        "BaseInventoryPlugin.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "path": "str",
                    "cache": "bool"
                }
            }
        ],
        "BaseInventoryPlugin._cache": [
            {
                "type": "attr",
                "anno": "CacheObject"
            }
        ],
        "BaseFileInventoryPlugin.TYPE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseFileInventoryPlugin.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DeprecatedCache.real_cacheable": [
            {
                "type": "attr",
                "anno": "Cacheable"
            }
        ],
        "DeprecatedCache.__init__": [
            {
                "type": "method",
                "args": {
                    "real_cacheable": "Cacheable"
                }
            }
        ],
        "Cacheable._cache": [
            {
                "type": "attr",
                "anno": "CacheObject"
            }
        ],
        "Cacheable.cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseInventoryPlugin._consume_options": [
            {
                "type": "method",
                "args": {
                    "data": "Mapping[str, object]"
                }
            }
        ],
        "expand_hostname_range": [
            {
                "type": "func",
                "args": {
                    "line": "str"
                }
            }
        ],
        "BaseInventoryPlugin._expand_hostpattern": [
            {
                "type": "method",
                "args": {
                    "hostpattern": "str"
                }
            }
        ],
        "get_cache_plugin": [
            {
                "type": "func",
                "args": {
                    "plugin_name": "str",
                    "kwargs": "object"
                }
            }
        ],
        "DeprecatedCache.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "DeprecatedCache.get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "Cacheable.update_cache_if_changed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Cacheable.set_cache_plugin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DeprecatedCache.set": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "BaseInventoryPlugin.verify_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "Cacheable.clear_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Cacheable._get_cache_prefix": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "Cacheable.get_cache_key": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "BaseInventoryPlugin._populate_host_vars": [
            {
                "type": "method",
                "args": {
                    "hosts": "set[str]",
                    "variables": "dict",
                    "group": "str",
                    "port": "int"
                }
            }
        ],
        "Cacheable.load_cache_plugin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseInventoryPlugin._read_config_data": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "Constructable._compose": [
            {
                "type": "method",
                "args": {
                    "template": "str",
                    "variables": "dict"
                }
            }
        ],
        "Constructable._set_composite_vars": [
            {
                "type": "method",
                "args": {
                    "compose": "str",
                    "variables": "dict",
                    "host": "str",
                    "strict": "bool"
                }
            }
        ],
        "Constructable._add_host_to_keyed_groups": [
            {
                "type": "method",
                "args": {
                    "keys": "dict",
                    "variables": "dict",
                    "host": "str",
                    "strict": "bool"
                }
            }
        ],
        "Constructable._add_host_to_composed_groups": [
            {
                "type": "method",
                "args": {
                    "groups": "dict",
                    "variables": "dict",
                    "host": "str",
                    "strict": "bool"
                }
            }
        ]
    },
    "plugins.inventory.script": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "InventoryModule.NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryModule._hosts": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "InventoryModule.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryModule.verify_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "InventoryModule._parse_group": [
            {
                "type": "method",
                "args": {
                    "group": "str",
                    "data": "dict"
                }
            }
        ],
        "InventoryModule.get_host_variables": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "host": "str"
                }
            }
        ],
        "InventoryModule.parse": [
            {
                "type": "method",
                "args": {
                    "inventory": "Cacheable",
                    "loader": "PluginLoader",
                    "path": "str",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.cache.base": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "plugins.cache.memory": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CacheModule._cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CacheModule.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "CacheModule.set": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "CacheModule.contains": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CacheModule.delete": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CacheModule.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CacheModule.__setstate__": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "CacheModule.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CacheModule.get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CacheModule.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CacheModule.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.cache.jsonfile": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CacheModule._load": [
            {
                "type": "method",
                "args": {
                    "filepath": "str"
                }
            }
        ],
        "CacheModule._dump": [
            {
                "type": "method",
                "args": {
                    "value": "dict",
                    "filepath": "str"
                }
            }
        ]
    },
    "plugins.cache": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "BaseCacheModule._display": [
            {
                "type": "attr",
                "anno": "Display"
            }
        ],
        "BaseCacheModule._load_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseCacheModule.get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "BaseCacheModule.set": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "BaseCacheModule.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseCacheModule.contains": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "BaseCacheModule.delete": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "BaseCacheModule.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseCacheModule.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseFileCacheModule._cache_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseFileCacheModule._timeout": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "BaseFileCacheModule.plugin_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseFileCacheModule._cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "BaseFileCacheModule._get_cache_connection": [
            {
                "type": "method",
                "args": {
                    "source": "str"
                }
            }
        ],
        "BaseFileCacheModule.validate_cache_connection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseFileCacheModule.delete": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "BaseFileCacheModule._load": [
            {
                "type": "method",
                "args": {
                    "filepath": "str"
                }
            }
        ],
        "BaseFileCacheModule._dump": [
            {
                "type": "method",
                "args": {
                    "value": "str",
                    "filepath": "str"
                }
            }
        ],
        "CachePluginAdjudicator._cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CachePluginAdjudicator._retrieved": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CachePluginAdjudicator._plugin": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CachePluginAdjudicator._plugin_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CachePluginAdjudicator.__init__": [
            {
                "type": "method",
                "args": {
                    "plugin_name": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "CachePluginAdjudicator.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CachePluginAdjudicator.items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CachePluginAdjudicator.values": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CachePluginAdjudicator.pop": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "args": "str"
                }
            }
        ],
        "CachePluginAdjudicator.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CachePluginAdjudicator.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "BaseFileCacheModule.has_expired": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "BaseFileCacheModule.contains": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CachePluginAdjudicator._do_load_key": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "BaseFileCacheModule.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseFileCacheModule.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CachePluginAdjudicator.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CachePluginAdjudicator.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CachePluginAdjudicator.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseFileCacheModule.set": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "FactCache.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "CachePluginAdjudicator.set_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CachePluginAdjudicator.update_cache_if_changed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseFileCacheModule.get": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CachePluginAdjudicator.get": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "default": "object"
                }
            }
        ],
        "CachePluginAdjudicator.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CachePluginAdjudicator.update": [
            {
                "type": "method",
                "args": {
                    "value": "dict"
                }
            }
        ],
        "BaseFileCacheModule.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "CachePluginAdjudicator.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "CachePluginAdjudicator.load_whole_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseFileCacheModule.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseCacheModule.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ]
    },
    "plugins": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "MODULE_CACHE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "PATH_CACHE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "PLUGIN_PATH_CACHE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "get_plugin_class": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "AnsiblePlugin.allow_extras": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsiblePlugin._options": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsiblePlugin.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsiblePlugin.set_option": [
            {
                "type": "method",
                "args": {
                    "option": "str",
                    "value": "object"
                }
            }
        ],
        "AnsiblePlugin.set_options": [
            {
                "type": "method",
                "args": {
                    "task_keys": "dict",
                    "var_options": "dict",
                    "direct": "dict"
                }
            }
        ],
        "AnsiblePlugin.has_option": [
            {
                "type": "method",
                "args": {
                    "option": "str"
                }
            }
        ],
        "AnsiblePlugin._check_required": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsiblePlugin.get_option": [
            {
                "type": "method",
                "args": {
                    "option": "str",
                    "hostvars": "dict"
                }
            }
        ]
    },
    "plugins.vars.host_group_vars": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "FOUND": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "VarsModule.REQUIRES_WHITELIST": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VarsModule.get_vars": [
            {
                "type": "method",
                "args": {
                    "loader": "TaskLoader",
                    "path": "str",
                    "entities": "dict",
                    "cache": "bool"
                }
            }
        ]
    },
    "plugins.vars": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "BaseVarsPlugin._display": [
            {
                "type": "attr",
                "anno": "Display"
            }
        ],
        "BaseVarsPlugin.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseVarsPlugin._basedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseVarsPlugin.get_vars": [
            {
                "type": "method",
                "args": {
                    "loader": "str",
                    "path": "str",
                    "entities": "dict"
                }
            }
        ]
    },
    "plugins.httpapi": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HttpApiBase.connection": [
            {
                "type": "attr",
                "anno": "Connection"
            }
        ],
        "HttpApiBase._become": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HttpApiBase._become_pass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HttpApiBase.__init__": [
            {
                "type": "method",
                "args": {
                    "connection": "Connection"
                }
            }
        ],
        "HttpApiBase.login": [
            {
                "type": "method",
                "args": {
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "HttpApiBase.logout": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HttpApiBase.send_request": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "message_kwargs": "dict"
                }
            }
        ],
        "HttpApiBase.update_auth": [
            {
                "type": "method",
                "args": {
                    "response": "Any",
                    "response_text": "str"
                }
            }
        ],
        "HttpApiBase.handle_httperror": [
            {
                "type": "method",
                "args": {
                    "exc": "Exception"
                }
            }
        ],
        "HttpApiBase.set_become": [
            {
                "type": "method",
                "args": {
                    "become_context": "AnsiblePlugin"
                }
            }
        ]
    },
    "plugins.doc_fragments.return_common": {
        "ModuleDocFragment.RETURN": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.backup": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.url": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.inventory_cache": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.template_common": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.validate": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.shell_windows": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.default_callback": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.vars_plugin_staging": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.shell_common": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.decrypt": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.url_windows": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.constructed": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.doc_fragments.files": {
        "ModuleDocFragment.DOCUMENTATION": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "plugins.become.runas": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "BecomeModule.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeModule.build_become_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "shell": "object"
                }
            }
        ]
    },
    "plugins.become.su": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "BecomeModule.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeModule.fail": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "BecomeModule.SU_PROMPT_LOCALIZATIONS": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BecomeModule.prompt": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BecomeModule.build_become_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "shell": "object"
                }
            }
        ],
        "BecomeModule.check_password_prompt": [
            {
                "type": "method",
                "args": {
                    "b_output": "str"
                }
            }
        ]
    },
    "plugins.become.sudo": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "BecomeModule.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeModule.fail": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeModule.missing": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeModule.prompt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeModule.build_become_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "shell": "object"
                }
            }
        ]
    },
    "plugins.become": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_gen_id": [
            {
                "type": "func",
                "args": {
                    "length": "int"
                }
            }
        ],
        "BecomeBase.name": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "BecomeBase.fail": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "BecomeBase.missing": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "BecomeBase.require_tty": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BecomeBase.prompt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeBase._id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeBase.success": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BecomeBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BecomeBase._build_success_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "shell": "object",
                    "noexe": "bool"
                }
            }
        ],
        "BecomeBase.build_become_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "shell": "object"
                }
            }
        ],
        "BecomeBase.check_success": [
            {
                "type": "method",
                "args": {
                    "b_output": "str"
                }
            }
        ],
        "BecomeBase.check_password_prompt": [
            {
                "type": "method",
                "args": {
                    "b_output": "str"
                }
            }
        ],
        "BecomeBase._check_password_error": [
            {
                "type": "method",
                "args": {
                    "b_out": "bytes",
                    "msg": "str"
                }
            }
        ],
        "BecomeBase.check_incorrect_password": [
            {
                "type": "method",
                "args": {
                    "b_output": "bytes"
                }
            }
        ],
        "BecomeBase.check_missing_password": [
            {
                "type": "method",
                "args": {
                    "b_output": "bytes"
                }
            }
        ],
        "BecomeBase.get_option": [
            {
                "type": "method",
                "args": {
                    "option": "str",
                    "hostvars": "dict",
                    "playcontext": "object"
                }
            }
        ],
        "BecomeBase.expect_prompt": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "plugins.callback.default": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "COMPAT_OPTIONS": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "CallbackModule.CALLBACK_VERSION": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CallbackModule.CALLBACK_TYPE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._play": [
            {
                "type": "attr",
                "anno": "Play"
            }
        ],
        "CallbackModule._last_task_banner": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CallbackModule._last_task_name": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CallbackModule._task_type_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CallbackModule.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackModule.v2_playbook_on_no_hosts_remaining": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackModule.v2_playbook_on_notify": [
            {
                "type": "method",
                "args": {
                    "handler": "object",
                    "host": "str"
                }
            }
        ],
        "CallbackModule.v2_runner_retry": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_start": [
            {
                "type": "method",
                "args": {
                    "playbook": "context.Playbook"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_stats": [
            {
                "type": "method",
                "args": {
                    "stats": "aggregate.AggregateStats"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_include": [
            {
                "type": "method",
                "args": {
                    "included_file": "IncludedFile"
                }
            }
        ],
        "CallbackModule.v2_runner_on_start": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "task": "str"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_no_hosts_matched": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackModule.set_options": [
            {
                "type": "method",
                "args": {
                    "task_keys": "str",
                    "var_options": "str",
                    "direct": "dict"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_play_start": [
            {
                "type": "method",
                "args": {
                    "play": "Play"
                }
            }
        ],
        "CallbackModule._print_task_banner": [
            {
                "type": "method",
                "args": {
                    "task": "Task"
                }
            }
        ],
        "CallbackModule.v2_runner_item_on_skipped": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_runner_item_on_failed": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_runner_item_on_ok": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackModule.v2_on_file_diff": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule._task_start": [
            {
                "type": "method",
                "args": {
                    "task": "Task",
                    "prefix": "str"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_handler_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "Task"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_cleanup_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "Task"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "Task",
                    "is_conditional": "bool"
                }
            }
        ],
        "CallbackModule.v2_runner_on_unreachable": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_runner_on_skipped": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_runner_on_ok": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackModule.v2_runner_on_failed": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "ignore_errors": "bool"
                }
            }
        ]
    },
    "plugins.callback.oneline": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_VERSION": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CallbackModule.CALLBACK_TYPE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._command_generic_msg": [
            {
                "type": "method",
                "args": {
                    "hostname": "str",
                    "result": "dict",
                    "caption": "str"
                }
            }
        ],
        "CallbackModule.v2_runner_on_skipped": [
            {
                "type": "method",
                "args": {
                    "result": "object"
                }
            }
        ],
        "CallbackModule.v2_runner_on_unreachable": [
            {
                "type": "method",
                "args": {
                    "result": "object"
                }
            }
        ],
        "CallbackModule.v2_runner_on_ok": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackModule.v2_runner_on_failed": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "ignore_errors": "bool"
                }
            }
        ]
    },
    "plugins.callback.minimal": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_VERSION": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CallbackModule.CALLBACK_TYPE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._command_generic_msg": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "result": "dict",
                    "caption": "str"
                }
            }
        ],
        "CallbackModule.v2_on_file_diff": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackModule.v2_runner_on_unreachable": [
            {
                "type": "method",
                "args": {
                    "result": "object"
                }
            }
        ],
        "CallbackModule.v2_runner_on_skipped": [
            {
                "type": "method",
                "args": {
                    "result": "object"
                }
            }
        ],
        "CallbackModule.v2_runner_on_ok": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackModule.v2_runner_on_failed": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "ignore_errors": "bool"
                }
            }
        ]
    },
    "plugins.callback.junit": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAS_JUNIT_XML": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_ORDERED_DICT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "CallbackModule.CALLBACK_VERSION": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CallbackModule.CALLBACK_TYPE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_NEEDS_WHITELIST": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CallbackModule._output_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._task_class": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._task_relative_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._fail_on_change": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._fail_on_ignore": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._include_setup_tasks_in_report": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._hide_task_arguments": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._test_case_prefix": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._playbook_path": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CallbackModule._playbook_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._play_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule._task_data": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CallbackModule.disabled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CallbackModule._cleanse_string": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "TaskData.uuid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TaskData.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TaskData.path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TaskData.play": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TaskData.start": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "TaskData.host_data": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TaskData.action": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TaskData.__init__": [
            {
                "type": "method",
                "args": {
                    "uuid": "str",
                    "name": "str",
                    "path": "str",
                    "play": "str",
                    "action": "str"
                }
            }
        ],
        "HostData.uuid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HostData.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HostData.status": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HostData.result": [
            {
                "type": "attr",
                "anno": "TaskResult"
            }
        ],
        "HostData.finish": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "HostData.__init__": [
            {
                "type": "method",
                "args": {
                    "uuid": "str",
                    "name": "str",
                    "status": "str",
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_start": [
            {
                "type": "method",
                "args": {
                    "playbook": "Playbook"
                }
            }
        ],
        "CallbackModule.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackModule.v2_playbook_on_play_start": [
            {
                "type": "method",
                "args": {
                    "play": "Play"
                }
            }
        ],
        "CallbackModule._start_task": [
            {
                "type": "method",
                "args": {
                    "task": "Task"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_handler_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "Task"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_cleanup_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "Task"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "Task",
                    "is_conditional": "bool"
                }
            }
        ],
        "CallbackModule.v2_runner_on_no_hosts": [
            {
                "type": "method",
                "args": {
                    "task": "Task"
                }
            }
        ],
        "TaskData.add_host": [
            {
                "type": "method",
                "args": {
                    "host": "Host"
                }
            }
        ],
        "CallbackModule._finish_task": [
            {
                "type": "method",
                "args": {
                    "status": "str",
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_playbook_on_include": [
            {
                "type": "method",
                "args": {
                    "included_file": "str"
                }
            }
        ],
        "CallbackModule.v2_runner_on_skipped": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_runner_on_ok": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult"
                }
            }
        ],
        "CallbackModule.v2_runner_on_failed": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult",
                    "ignore_errors": "bool"
                }
            }
        ],
        "CallbackModule._build_test_case": [
            {
                "type": "method",
                "args": {
                    "task_data": "TaskData",
                    "host_data": "HostData"
                }
            }
        ],
        "CallbackModule._generate_report": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackModule.v2_playbook_on_stats": [
            {
                "type": "method",
                "args": {
                    "stats": "dict"
                }
            }
        ]
    },
    "plugins.callback.tree": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_VERSION": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "CallbackModule.CALLBACK_TYPE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_NAME": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CallbackModule.CALLBACK_NEEDS_WHITELIST": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CallbackModule.tree": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CallbackModule.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackModule.write_tree_file": [
            {
                "type": "method",
                "args": {
                    "hostname": "str",
                    "buf": "dict"
                }
            }
        ],
        "CallbackModule.result_to_tree": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackModule.v2_runner_on_unreachable": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackModule.v2_runner_on_failed": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "ignore_errors": "bool"
                }
            }
        ],
        "CallbackModule.v2_runner_on_ok": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ]
    },
    "plugins.callback": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "OrderedDict": [
            {
                "type": "var",
                "anno": "OrderedDict"
            }
        ],
        "global_display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "MutableMapping[str, type]"
            }
        ],
        "_DEBUG_ALLOWED_KEYS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "CallbackBase._display": [
            {
                "type": "attr",
                "anno": "Display"
            }
        ],
        "CallbackBase.disabled": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CallbackBase._plugin_options": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, object]"
            }
        ],
        "CallbackBase._hide_in_debug": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "CallbackBase._copy_result": [
            {
                "type": "attr",
                "anno": "MutableMapping"
            }
        ],
        "CallbackBase.set_option": [
            {
                "type": "method",
                "args": {
                    "k": "str",
                    "v": "object"
                }
            }
        ],
        "CallbackBase.get_option": [
            {
                "type": "method",
                "args": {
                    "k": "str"
                }
            }
        ],
        "CallbackBase.set_options": [
            {
                "type": "method",
                "args": {
                    "task_keys": "dict",
                    "var_options": "dict",
                    "direct": "dict"
                }
            }
        ],
        "CallbackBase._serialize_diff": [
            {
                "type": "method",
                "args": {
                    "diff": "MutableMapping"
                }
            }
        ],
        "CallbackBase.set_play_context": [
            {
                "type": "method",
                "args": {
                    "play_context": "PlayContext"
                }
            }
        ],
        "CallbackBase.on_any": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "CallbackBase.runner_on_failed": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "res": "dict",
                    "ignore_errors": "bool"
                }
            }
        ],
        "CallbackBase.runner_on_ok": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "res": "dict"
                }
            }
        ],
        "CallbackBase.runner_on_skipped": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "item": "str"
                }
            }
        ],
        "CallbackBase.runner_on_unreachable": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "res": "dict"
                }
            }
        ],
        "CallbackBase.runner_on_no_hosts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackBase.runner_on_async_poll": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "res": "dict",
                    "jid": "str",
                    "clock": "int"
                }
            }
        ],
        "CallbackBase.runner_on_async_ok": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "res": "dict",
                    "jid": "str"
                }
            }
        ],
        "CallbackBase.runner_on_async_failed": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "res": "dict",
                    "jid": "str"
                }
            }
        ],
        "CallbackBase.playbook_on_start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackBase.playbook_on_notify": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "handler": "str"
                }
            }
        ],
        "CallbackBase.playbook_on_no_hosts_matched": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackBase.playbook_on_no_hosts_remaining": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackBase.playbook_on_task_start": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "is_conditional": "bool"
                }
            }
        ],
        "CallbackBase.playbook_on_vars_prompt": [
            {
                "type": "method",
                "args": {
                    "varname": "str",
                    "private": "bool",
                    "prompt": "str",
                    "encrypt": "str",
                    "confirm": "bool",
                    "salt_size": "str",
                    "salt": "str",
                    "default": "str",
                    "unsafe": "str"
                }
            }
        ],
        "CallbackBase.playbook_on_setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackBase.playbook_on_import_for_host": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "imported_file": "str"
                }
            }
        ],
        "CallbackBase.playbook_on_not_import_for_host": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "missing_file": "str"
                }
            }
        ],
        "CallbackBase.playbook_on_play_start": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "CallbackBase.playbook_on_stats": [
            {
                "type": "method",
                "args": {
                    "stats": "dict"
                }
            }
        ],
        "CallbackBase.on_file_diff": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "diff": "str"
                }
            }
        ],
        "CallbackBase.v2_on_any": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_start": [
            {
                "type": "method",
                "args": {
                    "playbook": "str"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_notify": [
            {
                "type": "method",
                "args": {
                    "handler": "str",
                    "host": "str"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_no_hosts_matched": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackBase.v2_playbook_on_no_hosts_remaining": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CallbackBase.v2_playbook_on_cleanup_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "str"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_handler_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "str"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_vars_prompt": [
            {
                "type": "method",
                "args": {
                    "varname": "str",
                    "private": "bool",
                    "prompt": "str",
                    "encrypt": "str",
                    "confirm": "bool",
                    "salt_size": "str",
                    "salt": "str",
                    "default": "str",
                    "unsafe": "str"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_stats": [
            {
                "type": "method",
                "args": {
                    "stats": "dict"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_include": [
            {
                "type": "method",
                "args": {
                    "included_file": "str"
                }
            }
        ],
        "CallbackBase.v2_runner_item_on_ok": [
            {
                "type": "method",
                "args": {
                    "result": "str"
                }
            }
        ],
        "CallbackBase.v2_runner_item_on_failed": [
            {
                "type": "method",
                "args": {
                    "result": "str"
                }
            }
        ],
        "CallbackBase.v2_runner_item_on_skipped": [
            {
                "type": "method",
                "args": {
                    "result": "str"
                }
            }
        ],
        "CallbackBase.v2_runner_retry": [
            {
                "type": "method",
                "args": {
                    "result": "str"
                }
            }
        ],
        "CallbackBase.v2_runner_on_start": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "task": "str"
                }
            }
        ],
        "CallbackBase._process_items": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase._get_diff": [
            {
                "type": "method",
                "args": {
                    "difflist": "MutableMapping"
                }
            }
        ],
        "CallbackBase._clean_results": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "task_name": "str"
                }
            }
        ],
        "CallbackBase._handle_warnings": [
            {
                "type": "method",
                "args": {
                    "res": "dict"
                }
            }
        ],
        "CallbackBase.__init__": [
            {
                "type": "method",
                "args": {
                    "display": "Display",
                    "options": "dict"
                }
            }
        ],
        "CallbackBase.v2_on_file_diff": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_not_import_for_host": [
            {
                "type": "method",
                "args": {
                    "result": "object",
                    "missing_file": "str"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_import_for_host": [
            {
                "type": "method",
                "args": {
                    "result": "object",
                    "imported_file": "str"
                }
            }
        ],
        "CallbackBase.v2_runner_on_unreachable": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase.v2_runner_on_ok": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase.v2_runner_on_failed": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "ignore_errors": "bool"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_play_start": [
            {
                "type": "method",
                "args": {
                    "play": "C.Play"
                }
            }
        ],
        "CallbackBase.v2_playbook_on_task_start": [
            {
                "type": "method",
                "args": {
                    "task": "C.Task",
                    "is_conditional": "bool"
                }
            }
        ],
        "CallbackBase.v2_runner_on_async_failed": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase.v2_runner_on_async_ok": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase.v2_runner_on_async_poll": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase._get_item_label": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase.v2_runner_on_skipped": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase._get_item": [
            {
                "type": "method",
                "args": {
                    "result": "dict"
                }
            }
        ],
        "CallbackBase._dump_results": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "indent": "int",
                    "sort_keys": "bool",
                    "keep_invocation": "bool"
                }
            }
        ],
        "CallbackBase._run_is_verbose": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "verbosity": "int"
                }
            }
        ],
        "CallbackBase._handle_exception": [
            {
                "type": "method",
                "args": {
                    "result": "dict",
                    "use_stderr": "bool"
                }
            }
        ]
    },
    "plugins.connection.ssh": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "b_NOT_SSH_ERRORS": [
            {
                "type": "var",
                "anno": "tuple[bytes, ...]"
            }
        ],
        "SSHPASS_AVAILABLE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "Connection.transport": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.has_pipelining": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.host": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection.user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.control_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.control_path_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.has_native_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.always_pipeline_modules": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.module_implementation_preferences": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Connection.allow_executable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._sshpass_available": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._persistence_controls": [
            {
                "type": "method",
                "args": {
                    "b_command": "list"
                }
            }
        ],
        "Connection.sshpass_pipe": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._persistent": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._flags": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Connection._escape_win_path": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "Connection._connected": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._terminate_process": [
            {
                "type": "method",
                "args": {
                    "p": "subprocess.Popen"
                }
            }
        ],
        "Connection._add_args": [
            {
                "type": "method",
                "args": {
                    "b_command": "list",
                    "b_args": "list",
                    "explanation": "str"
                }
            }
        ],
        "_handle_error": [
            {
                "type": "func",
                "args": {
                    "remaining_retries": "int",
                    "command": "bytes",
                    "return_tuple": "tuple[int, ...]",
                    "no_log": "bool",
                    "host": "str",
                    "display": "Display"
                }
            }
        ],
        "_ssh_retry": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "Connection._create_control_path": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "port": "int",
                    "user": "str",
                    "connection": "str",
                    "pid": "str"
                }
            }
        ],
        "Connection._send_initial_data": [
            {
                "type": "method",
                "args": {
                    "fh": "subprocess.Popen",
                    "in_data": "str",
                    "ssh_process": "subprocess.Popen"
                }
            }
        ],
        "Connection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Connection._build_command": [
            {
                "type": "method",
                "args": {
                    "binary": "str",
                    "other_args": "str"
                }
            }
        ],
        "Connection.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._examine_output": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "state": "str",
                    "b_chunk": "bytes",
                    "sudoable": "bool"
                }
            }
        ],
        "Connection._bare_run": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "str",
                    "sudoable": "bool",
                    "checkrc": "bool"
                }
            }
        ],
        "Connection._run": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "bytes",
                    "sudoable": "bool",
                    "checkrc": "bool"
                }
            }
        ],
        "Connection.exec_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "Connection._file_transport_command": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str",
                    "sftp_action": "str"
                }
            }
        ],
        "Connection.put_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ],
        "Connection.fetch_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ]
    },
    "plugins.connection.psrp": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAS_PYPSRP": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PYPSRP_IMP_ERR": [
            {
                "type": "var",
                "anno": "Exception"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "Connection.transport": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.module_implementation_preferences": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Connection.allow_executable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.has_pipelining": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.allow_extras": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.always_pipeline_modules": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.has_native_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.runspace": [
            {
                "type": "attr",
                "anno": "RunspacePool"
            }
        ],
        "Connection.host": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._shell_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "Connection._connected": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._psrp_host": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_pass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_protocol": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._psrp_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_auth": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_cert_validation": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._psrp_connection_timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._psrp_read_timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._psrp_message_encryption": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_proxy": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_ignore_proxy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._psrp_operation_timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._psrp_max_envelope_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._psrp_configuration_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_reconnection_retries": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._psrp_reconnection_backoff": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Connection._psrp_certificate_key_pem": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_certificate_pem": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_credssp_auth_mechanism": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_credssp_disable_tlsv1_2": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._psrp_credssp_minimum_version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_negotiate_send_cbt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_negotiate_delegate": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_negotiate_hostname_override": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_negotiate_service": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._psrp_conn_kwargs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Connection.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._parse_pipeline_result": [
            {
                "type": "method",
                "args": {
                    "pipeline": "PowerShell"
                }
            }
        ],
        "Connection._exec_psrp_script": [
            {
                "type": "method",
                "args": {
                    "script": "str",
                    "input_data": "str",
                    "use_local_scope": "bool",
                    "force_stop": "bool"
                }
            }
        ],
        "Connection._build_kwargs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection.exec_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "Connection.put_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ],
        "Connection.fetch_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ]
    },
    "plugins.connection": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "BUFSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ensure_connect": [
            {
                "type": "func",
                "args": {
                    "func": "Callable"
                }
            }
        ],
        "ConnectionBase.has_pipelining": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionBase.has_native_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionBase.always_pipeline_modules": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionBase.has_tty": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionBase.module_implementation_preferences": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "ConnectionBase.allow_executable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionBase.supports_persistence": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionBase.force_persistence": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionBase.default_user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionBase._play_context": [
            {
                "type": "attr",
                "anno": "C.PlayContext"
            }
        ],
        "ConnectionBase._new_stdin": [
            {
                "type": "attr",
                "anno": "C.Stdin"
            }
        ],
        "ConnectionBase._display": [
            {
                "type": "attr",
                "anno": "Display"
            }
        ],
        "ConnectionBase._connected": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConnectionBase.success_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionBase.prompt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionBase._socket_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionBase._shell": [
            {
                "type": "attr",
                "anno": "C.ShellPlugin"
            }
        ],
        "ConnectionBase.become": [
            {
                "type": "attr",
                "anno": "C.Plugin"
            }
        ],
        "ConnectionBase.set_become_plugin": [
            {
                "type": "method",
                "args": {
                    "plugin": "C.Plugin"
                }
            }
        ],
        "ConnectionBase.connected": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionBase.socket_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionBase._split_ssh_args": [
            {
                "type": "method",
                "args": {
                    "argstring": "str"
                }
            }
        ],
        "ConnectionBase.transport": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionBase._connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionBase.exec_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "ConnectionBase.put_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ],
        "ConnectionBase.fetch_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ],
        "ConnectionBase.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetworkConnectionBase.force_persistence": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NetworkConnectionBase._remote_is_local": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NetworkConnectionBase._messages": [
            {
                "type": "attr",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "NetworkConnectionBase._conn_closed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NetworkConnectionBase._network_os": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetworkConnectionBase._local": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetworkConnectionBase._sub_plugin": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "NetworkConnectionBase._cached_variables": [
            {
                "type": "attr",
                "anno": "tuple[str, str, str]"
            }
        ],
        "NetworkConnectionBase._ansible_playbook_pid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetworkConnectionBase.pop_messages": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetworkConnectionBase._connected": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NetworkConnectionBase.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetworkConnectionBase._socket_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetworkConnectionBase.queue_message": [
            {
                "type": "method",
                "args": {
                    "level": "str",
                    "message": "str"
                }
            }
        ],
        "NetworkConnectionBase.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionBase.__init__": [
            {
                "type": "method",
                "args": {
                    "play_context": "C.PlayContext",
                    "new_stdin": "C.Stdin",
                    "shell": "C.ShellPlugin",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ConnectionBase.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionBase.check_missing_password": [
            {
                "type": "method",
                "args": {
                    "b_output": "bytes"
                }
            }
        ],
        "ConnectionBase.check_incorrect_password": [
            {
                "type": "method",
                "args": {
                    "b_output": "bytes"
                }
            }
        ],
        "ConnectionBase.check_become_success": [
            {
                "type": "method",
                "args": {
                    "b_output": "str"
                }
            }
        ],
        "ConnectionBase.connection_unlock": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionBase.connection_lock": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetworkConnectionBase.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "ConnectionBase.check_password_prompt": [
            {
                "type": "method",
                "args": {
                    "b_output": "str"
                }
            }
        ],
        "NetworkConnectionBase._update_connection_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetworkConnectionBase.__init__": [
            {
                "type": "method",
                "args": {
                    "play_context": "C.PlayContext",
                    "new_stdin": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "NetworkConnectionBase._log_messages": [
            {
                "type": "method",
                "args": {
                    "message": "str"
                }
            }
        ],
        "NetworkConnectionBase.set_options": [
            {
                "type": "method",
                "args": {
                    "task_keys": "str",
                    "var_options": "dict",
                    "direct": "dict"
                }
            }
        ],
        "NetworkConnectionBase.exec_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "NetworkConnectionBase.put_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ],
        "NetworkConnectionBase.fetch_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ]
    },
    "plugins.connection.local": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "Connection.transport": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.has_pipelining": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.cwd": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Connection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "Connection._connected": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection.exec_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "Connection.put_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ],
        "Connection.fetch_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ]
    },
    "plugins.connection.paramiko_ssh": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "AUTHENTICITY_MSG": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SETTINGS_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "MyAddPolicy._new_stdin": [
            {
                "type": "attr",
                "anno": "memoryview"
            }
        ],
        "MyAddPolicy.connection": [
            {
                "type": "attr",
                "anno": "Connection"
            }
        ],
        "MyAddPolicy._options": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "MyAddPolicy.__init__": [
            {
                "type": "method",
                "args": {
                    "new_stdin": "memoryview",
                    "connection": "Connection"
                }
            }
        ],
        "SSH_CONNECTION_CACHE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "SFTP_CONNECTION_CACHE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "Connection.transport": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._log_channel": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Connection.ssh": [
            {
                "type": "attr",
                "anno": "paramiko.SSHClient"
            }
        ],
        "Connection._set_log_channel": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Connection.keyfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.sftp": [
            {
                "type": "attr",
                "anno": "paramiko.SFTPClient"
            }
        ],
        "Connection._any_keys_added": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._connected": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._cache_key": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._parse_proxy_command": [
            {
                "type": "method",
                "args": {
                    "port": "int"
                }
            }
        ],
        "Connection._connect_uncached": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MyAddPolicy.missing_host_key": [
            {
                "type": "method",
                "args": {
                    "client": "paramiko.Client",
                    "hostname": "str",
                    "key": "paramiko.HostKey"
                }
            }
        ],
        "Connection._save_ssh_host_keys": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "Connection._connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._connect_sftp": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection.exec_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "Connection.put_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ],
        "Connection.fetch_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ]
    },
    "plugins.connection.winrm": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAVE_KERBEROS": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_WINRM": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "WINRM_IMPORT_ERR": [
            {
                "type": "var",
                "anno": "Exception"
            }
        ],
        "HAS_XMLTODICT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "XMLTODICT_IMPORT_ERR": [
            {
                "type": "var",
                "anno": "Exception"
            }
        ],
        "HAS_PEXPECT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "argspec": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "HAS_IPADDRESS": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "Connection.transport": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.module_implementation_preferences": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "Connection.allow_executable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.has_pipelining": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.allow_extras": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.always_pipeline_modules": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.has_native_async": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection.protocol": [
            {
                "type": "attr",
                "anno": "Protocol"
            }
        ],
        "Connection.shell_id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.delegate": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._shell_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "tuple",
                    "kwargs": "tuple"
                }
            }
        ],
        "Connection._winrm_host": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._winrm_user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._winrm_pass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._winrm_port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._winrm_scheme": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._winrm_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._kinit_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection._winrm_transport": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Connection._winrm_connection_timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Connection._winrm_supported_authtypes": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "Connection._kerb_managed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._winrm_kwargs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Connection._kerb_ccache": [
            {
                "type": "attr",
                "anno": "tempfile.NamedTemporaryFile"
            }
        ],
        "Connection._winrm_send_input": [
            {
                "type": "method",
                "args": {
                    "protocol": "Protocol",
                    "shell_id": "str",
                    "command_id": "str",
                    "stdin": "bytes",
                    "eof": "bool"
                }
            }
        ],
        "Connection._connected": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Connection._wrapper_payload_stream": [
            {
                "type": "method",
                "args": {
                    "payload": "str",
                    "buffer_size": "int"
                }
            }
        ],
        "Connection.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._put_file_stdin_iterator": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str",
                    "buffer_size": "int"
                }
            }
        ],
        "Connection._kerb_auth": [
            {
                "type": "method",
                "args": {
                    "principal": "str",
                    "password": "str"
                }
            }
        ],
        "Connection._build_winrm_kwargs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._winrm_connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection._winrm_exec": [
            {
                "type": "method",
                "args": {
                    "command": "str",
                    "args": "tuple",
                    "from_exec": "bool",
                    "stdin_iterator": "tuple"
                }
            }
        ],
        "Connection._connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection.reset": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Connection.exec_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "in_data": "str",
                    "sudoable": "bool"
                }
            }
        ],
        "Connection.put_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ],
        "Connection.fetch_file": [
            {
                "type": "method",
                "args": {
                    "in_path": "str",
                    "out_path": "str"
                }
            }
        ]
    },
    "compat.selectors": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "compat": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "context": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "Tuple[str, ...]"
            }
        ],
        "CLIARGS": [
            {
                "type": "var",
                "anno": "CLIArgs"
            }
        ],
        "_init_global_context": [
            {
                "type": "func",
                "args": {
                    "cli_args": "Mapping[str, str]"
                }
            }
        ],
        "cliargs_deferred_get": [
            {
                "type": "func",
                "args": {
                    "key": "str",
                    "default": "object",
                    "shallowcopy": "bool"
                }
            }
        ]
    },
    "config.manager": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Plugin": [
            {
                "type": "var",
                "anno": "namedtuple"
            }
        ],
        "Setting": [
            {
                "type": "var",
                "anno": "Setting"
            }
        ],
        "INTERNAL_DEFS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_get_entry": [
            {
                "type": "func",
                "args": {
                    "plugin_type": "str",
                    "plugin_name": "str",
                    "config": "str"
                }
            }
        ],
        "resolve_path": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "basedir": "str"
                }
            }
        ],
        "ensure_type": [
            {
                "type": "func",
                "args": {
                    "value": "object",
                    "value_type": "str",
                    "origin": "str"
                }
            }
        ],
        "get_config_type": [
            {
                "type": "func",
                "args": {
                    "cfile": "str"
                }
            }
        ],
        "ConfigManager.DEPRECATED": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ConfigManager.WARNINGS": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "ConfigManager._base_defs": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConfigManager._plugins": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConfigManager._parsers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConfigManager._config_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConfigManager.data": [
            {
                "type": "attr",
                "anno": "ConfigData"
            }
        ],
        "ConfigManager.module_defaults_groups": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConfigManager._read_config_yaml_file": [
            {
                "type": "method",
                "args": {
                    "yml_file": "str"
                }
            }
        ],
        "ConfigManager._find_yaml_config_files": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigManager.initialize_plugin_configuration_definitions": [
            {
                "type": "method",
                "args": {
                    "plugin_type": "str",
                    "name": "str",
                    "defs": "dict"
                }
            }
        ],
        "find_ini_config_file": [
            {
                "type": "func",
                "args": {
                    "warnings": "set"
                }
            }
        ],
        "ConfigManager._parse_config_file": [
            {
                "type": "method",
                "args": {
                    "cfile": "str"
                }
            }
        ],
        "ConfigManager.update_module_defaults_groups": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigManager._loop_entries": [
            {
                "type": "method",
                "args": {
                    "container": "dict",
                    "entry_list": "list"
                }
            }
        ],
        "ConfigManager.get_configuration_definitions": [
            {
                "type": "method",
                "args": {
                    "plugin_type": "str",
                    "name": "str"
                }
            }
        ],
        "ConfigManager.get_plugin_vars": [
            {
                "type": "method",
                "args": {
                    "plugin_type": "str",
                    "name": "str"
                }
            }
        ],
        "ConfigManager.get_configuration_definition": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "plugin_type": "str",
                    "plugin_name": "str"
                }
            }
        ],
        "get_ini_config_value": [
            {
                "type": "func",
                "args": {
                    "p": "dict",
                    "entry": "dict"
                }
            }
        ],
        "ConfigManager.get_config_value_and_origin": [
            {
                "type": "method",
                "args": {
                    "config": "str",
                    "cfile": "str",
                    "plugin_type": "str",
                    "plugin_name": "str",
                    "keys": "list",
                    "variables": "list",
                    "direct": "bool"
                }
            }
        ],
        "ConfigManager.update_config_data": [
            {
                "type": "method",
                "args": {
                    "defs": "dict",
                    "configfile": "str"
                }
            }
        ],
        "ConfigManager.__init__": [
            {
                "type": "method",
                "args": {
                    "conf_file": "str",
                    "defs_file": "str"
                }
            }
        ],
        "ConfigManager.get_config_value": [
            {
                "type": "method",
                "args": {
                    "config": "str",
                    "cfile": "str",
                    "plugin_type": "str",
                    "plugin_name": "str",
                    "keys": "list",
                    "variables": "list",
                    "direct": "bool"
                }
            }
        ],
        "ConfigManager.get_plugin_options": [
            {
                "type": "method",
                "args": {
                    "plugin_type": "str",
                    "name": "str",
                    "keys": "list",
                    "variables": "list",
                    "direct": "bool"
                }
            }
        ]
    },
    "config.data": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ConfigData._global_settings": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConfigData._plugins": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConfigData.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigData.update_setting": [
            {
                "type": "method",
                "args": {
                    "setting": "Setting",
                    "plugin": "str"
                }
            }
        ],
        "ConfigData.get_settings": [
            {
                "type": "method",
                "args": {
                    "plugin": "type"
                }
            }
        ],
        "ConfigData.get_setting": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "plugin": "object"
                }
            }
        ]
    },
    "utils.singleton": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Singleton.__init__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "name": "str",
                    "bases": "tuple",
                    "dct": "dict"
                }
            }
        ],
        "Singleton.__call__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "int",
                    "kw": "int"
                }
            }
        ]
    },
    "utils.shlex": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "shlex_split": [
            {
                "type": "func",
                "args": {
                    "s": "str",
                    "comments": "bool",
                    "posix": "bool"
                }
            }
        ]
    },
    "utils.unicode": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "unicode_wrap": [
            {
                "type": "func",
                "args": {
                    "func": "str",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ]
    },
    "utils.helpers": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "pct_to_int": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "num_items": "int",
                    "min_value": "int"
                }
            }
        ],
        "object_to_dict": [
            {
                "type": "func",
                "args": {
                    "obj": "object",
                    "exclude": "list"
                }
            }
        ],
        "deduplicate_list": [
            {
                "type": "func",
                "args": {
                    "original_list": "list"
                }
            }
        ]
    },
    "utils.py3compat": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_TextEnviron._raw_environ": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, str]"
            }
        ],
        "_TextEnviron._value_cache": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, str]"
            }
        ],
        "_TextEnviron.encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_TextEnviron.__init__": [
            {
                "type": "method",
                "args": {
                    "env": "MutableMapping[str, str]",
                    "encoding": "str"
                }
            }
        ],
        "_TextEnviron.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "_TextEnviron.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "_TextEnviron.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "_TextEnviron.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_TextEnviron.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "environ": [
            {
                "type": "var",
                "anno": "MutableMapping[str, str]"
            }
        ]
    },
    "utils.context_objects": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "CLIArgs.from_options": [
            {
                "type": "method",
                "args": {
                    "cls": "type[CLIArgs]",
                    "options": "Mapping[str, str]"
                }
            }
        ],
        "_make_immutable": [
            {
                "type": "func",
                "args": {
                    "obj": "Container"
                }
            }
        ],
        "CLIArgs.__init__": [
            {
                "type": "method",
                "args": {
                    "mapping": "dict"
                }
            }
        ]
    },
    "utils.sentinel": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Sentinel.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type"
                }
            }
        ]
    },
    "utils.collection_loader": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_SYNTHETIC_PACKAGES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "AnsibleCollectionLoader._n_configured_paths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AnsibleCollectionLoader._n_playbook_paths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AnsibleCollectionLoader._default_collection": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleCollectionLoader.n_collection_paths": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleCollectionLoader.set_default_collection": [
            {
                "type": "method",
                "args": {
                    "collection_name": "str"
                }
            }
        ],
        "AnsibleCollectionLoader.default_collection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleCollectionLoader._extend_path_with_ns": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "ns": "str"
                }
            }
        ],
        "AnsibleFlatMapLoader._extension_blacklist": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "AnsibleFlatMapLoader._root_package": [
            {
                "type": "attr",
                "anno": "ModuleType"
            }
        ],
        "AnsibleFlatMapLoader._dirtree": [
            {
                "type": "attr",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "AnsibleFlatMapLoader.__init__": [
            {
                "type": "method",
                "args": {
                    "root_package": "ModuleType"
                }
            }
        ],
        "AnsibleCollectionRef.VALID_REF_TYPES": [
            {
                "type": "attr",
                "anno": "frozenset[str]"
            }
        ],
        "AnsibleCollectionRef.VALID_COLLECTION_NAME_RE": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "AnsibleCollectionRef.VALID_SUBDIRS_RE": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "AnsibleCollectionRef.VALID_FQCR_RE": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "AnsibleCollectionRef.collection": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleCollectionRef.subdirs": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleCollectionRef.resource": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleCollectionRef.ref_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleCollectionRef.n_python_package_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleCollectionRef.legacy_plugin_dir_to_plugin_type": [
            {
                "type": "method",
                "args": {
                    "legacy_plugin_dir_name": "str"
                }
            }
        ],
        "AnsibleCollectionRef.is_valid_collection_name": [
            {
                "type": "method",
                "args": {
                    "collection_name": "str"
                }
            }
        ],
        "AnsibleCollectionLoader.get_collection_path": [
            {
                "type": "method",
                "args": {
                    "collection_name": "str"
                }
            }
        ],
        "_N_COLLECTION_PATH_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "AnsibleFlatMapLoader._init_dirtree": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleFlatMapLoader.find_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "AnsibleCollectionRef.__init__": [
            {
                "type": "method",
                "args": {
                    "collection_name": "str",
                    "subdirs": "str",
                    "resource": "str",
                    "ref_type": "str"
                }
            }
        ],
        "AnsibleCollectionRef.from_fqcr": [
            {
                "type": "method",
                "args": {
                    "ref": "str",
                    "ref_type": "str"
                }
            }
        ],
        "AnsibleCollectionRef.try_parse_fqcr": [
            {
                "type": "method",
                "args": {
                    "ref": "str",
                    "ref_type": "str"
                }
            }
        ],
        "get_collection_role_path": [
            {
                "type": "func",
                "args": {
                    "role_name": "str",
                    "collection_list": "list"
                }
            }
        ],
        "AnsibleCollectionRef.is_valid_fqcr": [
            {
                "type": "method",
                "args": {
                    "ref": "str",
                    "ref_type": "str"
                }
            }
        ],
        "AnsibleCollectionLoader.set_playbook_paths": [
            {
                "type": "method",
                "args": {
                    "b_playbook_paths": "str"
                }
            }
        ],
        "AnsibleFlatMapLoader.get_data": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "AnsibleCollectionLoader.get_data": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "AnsibleCollectionLoader._find_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str",
                    "path": "str",
                    "load": "bool"
                }
            }
        ],
        "AnsibleCollectionLoader.load_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str"
                }
            }
        ],
        "AnsibleCollectionLoader.find_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str",
                    "path": "str"
                }
            }
        ],
        "AnsibleCollectionLoader.__init__": [
            {
                "type": "method",
                "args": {
                    "config": "object"
                }
            }
        ],
        "set_collection_playbook_paths": [
            {
                "type": "func",
                "args": {
                    "b_playbook_paths": "str"
                }
            }
        ],
        "get_collection_name_from_path": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ]
    },
    "utils.multiprocessing": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "context": [
            {
                "type": "var",
                "anno": "multiprocessing.Context"
            }
        ]
    },
    "utils.encrypt": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "PASSLIB_AVAILABLE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "_LOCK": [
            {
                "type": "var",
                "anno": "multiprocessing.Lock"
            }
        ],
        "DEFAULT_PASSWORD_LENGTH": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "random_password": [
            {
                "type": "func",
                "args": {
                    "length": "int",
                    "chars": "str"
                }
            }
        ],
        "random_salt": [
            {
                "type": "func",
                "args": {
                    "length": "int"
                }
            }
        ],
        "BaseHash.algo": [
            {
                "type": "attr",
                "anno": "namedtuple"
            }
        ],
        "BaseHash.algorithms": [
            {
                "type": "attr",
                "anno": "dict[str, crypt.Crypto]"
            }
        ],
        "BaseHash.algorithm": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseHash.__init__": [
            {
                "type": "method",
                "args": {
                    "algorithm": "str"
                }
            }
        ],
        "CryptHash.algo_data": [
            {
                "type": "attr",
                "anno": "crypt.Crypto"
            }
        ],
        "CryptHash.__init__": [
            {
                "type": "method",
                "args": {
                    "algorithm": "str"
                }
            }
        ],
        "CryptHash._salt": [
            {
                "type": "method",
                "args": {
                    "salt": "str",
                    "salt_size": "int"
                }
            }
        ],
        "CryptHash._rounds": [
            {
                "type": "method",
                "args": {
                    "rounds": "int"
                }
            }
        ],
        "CryptHash._hash": [
            {
                "type": "method",
                "args": {
                    "secret": "str",
                    "salt": "str",
                    "rounds": "int"
                }
            }
        ],
        "CryptHash.hash": [
            {
                "type": "method",
                "args": {
                    "secret": "str",
                    "salt": "str",
                    "salt_size": "int",
                    "rounds": "int"
                }
            }
        ],
        "PasslibHash.crypt_algo": [
            {
                "type": "attr",
                "anno": "type[passlib.hash]"
            }
        ],
        "PasslibHash.__init__": [
            {
                "type": "method",
                "args": {
                    "algorithm": "str"
                }
            }
        ],
        "PasslibHash._clean_salt": [
            {
                "type": "method",
                "args": {
                    "salt": "str"
                }
            }
        ],
        "PasslibHash._clean_rounds": [
            {
                "type": "method",
                "args": {
                    "rounds": "int"
                }
            }
        ],
        "PasslibHash.hash": [
            {
                "type": "method",
                "args": {
                    "secret": "str",
                    "salt": "str",
                    "salt_size": "int",
                    "rounds": "int"
                }
            }
        ],
        "passlib_or_crypt": [
            {
                "type": "func",
                "args": {
                    "secret": "str",
                    "algorithm": "str",
                    "salt": "str",
                    "salt_size": "int",
                    "rounds": "int"
                }
            }
        ],
        "do_encrypt": [
            {
                "type": "func",
                "args": {
                    "result": "str",
                    "encrypt": "str",
                    "salt_size": "int",
                    "salt": "str"
                }
            }
        ],
        "PasslibHash._hash": [
            {
                "type": "method",
                "args": {
                    "secret": "str",
                    "salt": "str",
                    "salt_size": "int",
                    "rounds": "int"
                }
            }
        ]
    },
    "utils.ssh_functions": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_HAS_CONTROLPERSIST": [
            {
                "type": "var",
                "anno": "dict[str, bool]"
            }
        ],
        "check_for_controlpersist": [
            {
                "type": "func",
                "args": {
                    "ssh_executable": "str"
                }
            }
        ]
    },
    "utils.unsafe_proxy": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "Set[str]"
            }
        ],
        "AnsibleUnsafe.__UNSAFE__": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleUnsafeBytes.decode": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "wrap_var": [
            {
                "type": "func",
                "args": {
                    "v": "object"
                }
            }
        ],
        "_wrap_set": [
            {
                "type": "func",
                "args": {
                    "v": "Set"
                }
            }
        ],
        "_wrap_sequence": [
            {
                "type": "func",
                "args": {
                    "v": "Sequence"
                }
            }
        ],
        "_wrap_dict": [
            {
                "type": "func",
                "args": {
                    "v": "Mapping"
                }
            }
        ],
        "to_unsafe_bytes": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "to_unsafe_text": [
            {
                "type": "func",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "AnsibleUnsafeText.encode": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "UnsafeProxy.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type[object]",
                    "obj": "object",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ]
    },
    "utils.hashing": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_md5": [
            {
                "type": "var",
                "anno": "_md5"
            }
        ],
        "secure_hash_s": [
            {
                "type": "func",
                "args": {
                    "data": "dict",
                    "hash_func": "type[_md5]"
                }
            }
        ],
        "md5s": [
            {
                "type": "func",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "checksum_s": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "secure_hash": [
            {
                "type": "func",
                "args": {
                    "filename": "str",
                    "hash_func": "type[_md5]"
                }
            }
        ],
        "md5": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "checksum": [
            {
                "type": "var",
                "anno": "type[_md5]"
            }
        ]
    },
    "utils.vars": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_MAXSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "cur_id": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "node_mac": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "random_int": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "get_unique_id": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "load_options_vars": [
            {
                "type": "func",
                "args": {
                    "version": "str"
                }
            }
        ],
        "_validate_mutable_mappings": [
            {
                "type": "func",
                "args": {
                    "a": "MutableMapping",
                    "b": "MutableMapping"
                }
            }
        ],
        "isidentifier": [
            {
                "type": "func",
                "args": {
                    "ident": "str"
                }
            }
        ],
        "merge_hash": [
            {
                "type": "func",
                "args": {
                    "x": "MutableMapping",
                    "y": "MutableMapping",
                    "recursive": "bool",
                    "list_merge": "str"
                }
            }
        ],
        "combine_vars": [
            {
                "type": "func",
                "args": {
                    "a": "MutableMapping",
                    "b": "MutableMapping"
                }
            }
        ],
        "load_extra_vars": [
            {
                "type": "func",
                "args": {
                    "loader": "DataLoader"
                }
            }
        ]
    },
    "utils.jsonrpc": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "JsonRpcServer._objects": [
            {
                "type": "attr",
                "anno": "set[object]"
            }
        ],
        "JsonRpcServer.header": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JsonRpcServer.response": [
            {
                "type": "method",
                "args": {
                    "result": "object"
                }
            }
        ],
        "JsonRpcServer.error": [
            {
                "type": "method",
                "args": {
                    "code": "int",
                    "message": "str",
                    "data": "Union[binary_type, text_type]"
                }
            }
        ],
        "JsonRpcServer.parse_error": [
            {
                "type": "method",
                "args": {
                    "data": "Union[binary_type, text_type]"
                }
            }
        ],
        "JsonRpcServer.method_not_found": [
            {
                "type": "method",
                "args": {
                    "data": "Union[binary_type, text_type]"
                }
            }
        ],
        "JsonRpcServer.invalid_request": [
            {
                "type": "method",
                "args": {
                    "data": "Union[binary_type, text_type]"
                }
            }
        ],
        "JsonRpcServer.invalid_params": [
            {
                "type": "method",
                "args": {
                    "data": "Union[binary_type, text_type]"
                }
            }
        ],
        "JsonRpcServer.internal_error": [
            {
                "type": "method",
                "args": {
                    "data": "Union[binary_type, text_type]"
                }
            }
        ],
        "JsonRpcServer.register": [
            {
                "type": "method",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "JsonRpcServer.handle_request": [
            {
                "type": "method",
                "args": {
                    "request": "str"
                }
            }
        ]
    },
    "utils.color": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_COLOR": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "codeCodes": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "parsecolor": [
            {
                "type": "func",
                "args": {
                    "color": "str"
                }
            }
        ],
        "stringc": [
            {
                "type": "func",
                "args": {
                    "text": "str",
                    "color": "str",
                    "wrap_nonvisible_chars": "bool"
                }
            }
        ],
        "hostcolor": [
            {
                "type": "func",
                "args": {
                    "host": "str",
                    "stats": "dict",
                    "color": "bool"
                }
            }
        ],
        "colorize": [
            {
                "type": "func",
                "args": {
                    "lead": "str",
                    "num": "int",
                    "color": "str"
                }
            }
        ]
    },
    "utils.display": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "input": [
            {
                "type": "var",
                "anno": "type[object]"
            }
        ],
        "FilterBlackList.blacklist": [
            {
                "type": "attr",
                "anno": "list[logging.Filter]"
            }
        ],
        "FilterUserInjector.username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "logger": [
            {
                "type": "var",
                "anno": "logging.Logger | None"
            }
        ],
        "path": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "color_to_log_level": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "b_COW_PATHS": [
            {
                "type": "var",
                "anno": "tuple[bytes, ...]"
            }
        ],
        "Display.columns": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "Display.verbosity": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "Display._deprecations": [
            {
                "type": "attr",
                "anno": "dict[str, int]"
            }
        ],
        "Display._warns": [
            {
                "type": "attr",
                "anno": "dict[str, int]"
            }
        ],
        "Display._errors": [
            {
                "type": "attr",
                "anno": "dict[str, int]"
            }
        ],
        "Display.b_cowsay": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Display.noncow": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Display.cows_available": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Display.set_cowsay_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Display._output_encoding": [
            {
                "type": "method",
                "args": {
                    "stderr": "bool"
                }
            }
        ],
        "Display.prompt": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "private": "bool"
                }
            }
        ],
        "Display._set_column_width": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Display.__init__": [
            {
                "type": "method",
                "args": {
                    "verbosity": "int"
                }
            }
        ],
        "FilterUserInjector.filter": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ],
        "FilterBlackList.filter": [
            {
                "type": "method",
                "args": {
                    "record": "logging.LogRecord"
                }
            }
        ],
        "Display.display": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "color": "str",
                    "stderr": "bool",
                    "screen_only": "bool",
                    "log_only": "bool",
                    "newline": "bool"
                }
            }
        ],
        "Display.error": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "wrap_text": "bool"
                }
            }
        ],
        "Display.banner_cowsay": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "color": "str"
                }
            }
        ],
        "Display.warning": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "formatted": "bool"
                }
            }
        ],
        "Display.banner": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "color": "str",
                    "cows": "bool"
                }
            }
        ],
        "Display.system_warning": [
            {
                "type": "method",
                "args": {
                    "msg": "str"
                }
            }
        ],
        "Display.deprecated": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "version": "str",
                    "removed": "bool"
                }
            }
        ],
        "Display.verbose": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "host": "str",
                    "caplevel": "int"
                }
            }
        ],
        "Display.vvvvvv": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "host": "str"
                }
            }
        ],
        "Display.vvvvv": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "host": "str"
                }
            }
        ],
        "Display.vvvv": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "host": "str"
                }
            }
        ],
        "Display.vvv": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "host": "str"
                }
            }
        ],
        "Display.vv": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "host": "str"
                }
            }
        ],
        "Display.v": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "host": "str"
                }
            }
        ],
        "Display.debug": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "host": "str | None"
                }
            }
        ],
        "Display.do_var_prompt": [
            {
                "type": "method",
                "args": {
                    "varname": "str",
                    "private": "bool",
                    "prompt": "str",
                    "encrypt": "bool",
                    "confirm": "bool",
                    "salt_size": "int",
                    "salt": "int",
                    "default": "int",
                    "unsafe": "bool"
                }
            }
        ],
        "FilterBlackList.__init__": [
            {
                "type": "method",
                "args": {
                    "blacklist": "list[str]"
                }
            }
        ]
    },
    "utils.version": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SEMVER_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_Alpha.specifier": [
            {
                "type": "attr",
                "anno": "LooseVersion"
            }
        ],
        "_Alpha.__init__": [
            {
                "type": "method",
                "args": {
                    "specifier": "LooseVersion"
                }
            }
        ],
        "_Alpha.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Numeric.specifier": [
            {
                "type": "attr",
                "anno": "LooseVersion"
            }
        ],
        "_Numeric.__init__": [
            {
                "type": "method",
                "args": {
                    "specifier": "LooseVersion"
                }
            }
        ],
        "_Alpha.__lt__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Alpha.__ge__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Alpha.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Alpha.__le__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Alpha.__gt__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Alpha.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Numeric.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_Numeric.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Numeric.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Numeric.__lt__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Numeric.__le__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Numeric.__gt__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "_Numeric.__ge__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "SemanticVersion.version_re": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "SemanticVersion.vstring": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SemanticVersion.major": [
            {
                "type": "attr",
                "anno": "LooseVersion"
            }
        ],
        "SemanticVersion.minor": [
            {
                "type": "attr",
                "anno": "LooseVersion"
            }
        ],
        "SemanticVersion.patch": [
            {
                "type": "attr",
                "anno": "LooseVersion"
            }
        ],
        "SemanticVersion.prerelease": [
            {
                "type": "attr",
                "anno": "LooseVersion"
            }
        ],
        "SemanticVersion.buildmetadata": [
            {
                "type": "attr",
                "anno": "LooseVersion"
            }
        ],
        "SemanticVersion.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SemanticVersion.core": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SemanticVersion.is_prerelease": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SemanticVersion.is_stable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SemanticVersion.parse": [
            {
                "type": "method",
                "args": {
                    "vstring": "str"
                }
            }
        ],
        "SemanticVersion.__init__": [
            {
                "type": "method",
                "args": {
                    "vstring": "str"
                }
            }
        ],
        "SemanticVersion._cmp": [
            {
                "type": "method",
                "args": {
                    "other": "Version"
                }
            }
        ],
        "SemanticVersion.__ge__": [
            {
                "type": "method",
                "args": {
                    "other": "Version"
                }
            }
        ],
        "SemanticVersion.__gt__": [
            {
                "type": "method",
                "args": {
                    "other": "Version"
                }
            }
        ],
        "SemanticVersion.__le__": [
            {
                "type": "method",
                "args": {
                    "other": "Version"
                }
            }
        ],
        "SemanticVersion.__lt__": [
            {
                "type": "method",
                "args": {
                    "other": "Version"
                }
            }
        ],
        "SemanticVersion.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "Version"
                }
            }
        ],
        "SemanticVersion.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "Version"
                }
            }
        ],
        "SemanticVersion.from_loose_version": [
            {
                "type": "method",
                "args": {
                    "loose_version": "LooseVersion"
                }
            }
        ]
    },
    "utils.listify": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "Iterable[str]"
            }
        ],
        "listify_lookup_plugin_terms": [
            {
                "type": "func",
                "args": {
                    "terms": "object",
                    "templar": "Templar",
                    "loader": "loader.Loader",
                    "fail_on_undefined": "bool",
                    "convert_bare": "bool"
                }
            }
        ]
    },
    "utils.path": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "unfrackpath": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "follow": "bool",
                    "basedir": "str"
                }
            }
        ],
        "basedir": [
            {
                "type": "func",
                "args": {
                    "source": "str"
                }
            }
        ],
        "is_subpath": [
            {
                "type": "func",
                "args": {
                    "child": "str",
                    "parent": "str"
                }
            }
        ],
        "makedirs_safe": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "mode": "int"
                }
            }
        ],
        "cleanup_tmp_file": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "warn": "bool"
                }
            }
        ]
    },
    "utils.plugin_docs": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "BLACKLIST": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "get_versioned_doclink": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "merge_fragment": [
            {
                "type": "func",
                "args": {
                    "target": "dict",
                    "source": "dict"
                }
            }
        ],
        "add_fragments": [
            {
                "type": "func",
                "args": {
                    "doc": "dict",
                    "filename": "str",
                    "fragment_loader": "AnsibleLoader"
                }
            }
        ],
        "get_docstring": [
            {
                "type": "func",
                "args": {
                    "filename": "str",
                    "fragment_loader": "AnsibleLoader",
                    "verbose": "bool",
                    "ignore_errors": "bool"
                }
            }
        ]
    },
    "utils": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "utils.cmd_functions": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "run_cmd": [
            {
                "type": "func",
                "args": {
                    "cmd": "str",
                    "live": "bool",
                    "readsize": "int"
                }
            }
        ]
    },
    "module_utils.yumdnf": {
        "yumdnf_argument_spec": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "YumDnf.module": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "YumDnf.allow_downgrade": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.autoremove": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.bugfix": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.conf_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YumDnf.disable_excludes": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.disable_gpg_check": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.disable_plugin": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.disablerepo": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "YumDnf.download_only": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.download_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YumDnf.enable_plugin": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.enablerepo": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "YumDnf.exclude": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "YumDnf.installroot": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YumDnf.install_repoquery": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.install_weak_deps": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "YumDnf.names": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "YumDnf.releasever": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.security": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.skip_broken": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.state": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "YumDnf.update_only": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.update_cache": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.validate_certs": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "YumDnf.lock_timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "YumDnf.lockfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YumDnf.is_lockfile_pid_valid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumDnf._is_lockfile_present": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumDnf.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumDnf.wait_for_lock": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumDnf.listify_comma_sep_strings_in_list": [
            {
                "type": "method",
                "args": {
                    "some_list": "list"
                }
            }
        ],
        "YumDnf.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "object"
                }
            }
        ]
    },
    "module_utils.service": {
        "sysv_is_enabled": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "runlevel": "str"
                }
            }
        ],
        "get_sysv_script": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "sysv_exists": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "fork_process": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "check_ps": [
            {
                "type": "func",
                "args": {
                    "module": "ansible.Module",
                    "pattern": "str"
                }
            }
        ],
        "get_ps": [
            {
                "type": "func",
                "args": {
                    "module": "ansible.Module",
                    "pattern": "str"
                }
            }
        ],
        "daemonize": [
            {
                "type": "func",
                "args": {
                    "module": "ansible.Module",
                    "cmd": "list"
                }
            }
        ],
        "fail_if_missing": [
            {
                "type": "func",
                "args": {
                    "module": "sible.Module",
                    "found": "bool",
                    "service": "str",
                    "msg": "str"
                }
            }
        ]
    },
    "module_utils.basic": {
        "FILE_ATTRIBUTES": [
            {
                "type": "var",
                "anno": "MutableMapping[str, str]"
            }
        ],
        "HAS_SYSLOG": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "has_journal": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAVE_SELINUX": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "NoneType": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AVAILABLE_HASH_ALGORITHMS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "algorithms": [
            {
                "type": "var",
                "anno": "Sequence[str]"
            }
        ],
        "SEQUENCETYPE": [
            {
                "type": "var",
                "anno": "Any"
            }
        ],
        "PASSWORD_MATCH": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "imap": [
            {
                "type": "var",
                "anno": "types.Type[object]"
            }
        ],
        "unicode": [
            {
                "type": "var",
                "anno": "types.Type[str]"
            }
        ],
        "basestring": [
            {
                "type": "var",
                "anno": "types.Type[str]"
            }
        ],
        "_literal_eval": [
            {
                "type": "var",
                "anno": "types.Literal"
            }
        ],
        "_ANSIBLE_ARGS": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "FILE_COMMON_ARGUMENTS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "PASSWD_ARG_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "MODE_OPERATOR_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "USERS_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "PERMS_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_PY3_MIN": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_PY2_MIN": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_PY_MIN": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "get_platform": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "load_platform_subclass": [
            {
                "type": "func",
                "args": {
                    "cls": "type",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "get_all_subclasses": [
            {
                "type": "func",
                "args": {
                    "cls": "type"
                }
            }
        ],
        "env_fallback": [
            {
                "type": "func",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "missing_required_lib": [
            {
                "type": "func",
                "args": {
                    "library": "str",
                    "reason": "str",
                    "url": "str"
                }
            }
        ],
        "AnsibleModule._name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleModule.argument_spec": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleModule.supports_check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.bypass_checks": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.no_log": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.mutually_exclusive": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.required_together": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.required_one_of": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.required_if": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.required_by": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.cleanup_files": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AnsibleModule._debug": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule._diff": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule._socket_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleModule._shell": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleModule._verbosity": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AnsibleModule.run_command_environ_update": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleModule._clean": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleModule._string_conversion_action": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleModule.aliases": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleModule._legal_inputs": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AnsibleModule._options_context": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AnsibleModule._tmpdir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleModule.no_log_values": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "AnsibleModule._CHECK_ARGUMENT_TYPES_DISPATCHER": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleModule.selinux_mls_enabled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule.user_and_group": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "expand": "bool"
                }
            }
        ],
        "AnsibleModule.find_mount_point": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "AnsibleModule._apply_operation_to_mode": [
            {
                "type": "method",
                "args": {
                    "user": "str",
                    "operator": "str",
                    "mode_to_apply": "int",
                    "current_mode": "int"
                }
            }
        ],
        "AnsibleModule.check_file_absent_if_check_mode": [
            {
                "type": "method",
                "args": {
                    "file_path": "str"
                }
            }
        ],
        "AnsibleModule._syslog_facility": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleModule.safe_eval": [
            {
                "type": "method",
                "args": {
                    "value": "str",
                    "locals": "MutableMapping[str, types.Any]",
                    "include_exceptions": "bool"
                }
            }
        ],
        "AnsibleModule._check_type_list": [
            {
                "type": "method",
                "args": {
                    "value": "dict"
                }
            }
        ],
        "AnsibleModule._check_type_dict": [
            {
                "type": "method",
                "args": {
                    "value": "dict"
                }
            }
        ],
        "AnsibleModule._check_type_bool": [
            {
                "type": "method",
                "args": {
                    "value": "bool"
                }
            }
        ],
        "AnsibleModule._check_type_int": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "AnsibleModule._check_type_float": [
            {
                "type": "method",
                "args": {
                    "value": "float"
                }
            }
        ],
        "AnsibleModule._check_type_path": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "AnsibleModule._check_type_jsonarg": [
            {
                "type": "method",
                "args": {
                    "value": "dict"
                }
            }
        ],
        "AnsibleModule._check_type_raw": [
            {
                "type": "method",
                "args": {
                    "value": "dict"
                }
            }
        ],
        "AnsibleModule._check_type_bytes": [
            {
                "type": "method",
                "args": {
                    "value": "dict"
                }
            }
        ],
        "AnsibleModule._check_type_bits": [
            {
                "type": "method",
                "args": {
                    "value": "int"
                }
            }
        ],
        "AnsibleModule.params": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleModule._count_terms": [
            {
                "type": "method",
                "args": {
                    "check": "str",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._log_to_syslog": [
            {
                "type": "method",
                "args": {
                    "msg": "str"
                }
            }
        ],
        "AnsibleModule.from_json": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "AnsibleModule.cleanup": [
            {
                "type": "method",
                "args": {
                    "tmpfile": "str"
                }
            }
        ],
        "AnsibleModule.do_cleanup_files": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule._restore_signal_handlers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule.bytes_to_human": [
            {
                "type": "method",
                "args": {
                    "size": "int"
                }
            }
        ],
        "AnsibleModule.pretty_bytes": [
            {
                "type": "attr",
                "anno": "Callable[[], str]"
            }
        ],
        "AnsibleModule.human_to_bytes": [
            {
                "type": "method",
                "args": {
                    "number": "int",
                    "isbits": "bool"
                }
            }
        ],
        "AnsibleModule.is_executable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleModule.get_buffer_size": [
            {
                "type": "method",
                "args": {
                    "fd": "int"
                }
            }
        ],
        "get_module_path": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "AnsibleModule.add_cleanup_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "AnsibleModule.selinux_initial_context": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_remove_values_conditions": [
            {
                "type": "func",
                "args": {
                    "value": "Union[str, Sequence, Set, type, NoneType]",
                    "no_log_strings": "list",
                    "deferred_removals": "deque"
                }
            }
        ],
        "AnsibleModule.is_special_selinux_path": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "AnsibleModule.set_context_if_different": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "context": "list",
                    "changed": "bool",
                    "diff": "dict"
                }
            }
        ],
        "AnsibleModule.set_default_selinux_context": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "changed": "bool"
                }
            }
        ],
        "AnsibleModule._handle_aliases": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict",
                    "option_prefix": "str"
                }
            }
        ],
        "AnsibleModule.append_to_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "str": "str"
                }
            }
        ],
        "AnsibleModule.add_path_info": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "AnsibleModule._return_formatted": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "AnsibleModule.fail_json": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "remove_values": [
            {
                "type": "func",
                "args": {
                    "value": "Union[str, Sequence, Set, MutableSequence, type, NoneType]",
                    "no_log_strings": "list"
                }
            }
        ],
        "AnsibleModule.log": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "log_args": "dict"
                }
            }
        ],
        "AnsibleModule.debug": [
            {
                "type": "method",
                "args": {
                    "msg": "str"
                }
            }
        ],
        "AnsibleModule.deprecate": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "version": "str"
                }
            }
        ],
        "AnsibleModule.warn": [
            {
                "type": "method",
                "args": {
                    "warning": "str"
                }
            }
        ],
        "heuristic_log_sanitize": [
            {
                "type": "func",
                "args": {
                    "data": "str",
                    "no_log_values": "set"
                }
            }
        ],
        "AnsibleModule._clean_args": [
            {
                "type": "method",
                "args": {
                    "args": "Union[str, binary_type, bytes, text_type]"
                }
            }
        ],
        "AnsibleModule.run_command": [
            {
                "type": "method",
                "args": {
                    "args": "Union[str, binary_type, bytes, text_type]",
                    "check_rc": "bool",
                    "close_fds": "bool",
                    "executable": "str",
                    "data": "str",
                    "binary_data": "bool",
                    "path_prefix": "str",
                    "cwd": "str",
                    "use_unsafe_shell": "bool",
                    "prompt_regex": "str",
                    "environ_update": "dict",
                    "umask": "int",
                    "encoding": "str",
                    "errors": "str",
                    "expand_user_and_vars": "bool",
                    "pass_fds": "bool",
                    "before_communicate_callback": "Callable[[subprocess.Popen], None]"
                }
            }
        ],
        "AnsibleModule._get_octal_mode_from_symbolic_perms": [
            {
                "type": "method",
                "args": {
                    "path_stat": "stat.Stat",
                    "user": "str",
                    "perms": "str",
                    "use_umask": "bool"
                }
            }
        ],
        "AnsibleModule._symbolic_mode_to_octal": [
            {
                "type": "method",
                "args": {
                    "cls": "Type[AnsibleModule]",
                    "path_stat": "stat.Stat",
                    "symbolic_mode": "str"
                }
            }
        ],
        "AnsibleModule._set_fallbacks": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._set_defaults": [
            {
                "type": "method",
                "args": {
                    "pre": "bool",
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_type_str": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "AnsibleModule._unsafe_writes": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "dest": "str"
                }
            }
        ],
        "AnsibleModule.digest_from_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "algorithm": "str"
                }
            }
        ],
        "AnsibleModule.sha256": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "AnsibleModule.sha1": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "AnsibleModule.md5": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "AnsibleModule.fail_on_missing_params": [
            {
                "type": "method",
                "args": {
                    "required_params": "str"
                }
            }
        ],
        "AnsibleModule.jsonify": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "AnsibleModule.boolean": [
            {
                "type": "method",
                "args": {
                    "arg": "bool"
                }
            }
        ],
        "AnsibleModule._log_invocation": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule.get_bin_path": [
            {
                "type": "method",
                "args": {
                    "arg": "str",
                    "required": "bool",
                    "opt_dirs": "bool"
                }
            }
        ],
        "AnsibleModule.get_file_attributes": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "AnsibleModule._get_wanted_type": [
            {
                "type": "method",
                "args": {
                    "wanted": "str",
                    "k": "str"
                }
            }
        ],
        "AnsibleModule._handle_elements": [
            {
                "type": "method",
                "args": {
                    "wanted": "str",
                    "param": "str",
                    "values": "list"
                }
            }
        ],
        "AnsibleModule._check_argument_types": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_argument_values": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_required_if": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_required_arguments": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_required_by": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_required_together": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_required_one_of": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_mutually_exclusive": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._handle_no_log_values": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict"
                }
            }
        ],
        "AnsibleModule._check_locale": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule.set_mode_if_different": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "mode": "str",
                    "changed": "bool",
                    "diff": "dict",
                    "expand": "bool"
                }
            }
        ],
        "AnsibleModule.set_group_if_different": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "group": "str",
                    "changed": "bool",
                    "diff": "dict",
                    "expand": "bool"
                }
            }
        ],
        "AnsibleModule.set_owner_if_different": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "owner": "str",
                    "changed": "bool",
                    "diff": "dict",
                    "expand": "bool"
                }
            }
        ],
        "AnsibleModule.selinux_enabled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule.selinux_context": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "AnsibleModule.selinux_default_context": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "mode": "int"
                }
            }
        ],
        "AnsibleModule.atomic_move": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "dest": "str",
                    "unsafe_writes": "bool"
                }
            }
        ],
        "AnsibleModule.tmpdir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule._set_cwd": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule.exit_json": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "AnsibleModule._check_arguments": [
            {
                "type": "method",
                "args": {
                    "spec": "dict",
                    "param": "dict",
                    "legal_inputs": "list"
                }
            }
        ],
        "AnsibleModule._handle_options": [
            {
                "type": "method",
                "args": {
                    "argument_spec": "dict",
                    "params": "dict",
                    "prefix": "str"
                }
            }
        ],
        "AnsibleModule.set_attributes_if_different": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "attributes": "str",
                    "changed": "bool",
                    "diff": "dict",
                    "expand": "bool"
                }
            }
        ],
        "AnsibleModule.preserved_copy": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "dest": "str"
                }
            }
        ],
        "AnsibleModule.backup_local": [
            {
                "type": "method",
                "args": {
                    "fn": "str"
                }
            }
        ],
        "AnsibleModule.set_fs_attributes_if_different": [
            {
                "type": "method",
                "args": {
                    "file_args": "dict",
                    "changed": "bool",
                    "diff": "dict",
                    "expand": "bool"
                }
            }
        ],
        "AnsibleModule.set_file_attributes_if_different": [
            {
                "type": "method",
                "args": {
                    "file_args": "dict",
                    "changed": "bool",
                    "diff": "dict",
                    "expand": "bool"
                }
            }
        ],
        "AnsibleModule.set_directory_attributes_if_different": [
            {
                "type": "method",
                "args": {
                    "file_args": "dict",
                    "changed": "bool",
                    "diff": "dict",
                    "expand": "bool"
                }
            }
        ],
        "AnsibleModule.load_file_common_arguments": [
            {
                "type": "method",
                "args": {
                    "params": "dict",
                    "path": "str"
                }
            }
        ],
        "_load_params": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "AnsibleModule._load_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleModule.__init__": [
            {
                "type": "method",
                "args": {
                    "argument_spec": "dict",
                    "bypass_checks": "bool",
                    "no_log": "bool",
                    "mutually_exclusive": "bool",
                    "required_together": "bool",
                    "required_one_of": "bool",
                    "add_file_common_args": "bool",
                    "supports_check_mode": "bool",
                    "required_if": "bool",
                    "required_by": "bool"
                }
            }
        ]
    },
    "module_utils.urls": {
        "HAS_URLPARSE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_SSL": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_SSLCONTEXT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_URLLIB3_SSL_WRAP_SOCKET": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_URLLIB3_PYOPENSSLCONTEXT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PROTOCOL": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "libssl_name": [
            {
                "type": "var",
                "anno": "ctypes.Library"
            }
        ],
        "libssl": [
            {
                "type": "var",
                "anno": "ctypes.CDLL"
            }
        ],
        "_BUNDLED_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "LOADED_VERIFY_LOCATIONS": [
            {
                "type": "var",
                "anno": "set[str]"
            }
        ],
        "HAS_MATCH_HOSTNAME": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_GSSAPI": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_dnsname_match": [
            {
                "type": "func",
                "args": {
                    "dn": "str",
                    "hostname": "str"
                }
            }
        ],
        "_inet_paton": [
            {
                "type": "func",
                "args": {
                    "ipname": "str"
                }
            }
        ],
        "_ipaddress_match": [
            {
                "type": "func",
                "args": {
                    "ipname": "str",
                    "host_ip": "str"
                }
            }
        ],
        "b_DUMMY_CA_CERT": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "CustomHTTPSConnection.context": [
            {
                "type": "attr",
                "anno": "SSLContext"
            }
        ],
        "CustomHTTPSConnection._context": [
            {
                "type": "attr",
                "anno": "SSLContext"
            }
        ],
        "CustomHTTPSConnection.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "CustomHTTPSConnection.sock": [
            {
                "type": "attr",
                "anno": "socket.socket"
            }
        ],
        "CustomHTTPSHandler.https_request": [
            {
                "type": "attr",
                "anno": "AbstractHTTPHandler"
            }
        ],
        "CustomHTTPSHandler.https_open": [
            {
                "type": "method",
                "args": {
                    "req": "Request"
                }
            }
        ],
        "HTTPSClientAuthHandler.client_cert": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSClientAuthHandler.client_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSClientAuthHandler._unix_socket": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HTTPSClientAuthHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "client_cert": "str",
                    "client_key": "str",
                    "unix_socket": "str",
                    "kwargs": "str"
                }
            }
        ],
        "UnixHTTPSConnection._unix_socket": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UnixHTTPSConnection.__init__": [
            {
                "type": "method",
                "args": {
                    "unix_socket": "str"
                }
            }
        ],
        "UnixHTTPSConnection.__call__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "UnixHTTPConnection._unix_socket": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UnixHTTPConnection.__init__": [
            {
                "type": "method",
                "args": {
                    "unix_socket": "str"
                }
            }
        ],
        "UnixHTTPConnection.sock": [
            {
                "type": "attr",
                "anno": "socket.socket"
            }
        ],
        "UnixHTTPConnection.__call__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "UnixHTTPHandler._unix_socket": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UnixHTTPHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "unix_socket": "str",
                    "kwargs": "str"
                }
            }
        ],
        "UnixHTTPHandler.http_open": [
            {
                "type": "method",
                "args": {
                    "req": "Request"
                }
            }
        ],
        "ParseResultDottedDict.__dict__": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ParseResultDottedDict.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "RequestWithMethod._method": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RequestWithMethod.__init__": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "method": "str",
                    "data": "str",
                    "headers": "dict",
                    "origin_req_host": "str",
                    "unverifiable": "bool"
                }
            }
        ],
        "RequestWithMethod.get_method": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "atexit_remove_file": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "SSLValidationHandler.CONNECT_COMMAND": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SSLValidationHandler.hostname": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SSLValidationHandler.port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SSLValidationHandler.ca_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SSLValidationHandler.__init__": [
            {
                "type": "method",
                "args": {
                    "hostname": "str",
                    "port": "int",
                    "ca_path": "str"
                }
            }
        ],
        "SSLValidationHandler.detect_no_proxy": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "SSLValidationHandler.make_context": [
            {
                "type": "method",
                "args": {
                    "cafile": "str",
                    "cadata": "str"
                }
            }
        ],
        "rfc2822_date_string": [
            {
                "type": "func",
                "args": {
                    "timetuple": "tuple",
                    "zone": "str"
                }
            }
        ],
        "Request.headers": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Request.use_proxy": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Request.force": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Request.timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Request.validate_certs": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Request.url_username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.url_password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.http_agent": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.force_basic_auth": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Request.follow_redirects": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Request.client_cert": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.client_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.unix_socket": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.ca_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Request.cookies": [
            {
                "type": "attr",
                "anno": "cookiejar.CookieJar"
            }
        ],
        "Request.__init__": [
            {
                "type": "method",
                "args": {
                    "headers": "dict",
                    "use_proxy": "bool",
                    "force": "bool",
                    "timeout": "int",
                    "validate_certs": "bool",
                    "url_username": "str",
                    "url_password": "str",
                    "http_agent": "str",
                    "force_basic_auth": "bool",
                    "follow_redirects": "bool",
                    "client_cert": "str",
                    "client_key": "str",
                    "cookies": "cookiejar.CookieJar",
                    "unix_socket": "str",
                    "ca_path": "str"
                }
            }
        ],
        "Request._fallback": [
            {
                "type": "method",
                "args": {
                    "value": "str",
                    "fallback": "str"
                }
            }
        ],
        "basic_auth_header": [
            {
                "type": "func",
                "args": {
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "url_argument_spec": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "CustomHTTPSConnection.connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnixHTTPSConnection.connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnixHTTPConnection.connect": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "unix_socket_patch_httpconnection_connect": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "build_ssl_validation_error": [
            {
                "type": "func",
                "args": {
                    "hostname": "str",
                    "port": "int",
                    "paths": "list",
                    "exc": "Exception"
                }
            }
        ],
        "generic_urlparse": [
            {
                "type": "func",
                "args": {
                    "parts": "httplib.HTTP"
                }
            }
        ],
        "maybe_add_ssl_handler": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "validate_certs": "bool",
                    "ca_path": "str"
                }
            }
        ],
        "SSLValidationHandler.validate_proxy_response": [
            {
                "type": "method",
                "args": {
                    "response": "bytes",
                    "valid_codes": "list"
                }
            }
        ],
        "SSLValidationHandler.get_ca_certs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RedirectHandlerFactory": [
            {
                "type": "func",
                "args": {
                    "follow_redirects": "bool",
                    "validate_certs": "bool",
                    "ca_path": "str"
                }
            }
        ],
        "Request.open": [
            {
                "type": "method",
                "args": {
                    "method": "str",
                    "url": "str",
                    "data": "str",
                    "headers": "dict",
                    "use_proxy": "bool",
                    "force": "bool",
                    "last_mod_time": "datetime",
                    "timeout": "int",
                    "validate_certs": "bool",
                    "url_username": "str",
                    "url_password": "str",
                    "http_agent": "str",
                    "force_basic_auth": "bool",
                    "follow_redirects": "bool",
                    "client_cert": "str",
                    "client_key": "str",
                    "cookies": "cookiejar.CookieJar",
                    "use_gssapi": "bool",
                    "unix_socket": "str",
                    "ca_path": "str",
                    "unredirected_headers": "list"
                }
            }
        ],
        "open_url": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "data": "str",
                    "headers": "dict",
                    "method": "str",
                    "use_proxy": "bool",
                    "force": "bool",
                    "last_mod_time": "datetime",
                    "timeout": "int",
                    "validate_certs": "bool",
                    "url_username": "str",
                    "url_password": "str",
                    "http_agent": "str",
                    "force_basic_auth": "bool",
                    "follow_redirects": "bool",
                    "client_cert": "str",
                    "client_key": "str",
                    "cookies": "cookiejar.CookieJar",
                    "use_gssapi": "bool",
                    "unix_socket": "str",
                    "ca_path": "str",
                    "unredirected_headers": "list"
                }
            }
        ],
        "Request.delete": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Request.patch": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "data": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Request.put": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "data": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Request.post": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "data": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Request.head": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Request.options": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Request.get": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "kwargs": "str"
                }
            }
        ],
        "HTTPSClientAuthHandler._build_https_connection": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "kwargs": "str"
                }
            }
        ],
        "HTTPSClientAuthHandler.https_open": [
            {
                "type": "method",
                "args": {
                    "req": "Request"
                }
            }
        ],
        "ParseResultDottedDict.as_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "match_hostname": [
            {
                "type": "func",
                "args": {
                    "cert": "dict",
                    "hostname": "str"
                }
            }
        ],
        "SSLValidationHandler.http_request": [
            {
                "type": "method",
                "args": {
                    "req": "Request"
                }
            }
        ],
        "SSLValidationHandler.https_request": [
            {
                "type": "attr",
                "anno": "AbstractHTTPHandler"
            }
        ],
        "fetch_url": [
            {
                "type": "func",
                "args": {
                    "module": "Any",
                    "url": "str",
                    "data": "str",
                    "headers": "dict",
                    "method": "str",
                    "use_proxy": "bool",
                    "force": "bool",
                    "last_mod_time": "datetime",
                    "timeout": "int",
                    "use_gssapi": "bool",
                    "unix_socket": "str",
                    "ca_path": "str",
                    "cookies": "cookiejar.CookieJar"
                }
            }
        ],
        "fetch_file": [
            {
                "type": "func",
                "args": {
                    "module": "Any",
                    "url": "str",
                    "data": "str",
                    "headers": "dict",
                    "method": "str",
                    "use_proxy": "bool",
                    "force": "bool",
                    "last_mod_time": "datetime",
                    "timeout": "int"
                }
            }
        ]
    },
    "module_utils.pycompat24": {
        "get_exception": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "literal_eval": [
            {
                "type": "func",
                "args": {
                    "node_or_string": "Union[ast.Const, ast.Expression, ast.Name, ast.Expr]"
                }
            }
        ]
    },
    "module_utils.compat.paramiko": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "PARAMIKO_IMPORT_ERR": [
            {
                "type": "var",
                "anno": "Exception"
            }
        ],
        "paramiko": [
            {
                "type": "var",
                "anno": "paramiko.Parameter"
            }
        ]
    },
    "module_utils.compat._selectors2": {
        "monotonic": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "__author__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__email__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__license__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "EVENT_READ": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "EVENT_WRITE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "HAS_SELECT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_SYSCALL_SENTINEL": [
            {
                "type": "var",
                "anno": "object"
            }
        ],
        "SelectorError.errno": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "SelectorError.__init__": [
            {
                "type": "method",
                "args": {
                    "errcode": "int"
                }
            }
        ],
        "SelectorError.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SelectorError.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SelectorKey": [
            {
                "type": "var",
                "anno": "namedtuple"
            }
        ],
        "_SelectorMapping._selector": [
            {
                "type": "attr",
                "anno": "BaseSelector"
            }
        ],
        "_SelectorMapping.__init__": [
            {
                "type": "method",
                "args": {
                    "selector": "BaseSelector"
                }
            }
        ],
        "BaseSelector._fd_to_key": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_SelectorMapping.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_SelectorMapping.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSelector._map": [
            {
                "type": "attr",
                "anno": "_SelectorMapping"
            }
        ],
        "BaseSelector.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSelector.select": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "BaseSelector.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSelector.get_map": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSelector.get_key": [
            {
                "type": "method",
                "args": {
                    "fileobj": "str"
                }
            }
        ],
        "BaseSelector._key_from_fd": [
            {
                "type": "method",
                "args": {
                    "fd": "int"
                }
            }
        ],
        "BaseSelector.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BaseSelector.__exit__": [
            {
                "type": "method",
                "args": {
                    "args": "str"
                }
            }
        ],
        "SelectSelector._readers": [
            {
                "type": "attr",
                "anno": "set[int]"
            }
        ],
        "SelectSelector._writers": [
            {
                "type": "attr",
                "anno": "set[int]"
            }
        ],
        "SelectSelector.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SelectSelector._select": [
            {
                "type": "method",
                "args": {
                    "r": "int",
                    "w": "int",
                    "timeout": "float"
                }
            }
        ],
        "PollSelector._poll": [
            {
                "type": "attr",
                "anno": "select.poll"
            }
        ],
        "PollSelector.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PollSelector._wrap_poll": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "EpollSelector._epoll": [
            {
                "type": "attr",
                "anno": "select.epoll"
            }
        ],
        "EpollSelector.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DevpollSelector._devpoll": [
            {
                "type": "attr",
                "anno": "select.devpoll"
            }
        ],
        "DevpollSelector.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DevpollSelector._wrap_poll": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "KqueueSelector._kqueue": [
            {
                "type": "attr",
                "anno": "select.kqueue"
            }
        ],
        "KqueueSelector.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KqueueSelector.fileno": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "EpollSelector.fileno": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DevpollSelector.fileno": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_fileobj_to_fd": [
            {
                "type": "func",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "KqueueSelector._wrap_control": [
            {
                "type": "method",
                "args": {
                    "changelist": "list",
                    "max_events": "int",
                    "timeout": "int"
                }
            }
        ],
        "no_selector": [
            {
                "type": "func",
                "args": {
                    "_": "object"
                }
            }
        ],
        "DefaultSelector": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "BaseSelector._fileobj_lookup": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "BaseSelector.unregister": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "BaseSelector.register": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object",
                    "events": "int",
                    "data": "dict"
                }
            }
        ],
        "BaseSelector.modify": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object",
                    "events": "int",
                    "data": "dict"
                }
            }
        ],
        "_SelectorMapping.__getitem__": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "EpollSelector.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DevpollSelector.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KqueueSelector.close": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_syscall_wrapper": [
            {
                "type": "func",
                "args": {
                    "func": "Callable",
                    "recalc_timeout": "bool",
                    "args": "int",
                    "kwargs": "int"
                }
            }
        ],
        "KqueueSelector.select": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "DevpollSelector.select": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "EpollSelector.select": [
            {
                "type": "method",
                "args": {
                    "timeout": "float"
                }
            }
        ],
        "EpollSelector.unregister": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "SelectSelector.unregister": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "PollSelector.unregister": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "DevpollSelector.unregister": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "KqueueSelector.unregister": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object"
                }
            }
        ],
        "EpollSelector.register": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object",
                    "events": "int",
                    "data": "dict"
                }
            }
        ],
        "SelectSelector.register": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object",
                    "events": "int",
                    "data": "dict"
                }
            }
        ],
        "PollSelector.register": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object",
                    "events": "int",
                    "data": "dict"
                }
            }
        ],
        "DevpollSelector.register": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object",
                    "events": "int",
                    "data": "dict"
                }
            }
        ],
        "KqueueSelector.register": [
            {
                "type": "method",
                "args": {
                    "fileobj": "object",
                    "events": "int",
                    "data": "dict"
                }
            }
        ],
        "PollSelector.select": [
            {
                "type": "method",
                "args": {
                    "timeout": "int"
                }
            }
        ],
        "SelectSelector.select": [
            {
                "type": "method",
                "args": {
                    "timeout": "float"
                }
            }
        ]
    },
    "module_utils.compat.importlib": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "import_module": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ]
    },
    "module_utils.compat.selectors": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_BUNDLED_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_system_selectors": [
            {
                "type": "var",
                "anno": "selectors"
            }
        ],
        "selectors": [
            {
                "type": "var",
                "anno": "selectors"
            }
        ]
    },
    "module_utils.connection": {
        "write_to_file_descriptor": [
            {
                "type": "func",
                "args": {
                    "fd": "int",
                    "obj": "object"
                }
            }
        ],
        "send_data": [
            {
                "type": "func",
                "args": {
                    "s": "socket.socket",
                    "data": "bytes"
                }
            }
        ],
        "recv_data": [
            {
                "type": "func",
                "args": {
                    "s": "socket.socket"
                }
            }
        ],
        "request_builder": [
            {
                "type": "func",
                "args": {
                    "method_": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ConnectionError.__init__": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Connection.socket_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Connection.__init__": [
            {
                "type": "method",
                "args": {
                    "socket_path": "str"
                }
            }
        ],
        "Connection.send": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "Connection._exec_jsonrpc": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Connection.__rpc__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Connection.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "exec_command": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "command": "str"
                }
            }
        ]
    },
    "module_utils.common.collections": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ImmutableDict._store": [
            {
                "type": "attr",
                "anno": "Mapping"
            }
        ],
        "ImmutableDict.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "ImmutableDict.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "int"
                }
            }
        ],
        "ImmutableDict.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImmutableDict.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImmutableDict.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImmutableDict.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ImmutableDict.union": [
            {
                "type": "method",
                "args": {
                    "overriding_mapping": "Mapping"
                }
            }
        ],
        "is_string": [
            {
                "type": "func",
                "args": {
                    "seq": "Sequence"
                }
            }
        ],
        "is_iterable": [
            {
                "type": "func",
                "args": {
                    "seq": "Sequence",
                    "include_strings": "bool"
                }
            }
        ],
        "is_sequence": [
            {
                "type": "func",
                "args": {
                    "seq": "Sequence",
                    "include_strings": "bool"
                }
            }
        ],
        "ImmutableDict.difference": [
            {
                "type": "method",
                "args": {
                    "subtractive_iterable": "Iterable[str]"
                }
            }
        ],
        "count": [
            {
                "type": "func",
                "args": {
                    "seq": "Sequence"
                }
            }
        ]
    },
    "module_utils.common.sys_info": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "get_distribution": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_distribution_version": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_platform_subclass": [
            {
                "type": "func",
                "args": {
                    "cls": "type"
                }
            }
        ],
        "get_distribution_codename": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "module_utils.common.dict_transformations": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_snake_to_camel": [
            {
                "type": "func",
                "args": {
                    "snake": "str",
                    "capitalize_first": "bool"
                }
            }
        ],
        "dict_merge": [
            {
                "type": "func",
                "args": {
                    "a": "dict",
                    "b": "dict"
                }
            }
        ],
        "snake_dict_to_camel_dict": [
            {
                "type": "func",
                "args": {
                    "snake_dict": "str",
                    "capitalize_first": "bool"
                }
            }
        ],
        "_camel_to_snake": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "reversible": "bool"
                }
            }
        ],
        "camel_dict_to_snake_dict": [
            {
                "type": "func",
                "args": {
                    "camel_dict": "dict",
                    "reversible": "bool",
                    "ignore_list": "list"
                }
            }
        ],
        "recursive_diff": [
            {
                "type": "func",
                "args": {
                    "dict1": "dict",
                    "dict2": "dict"
                }
            }
        ]
    },
    "module_utils.common._json_compat": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "types.FunctionType"
            }
        ]
    },
    "module_utils.common.warnings": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_global_warnings": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "_global_deprecations": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "get_warning_messages": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_deprecation_messages": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "deprecate": [
            {
                "type": "func",
                "args": {
                    "msg": "str",
                    "version": "str"
                }
            }
        ],
        "warn": [
            {
                "type": "func",
                "args": {
                    "warning": "str"
                }
            }
        ]
    },
    "module_utils.common.removed": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "removed_module": [
            {
                "type": "func",
                "args": {
                    "removed_in": "str",
                    "msg": "str"
                }
            }
        ]
    },
    "module_utils.common.json": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AnsibleJSONEncoder._preprocess_unsafe": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleJSONEncoder.__init__": [
            {
                "type": "method",
                "args": {
                    "preprocess_unsafe": "bool",
                    "kwargs": "object"
                }
            }
        ],
        "_preprocess_unsafe_encode": [
            {
                "type": "func",
                "args": {
                    "value": "object"
                }
            }
        ],
        "AnsibleJSONEncoder.iterencode": [
            {
                "type": "method",
                "args": {
                    "o": "object",
                    "kwargs": "object"
                }
            }
        ],
        "AnsibleJSONEncoder.default": [
            {
                "type": "method",
                "args": {
                    "o": "object"
                }
            }
        ]
    },
    "module_utils.common._collections_compat": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "module_utils.common._utils": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "get_all_subclasses": [
            {
                "type": "func",
                "args": {
                    "cls": "type"
                }
            }
        ]
    },
    "module_utils.common.text.converters": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_SURROGATEESCAPE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_COMPOSED_ERROR_HANDLERS": [
            {
                "type": "var",
                "anno": "Set[str]"
            }
        ],
        "to_text": [
            {
                "type": "func",
                "args": {
                    "obj": "Union[text_type, binary_type]",
                    "encoding": "str",
                    "errors": "str",
                    "nonstring": "str"
                }
            }
        ],
        "container_to_text": [
            {
                "type": "func",
                "args": {
                    "d": "Union[text_type, binary_type, list, tuple, text_type]",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "to_bytes": [
            {
                "type": "func",
                "args": {
                    "obj": "Union[text_type, binary_type]",
                    "encoding": "str",
                    "errors": "str",
                    "nonstring": "str"
                }
            }
        ],
        "container_to_bytes": [
            {
                "type": "func",
                "args": {
                    "d": "Union[text_type, binary_type]",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "to_native": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_json_encode_fallback": [
            {
                "type": "func",
                "args": {
                    "obj": "Union[text_type, binary_type, set, datetime.datetime]"
                }
            }
        ],
        "jsonify": [
            {
                "type": "func",
                "args": {
                    "data": "Union[text_type, binary_type, list, tuple, text_type]",
                    "kwargs": "str"
                }
            }
        ]
    },
    "module_utils.common.text.formatters": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SIZE_RANGES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "bytes_to_human": [
            {
                "type": "func",
                "args": {
                    "size": "int",
                    "isbits": "bool",
                    "unit": "str"
                }
            }
        ],
        "lenient_lowercase": [
            {
                "type": "func",
                "args": {
                    "lst": "list"
                }
            }
        ],
        "human_to_bytes": [
            {
                "type": "func",
                "args": {
                    "number": "float",
                    "default_unit": "str",
                    "isbits": "bool"
                }
            }
        ]
    },
    "module_utils.common.process": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "get_bin_path": [
            {
                "type": "func",
                "args": {
                    "arg": "str",
                    "opt_dirs": "list",
                    "required": "bool"
                }
            }
        ]
    },
    "module_utils.common.validation": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "count_terms": [
            {
                "type": "func",
                "args": {
                    "terms": "str",
                    "module_parameters": "dict"
                }
            }
        ],
        "safe_eval": [
            {
                "type": "func",
                "args": {
                    "value": "str",
                    "locals": "dict",
                    "include_exceptions": "bool"
                }
            }
        ],
        "check_type_str": [
            {
                "type": "func",
                "args": {
                    "value": "Union[text_type, str]",
                    "allow_conversion": "bool"
                }
            }
        ],
        "check_type_list": [
            {
                "type": "func",
                "args": {
                    "value": "Union[text_type, list, int, float, text_type]"
                }
            }
        ],
        "check_type_bool": [
            {
                "type": "func",
                "args": {
                    "value": "Union[bool, text_type]"
                }
            }
        ],
        "check_type_int": [
            {
                "type": "func",
                "args": {
                    "value": "Union[int, text_type]"
                }
            }
        ],
        "check_type_float": [
            {
                "type": "func",
                "args": {
                    "value": "Union[float, binary_type, text_type, int, binary_type]"
                }
            }
        ],
        "check_type_path": [
            {
                "type": "func",
                "args": {
                    "value": "Union[text_type, str]"
                }
            }
        ],
        "check_type_raw": [
            {
                "type": "func",
                "args": {
                    "value": "type"
                }
            }
        ],
        "check_type_bytes": [
            {
                "type": "func",
                "args": {
                    "value": "Union[binary_type, text_type]"
                }
            }
        ],
        "check_type_bits": [
            {
                "type": "func",
                "args": {
                    "value": "Union[int, text_type]"
                }
            }
        ],
        "check_type_jsonarg": [
            {
                "type": "func",
                "args": {
                    "value": "object"
                }
            }
        ],
        "check_type_dict": [
            {
                "type": "func",
                "args": {
                    "value": "dict"
                }
            }
        ],
        "check_required_if": [
            {
                "type": "func",
                "args": {
                    "requirements": "list",
                    "module_parameters": "dict"
                }
            }
        ],
        "check_required_by": [
            {
                "type": "func",
                "args": {
                    "requirements": "dict",
                    "module_parameters": "dict"
                }
            }
        ],
        "check_required_together": [
            {
                "type": "func",
                "args": {
                    "terms": "str",
                    "module_parameters": "dict"
                }
            }
        ],
        "check_required_one_of": [
            {
                "type": "func",
                "args": {
                    "terms": "str",
                    "module_parameters": "dict"
                }
            }
        ],
        "check_mutually_exclusive": [
            {
                "type": "func",
                "args": {
                    "terms": "str",
                    "module_parameters": "dict"
                }
            }
        ],
        "check_missing_parameters": [
            {
                "type": "func",
                "args": {
                    "module_parameters": "dict",
                    "required_parameters": "list"
                }
            }
        ],
        "check_required_arguments": [
            {
                "type": "func",
                "args": {
                    "argument_spec": "dict",
                    "module_parameters": "list"
                }
            }
        ]
    },
    "module_utils.common.file": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAVE_SELINUX": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "FILE_ATTRIBUTES": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "MODE_OPERATOR_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "USERS_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "PERMS_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_PERM_BITS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_EXEC_PERM_BITS": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "_DEFAULT_PERM": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "is_executable": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "get_file_arg_spec": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "FileLock.lockfd": [
            {
                "type": "attr",
                "anno": "open"
            }
        ],
        "FileLock.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "get_flags_from_attributes": [
            {
                "type": "func",
                "args": {
                    "attributes": "list"
                }
            }
        ],
        "FileLock.unlock": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileLock.set_lock": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "tmpdir": "str",
                    "lock_timeout": "int"
                }
            }
        ],
        "FileLock.lock_file": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "tmpdir": "str",
                    "lock_timeout": "int"
                }
            }
        ],
        "format_attributes": [
            {
                "type": "func",
                "args": {
                    "attributes": "list"
                }
            }
        ]
    },
    "module_utils.common.parameters": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "NoneType": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "PASS_VARS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "PASS_BOOLS": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_return_datastructure_name": [
            {
                "type": "func",
                "args": {
                    "obj": "object"
                }
            }
        ],
        "handle_aliases": [
            {
                "type": "func",
                "args": {
                    "argument_spec": "dict",
                    "params": "dict",
                    "alias_warnings": "list"
                }
            }
        ],
        "list_deprecations": [
            {
                "type": "func",
                "args": {
                    "argument_spec": "dict",
                    "params": "dict",
                    "prefix": "str"
                }
            }
        ],
        "list_no_log_values": [
            {
                "type": "func",
                "args": {
                    "argument_spec": "dict",
                    "params": "dict"
                }
            }
        ]
    },
    "module_utils.common.network": {
        "VALID_MASKS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "is_netmask": [
            {
                "type": "func",
                "args": {
                    "val": "str"
                }
            }
        ],
        "is_masklen": [
            {
                "type": "func",
                "args": {
                    "val": "str"
                }
            }
        ],
        "to_netmask": [
            {
                "type": "func",
                "args": {
                    "val": "str"
                }
            }
        ],
        "to_bits": [
            {
                "type": "func",
                "args": {
                    "val": "str"
                }
            }
        ],
        "is_mac": [
            {
                "type": "func",
                "args": {
                    "mac_address": "str"
                }
            }
        ],
        "to_ipv6_network": [
            {
                "type": "func",
                "args": {
                    "addr": "str"
                }
            }
        ],
        "to_ipv6_subnet": [
            {
                "type": "func",
                "args": {
                    "addr": "str"
                }
            }
        ],
        "to_masklen": [
            {
                "type": "func",
                "args": {
                    "val": "str"
                }
            }
        ],
        "to_subnet": [
            {
                "type": "func",
                "args": {
                    "addr": "str",
                    "mask": "str",
                    "dotted_notation": "bool"
                }
            }
        ]
    },
    "module_utils.facts.hardware.netbsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "NetBSDHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBSDHardware.MEMORY_FACTS": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "NetBSDHardware.sysctl": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "NetBSDHardware.get_memory_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBSDHardware.get_dmi_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBSDHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Hardware]"
            }
        ],
        "NetBSDHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBSDHardware.get_cpu_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBSDHardware.get_mount_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBSDHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.darwin": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DarwinHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinHardware.sysctl": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DarwinHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "DarwinHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinHardware.get_memory_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinHardware.get_mac_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinHardware.get_system_profile": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinHardware.get_cpu_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.linux": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "get_partition_uuid": [
            {
                "type": "func",
                "args": {
                    "partname": "str"
                }
            }
        ],
        "LinuxHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxHardware.ORIGINAL_MEMORY_FACTS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "LinuxHardware.MEMORY_FACTS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "LinuxHardware.BIND_MOUNT_RE": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "LinuxHardware.MTAB_BIND_MOUNT_RE": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "LinuxHardware.OCTAL_ESCAPE_RE": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "LinuxHardware.get_uptime_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "LinuxHardwareCollector.required_facts": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "LinuxHardware.get_holders": [
            {
                "type": "method",
                "args": {
                    "block_dev_dict": "dict",
                    "sysdir": "str"
                }
            }
        ],
        "LinuxHardware._mtab_entries": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware._replace_octal_escapes_helper": [
            {
                "type": "method",
                "args": {
                    "match": "re.Match"
                }
            }
        ],
        "LinuxHardware._replace_octal_escapes": [
            {
                "type": "method",
                "args": {
                    "value": "str"
                }
            }
        ],
        "LinuxHardware.get_all_device_owners": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware.get_device_links": [
            {
                "type": "method",
                "args": {
                    "link_dir": "str"
                }
            }
        ],
        "LinuxHardware.get_all_device_links": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware.get_cpu_facts": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ],
        "LinuxHardware.get_memory_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware._run_findmnt": [
            {
                "type": "method",
                "args": {
                    "findmnt_path": "str"
                }
            }
        ],
        "LinuxHardware._run_lsblk": [
            {
                "type": "method",
                "args": {
                    "lsblk_path": "str"
                }
            }
        ],
        "LinuxHardware._find_mapper_device_name": [
            {
                "type": "method",
                "args": {
                    "dm_device": "str"
                }
            }
        ],
        "LinuxHardware.get_lvm_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware.get_device_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware._find_bind_mounts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware._udevadm_uuid": [
            {
                "type": "method",
                "args": {
                    "device": "str"
                }
            }
        ],
        "LinuxHardware.get_mount_info": [
            {
                "type": "method",
                "args": {
                    "mount": "str",
                    "device": "str",
                    "uuids": "dict"
                }
            }
        ],
        "LinuxHardware._lsblk_uuid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware.get_mount_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware.get_dmi_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.base": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Hardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Hardware.module": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "Hardware.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "type",
                    "load_on_init": "bool"
                }
            }
        ],
        "Hardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ],
        "HardwareCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HardwareCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "HardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "HardwareCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.dragonfly": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DragonFlyHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[FreeBSDHardware]"
            }
        ],
        "DragonFlyHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "module_utils.facts.hardware.aix": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AIXHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIXHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIXHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Hardware]"
            }
        ],
        "AIXHardware.get_memory_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIXHardware.get_cpu_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIXHardware.get_device_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIXHardware.get_mount_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIXHardware.get_vgs_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIXHardware.get_dmi_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIXHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.hpux": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HPUXHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HPUXHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Hardware]"
            }
        ],
        "HPUXHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HPUXHardwareCollector.required_facts": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "HPUXHardware.get_hw_facts": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ],
        "HPUXHardware.get_memory_facts": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ],
        "HPUXHardware.get_cpu_facts": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ],
        "HPUXHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.hurd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HurdHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HurdHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[HurdHardware]"
            }
        ],
        "HurdHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HurdHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.freebsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FreeBSDHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBSDHardware.DMESG_BOOT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBSDHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Hardware]"
            }
        ],
        "FreeBSDHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBSDHardware.get_device_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBSDHardware.get_mount_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBSDHardware.get_dmi_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBSDHardware.get_memory_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBSDHardware.get_cpu_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBSDHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.sunos": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SunOSHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "SunOSHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSHardwareCollector.required_facts": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "SunOSHardware.get_mount_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSHardware.get_uptime_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSHardware.get_device_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSHardware.get_memory_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSHardware.get_cpu_facts": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ],
        "SunOSHardware.get_dmi_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.hardware.openbsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "OpenBSDHardware.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDHardware.sysctl": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "OpenBSDHardware.get_dmi_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDHardwareCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Hardware]"
            }
        ],
        "OpenBSDHardwareCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDHardware.get_device_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDHardware.get_processor_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDHardware.get_mount_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDHardware.get_memory_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDHardware.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.virtual.netbsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "NetBSDVirtual.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBSDVirtualCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Virtual]"
            }
        ],
        "NetBSDVirtualCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBSDVirtual.get_virtual_facts": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "module_utils.facts.virtual.linux": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "LinuxVirtual.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxVirtualCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "LinuxVirtualCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxVirtual.get_virtual_facts": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "module_utils.facts.virtual.base": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Virtual.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Virtual.module": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "Virtual.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "type",
                    "load_on_init": "bool"
                }
            }
        ],
        "Virtual.get_virtual_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Virtual.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ],
        "VirtualCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VirtualCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "VirtualCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "VirtualCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.virtual.dragonfly": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DragonFlyVirtualCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[FreeBSDVirtual]"
            }
        ],
        "DragonFlyVirtualCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "module_utils.facts.virtual.hpux": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HPUXVirtual.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HPUXVirtualCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[HPUXVirtual]"
            }
        ],
        "HPUXVirtualCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HPUXVirtual.get_virtual_facts": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "module_utils.facts.virtual.freebsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FreeBSDVirtual.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBSDVirtualCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Virtual]"
            }
        ],
        "FreeBSDVirtualCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBSDVirtual.get_virtual_facts": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "module_utils.facts.virtual.sysctl": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "VirtualSysctlDetectionMixin.sysctl_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VirtualSysctlDetectionMixin.detect_sysctl": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VirtualSysctlDetectionMixin.detect_virt_vendor": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "VirtualSysctlDetectionMixin.detect_virt_product": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ]
    },
    "module_utils.facts.virtual.sunos": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SunOSVirtual.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSVirtualCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[SunOSVirtual]"
            }
        ],
        "SunOSVirtualCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSVirtual.get_virtual_facts": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "module_utils.facts.virtual.openbsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "OpenBSDVirtual.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDVirtual.DMESG_BOOT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDVirtualCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[OpenBSDVirtual]"
            }
        ],
        "OpenBSDVirtualCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDVirtual.get_virtual_facts": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "module_utils.facts.utils": {
        "get_mount_size": [
            {
                "type": "func",
                "args": {
                    "mountpoint": "str"
                }
            }
        ],
        "get_file_content": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "default": "str",
                    "strip": "bool"
                }
            }
        ],
        "get_file_lines": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "strip": "bool",
                    "line_sep": "str"
                }
            }
        ]
    },
    "module_utils.facts.ansible_collector": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AnsibleFactCollector.filter_spec": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleFactCollector.__init__": [
            {
                "type": "method",
                "args": {
                    "collectors": "list",
                    "namespace": "str",
                    "filter_spec": "str"
                }
            }
        ],
        "AnsibleFactCollector._filter": [
            {
                "type": "method",
                "args": {
                    "facts_dict": "dict",
                    "filter_spec": "str"
                }
            }
        ],
        "CollectorMetaDataCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectorMetaDataCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "CollectorMetaDataCollector.gather_subset": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectorMetaDataCollector.module_setup": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CollectorMetaDataCollector.__init__": [
            {
                "type": "method",
                "args": {
                    "collectors": "list",
                    "namespace": "str",
                    "gather_subset": "str",
                    "module_setup": "bool"
                }
            }
        ],
        "CollectorMetaDataCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ],
        "get_ansible_collector": [
            {
                "type": "func",
                "args": {
                    "all_collector_classes": "list",
                    "namespace": "str",
                    "filter_spec": "str",
                    "gather_subset": "str",
                    "gather_timeout": "float",
                    "minimal_gather_subset": "frozenset"
                }
            }
        ],
        "AnsibleFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "str",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.other.ohai": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "OhaiFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OhaiFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "OhaiFactCollector.__init__": [
            {
                "type": "method",
                "args": {
                    "collectors": "dict",
                    "namespace": "PrefixFactNamespace"
                }
            }
        ],
        "OhaiFactCollector.run_ohai": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule",
                    "ohai_path": "str"
                }
            }
        ],
        "OhaiFactCollector.find_ohai": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "OhaiFactCollector.get_ohai_output": [
            {
                "type": "method",
                "args": {
                    "module": "str"
                }
            }
        ],
        "OhaiFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "str",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.other.facter": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FacterFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FacterFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "FacterFactCollector.__init__": [
            {
                "type": "method",
                "args": {
                    "collectors": "dict",
                    "namespace": "prefixFactNamespace"
                }
            }
        ],
        "FacterFactCollector.run_facter": [
            {
                "type": "method",
                "args": {
                    "module": "str",
                    "facter_path": "str"
                }
            }
        ],
        "FacterFactCollector.find_facter": [
            {
                "type": "method",
                "args": {
                    "module": "str"
                }
            }
        ],
        "FacterFactCollector.get_facter_output": [
            {
                "type": "method",
                "args": {
                    "module": "str"
                }
            }
        ],
        "FacterFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "str",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.packages": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "get_all_pkg_managers": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "PkgMgr.is_available": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PkgMgr.list_installed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PkgMgr.get_package_details": [
            {
                "type": "method",
                "args": {
                    "package": "object"
                }
            }
        ],
        "LibMgr.LIB": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LibMgr._lib": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LibMgr.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LibMgr.is_available": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CLIMgr.CLI": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CLIMgr._cli": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CLIMgr.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CLIMgr.is_available": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PkgMgr.get_packages": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "module_utils.facts.namespace": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FactNamespace.namespace_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FactNamespace.__init__": [
            {
                "type": "method",
                "args": {
                    "namespace_name": "str"
                }
            }
        ],
        "FactNamespace.transform": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "FactNamespace._underscore": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "PrefixFactNamespace.prefix": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PrefixFactNamespace.__init__": [
            {
                "type": "method",
                "args": {
                    "namespace_name": "str",
                    "prefix": "str"
                }
            }
        ],
        "PrefixFactNamespace.transform": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ]
    },
    "module_utils.facts.compat": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ansible_facts": [
            {
                "type": "func",
                "args": {
                    "module": "object",
                    "gather_subset": "list"
                }
            }
        ],
        "get_all_facts": [
            {
                "type": "func",
                "args": {
                    "module": "object"
                }
            }
        ]
    },
    "module_utils.facts.collector": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "BaseFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "BaseFactCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BaseFactCollector.name": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "BaseFactCollector.required_facts": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "BaseFactCollector.collectors": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "BaseFactCollector.namespace": [
            {
                "type": "attr",
                "anno": "FactNamespace"
            }
        ],
        "BaseFactCollector.fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "BaseFactCollector._transform_name": [
            {
                "type": "method",
                "args": {
                    "key_name": "str"
                }
            }
        ],
        "BaseFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "str",
                    "collected_facts": "str"
                }
            }
        ],
        "BaseFactCollector._transform_dict_keys": [
            {
                "type": "method",
                "args": {
                    "fact_dict": "dict"
                }
            }
        ],
        "BaseFactCollector.collect_with_namespace": [
            {
                "type": "method",
                "args": {
                    "module": "str",
                    "collected_facts": "str"
                }
            }
        ],
        "build_dep_data": [
            {
                "type": "func",
                "args": {
                    "collector_names": "list",
                    "all_fact_subsets": "dict"
                }
            }
        ],
        "resolve_requires": [
            {
                "type": "func",
                "args": {
                    "unresolved_requires": "list",
                    "all_fact_subsets": "dict"
                }
            }
        ],
        "_get_requires_by_collector_name": [
            {
                "type": "func",
                "args": {
                    "collector_name": "str",
                    "all_fact_subsets": "dict"
                }
            }
        ],
        "find_unresolved_requires": [
            {
                "type": "func",
                "args": {
                    "collector_names": "list",
                    "all_fact_subsets": "dict"
                }
            }
        ],
        "BaseFactCollector.__init__": [
            {
                "type": "method",
                "args": {
                    "collectors": "list",
                    "namespace": "FactNamespace"
                }
            }
        ],
        "build_fact_id_to_collector_map": [
            {
                "type": "func",
                "args": {
                    "collectors_for_platform": "list"
                }
            }
        ],
        "select_collector_classes": [
            {
                "type": "func",
                "args": {
                    "collector_names": "list",
                    "all_fact_subsets": "dict"
                }
            }
        ],
        "get_collector_names": [
            {
                "type": "func",
                "args": {
                    "valid_subsets": "frozenset",
                    "minimal_gather_subset": "frozenset",
                    "gather_subset": "frozenset",
                    "aliases_map": "dict",
                    "platform_info": "dict"
                }
            }
        ],
        "BaseFactCollector.platform_match": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "platform_info": "dict"
                }
            }
        ],
        "find_collectors_for_platform": [
            {
                "type": "func",
                "args": {
                    "all_collector_classes": "list",
                    "compat_platforms": "list"
                }
            }
        ],
        "_solve_deps": [
            {
                "type": "func",
                "args": {
                    "collector_names": "list",
                    "all_fact_subsets": "dict"
                }
            }
        ],
        "tsort": [
            {
                "type": "func",
                "args": {
                    "dep_map": "dict"
                }
            }
        ],
        "collector_classes_from_gather_subset": [
            {
                "type": "func",
                "args": {
                    "all_collector_classes": "list",
                    "valid_subsets": "frozenset",
                    "minimal_gather_subset": "frozenset",
                    "gather_subset": "frozenset",
                    "gather_timeout": "float",
                    "platform_info": "dict"
                }
            }
        ]
    },
    "module_utils.facts.default_collectors": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_base": [
            {
                "type": "var",
                "anno": "list[type[FactCollector]]"
            }
        ],
        "_restrictive": [
            {
                "type": "var",
                "anno": "list[type[FactCollector]]"
            }
        ],
        "_general": [
            {
                "type": "var",
                "anno": "list[type[FactCollector]]"
            }
        ],
        "_virtual": [
            {
                "type": "var",
                "anno": "list[type[FactCollector]]"
            }
        ],
        "_hardware": [
            {
                "type": "var",
                "anno": "list[type[FactCollector]]"
            }
        ],
        "_network": [
            {
                "type": "var",
                "anno": "list[type[FactCollector]]"
            }
        ],
        "_extra_facts": [
            {
                "type": "var",
                "anno": "list[type[FactCollector]]"
            }
        ],
        "collectors": [
            {
                "type": "var",
                "anno": "list[type[FactCollector]]"
            }
        ]
    },
    "module_utils.facts.network.netbsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "NetBSDNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBSDNetwork.parse_media_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "NetBSDNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[NetBSDNetwork]"
            }
        ],
        "NetBSDNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "module_utils.facts.network.darwin": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DarwinNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[DarwinNetwork]"
            }
        ],
        "DarwinNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinNetwork.parse_media_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ]
    },
    "module_utils.facts.network.linux": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "LinuxNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxNetwork.INTERFACE_TYPE": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LinuxNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Network]"
            }
        ],
        "LinuxNetworkCollector.required_facts": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "LinuxNetwork.get_default_interfaces": [
            {
                "type": "method",
                "args": {
                    "ip_path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "LinuxNetwork.get_ethtool_data": [
            {
                "type": "method",
                "args": {
                    "device": "str"
                }
            }
        ],
        "LinuxNetwork.get_interfaces_info": [
            {
                "type": "method",
                "args": {
                    "ip_path": "str",
                    "default_ipv4": "dict",
                    "default_ipv6": "dict"
                }
            }
        ],
        "LinuxNetwork.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.network.nvme": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "NvmeInitiatorNetworkCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NvmeInitiatorNetworkCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "NvmeInitiatorNetworkCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.network.base": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Network.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Network.module": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "Network.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "type",
                    "load_on_init": "bool"
                }
            }
        ],
        "Network.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ],
        "NetworkCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "NetworkCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "NetworkCollector.IPV6_SCOPE": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "NetworkCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.network.generic_bsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "GenericBsdIfconfigNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GenericBsdIfconfigNetwork.detect_type_media": [
            {
                "type": "method",
                "args": {
                    "interfaces": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_ether_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_status_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_lladdr_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_tunnel_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_unknown_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.get_options": [
            {
                "type": "method",
                "args": {
                    "option_string": "str"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_media_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_nd6_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_options_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_interface_line": [
            {
                "type": "method",
                "args": {
                    "words": "list"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.merge_default_interface": [
            {
                "type": "method",
                "args": {
                    "defaults": "dict",
                    "interfaces": "dict",
                    "ip_type": "str"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_inet6_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.parse_inet_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.get_interfaces_info": [
            {
                "type": "method",
                "args": {
                    "ifconfig_path": "str",
                    "ifconfig_options": "str"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.get_default_interfaces": [
            {
                "type": "method",
                "args": {
                    "route_path": "str"
                }
            }
        ],
        "GenericBsdIfconfigNetwork.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.network.iscsi": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "IscsiInitiatorNetworkCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "IscsiInitiatorNetworkCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "IscsiInitiatorNetworkCollector.findstr": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "match": "str"
                }
            }
        ],
        "IscsiInitiatorNetworkCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.network.dragonfly": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DragonFlyNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DragonFlyNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[DragonFlyNetwork]"
            }
        ],
        "DragonFlyNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "module_utils.facts.network.aix": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AIXNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIXNetwork.parse_interface_line": [
            {
                "type": "method",
                "args": {
                    "words": "list"
                }
            }
        ],
        "AIXNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[AIXNetwork]"
            }
        ],
        "AIXNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIXNetwork.get_interfaces_info": [
            {
                "type": "method",
                "args": {
                    "ifconfig_path": "str",
                    "ifconfig_options": "str"
                }
            }
        ],
        "AIXNetwork.get_default_interfaces": [
            {
                "type": "method",
                "args": {
                    "route_path": "str"
                }
            }
        ]
    },
    "module_utils.facts.network.hpux": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HPUXNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HPUXNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Network]"
            }
        ],
        "HPUXNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HPUXNetwork.get_interfaces_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HPUXNetwork.get_default_interfaces": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HPUXNetwork.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.network.hurd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HurdPfinetNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HurdPfinetNetwork._socket_dir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HurdNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HurdNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[Network]"
            }
        ],
        "HurdPfinetNetwork.assign_network_facts": [
            {
                "type": "method",
                "args": {
                    "network_facts": "dict",
                    "fsysopts_path": "str",
                    "socket_path": "str"
                }
            }
        ],
        "HurdPfinetNetwork.populate": [
            {
                "type": "method",
                "args": {
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.network.freebsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FreeBSDNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBSDNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[FreeBSDNetwork]"
            }
        ],
        "FreeBSDNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ]
    },
    "module_utils.facts.network.sunos": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SunOSNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSNetwork.parse_ether_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "SunOSNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[SunOSNetwork]"
            }
        ],
        "SunOSNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSNetwork.parse_interface_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "interfaces": "dict"
                }
            }
        ],
        "SunOSNetwork.get_interfaces_info": [
            {
                "type": "method",
                "args": {
                    "ifconfig_path": "str"
                }
            }
        ]
    },
    "module_utils.facts.network.openbsd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "OpenBSDNetwork.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDNetwork.parse_lladdr_line": [
            {
                "type": "method",
                "args": {
                    "words": "list",
                    "current_if": "dict",
                    "ips": "dict"
                }
            }
        ],
        "OpenBSDNetworkCollector._fact_class": [
            {
                "type": "attr",
                "anno": "type[OpenBSDNetwork]"
            }
        ],
        "OpenBSDNetworkCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDNetwork.get_interfaces_info": [
            {
                "type": "method",
                "args": {
                    "ifconfig_path": "str",
                    "ifconfig_options": "str"
                }
            }
        ]
    },
    "module_utils.facts.network.fc_wwn": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FcWwnInitiatorFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FcWwnInitiatorFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "FcWwnInitiatorFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.lsb": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "LSBFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LSBFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "LSBFactCollector.STRIP_QUOTES": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LSBFactCollector._lsb_release_file": [
            {
                "type": "method",
                "args": {
                    "etc_lsb_release_location": "str"
                }
            }
        ],
        "LSBFactCollector._lsb_release_bin": [
            {
                "type": "method",
                "args": {
                    "lsb_path": "str",
                    "module": "object"
                }
            }
        ],
        "LSBFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.python": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_SSLCONTEXT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PythonFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PythonFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "PythonFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.pkg_mgr": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "PKG_MGRS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "OpenBSDPkgMgrFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDPkgMgrFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "OpenBSDPkgMgrFactCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDPkgMgrFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ],
        "PkgMgrFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PkgMgrFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "PkgMgrFactCollector._platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PkgMgrFactCollector.required_facts": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "PkgMgrFactCollector._check_rh_versions": [
            {
                "type": "method",
                "args": {
                    "pkg_mgr_name": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "PkgMgrFactCollector._check_apt_flavor": [
            {
                "type": "method",
                "args": {
                    "pkg_mgr_name": "str"
                }
            }
        ],
        "PkgMgrFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.caps": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SystemCapabilitiesFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SystemCapabilitiesFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "SystemCapabilitiesFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.apparmor": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ApparmorFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ApparmorFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "ApparmorFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.cmdline": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "CmdLineFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CmdLineFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "CmdLineFactCollector._get_proc_cmdline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CmdLineFactCollector._parse_proc_cmdline": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "CmdLineFactCollector._parse_proc_cmdline_facts": [
            {
                "type": "method",
                "args": {
                    "data": "str"
                }
            }
        ],
        "CmdLineFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.platform": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SOLARIS_I86_RE_PATTERN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "solaris_i86_re": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "PlatformFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlatformFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "PlatformFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.distribution": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_file_exists": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "allow_empty": "bool"
                }
            }
        ],
        "DistributionFiles.OSDIST_LIST": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "DistributionFiles.SEARCH_STRING": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DistributionFiles.OS_RELEASE_ALIAS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DistributionFiles.STRIP_QUOTES": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DistributionFiles.module": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "DistributionFiles.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "object"
                }
            }
        ],
        "DistributionFiles._get_file_content": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "DistributionFiles._get_dist_file_content": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "allow_empty": "bool"
                }
            }
        ],
        "DistributionFiles._parse_dist_file": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "dist_file_content": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles._guess_distribution": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DistributionFiles.parse_distribution_file_Slackware": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles.parse_distribution_file_Amazon": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles.parse_distribution_file_Alpine": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "Distribution.OSDIST_LIST": [
            {
                "type": "attr",
                "anno": "DistributionFiles"
            }
        ],
        "Distribution.SEARCH_STRING": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Distribution.OS_FAMILY_MAP": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Distribution.OS_FAMILY": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Distribution.module": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Distribution.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "object"
                }
            }
        ],
        "Distribution.get_distribution_DragonFly": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Distribution.get_distribution_NetBSD": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Distribution.get_distribution_SMGL": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DistributionFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DistributionFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "Distribution.get_distribution_FreeBSD": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DistributionFiles.parse_distribution_file_Coreos": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles.parse_distribution_file_NA": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles.parse_distribution_file_ClearLinux": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles.parse_distribution_file_Mandriva": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles.parse_distribution_file_SUSE": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles.parse_distribution_file_OpenWrt": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ],
        "DistributionFiles.process_dist_files": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Distribution.get_distribution_facts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DistributionFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ],
        "Distribution.get_distribution_OpenBSD": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Distribution.get_distribution_Darwin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Distribution.get_distribution_HPUX": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Distribution.get_distribution_AIX": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "get_uname": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "flags": "str"
                }
            }
        ],
        "Distribution.get_distribution_SunOS": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DistributionFiles.parse_distribution_file_Debian": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "data": "str",
                    "path": "str",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.fips": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FipsFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FipsFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "FipsFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.service_mgr": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ServiceMgrFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ServiceMgrFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "ServiceMgrFactCollector.required_facts": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "ServiceMgrFactCollector.is_systemd_managed_offline": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "ServiceMgrFactCollector.is_systemd_managed": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "ServiceMgrFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.ssh_pub_keys": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SshPubKeyFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SshPubKeyFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "SshPubKeyFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.env": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "EnvFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "EnvFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "EnvFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.date_time": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DateTimeFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DateTimeFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "DateTimeFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.chroot": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ChrootFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ChrootFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "is_chroot": [
            {
                "type": "func",
                "args": {
                    "module": "object"
                }
            }
        ],
        "ChrootFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.selinux": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAVE_SELINUX": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "SELINUX_MODE_DICT": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "SelinuxFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SelinuxFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "SelinuxFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.local": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "LocalFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LocalFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "LocalFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.user": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "UserFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UserFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "UserFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts.system.dns": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DnsFactCollector.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DnsFactCollector._fact_ids": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "DnsFactCollector.collect": [
            {
                "type": "method",
                "args": {
                    "module": "object",
                    "collected_facts": "dict"
                }
            }
        ]
    },
    "module_utils.facts": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "module_utils.facts.timeout": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "GATHER_TIMEOUT": [
            {
                "type": "var",
                "anno": "mp.Timeout"
            }
        ],
        "DEFAULT_GATHER_TIMEOUT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "timeout": [
            {
                "type": "func",
                "args": {
                    "seconds": "int",
                    "error_message": "str"
                }
            }
        ]
    },
    "module_utils.api": {
        "rate_limit": [
            {
                "type": "func",
                "args": {
                    "rate": "int",
                    "rate_limit": "int"
                }
            }
        ],
        "retry": [
            {
                "type": "func",
                "args": {
                    "retries": "int",
                    "retry_pause": "int"
                }
            }
        ],
        "basic_auth_argument_spec": [
            {
                "type": "func",
                "args": {
                    "spec": "dict"
                }
            }
        ],
        "retry_argument_spec": [
            {
                "type": "func",
                "args": {
                    "spec": "dict"
                }
            }
        ],
        "rate_limit_argument_spec": [
            {
                "type": "func",
                "args": {
                    "spec": "dict"
                }
            }
        ]
    },
    "module_utils.parsing.convert_bool": {
        "BOOLEANS_TRUE": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "BOOLEANS_FALSE": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "BOOLEANS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "boolean": [
            {
                "type": "func",
                "args": {
                    "value": "Union[bool, text_type, binary_type]",
                    "strict": "bool"
                }
            }
        ]
    },
    "module_utils.six": {
        "_BUNDLED_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "__author__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "PY2": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PY3": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PY34": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "string_types": [
            {
                "type": "var",
                "anno": "types.Type[str]"
            }
        ],
        "integer_types": [
            {
                "type": "var",
                "anno": "tuple[type, ...]"
            }
        ],
        "class_types": [
            {
                "type": "var",
                "anno": "tuple[type, types.Type]"
            }
        ],
        "text_type": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "binary_type": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "MAXSIZE": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "X.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_add_doc": [
            {
                "type": "func",
                "args": {
                    "func": "types.MethodType",
                    "doc": "str"
                }
            }
        ],
        "_import_module": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_LazyDescr.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_LazyDescr.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "MovedModule.mod": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovedModule.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "old": "str",
                    "new": "str"
                }
            }
        ],
        "MovedModule._resolve": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "MovedModule.__getattr__": [
            {
                "type": "method",
                "args": {
                    "attr": "str"
                }
            }
        ],
        "_LazyModule.__doc__": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_LazyModule.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_LazyModule._moved_attributes": [
            {
                "type": "attr",
                "anno": "list[types.Attribute]"
            }
        ],
        "MovedAttribute.mod": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovedAttribute.attr": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "MovedAttribute.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "old_mod": "str",
                    "new_mod": "str",
                    "old_attr": "str",
                    "new_attr": "str"
                }
            }
        ],
        "MovedAttribute._resolve": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_LazyDescr.__get__": [
            {
                "type": "method",
                "args": {
                    "obj": "types.ModuleType",
                    "tp": "str"
                }
            }
        ],
        "_SixMetaPathImporter.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_SixMetaPathImporter.known_modules": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_SixMetaPathImporter.__init__": [
            {
                "type": "method",
                "args": {
                    "six_module_name": "str"
                }
            }
        ],
        "_SixMetaPathImporter._add_module": [
            {
                "type": "method",
                "args": {
                    "mod": "tuple",
                    "fullnames": "str"
                }
            }
        ],
        "_SixMetaPathImporter._get_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str"
                }
            }
        ],
        "_SixMetaPathImporter.find_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str",
                    "path": "list"
                }
            }
        ],
        "_SixMetaPathImporter.__get_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str"
                }
            }
        ],
        "_SixMetaPathImporter.load_module": [
            {
                "type": "method",
                "args": {
                    "fullname": "str"
                }
            }
        ],
        "_SixMetaPathImporter.is_package": [
            {
                "type": "method",
                "args": {
                    "fullname": "str"
                }
            }
        ],
        "_SixMetaPathImporter.get_code": [
            {
                "type": "method",
                "args": {
                    "fullname": "str"
                }
            }
        ],
        "_SixMetaPathImporter.get_source": [
            {
                "type": "attr",
                "anno": "types.ModuleType"
            }
        ],
        "_importer": [
            {
                "type": "var",
                "anno": "_SixMetaPathImporter"
            }
        ],
        "_MovedItems.__path__": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "_moved_attributes": [
            {
                "type": "var",
                "anno": "list[MovedAttribute]"
            }
        ],
        "moves": [
            {
                "type": "var",
                "anno": "_MovedItems"
            }
        ],
        "_urllib_parse_moved_attributes": [
            {
                "type": "var",
                "anno": "list[MovedAttribute]"
            }
        ],
        "_urllib_error_moved_attributes": [
            {
                "type": "var",
                "anno": "list[MovedAttribute]"
            }
        ],
        "_urllib_request_moved_attributes": [
            {
                "type": "var",
                "anno": "list[MovedAttribute]"
            }
        ],
        "_urllib_response_moved_attributes": [
            {
                "type": "var",
                "anno": "list[MovedAttribute]"
            }
        ],
        "_urllib_robotparser_moved_attributes": [
            {
                "type": "var",
                "anno": "list[MovedAttribute]"
            }
        ],
        "Module_six_moves_urllib.__path__": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Module_six_moves_urllib.parse": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Module_six_moves_urllib.error": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Module_six_moves_urllib.request": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Module_six_moves_urllib.response": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Module_six_moves_urllib.robotparser": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Module_six_moves_urllib.__dir__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "remove_move": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_meth_func": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_meth_self": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_func_closure": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_func_code": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_func_defaults": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_func_globals": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "get_unbound_function": [
            {
                "type": "func",
                "args": {
                    "unbound": "types.MethodType"
                }
            }
        ],
        "create_bound_method": [
            {
                "type": "func",
                "args": {
                    "func": "Callable",
                    "obj": "object"
                }
            }
        ],
        "create_unbound_method": [
            {
                "type": "func",
                "args": {
                    "func": "Callable",
                    "cls": "types.ModuleType"
                }
            }
        ],
        "Iterator.next": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "callable": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "get_method_function": [
            {
                "type": "var",
                "anno": "typing.Callable"
            }
        ],
        "get_method_self": [
            {
                "type": "var",
                "anno": "types.MethodType"
            }
        ],
        "get_function_closure": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "get_function_code": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "get_function_defaults": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "get_function_globals": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "viewkeys": [
            {
                "type": "var",
                "anno": "types.MethodType"
            }
        ],
        "viewvalues": [
            {
                "type": "var",
                "anno": "types.MethodType"
            }
        ],
        "viewitems": [
            {
                "type": "var",
                "anno": "types.MethodType"
            }
        ],
        "iterkeys": [
            {
                "type": "func",
                "args": {
                    "d": "dict",
                    "kw": "str"
                }
            }
        ],
        "itervalues": [
            {
                "type": "func",
                "args": {
                    "d": "dict",
                    "kw": "str"
                }
            }
        ],
        "iteritems": [
            {
                "type": "func",
                "args": {
                    "d": "dict",
                    "kw": "str"
                }
            }
        ],
        "iterlists": [
            {
                "type": "func",
                "args": {
                    "d": "dict",
                    "kw": "str"
                }
            }
        ],
        "unichr": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "int2byte": [
            {
                "type": "var",
                "anno": "type[int]"
            }
        ],
        "iterbytes": [
            {
                "type": "var",
                "anno": "Callable[[], Iterator[int]]"
            }
        ],
        "StringIO": [
            {
                "type": "var",
                "anno": "Type[StringIO]"
            }
        ],
        "BytesIO": [
            {
                "type": "var",
                "anno": "Type[BytesIO]"
            }
        ],
        "_assertCountEqual": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_assertRaisesRegex": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_assertRegex": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "b": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "u": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "byte2int": [
            {
                "type": "func",
                "args": {
                    "bs": "bytes"
                }
            }
        ],
        "indexbytes": [
            {
                "type": "func",
                "args": {
                    "buf": "bytes",
                    "i": "int"
                }
            }
        ],
        "assertCountEqual": [
            {
                "type": "func",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "assertRaisesRegex": [
            {
                "type": "func",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "assertRegex": [
            {
                "type": "func",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "reraise": [
            {
                "type": "func",
                "args": {
                    "tp": "types.ModuleType",
                    "value": "types.ModuleType",
                    "tb": "str"
                }
            }
        ],
        "exec_": [
            {
                "type": "func",
                "args": {
                    "_code_": "str",
                    "_globs_": "str",
                    "_locs_": "str"
                }
            }
        ],
        "raise_from": [
            {
                "type": "func",
                "args": {
                    "value": "Exception",
                    "from_value": "Exception"
                }
            }
        ],
        "wraps": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "with_metaclass": [
            {
                "type": "func",
                "args": {
                    "meta": "type",
                    "bases": "str"
                }
            }
        ],
        "ensure_text": [
            {
                "type": "func",
                "args": {
                    "s": "Union[bytes, text_type]",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "__path__": [
            {
                "type": "var",
                "anno": "list[_SixMetaPathImporter]"
            }
        ],
        "__package__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "python_2_unicode_compatible": [
            {
                "type": "func",
                "args": {
                    "klass": "type"
                }
            }
        ],
        "ensure_str": [
            {
                "type": "func",
                "args": {
                    "s": "Union[text_type, binary_type]",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "ensure_binary": [
            {
                "type": "func",
                "args": {
                    "s": "Union[text_type, binary_type]",
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "advance_iterator": [
            {
                "type": "func",
                "args": {
                    "it": "Iterator"
                }
            }
        ],
        "next": [
            {
                "type": "var",
                "anno": "Iterator"
            }
        ],
        "add_move": [
            {
                "type": "func",
                "args": {
                    "move": "types.ModuleType"
                }
            }
        ],
        "_LazyModule.__dir__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "print_": [
            {
                "type": "func",
                "args": {
                    "args": "typing.Any",
                    "kwargs": "typing.Any"
                }
            }
        ],
        "_print": [
            {
                "type": "var",
                "anno": "typing.Callable"
            }
        ],
        "add_metaclass": [
            {
                "type": "func",
                "args": {
                    "metaclass": "object"
                }
            }
        ]
    },
    "module_utils.splitter": {
        "_get_quote_state": [
            {
                "type": "func",
                "args": {
                    "token": "str",
                    "quote_char": "str"
                }
            }
        ],
        "_count_jinja2_blocks": [
            {
                "type": "func",
                "args": {
                    "token": "str",
                    "cur_depth": "int",
                    "open_token": "str",
                    "close_token": "str"
                }
            }
        ],
        "is_quoted": [
            {
                "type": "func",
                "args": {
                    "data": "str"
                }
            }
        ],
        "unquote": [
            {
                "type": "func",
                "args": {
                    "data": "str"
                }
            }
        ],
        "split_args": [
            {
                "type": "func",
                "args": {
                    "args": "str"
                }
            }
        ]
    },
    "module_utils.distro._distro": {
        "_UNIXCONFDIR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_OS_RELEASE_BASENAME": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "NORMALIZED_OS_ID": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "NORMALIZED_LSB_ID": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "NORMALIZED_DISTRO_ID": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_DISTRO_RELEASE_CONTENT_REVERSED_PATTERN": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_DISTRO_RELEASE_BASENAME_PATTERN": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_DISTRO_RELEASE_IGNORE_BASENAMES": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "cached_property._fname": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "cached_property._f": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "cached_property.__init__": [
            {
                "type": "method",
                "args": {
                    "f": "Callable"
                }
            }
        ],
        "cached_property.__get__": [
            {
                "type": "method",
                "args": {
                    "obj": "object",
                    "owner": "object"
                }
            }
        ],
        "LinuxDistribution.os_release_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxDistribution.distro_release_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxDistribution.include_lsb": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LinuxDistribution.include_uname": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LinuxDistribution.__init__": [
            {
                "type": "method",
                "args": {
                    "include_lsb": "bool",
                    "os_release_file": "str",
                    "distro_release_file": "str",
                    "include_uname": "bool"
                }
            }
        ],
        "LinuxDistribution.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_distro": [
            {
                "type": "var",
                "anno": "LinuxDistribution"
            }
        ],
        "LinuxDistribution._parse_distro_release_content": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "LinuxDistribution._parse_distro_release_file": [
            {
                "type": "method",
                "args": {
                    "filepath": "str"
                }
            }
        ],
        "LinuxDistribution._distro_release_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxDistribution.distro_release_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "distro_release_info": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LinuxDistribution._parse_os_release_content": [
            {
                "type": "method",
                "args": {
                    "lines": "str"
                }
            }
        ],
        "LinuxDistribution._os_release_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxDistribution.os_release_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "os_release_info": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LinuxDistribution._parse_uname_content": [
            {
                "type": "method",
                "args": {
                    "lines": "list"
                }
            }
        ],
        "LinuxDistribution._parse_lsb_release_content": [
            {
                "type": "method",
                "args": {
                    "lines": "list"
                }
            }
        ],
        "LinuxDistribution.distro_release_attr": [
            {
                "type": "method",
                "args": {
                    "attribute": "str"
                }
            }
        ],
        "distro_release_attr": [
            {
                "type": "func",
                "args": {
                    "attribute": "str"
                }
            }
        ],
        "LinuxDistribution.os_release_attr": [
            {
                "type": "method",
                "args": {
                    "attribute": "str"
                }
            }
        ],
        "LinuxDistribution.like": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "like": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "os_release_attr": [
            {
                "type": "func",
                "args": {
                    "attribute": "str"
                }
            }
        ],
        "_my_check_output": [
            {
                "type": "func",
                "args": {
                    "popenargs": "str",
                    "kwargs": "str"
                }
            }
        ],
        "_check_output": [
            {
                "type": "var",
                "anno": "Callable"
            }
        ],
        "LinuxDistribution._uname_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxDistribution.uname_attr": [
            {
                "type": "method",
                "args": {
                    "attribute": "str"
                }
            }
        ],
        "uname_attr": [
            {
                "type": "func",
                "args": {
                    "attribute": "str"
                }
            }
        ],
        "LinuxDistribution.uname_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "uname_info": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LinuxDistribution._lsb_release_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxDistribution.lsb_release_attr": [
            {
                "type": "method",
                "args": {
                    "attribute": "str"
                }
            }
        ],
        "LinuxDistribution.codename": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "codename": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LinuxDistribution.version": [
            {
                "type": "method",
                "args": {
                    "pretty": "bool",
                    "best": "bool"
                }
            }
        ],
        "LinuxDistribution.version_parts": [
            {
                "type": "method",
                "args": {
                    "best": "bool"
                }
            }
        ],
        "LinuxDistribution.build_number": [
            {
                "type": "method",
                "args": {
                    "best": "bool"
                }
            }
        ],
        "build_number": [
            {
                "type": "func",
                "args": {
                    "best": "bool"
                }
            }
        ],
        "LinuxDistribution.minor_version": [
            {
                "type": "method",
                "args": {
                    "best": "bool"
                }
            }
        ],
        "minor_version": [
            {
                "type": "func",
                "args": {
                    "best": "bool"
                }
            }
        ],
        "LinuxDistribution.major_version": [
            {
                "type": "method",
                "args": {
                    "best": "bool"
                }
            }
        ],
        "major_version": [
            {
                "type": "func",
                "args": {
                    "best": "bool"
                }
            }
        ],
        "version_parts": [
            {
                "type": "func",
                "args": {
                    "best": "bool"
                }
            }
        ],
        "version": [
            {
                "type": "func",
                "args": {
                    "pretty": "bool",
                    "best": "bool"
                }
            }
        ],
        "LinuxDistribution.name": [
            {
                "type": "method",
                "args": {
                    "pretty": "bool"
                }
            }
        ],
        "name": [
            {
                "type": "func",
                "args": {
                    "pretty": "bool"
                }
            }
        ],
        "LinuxDistribution.id": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxDistribution.linux_distribution": [
            {
                "type": "method",
                "args": {
                    "full_distribution_name": "bool"
                }
            }
        ],
        "linux_distribution": [
            {
                "type": "func",
                "args": {
                    "full_distribution_name": "bool"
                }
            }
        ],
        "id": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "LinuxDistribution.info": [
            {
                "type": "method",
                "args": {
                    "pretty": "bool",
                    "best": "bool"
                }
            }
        ],
        "info": [
            {
                "type": "func",
                "args": {
                    "pretty": "bool",
                    "best": "bool"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "lsb_release_attr": [
            {
                "type": "func",
                "args": {
                    "attribute": "str"
                }
            }
        ],
        "LinuxDistribution.lsb_release_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "lsb_release_info": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "module_utils.distro": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_BUNDLED_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_system_distro": [
            {
                "type": "var",
                "anno": "distro"
            }
        ],
        "distro": [
            {
                "type": "var",
                "anno": "distro"
            }
        ]
    },
    "constants": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "set_constant": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "value": "str",
                    "export": "dict"
                }
            }
        ],
        "_DeprecatedSequenceConstant._value": [
            {
                "type": "attr",
                "anno": "Sequence[str]"
            }
        ],
        "_DeprecatedSequenceConstant._msg": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_DeprecatedSequenceConstant._version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "_DeprecatedSequenceConstant.__init__": [
            {
                "type": "method",
                "args": {
                    "value": "Sequence[str]",
                    "msg": "str",
                    "version": "str"
                }
            }
        ],
        "BECOME_METHODS": [
            {
                "type": "var",
                "anno": "Sequence[str]"
            }
        ],
        "BLACKLIST_EXTS": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "BOOL_TRUE": [
            {
                "type": "var",
                "anno": "type[bool]"
            }
        ],
        "COLLECTION_PTYPE_COMPAT": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DEFAULT_BECOME_PASS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DEFAULT_PASSWORD_CHARS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DEFAULT_REMOTE_PASS": [
            {
                "type": "var",
                "anno": "None"
            }
        ],
        "DEFAULT_SUBSET": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CONFIGURABLE_PLUGINS": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "DOCUMENTABLE_PLUGINS": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "IGNORE_FILES": [
            {
                "type": "var",
                "anno": "Sequence[str]"
            }
        ],
        "INTERNAL_RESULT_KEYS": [
            {
                "type": "var",
                "anno": "Sequence[str]"
            }
        ],
        "LOCALHOST": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "MODULE_REQUIRE_ARGS": [
            {
                "type": "var",
                "anno": "Sequence[str]"
            }
        ],
        "MODULE_NO_JSON": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "RESTRICTED_RESULT_KEYS": [
            {
                "type": "var",
                "anno": "Sequence[str]"
            }
        ],
        "TREE_DIR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "VAULT_VERSION_MIN": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "VAULT_VERSION_MAX": [
            {
                "type": "var",
                "anno": "float"
            }
        ],
        "INVALID_VARIABLE_NAMES": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "COMMON_CONNECTION_VARS": [
            {
                "type": "var",
                "anno": "frozenset[str]"
            }
        ],
        "MAGIC_VARIABLE_MAPPING": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "config": [
            {
                "type": "var",
                "anno": "ConfigManager"
            }
        ],
        "t": [
            {
                "type": "var",
                "anno": "Template"
            }
        ],
        "value": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_warning": [
            {
                "type": "func",
                "args": {
                    "msg": "str"
                }
            }
        ],
        "_deprecated": [
            {
                "type": "func",
                "args": {
                    "msg": "str",
                    "version": "str"
                }
            }
        ],
        "_DeprecatedSequenceConstant.__getitem__": [
            {
                "type": "method",
                "args": {
                    "y": "str"
                }
            }
        ],
        "_DeprecatedSequenceConstant.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "get_config": [
            {
                "type": "func",
                "args": {
                    "parser": "ConfigManager",
                    "section": "str",
                    "key": "str",
                    "env_var": "str",
                    "default_value": "str",
                    "value_type": "type",
                    "expand_relative_paths": "bool"
                }
            }
        ],
        "mk_boolean": [
            {
                "type": "func",
                "args": {
                    "value": "bool"
                }
            }
        ]
    },
    "galaxy.login": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "GalaxyLogin.GITHUB_AUTH": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyLogin.galaxy": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GalaxyLogin.github_username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyLogin.github_password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyLogin._validate_certs": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GalaxyLogin.get_credentials": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyLogin.__init__": [
            {
                "type": "method",
                "args": {
                    "galaxy": "dict",
                    "github_token": "str"
                }
            }
        ],
        "GalaxyLogin.remove_github_token": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyLogin.create_github_token": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "galaxy.user_agent": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "user_agent": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "galaxy.role": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "GalaxyRole.SUPPORTED_SCMS": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "GalaxyRole.META_MAIN": [
            {
                "type": "attr",
                "anno": "tuple[str, str]"
            }
        ],
        "GalaxyRole.META_INSTALL": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyRole.META_REQUIREMENTS": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "GalaxyRole.ROLE_DIRS": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "GalaxyRole._metadata": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GalaxyRole._requirements": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GalaxyRole._install_info": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GalaxyRole._validate_certs": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GalaxyRole.galaxy": [
            {
                "type": "attr",
                "anno": "Galaxy"
            }
        ],
        "GalaxyRole.api": [
            {
                "type": "attr",
                "anno": "GalaxyAPI"
            }
        ],
        "GalaxyRole.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyRole.version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyRole.src": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyRole.scm": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GalaxyRole.paths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GalaxyRole.path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyRole.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole._exists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole._write_galaxy_install_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole.spec": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole.metadata": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole.remove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole.requirements": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole.install_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole.__init__": [
            {
                "type": "method",
                "args": {
                    "galaxy": "Galaxy",
                    "api": "GalaxyAPI",
                    "name": "str",
                    "src": "str",
                    "version": "str",
                    "scm": "bool",
                    "path": "str"
                }
            }
        ],
        "GalaxyRole.fetch": [
            {
                "type": "method",
                "args": {
                    "role_data": "dict"
                }
            }
        ],
        "GalaxyRole.install": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyRole.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "GalaxyRole"
                }
            }
        ]
    },
    "galaxy.api": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "_urljoin": [
            {
                "type": "func",
                "args": {
                    "args": "str"
                }
            }
        ],
        "GalaxyError.http_code": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "GalaxyError.url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyError.message": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionVersionMetadata.namespace": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionVersionMetadata.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionVersionMetadata.version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionVersionMetadata.download_url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionVersionMetadata.artifact_sha256": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionVersionMetadata.dependencies": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CollectionVersionMetadata.__init__": [
            {
                "type": "method",
                "args": {
                    "namespace": "str",
                    "name": "str",
                    "version": "str",
                    "download_url": "str",
                    "artifact_sha256": "str",
                    "dependencies": "dict"
                }
            }
        ],
        "GalaxyAPI.galaxy": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyAPI.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyAPI.username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyAPI.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyAPI.token": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyAPI.api_server": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyAPI.validate_certs": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GalaxyAPI._available_api_versions": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GalaxyAPI.__init__": [
            {
                "type": "method",
                "args": {
                    "galaxy": "str",
                    "name": "str",
                    "url": "str",
                    "username": "str",
                    "password": "str",
                    "token": "str",
                    "validate_certs": "bool"
                }
            }
        ],
        "GalaxyAPI._add_auth_token": [
            {
                "type": "method",
                "args": {
                    "headers": "dict",
                    "url": "str",
                    "token_type": "str",
                    "required": "bool"
                }
            }
        ],
        "GalaxyError.__init__": [
            {
                "type": "method",
                "args": {
                    "http_error": "HTTPError",
                    "message": "str"
                }
            }
        ],
        "GalaxyAPI._call_galaxy": [
            {
                "type": "method",
                "args": {
                    "url": "str",
                    "args": "str",
                    "headers": "dict",
                    "method": "str",
                    "auth_required": "bool",
                    "error_context_msg": "str"
                }
            }
        ],
        "g_connect": [
            {
                "type": "func",
                "args": {
                    "versions": "list"
                }
            }
        ],
        "GalaxyAPI.available_api_versions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyAPI.get_collection_versions": [
            {
                "type": "method",
                "args": {
                    "namespace": "str",
                    "name": "str"
                }
            }
        ],
        "GalaxyAPI.get_collection_version_metadata": [
            {
                "type": "method",
                "args": {
                    "namespace": "str",
                    "name": "str",
                    "version": "str"
                }
            }
        ],
        "GalaxyAPI.wait_import_task": [
            {
                "type": "method",
                "args": {
                    "task_id": "str",
                    "timeout": "int"
                }
            }
        ],
        "GalaxyAPI.publish_collection": [
            {
                "type": "method",
                "args": {
                    "collection_path": "str"
                }
            }
        ],
        "GalaxyAPI.delete_role": [
            {
                "type": "method",
                "args": {
                    "github_user": "str",
                    "github_repo": "str"
                }
            }
        ],
        "GalaxyAPI.remove_secret": [
            {
                "type": "method",
                "args": {
                    "secret_id": "str"
                }
            }
        ],
        "GalaxyAPI.list_secrets": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyAPI.add_secret": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "github_user": "str",
                    "github_repo": "str",
                    "secret": "str"
                }
            }
        ],
        "GalaxyAPI.search_roles": [
            {
                "type": "method",
                "args": {
                    "search": "str",
                    "kwargs": "str"
                }
            }
        ],
        "GalaxyAPI.get_list": [
            {
                "type": "method",
                "args": {
                    "what": "str"
                }
            }
        ],
        "GalaxyAPI.fetch_role_related": [
            {
                "type": "method",
                "args": {
                    "related": "str",
                    "role_id": "str"
                }
            }
        ],
        "GalaxyAPI.lookup_role_by_name": [
            {
                "type": "method",
                "args": {
                    "role_name": "str",
                    "notify": "bool"
                }
            }
        ],
        "GalaxyAPI.get_import_task": [
            {
                "type": "method",
                "args": {
                    "task_id": "int",
                    "github_user": "str",
                    "github_repo": "str"
                }
            }
        ],
        "GalaxyAPI.create_import_task": [
            {
                "type": "method",
                "args": {
                    "github_user": "str",
                    "github_repo": "str",
                    "reference": "str",
                    "role_name": "str"
                }
            }
        ],
        "GalaxyAPI.authenticate": [
            {
                "type": "method",
                "args": {
                    "github_token": "str"
                }
            }
        ]
    },
    "galaxy.token": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "NoTokenSentinel.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "KeycloakToken.token_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KeycloakToken.access_token": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KeycloakToken.auth_url": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KeycloakToken._token": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "KeycloakToken.validate_certs": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "KeycloakToken.__init__": [
            {
                "type": "method",
                "args": {
                    "access_token": "str",
                    "auth_url": "str",
                    "validate_certs": "bool"
                }
            }
        ],
        "KeycloakToken._form_payload": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyToken.token_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyToken.b_file": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "GalaxyToken._config": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "GalaxyToken._token": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GalaxyToken.__init__": [
            {
                "type": "method",
                "args": {
                    "token": "str"
                }
            }
        ],
        "BasicAuthToken.token_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BasicAuthToken.username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BasicAuthToken.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BasicAuthToken._token": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "BasicAuthToken.__init__": [
            {
                "type": "method",
                "args": {
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "BasicAuthToken._encode_token": [
            {
                "type": "method",
                "args": {
                    "username": "str",
                    "password": "str"
                }
            }
        ],
        "BasicAuthToken.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BasicAuthToken.headers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyToken._read": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyToken.config": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyToken.save": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyToken.set": [
            {
                "type": "method",
                "args": {
                    "token": "str"
                }
            }
        ],
        "KeycloakToken.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyToken.get": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyToken.headers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "KeycloakToken.headers": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "galaxy": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "get_collections_galaxy_meta_info": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "Galaxy.roles_paths": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Galaxy.roles": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Galaxy.DATA_PATH": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Galaxy.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Galaxy.default_role_skeleton_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Galaxy.remove_role": [
            {
                "type": "method",
                "args": {
                    "role_name": "str"
                }
            }
        ],
        "Galaxy.add_role": [
            {
                "type": "method",
                "args": {
                    "role": "GalaxyRole"
                }
            }
        ]
    },
    "galaxy.collection": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "urlparse": [
            {
                "type": "var",
                "anno": "six.moves.urllib.URLParse"
            }
        ],
        "urllib_error": [
            {
                "type": "var",
                "anno": "six.moves.urllib.URLError"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "MANIFEST_FORMAT": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "ModifiedContent": [
            {
                "type": "var",
                "anno": "namedtuple"
            }
        ],
        "CollectionRequirement._FILE_MAPPING": [
            {
                "type": "attr",
                "anno": "list[tuple[bytes, str]]"
            }
        ],
        "CollectionRequirement.namespace": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionRequirement.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionRequirement.b_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionRequirement.api": [
            {
                "type": "attr",
                "anno": "GalaxyAPI"
            }
        ],
        "CollectionRequirement._versions": [
            {
                "type": "attr",
                "anno": "set[SemanticVersion]"
            }
        ],
        "CollectionRequirement.force": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CollectionRequirement.skip": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CollectionRequirement.required_by": [
            {
                "type": "attr",
                "anno": "list[tuple[str, str]]"
            }
        ],
        "CollectionRequirement.allow_pre_releases": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CollectionRequirement._metadata": [
            {
                "type": "attr",
                "anno": "CollectionVersionMetadata"
            }
        ],
        "CollectionRequirement._files": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "CollectionRequirement.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CollectionRequirement.__unicode__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CollectionRequirement.versions": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "validate_collection_name": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "validate_collection_path": [
            {
                "type": "func",
                "args": {
                    "collection_path": "str"
                }
            }
        ],
        "_tempdir": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_build_manifest": [
            {
                "type": "func",
                "args": {
                    "namespace": "str",
                    "name": "str",
                    "version": "str",
                    "authors": "str",
                    "readme": "str",
                    "tags": "str",
                    "description": "str",
                    "license_ids": "str",
                    "license_file": "str",
                    "dependencies": "list",
                    "repository": "str",
                    "documentation": "str",
                    "homepage": "str",
                    "issues": "str",
                    "kwargs": "dict"
                }
            }
        ],
        "_tarfile_extract": [
            {
                "type": "func",
                "args": {
                    "tar": "tarfile.TarFile",
                    "member": "bytes"
                }
            }
        ],
        "CollectionRequirement.latest_version": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CollectionRequirement.pre_releases": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_build_collection_tar": [
            {
                "type": "func",
                "args": {
                    "b_collection_path": "bytes",
                    "b_tar_path": "bytes",
                    "collection_manifest": "dict",
                    "file_manifest": "dict"
                }
            }
        ],
        "_consume_file": [
            {
                "type": "func",
                "args": {
                    "read_from": "tarfile.TarFile",
                    "write_to": "tarfile.TarFile"
                }
            }
        ],
        "CollectionRequirement._verify_file_hash": [
            {
                "type": "method",
                "args": {
                    "b_path": "str",
                    "filename": "str",
                    "expected_hash": "str",
                    "error_queue": "queue"
                }
            }
        ],
        "_get_galaxy_yml": [
            {
                "type": "func",
                "args": {
                    "b_galaxy_yml_path": "bytes"
                }
            }
        ],
        "CollectionRequirement._meets_requirements": [
            {
                "type": "method",
                "args": {
                    "version": "str",
                    "requirements": "str",
                    "parent": "str"
                }
            }
        ],
        "CollectionRequirement.add_requirement": [
            {
                "type": "method",
                "args": {
                    "parent": "str",
                    "requirement": "str"
                }
            }
        ],
        "CollectionRequirement.__init__": [
            {
                "type": "method",
                "args": {
                    "namespace": "str",
                    "name": "str",
                    "b_path": "str",
                    "api": "GalaxyAPI",
                    "versions": "list[SemanticVersion]",
                    "requirement": "str",
                    "force": "bool",
                    "parent": "str",
                    "metadata": "CollectionVersionMetadata",
                    "files": "dict",
                    "skip": "bool",
                    "allow_pre_releases": "bool"
                }
            }
        ],
        "CollectionRequirement.from_tar": [
            {
                "type": "method",
                "args": {
                    "b_path": "bytes",
                    "force": "bool",
                    "parent": "str"
                }
            }
        ],
        "CollectionRequirement._get_metadata": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CollectionRequirement.set_latest_version": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CollectionRequirement.dependencies": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CollectionRequirement.metadata": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_get_tar_file_member": [
            {
                "type": "func",
                "args": {
                    "tar": "tarfile.TarFile",
                    "filename": "str"
                }
            }
        ],
        "_get_tar_file_hash": [
            {
                "type": "func",
                "args": {
                    "b_path": "str",
                    "filename": "str"
                }
            }
        ],
        "_get_json_from_tar_file": [
            {
                "type": "func",
                "args": {
                    "b_path": "str",
                    "filename": "str"
                }
            }
        ],
        "CollectionRequirement.verify": [
            {
                "type": "method",
                "args": {
                    "remote_collection": "AnsibleCollectionRef",
                    "path": "str",
                    "b_temp_tar_path": "bytes"
                }
            }
        ],
        "_extract_tar_file": [
            {
                "type": "func",
                "args": {
                    "tar": "tarfile.TarFile",
                    "filename": "str",
                    "b_dest": "str",
                    "b_temp_path": "str",
                    "expected_hash": "str"
                }
            }
        ],
        "_download_file": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "b_path": "bytes",
                    "expected_hash": "str",
                    "validate_certs": "bool",
                    "headers": "dict"
                }
            }
        ],
        "CollectionRequirement.download": [
            {
                "type": "method",
                "args": {
                    "b_path": "bytes"
                }
            }
        ],
        "CollectionRequirement.install": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "b_temp_path": "str"
                }
            }
        ],
        "CollectionRequirement.from_name": [
            {
                "type": "method",
                "args": {
                    "collection": "str",
                    "apis": "list[GalaxyAPI]",
                    "requirement": "str",
                    "force": "bool",
                    "parent": "str",
                    "allow_pre_release": "bool"
                }
            }
        ],
        "_get_collection_info": [
            {
                "type": "func",
                "args": {
                    "dep_map": "dict",
                    "existing_collections": "list[str]",
                    "collection": "str",
                    "requirement": "str",
                    "source": "str",
                    "b_temp_path": "bytes",
                    "apis": "list[str]",
                    "validate_certs": "bool",
                    "force": "bool",
                    "parent": "str",
                    "allow_pre_release": "bool"
                }
            }
        ],
        "_build_dependency_map": [
            {
                "type": "func",
                "args": {
                    "collections": "list[tuple[str, str]]",
                    "existing_collections": "list[str]",
                    "b_temp_path": "bytes",
                    "apis": "list[str]",
                    "validate_certs": "bool",
                    "force": "bool",
                    "force_deps": "bool",
                    "no_deps": "bool",
                    "allow_pre_release": "bool"
                }
            }
        ],
        "_build_files_manifest": [
            {
                "type": "func",
                "args": {
                    "b_collection_path": "bytes",
                    "namespace": "str",
                    "name": "str",
                    "ignore_patterns": "list"
                }
            }
        ],
        "build_collection": [
            {
                "type": "func",
                "args": {
                    "collection_path": "str",
                    "output_path": "str",
                    "force": "bool"
                }
            }
        ],
        "_display_progress": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "publish_collection": [
            {
                "type": "func",
                "args": {
                    "collection_path": "str",
                    "api": "GalaxyAPI",
                    "wait": "bool",
                    "timeout": "int"
                }
            }
        ],
        "download_collections": [
            {
                "type": "func",
                "args": {
                    "collections": "list[tuple[str, str]]",
                    "output_path": "str",
                    "apis": "list[str]",
                    "validate_certs": "bool",
                    "no_deps": "bool",
                    "allow_pre_release": "bool"
                }
            }
        ],
        "CollectionRequirement.from_path": [
            {
                "type": "method",
                "args": {
                    "b_path": "bytes",
                    "force": "bool",
                    "parent": "str"
                }
            }
        ],
        "find_existing_collections": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "install_collections": [
            {
                "type": "func",
                "args": {
                    "collections": "list[tuple[str, str]]",
                    "output_path": "str",
                    "apis": "list[str]",
                    "validate_certs": "bool",
                    "ignore_errors": "bool",
                    "no_deps": "bool",
                    "force": "bool",
                    "force_deps": "bool",
                    "allow_pre_release": "bool"
                }
            }
        ],
        "verify_collections": [
            {
                "type": "func",
                "args": {
                    "collections": "list[str]",
                    "search_paths": "list[str]",
                    "apis": "list[GalaxyAPI]",
                    "validate_certs": "bool",
                    "ignore_errors": "bool",
                    "allow_pre_release": "bool"
                }
            }
        ]
    },
    "executor.powershell.module_manifest": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "PSModuleDepFinder.ps_modules": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder.exec_scripts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder.cs_utils_wrapper": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder.cs_utils_module": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder.ps_version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PSModuleDepFinder.os_version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PSModuleDepFinder.become": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PSModuleDepFinder._re_cs_module": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder._re_cs_in_ps_module": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder._re_ps_module": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder._re_wrapper": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder._re_ps_version": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder._re_os_version": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder._re_become": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PSModuleDepFinder.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_strip_comments": [
            {
                "type": "func",
                "args": {
                    "source": "bytes"
                }
            }
        ],
        "PSModuleDepFinder._parse_version_match": [
            {
                "type": "method",
                "args": {
                    "match": "re.Match",
                    "attribute": "str"
                }
            }
        ],
        "_slurp": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "PSModuleDepFinder._add_module": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "wrapper": "bool"
                }
            }
        ],
        "PSModuleDepFinder.scan_module": [
            {
                "type": "method",
                "args": {
                    "module_data": "bytes",
                    "fqn": "str",
                    "wrapper": "bool",
                    "powershell": "bool"
                }
            }
        ],
        "PSModuleDepFinder.scan_exec_script": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_create_powershell_wrapper": [
            {
                "type": "func",
                "args": {
                    "b_module_data": "bytes",
                    "module_path": "str",
                    "module_args": "list",
                    "environment": "str",
                    "async_timeout": "int",
                    "become": "bool",
                    "become_method": "str",
                    "become_user": "str",
                    "become_password": "str",
                    "become_flags": "str",
                    "substyle": "str",
                    "task_vars": "list",
                    "module_fqn": "str"
                }
            }
        ]
    },
    "executor.play_iterator": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "C[str]"
            }
        ],
        "HostState._blocks": [
            {
                "type": "attr",
                "anno": "list[Block]"
            }
        ],
        "HostState.cur_block": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HostState.cur_regular_task": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HostState.cur_rescue_task": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HostState.cur_always_task": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HostState.cur_dep_chain": [
            {
                "type": "attr",
                "anno": "list[int]"
            }
        ],
        "HostState.run_state": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HostState.fail_state": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HostState.pending_setup": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HostState.tasks_child_state": [
            {
                "type": "attr",
                "anno": "list[Block]"
            }
        ],
        "HostState.rescue_child_state": [
            {
                "type": "attr",
                "anno": "list[Block]"
            }
        ],
        "HostState.always_child_state": [
            {
                "type": "attr",
                "anno": "list[Block]"
            }
        ],
        "HostState.did_rescue": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HostState.did_start_at_task": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "HostState.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostState.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "HostState.get_current_block": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PlayIterator.ITERATING_SETUP": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.ITERATING_TASKS": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.ITERATING_RESCUE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.ITERATING_ALWAYS": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.ITERATING_COMPLETE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.FAILED_NONE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "HostState.__init__": [
            {
                "type": "method",
                "args": {
                    "blocks": "list[Block]"
                }
            }
        ],
        "PlayIterator.FAILED_SETUP": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.FAILED_TASKS": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.FAILED_RESCUE": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.FAILED_ALWAYS": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator._play": [
            {
                "type": "attr",
                "anno": "Play"
            }
        ],
        "PlayIterator._blocks": [
            {
                "type": "attr",
                "anno": "list[Block]"
            }
        ],
        "PlayIterator._variable_manager": [
            {
                "type": "attr",
                "anno": "VariableManager"
            }
        ],
        "PlayIterator._host_states": [
            {
                "type": "attr",
                "anno": "dict[str, HostState]"
            }
        ],
        "PlayIterator.batch_size": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayIterator.cache_block_tasks": [
            {
                "type": "method",
                "args": {
                    "block": "Block"
                }
            }
        ],
        "PlayIterator._set_failed_state": [
            {
                "type": "method",
                "args": {
                    "state": "HostState"
                }
            }
        ],
        "PlayIterator._check_failed_state": [
            {
                "type": "method",
                "args": {
                    "state": "HostState"
                }
            }
        ],
        "PlayIterator.get_active_state": [
            {
                "type": "method",
                "args": {
                    "state": "HostState"
                }
            }
        ],
        "PlayIterator.get_original_task": [
            {
                "type": "method",
                "args": {
                    "host": "HostState",
                    "task": "Task"
                }
            }
        ],
        "PlayIterator.get_failed_hosts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostState.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostState.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PlayIterator._insert_tasks_into_state": [
            {
                "type": "method",
                "args": {
                    "state": "HostState",
                    "task_list": "list[int]"
                }
            }
        ],
        "PlayIterator.get_host_state": [
            {
                "type": "method",
                "args": {
                    "host": "Host"
                }
            }
        ],
        "PlayIterator.add_tasks": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "task_list": "list[int]"
                }
            }
        ],
        "PlayIterator.is_failed": [
            {
                "type": "method",
                "args": {
                    "host": "Host"
                }
            }
        ],
        "PlayIterator.mark_host_failed": [
            {
                "type": "method",
                "args": {
                    "host": "Host"
                }
            }
        ],
        "PlayIterator._get_next_task_from_state": [
            {
                "type": "method",
                "args": {
                    "state": "HostState",
                    "host": "Host",
                    "peek": "bool",
                    "in_child": "bool"
                }
            }
        ],
        "PlayIterator.get_next_task_for_host": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "peek": "bool"
                }
            }
        ],
        "PlayIterator.__init__": [
            {
                "type": "method",
                "args": {
                    "inventory": "InventoryManager",
                    "play": "Play",
                    "play_context": "PlayContext",
                    "variable_manager": "VariableManager",
                    "all_vars": "list[str]",
                    "start_at_done": "bool"
                }
            }
        ]
    },
    "executor.module_common": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "imp": [
            {
                "type": "var",
                "anno": "imp.ModuleInfo"
            }
        ],
        "FileNotFoundError": [
            {
                "type": "var",
                "anno": "FileNotFoundError"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "REPLACER": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "REPLACER_VERSION": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "REPLACER_COMPLEX": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "REPLACER_WINDOWS": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "REPLACER_JSONARGS": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "REPLACER_SELINUX": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "ENCODING_STRING": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "b_ENCODING_STRING": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "_MODULE_UTILS_PATH": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ANSIBALLZ_TEMPLATE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ANSIBALLZ_COVERAGE_TEMPLATE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ANSIBALLZ_COVERAGE_CHECK_TEMPLATE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ANSIBALLZ_RLIMIT_TEMPLATE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "site_packages": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CORE_LIBRARY_PATH_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "COLLECTION_PATH_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "NEW_STYLE_PYTHON_MODULE_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "ModuleDepFinder.submodules": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "ModuleDepFinder.module_fqn": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ModuleDepFinder.__init__": [
            {
                "type": "method",
                "args": {
                    "module_fqn": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "ModuleInfo.py_src": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ModuleInfo.pkg_dir": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ModuleInfo._info": [
            {
                "type": "attr",
                "anno": "imp.ModuleInfo"
            }
        ],
        "ModuleInfo.path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ModuleInfo.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CollectionModuleInfo._mod_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionModuleInfo.py_src": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CollectionModuleInfo.pkg_dir": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CollectionModuleInfo._package_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionModuleInfo.path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CollectionModuleInfo.get_source": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CollectionModuleInfo.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "paths": "list"
                }
            }
        ],
        "_is_binary": [
            {
                "type": "func",
                "args": {
                    "b_module_data": "bytes"
                }
            }
        ],
        "_add_module_to_zip": [
            {
                "type": "func",
                "args": {
                    "zf": "zipfile.ZipFile",
                    "remote_module_fqn": "str",
                    "b_module_data": "bytes"
                }
            }
        ],
        "_strip_comments": [
            {
                "type": "func",
                "args": {
                    "source": "str"
                }
            }
        ],
        "ACTIVE_ANSIBALLZ_TEMPLATE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_get_ansible_module_fqn": [
            {
                "type": "func",
                "args": {
                    "module_path": "str"
                }
            }
        ],
        "_slurp": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ModuleInfo.get_source": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ModuleDepFinder.visit_ImportFrom": [
            {
                "type": "method",
                "args": {
                    "node": "ast.ImportFrom"
                }
            }
        ],
        "ModuleDepFinder.visit_Import": [
            {
                "type": "method",
                "args": {
                    "node": "ast.Import"
                }
            }
        ],
        "ModuleInfo.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "paths": "list"
                }
            }
        ],
        "recursive_finder": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "module_fqn": "str",
                    "data": "str",
                    "py_module_names": "list",
                    "py_module_cache": "dict",
                    "zf": "zipfile.ZipFile"
                }
            }
        ],
        "get_action_args_with_defaults": [
            {
                "type": "func",
                "args": {
                    "action": "str",
                    "args": "dict",
                    "defaults": "object",
                    "templar": "Templar"
                }
            }
        ],
        "_get_shebang": [
            {
                "type": "func",
                "args": {
                    "interpreter": "str",
                    "task_vars": "dict",
                    "templar": "templar.Templar",
                    "args": "tuple"
                }
            }
        ],
        "_find_module_utils": [
            {
                "type": "func",
                "args": {
                    "module_name": "str",
                    "b_module_data": "bytes",
                    "module_path": "str",
                    "module_args": "tuple",
                    "task_vars": "dict",
                    "templar": "templar.Templar",
                    "module_compression": "str",
                    "async_timeout": "int",
                    "become": "str",
                    "become_method": "str",
                    "become_user": "str",
                    "become_password": "str",
                    "become_flags": "str",
                    "environment": "str"
                }
            }
        ],
        "modify_module": [
            {
                "type": "func",
                "args": {
                    "module_name": "str",
                    "module_path": "str",
                    "module_args": "tuple",
                    "templar": "templar.Templar",
                    "task_vars": "dict",
                    "module_compression": "str",
                    "async_timeout": "int",
                    "become": "bool",
                    "become_method": "str",
                    "become_user": "str",
                    "become_password": "str",
                    "become_flags": "str",
                    "environment": "str"
                }
            }
        ]
    },
    "executor.action_write_locks": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "action_write_locks": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "mods": [
            {
                "type": "var",
                "anno": "set[str]"
            }
        ]
    },
    "executor.playbook_executor": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "PlaybookExecutor._playbooks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PlaybookExecutor._inventory": [
            {
                "type": "attr",
                "anno": "InventoryManager"
            }
        ],
        "PlaybookExecutor._variable_manager": [
            {
                "type": "attr",
                "anno": "VariableManager"
            }
        ],
        "PlaybookExecutor._loader": [
            {
                "type": "attr",
                "anno": "TaskLoader"
            }
        ],
        "PlaybookExecutor.passwords": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlaybookExecutor._unreachable_hosts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PlaybookExecutor._tqm": [
            {
                "type": "attr",
                "anno": "TaskQueueManager"
            }
        ],
        "PlaybookExecutor.__init__": [
            {
                "type": "method",
                "args": {
                    "playbooks": "list",
                    "inventory": "InventoryManager",
                    "variable_manager": "VariableManager",
                    "loader": "TaskLoader",
                    "passwords": "str"
                }
            }
        ],
        "PlaybookExecutor._generate_retry_inventory": [
            {
                "type": "method",
                "args": {
                    "retry_path": "str",
                    "replay_hosts": "list"
                }
            }
        ],
        "PlaybookExecutor._get_serialized_batches": [
            {
                "type": "method",
                "args": {
                    "play": "Play"
                }
            }
        ],
        "PlaybookExecutor.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "executor.task_executor": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[type[TaskExecutor]]"
            }
        ],
        "TaskExecutor.SQUASH_ACTIONS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "TaskExecutor._host": [
            {
                "type": "attr",
                "anno": "Host"
            }
        ],
        "TaskExecutor._task": [
            {
                "type": "attr",
                "anno": "Task"
            }
        ],
        "TaskExecutor._job_vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TaskExecutor._play_context": [
            {
                "type": "attr",
                "anno": "PlayContext"
            }
        ],
        "TaskExecutor._new_stdin": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "TaskExecutor._loader": [
            {
                "type": "attr",
                "anno": "PluginLoader"
            }
        ],
        "TaskExecutor._shared_loader_obj": [
            {
                "type": "attr",
                "anno": "PluginLoader"
            }
        ],
        "TaskExecutor._connection": [
            {
                "type": "attr",
                "anno": "C.Connection"
            }
        ],
        "TaskExecutor._final_q": [
            {
                "type": "attr",
                "anno": "threading.Queue"
            }
        ],
        "TaskExecutor._loop_eval_error": [
            {
                "type": "attr",
                "anno": "AnsibleError"
            }
        ],
        "TaskExecutor._handler": [
            {
                "type": "attr",
                "anno": "C.ActionHandler"
            }
        ],
        "TaskExecutor._get_become": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "remove_omit": [
            {
                "type": "func",
                "args": {
                    "task_args": "dict",
                    "omit_token": "str"
                }
            }
        ],
        "TaskExecutor.__init__": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "task": "Task",
                    "job_vars": "dict",
                    "play_context": "PlayContext",
                    "new_stdin": "bytes",
                    "loader": "PluginLoader",
                    "shared_loader_obj": "PluginLoader",
                    "final_q": "threading.Queue"
                }
            }
        ],
        "start_connection": [
            {
                "type": "func",
                "args": {
                    "play_context": "PlayContext",
                    "variables": "dict",
                    "task_uuid": "str"
                }
            }
        ],
        "TaskExecutor._get_action_handler": [
            {
                "type": "method",
                "args": {
                    "connection": "C.Connection",
                    "templar": "Templar"
                }
            }
        ],
        "TaskExecutor._get_loop_items": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskExecutor.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskExecutor._set_plugin_options": [
            {
                "type": "method",
                "args": {
                    "plugin_type": "str",
                    "variables": "dict",
                    "templar": "Templar",
                    "task_keys": "dict"
                }
            }
        ],
        "TaskExecutor._set_connection_options": [
            {
                "type": "method",
                "args": {
                    "variables": "dict",
                    "templar": "Templar"
                }
            }
        ],
        "TaskExecutor._get_persistent_connection_options": [
            {
                "type": "method",
                "args": {
                    "connection": "C.Connection",
                    "variables": "dict",
                    "templar": "Templar"
                }
            }
        ],
        "TaskExecutor._get_connection": [
            {
                "type": "method",
                "args": {
                    "variables": "dict",
                    "templar": "Templar"
                }
            }
        ],
        "TaskExecutor._squash_items": [
            {
                "type": "method",
                "args": {
                    "items": "list",
                    "loop_var": "str",
                    "variables": "dict"
                }
            }
        ],
        "TaskExecutor._poll_async_result": [
            {
                "type": "method",
                "args": {
                    "result": "TaskResult",
                    "templar": "Templar",
                    "task_vars": "dict"
                }
            }
        ],
        "TaskExecutor._execute": [
            {
                "type": "method",
                "args": {
                    "variables": "dict"
                }
            }
        ],
        "TaskExecutor._run_loop": [
            {
                "type": "method",
                "args": {
                    "items": "list"
                }
            }
        ]
    },
    "executor.task_result": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type[TaskResult]"
            }
        ],
        "_IGNORE": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "_PRESERVE": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "_SUB_PRESERVE": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "CLEAN_EXCEPTIONS": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "TaskResult._host": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "TaskResult._task": [
            {
                "type": "attr",
                "anno": "Task"
            }
        ],
        "TaskResult._result": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TaskResult._task_fields": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TaskResult._check_key": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "TaskResult.is_unreachable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskResult.is_failed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskResult.is_changed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskResult.is_skipped": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskResult.needs_debugger": [
            {
                "type": "method",
                "args": {
                    "globally_enabled": "bool"
                }
            }
        ],
        "TaskResult.task_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskResult.__init__": [
            {
                "type": "method",
                "args": {
                    "host": "object",
                    "task": "Task",
                    "return_data": "dict",
                    "task_fields": "dict"
                }
            }
        ],
        "TaskResult.clean_copy": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "executor.task_queue_manager": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[type[TaskQueueManager]]"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "TaskQueueManager.RUN_OK": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TaskQueueManager.RUN_ERROR": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TaskQueueManager.RUN_FAILED_HOSTS": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TaskQueueManager.RUN_UNREACHABLE_HOSTS": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TaskQueueManager.RUN_FAILED_BREAK_PLAY": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TaskQueueManager.RUN_UNKNOWN_ERROR": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TaskQueueManager._inventory": [
            {
                "type": "attr",
                "anno": "InventoryManager"
            }
        ],
        "TaskQueueManager._variable_manager": [
            {
                "type": "attr",
                "anno": "VariableManager"
            }
        ],
        "TaskQueueManager._loader": [
            {
                "type": "attr",
                "anno": "TaskLoader"
            }
        ],
        "TaskQueueManager._stats": [
            {
                "type": "attr",
                "anno": "AggregateStats"
            }
        ],
        "TaskQueueManager.passwords": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TaskQueueManager._stdout_callback": [
            {
                "type": "attr",
                "anno": "CallbackBase"
            }
        ],
        "TaskQueueManager._run_additional_callbacks": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TaskQueueManager._run_tree": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TaskQueueManager._forks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TaskQueueManager._callbacks_loaded": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TaskQueueManager._callback_plugins": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TaskQueueManager._start_at_done": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TaskQueueManager._terminated": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TaskQueueManager._failed_hosts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TaskQueueManager._unreachable_hosts": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TaskQueueManager._final_q": [
            {
                "type": "attr",
                "anno": "multiprocessing_context.Queue"
            }
        ],
        "TaskQueueManager._connection_lockfile": [
            {
                "type": "attr",
                "anno": "tempfile.TemporaryFile"
            }
        ],
        "TaskQueueManager.__init__": [
            {
                "type": "method",
                "args": {
                    "inventory": "InventoryManager",
                    "variable_manager": "VariableManager",
                    "loader": "TaskLoader",
                    "passwords": "str",
                    "stdout_callback": "CallbackBase",
                    "run_additional_callbacks": "bool",
                    "run_tree": "bool",
                    "forks": "int"
                }
            }
        ],
        "TaskQueueManager._workers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TaskQueueManager.hostvars": [
            {
                "type": "attr",
                "anno": "HostVars"
            }
        ],
        "TaskQueueManager.clear_failed_hosts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.get_inventory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.get_variable_manager": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.get_loader": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.get_workers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.terminate": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.has_dead_workers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager._initialize_processes": [
            {
                "type": "method",
                "args": {
                    "num": "int"
                }
            }
        ],
        "TaskQueueManager._cleanup_processes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.cleanup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.load_callbacks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskQueueManager.run": [
            {
                "type": "method",
                "args": {
                    "play": "Play"
                }
            }
        ],
        "TaskQueueManager.send_callback": [
            {
                "type": "method",
                "args": {
                    "method_name": "str",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ]
    },
    "executor.interpreter_discovery": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "foundre": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "InterpreterDiscoveryRequiredError.interpreter_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InterpreterDiscoveryRequiredError.discovery_mode": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InterpreterDiscoveryRequiredError.__init__": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "interpreter_name": "str",
                    "discovery_mode": "str"
                }
            }
        ],
        "InterpreterDiscoveryRequiredError.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InterpreterDiscoveryRequiredError.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "_version_fuzzy_match": [
            {
                "type": "func",
                "args": {
                    "version": "str",
                    "version_map": "dict"
                }
            }
        ],
        "_get_linux_distro": [
            {
                "type": "func",
                "args": {
                    "platform_info": "dict"
                }
            }
        ],
        "discover_interpreter": [
            {
                "type": "func",
                "args": {
                    "action": "C.Action",
                    "interpreter_name": "str",
                    "discovery_mode": "str",
                    "task_vars": "dict"
                }
            }
        ]
    },
    "executor.discovery.python_target": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "read_utf8_file": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "encoding": "str"
                }
            }
        ],
        "get_platform_info": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "executor.stats": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AggregateStats.processed": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.failures": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.ok": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.dark": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.changed": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.skipped": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.rescued": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.ignored": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.custom": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, int]"
            }
        ],
        "AggregateStats.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AggregateStats.decrement": [
            {
                "type": "method",
                "args": {
                    "what": "str",
                    "host": "str"
                }
            }
        ],
        "AggregateStats.set_custom_stats": [
            {
                "type": "method",
                "args": {
                    "which": "str",
                    "what": "int",
                    "host": "str"
                }
            }
        ],
        "AggregateStats.update_custom_stats": [
            {
                "type": "method",
                "args": {
                    "which": "str",
                    "what": "int",
                    "host": "str"
                }
            }
        ],
        "AggregateStats.summarize": [
            {
                "type": "method",
                "args": {
                    "host": "str"
                }
            }
        ],
        "AggregateStats.increment": [
            {
                "type": "method",
                "args": {
                    "what": "str",
                    "host": "str"
                }
            }
        ]
    },
    "executor": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "executor.process.worker": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_PYCRYPTO_ATFORK": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[type[WorkerProcess]]"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "WorkerProcess._final_q": [
            {
                "type": "attr",
                "anno": "multiprocessing_context.Queue"
            }
        ],
        "WorkerProcess._task_vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "WorkerProcess._host": [
            {
                "type": "attr",
                "anno": "multiprocessing_context.Host"
            }
        ],
        "WorkerProcess._task": [
            {
                "type": "attr",
                "anno": "multiprocessing_context.Task"
            }
        ],
        "WorkerProcess._play_context": [
            {
                "type": "attr",
                "anno": "multiprocessing_context.Playbook"
            }
        ],
        "WorkerProcess._loader": [
            {
                "type": "attr",
                "anno": "multiprocessing_context.Loader"
            }
        ],
        "WorkerProcess._variable_manager": [
            {
                "type": "attr",
                "anno": "multiprocessing_context.VariableManager"
            }
        ],
        "WorkerProcess._shared_loader_obj": [
            {
                "type": "attr",
                "anno": "multiprocessing_context.SharedLoader"
            }
        ],
        "WorkerProcess._new_stdin": [
            {
                "type": "attr",
                "anno": "os.FDOpen"
            }
        ],
        "WorkerProcess._save_stdin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WorkerProcess.__init__": [
            {
                "type": "method",
                "args": {
                    "final_q": "multiprocessing_context.Queue",
                    "task_vars": "dict",
                    "host": "multiprocessing_context.Host",
                    "task": "multiprocessing_context.Task",
                    "play_context": "multiprocessing_context.Playbook",
                    "loader": "multiprocessing_context.Loader",
                    "variable_manager": "multiprocessing_context.VariableManager",
                    "shared_loader_obj": "multiprocessing_context.SharedLoader"
                }
            }
        ],
        "WorkerProcess._hard_exit": [
            {
                "type": "method",
                "args": {
                    "e": "BaseException"
                }
            }
        ],
        "WorkerProcess.start": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WorkerProcess._clean_up": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WorkerProcess._run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "WorkerProcess.run": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "executor.process": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "release": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__version__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__author__": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "__codename__": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "inventory.manager": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "IGNORED_ALWAYS": [
            {
                "type": "var",
                "anno": "list[bytes]"
            }
        ],
        "IGNORED_PATTERNS": [
            {
                "type": "var",
                "anno": "list[bytes]"
            }
        ],
        "IGNORED_EXTS": [
            {
                "type": "var",
                "anno": "list[bytes]"
            }
        ],
        "IGNORED": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "PATTERN_WITH_SUBSCRIPT": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "split_host_pattern": [
            {
                "type": "func",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "InventoryManager._loader": [
            {
                "type": "attr",
                "anno": "inventory_loader"
            }
        ],
        "InventoryManager._inventory": [
            {
                "type": "attr",
                "anno": "InventoryData"
            }
        ],
        "InventoryManager._restriction": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "InventoryManager._subset": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "InventoryManager._hosts_patterns_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InventoryManager._pattern_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InventoryManager._sources": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "InventoryManager.clear_caches": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager._apply_subscript": [
            {
                "type": "method",
                "args": {
                    "hosts": "list",
                    "subscript": "tuple"
                }
            }
        ],
        "InventoryManager.remove_restriction": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager.clear_pattern_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager.localhost": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager._match_list": [
            {
                "type": "method",
                "args": {
                    "items": "list",
                    "pattern_str": "str"
                }
            }
        ],
        "order_patterns": [
            {
                "type": "func",
                "args": {
                    "patterns": "list[str]"
                }
            }
        ],
        "InventoryManager.groups": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager.hosts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager._split_subscript": [
            {
                "type": "method",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "InventoryManager.list_groups": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager._fetch_inventory_plugins": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager.subset": [
            {
                "type": "method",
                "args": {
                    "subset_pattern": "str"
                }
            }
        ],
        "InventoryManager.get_host": [
            {
                "type": "method",
                "args": {
                    "hostname": "str"
                }
            }
        ],
        "InventoryManager.add_group": [
            {
                "type": "method",
                "args": {
                    "group": "str"
                }
            }
        ],
        "InventoryManager.restrict_to_hosts": [
            {
                "type": "method",
                "args": {
                    "restriction": "list"
                }
            }
        ],
        "InventoryManager.get_hosts": [
            {
                "type": "method",
                "args": {
                    "pattern": "str",
                    "ignore_limits": "bool",
                    "ignore_restrictions": "bool",
                    "order": "str"
                }
            }
        ],
        "InventoryManager.get_groups_dict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager.list_hosts": [
            {
                "type": "method",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "InventoryManager._enumerate_matches": [
            {
                "type": "method",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "InventoryManager._match_one_pattern": [
            {
                "type": "method",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "InventoryManager._evaluate_patterns": [
            {
                "type": "method",
                "args": {
                    "patterns": "list[str]"
                }
            }
        ],
        "InventoryManager.add_host": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "group": "str",
                    "port": "int"
                }
            }
        ],
        "InventoryManager.reconcile_inventory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager.parse_source": [
            {
                "type": "method",
                "args": {
                    "source": "str",
                    "cache": "bool"
                }
            }
        ],
        "InventoryManager.parse_sources": [
            {
                "type": "method",
                "args": {
                    "cache": "bool"
                }
            }
        ],
        "InventoryManager.refresh_inventory": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryManager.__init__": [
            {
                "type": "method",
                "args": {
                    "loader": "inventory_loader",
                    "sources": "str | None"
                }
            }
        ]
    },
    "inventory.helpers": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "sort_groups": [
            {
                "type": "func",
                "args": {
                    "groups": "list"
                }
            }
        ],
        "get_group_vars": [
            {
                "type": "func",
                "args": {
                    "groups": "list"
                }
            }
        ]
    },
    "inventory.data": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "InventoryData.groups": [
            {
                "type": "attr",
                "anno": "dict[str, Group]"
            }
        ],
        "InventoryData.hosts": [
            {
                "type": "attr",
                "anno": "dict[str, Host]"
            }
        ],
        "InventoryData._groups_dict_cache": [
            {
                "type": "attr",
                "anno": "dict[str, Group]"
            }
        ],
        "InventoryData.localhost": [
            {
                "type": "attr",
                "anno": "Host"
            }
        ],
        "InventoryData.current_source": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "InventoryData.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryData.set_variable": [
            {
                "type": "method",
                "args": {
                    "entity": "str",
                    "varname": "str",
                    "value": "str"
                }
            }
        ],
        "InventoryData._create_implicit_localhost": [
            {
                "type": "method",
                "args": {
                    "pattern": "str"
                }
            }
        ],
        "InventoryData.get_host": [
            {
                "type": "method",
                "args": {
                    "hostname": "str"
                }
            }
        ],
        "InventoryData.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "InventoryData.add_group": [
            {
                "type": "method",
                "args": {
                    "group": "str"
                }
            }
        ],
        "InventoryData.get_groups_dict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryData.add_host": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "group": "str",
                    "port": "int"
                }
            }
        ],
        "InventoryData.add_child": [
            {
                "type": "method",
                "args": {
                    "group": "str",
                    "child": "str"
                }
            }
        ],
        "InventoryData.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryData.remove_group": [
            {
                "type": "method",
                "args": {
                    "group": "Group"
                }
            }
        ],
        "InventoryData.remove_host": [
            {
                "type": "method",
                "args": {
                    "host": "Host"
                }
            }
        ],
        "InventoryData.reconcile_inventory": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "inventory.host": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "MutableMapping[str, type]"
            }
        ],
        "Host.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Host.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Host.address": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Host._uuid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Host.implicit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Host.groups": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Host.get_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.set_variable": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "object"
                }
            }
        ],
        "Host.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "port": "int",
                    "gen_uuid": "bool"
                }
            }
        ],
        "Host.get_groups": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "Host.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "Host.add_group": [
            {
                "type": "method",
                "args": {
                    "group": "Group"
                }
            }
        ],
        "Host.populate_ancestors": [
            {
                "type": "method",
                "args": {
                    "additions": "MutableMapping"
                }
            }
        ],
        "Host.get_magic_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.get_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Host.remove_group": [
            {
                "type": "method",
                "args": {
                    "group": "Group"
                }
            }
        ],
        "Host.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "Host.__setstate__": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ]
    },
    "inventory.group": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "Group.depth": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Group.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Group.hosts": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, Host]"
            }
        ],
        "Group._hosts": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, Host]"
            }
        ],
        "Group.vars": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, MutableMapping]"
            }
        ],
        "Group.child_groups": [
            {
                "type": "attr",
                "anno": "MutableMapping[Group, Group]"
            }
        ],
        "Group.parent_groups": [
            {
                "type": "attr",
                "anno": "MutableMapping[Group, Group]"
            }
        ],
        "Group._hosts_cache": [
            {
                "type": "attr",
                "anno": "MutableMapping[str, Host]"
            }
        ],
        "Group.priority": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Group.host_names": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.get_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.set_priority": [
            {
                "type": "method",
                "args": {
                    "priority": "int"
                }
            }
        ],
        "Group.set_variable": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "MutableMapping"
                }
            }
        ],
        "to_safe_group_name": [
            {
                "type": "func",
                "args": {
                    "name": "str",
                    "replacer": "str",
                    "force": "bool",
                    "silent": "bool"
                }
            }
        ],
        "Group.__init__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Group._walk_relationship": [
            {
                "type": "method",
                "args": {
                    "rel": "str",
                    "include_self": "bool",
                    "preserve_ordering": "bool"
                }
            }
        ],
        "Group.get_descendants": [
            {
                "type": "method",
                "args": {
                    "kwargs": "object"
                }
            }
        ],
        "Group._get_hosts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.get_hosts": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.get_ancestors": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.clear_hosts_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.add_host": [
            {
                "type": "method",
                "args": {
                    "host": "Host"
                }
            }
        ],
        "Group.get_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group._check_children_depth": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.add_child_group": [
            {
                "type": "method",
                "args": {
                    "group": "Group"
                }
            }
        ],
        "Group.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.remove_host": [
            {
                "type": "method",
                "args": {
                    "host": "Host"
                }
            }
        ],
        "Group.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "Group.__setstate__": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ]
    },
    "parsing.mod_args": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "FREEFORM_ACTIONS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "RAW_PARAM_MODULES": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "BUILTIN_TASKS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "ModuleArgsParser._task_ds": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ModuleArgsParser._collection_list": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ModuleArgsParser._task_attrs": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "ModuleArgsParser._split_module_string": [
            {
                "type": "method",
                "args": {
                    "module_string": "str"
                }
            }
        ],
        "ModuleArgsParser._normalize_new_style_args": [
            {
                "type": "method",
                "args": {
                    "thing": "dict",
                    "action": "str"
                }
            }
        ],
        "ModuleArgsParser.__init__": [
            {
                "type": "method",
                "args": {
                    "task_ds": "dict",
                    "collection_list": "frozenset"
                }
            }
        ],
        "ModuleArgsParser._normalize_old_style_args": [
            {
                "type": "method",
                "args": {
                    "thing": "dict"
                }
            }
        ],
        "ModuleArgsParser._normalize_parameters": [
            {
                "type": "method",
                "args": {
                    "thing": "dict",
                    "action": "str",
                    "additional_args": "dict"
                }
            }
        ],
        "ModuleArgsParser.parse": [
            {
                "type": "method",
                "args": {
                    "skip_action_validation": "bool"
                }
            }
        ]
    },
    "parsing.ajson": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AnsibleJSONDecoder._vaults": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleJSONDecoder.set_secrets": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "secrets": "dict"
                }
            }
        ],
        "AnsibleJSONDecoder.object_hook": [
            {
                "type": "method",
                "args": {
                    "pairs": "dict"
                }
            }
        ],
        "AnsibleJSONDecoder.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "dict",
                    "kwargs": "dict"
                }
            }
        ]
    },
    "parsing.utils.yaml": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "_safe_load": [
            {
                "type": "func",
                "args": {
                    "stream": "str",
                    "file_name": "str",
                    "vault_secrets": "str"
                }
            }
        ],
        "_handle_error": [
            {
                "type": "func",
                "args": {
                    "json_exc": "Exception",
                    "yaml_exc": "Exception",
                    "file_name": "str",
                    "show_content": "bool"
                }
            }
        ],
        "from_yaml": [
            {
                "type": "func",
                "args": {
                    "data": "str",
                    "file_name": "str",
                    "show_content": "bool",
                    "vault_secrets": "str",
                    "json_only": "bool"
                }
            }
        ]
    },
    "parsing.utils.jsonify": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "jsonify": [
            {
                "type": "func",
                "args": {
                    "result": "dict",
                    "format": "bool"
                }
            }
        ]
    },
    "parsing.utils": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "parsing.utils.addresses": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "numeric_range": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "hexadecimal_range": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "alphanumeric_range": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ipv6_component": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "ipv4_component": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "label": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "patterns": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "parse_address": [
            {
                "type": "func",
                "args": {
                    "address": "str",
                    "allow_ranges": "bool"
                }
            }
        ]
    },
    "parsing.quoting": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "is_quoted": [
            {
                "type": "func",
                "args": {
                    "data": "str"
                }
            }
        ],
        "unquote": [
            {
                "type": "func",
                "args": {
                    "data": "str"
                }
            }
        ]
    },
    "parsing.plugin_docs": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "read_docstub": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "read_docstring": [
            {
                "type": "func",
                "args": {
                    "filename": "str",
                    "verbose": "bool",
                    "ignore_errors": "bool"
                }
            }
        ]
    },
    "parsing.dataloader": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "RE_TASKS": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "DataLoader._basedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DataLoader._FILE_CACHE": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DataLoader._tempfiles": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "DataLoader._vaults": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "DataLoader._vault": [
            {
                "type": "attr",
                "anno": "VaultLib"
            }
        ],
        "DataLoader.get_basedir": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DataLoader.set_basedir": [
            {
                "type": "method",
                "args": {
                    "basedir": "str"
                }
            }
        ],
        "DataLoader.path_dwim": [
            {
                "type": "method",
                "args": {
                    "given": "str"
                }
            }
        ],
        "DataLoader.is_executable": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "DataLoader.list_directory": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "DataLoader.is_directory": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "DataLoader.is_file": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "DataLoader.path_exists": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "DataLoader._is_role": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "DataLoader.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "file_name": "str",
                    "show_content": "bool",
                    "json_only": "bool"
                }
            }
        ],
        "DataLoader.set_vault_secrets": [
            {
                "type": "method",
                "args": {
                    "vault_secrets": "list"
                }
            }
        ],
        "DataLoader.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DataLoader._get_dir_vars_files": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "extensions": "list"
                }
            }
        ],
        "DataLoader.find_vars_files": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "name": "str",
                    "extensions": "list",
                    "allow_dir": "bool"
                }
            }
        ],
        "DataLoader.path_dwim_relative": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "dirname": "str",
                    "source": "str",
                    "is_role": "bool"
                }
            }
        ],
        "DataLoader._create_content_tempfile": [
            {
                "type": "method",
                "args": {
                    "content": "bytes"
                }
            }
        ],
        "DataLoader.path_dwim_relative_stack": [
            {
                "type": "method",
                "args": {
                    "paths": "list",
                    "dirname": "str",
                    "source": "str",
                    "is_role": "bool"
                }
            }
        ],
        "DataLoader.get_real_file": [
            {
                "type": "method",
                "args": {
                    "file_path": "str",
                    "decrypt": "bool"
                }
            }
        ],
        "DataLoader._decrypt_if_vault_data": [
            {
                "type": "method",
                "args": {
                    "b_vault_data": "bytes",
                    "b_file_name": "str"
                }
            }
        ],
        "DataLoader._get_file_contents": [
            {
                "type": "method",
                "args": {
                    "file_name": "str"
                }
            }
        ],
        "DataLoader.load_from_file": [
            {
                "type": "method",
                "args": {
                    "file_name": "str",
                    "cache": "bool",
                    "unsafe": "bool",
                    "json_only": "bool"
                }
            }
        ],
        "DataLoader.cleanup_tmp_file": [
            {
                "type": "method",
                "args": {
                    "file_path": "str"
                }
            }
        ],
        "DataLoader.cleanup_all_tmp_files": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "parsing": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "parsing.splitter": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_HEXCHAR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "_ESCAPE_SEQUENCE_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "_get_quote_state": [
            {
                "type": "func",
                "args": {
                    "token": "str",
                    "quote_char": "str"
                }
            }
        ],
        "_count_jinja2_blocks": [
            {
                "type": "func",
                "args": {
                    "token": "str",
                    "cur_depth": "int",
                    "open_token": "str",
                    "close_token": "str"
                }
            }
        ],
        "join_args": [
            {
                "type": "func",
                "args": {
                    "s": "list"
                }
            }
        ],
        "split_args": [
            {
                "type": "func",
                "args": {
                    "args": "str"
                }
            }
        ],
        "_decode_escapes": [
            {
                "type": "func",
                "args": {
                    "s": "str"
                }
            }
        ],
        "parse_kv": [
            {
                "type": "func",
                "args": {
                    "args": "str",
                    "check_raw": "bool"
                }
            }
        ]
    },
    "parsing.yaml.constructor": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "AnsibleConstructor._ansible_file_name": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "AnsibleConstructor._vaults": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleConstructor.vault_secrets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "AnsibleConstructor.__init__": [
            {
                "type": "method",
                "args": {
                    "file_name": "str | None",
                    "vault_secrets": "list | None"
                }
            }
        ],
        "AnsibleConstructor.construct_vault_encrypted_unicode": [
            {
                "type": "method",
                "args": {
                    "node": "MappingNode"
                }
            }
        ],
        "AnsibleConstructor._node_position_info": [
            {
                "type": "method",
                "args": {
                    "node": "MappingNode"
                }
            }
        ],
        "AnsibleConstructor.construct_yaml_seq": [
            {
                "type": "method",
                "args": {
                    "node": "MappingNode"
                }
            }
        ],
        "AnsibleConstructor.construct_yaml_str": [
            {
                "type": "method",
                "args": {
                    "node": "MappingNode"
                }
            }
        ],
        "AnsibleConstructor.construct_yaml_unsafe": [
            {
                "type": "method",
                "args": {
                    "node": "MappingNode"
                }
            }
        ],
        "AnsibleConstructor.construct_mapping": [
            {
                "type": "method",
                "args": {
                    "node": "MappingNode",
                    "deep": "bool"
                }
            }
        ],
        "AnsibleConstructor.construct_yaml_map": [
            {
                "type": "method",
                "args": {
                    "node": "MappingNode"
                }
            }
        ]
    },
    "parsing.yaml.dumper": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "represent_hostvars": [
            {
                "type": "func",
                "args": {
                    "data": "HostVars"
                }
            }
        ],
        "represent_unicode": [
            {
                "type": "var",
                "anno": "type[yaml.representer.SafeRepresenter]"
            }
        ],
        "represent_binary": [
            {
                "type": "var",
                "anno": "type[yaml.representer.SafeRepresenter]"
            }
        ],
        "represent_vault_encrypted_unicode": [
            {
                "type": "func",
                "args": {
                    "data": "AnsibleVaultEncryptedUnicode"
                }
            }
        ]
    },
    "parsing.yaml.loader": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAVE_PYYAML_C": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "AnsibleLoader.__init__": [
            {
                "type": "method",
                "args": {
                    "stream": "str",
                    "file_name": "str",
                    "vault_secrets": "str"
                }
            }
        ]
    },
    "parsing.yaml": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "parsing.yaml.objects": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AnsibleBaseYAMLObject._data_source": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleBaseYAMLObject._line_number": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AnsibleBaseYAMLObject._column_number": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "AnsibleBaseYAMLObject._get_ansible_position": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleBaseYAMLObject._set_ansible_position": [
            {
                "type": "method",
                "args": {
                    "obj": "tuple"
                }
            }
        ],
        "AnsibleBaseYAMLObject.ansible_pos": [
            {
                "type": "attr",
                "anno": "property"
            }
        ],
        "odict": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "AnsibleVaultEncryptedUnicode.__UNSAFE__": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleVaultEncryptedUnicode.__ENCRYPTED__": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleVaultEncryptedUnicode.yaml_tag": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleVaultEncryptedUnicode.vault": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "AnsibleVaultEncryptedUnicode._ciphertext": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "AnsibleVaultEncryptedUnicode.__init__": [
            {
                "type": "method",
                "args": {
                    "ciphertext": "str"
                }
            }
        ],
        "AnsibleVaultEncryptedUnicode.data": [
            {
                "type": "method",
                "args": {
                    "value": "bytes"
                }
            }
        ],
        "AnsibleVaultEncryptedUnicode.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleVaultEncryptedUnicode.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "AnsibleVaultEncryptedUnicode.__hash__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleVaultEncryptedUnicode.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "AnsibleVaultEncryptedUnicode.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleVaultEncryptedUnicode.__unicode__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleVaultEncryptedUnicode.encode": [
            {
                "type": "method",
                "args": {
                    "encoding": "str",
                    "errors": "str"
                }
            }
        ],
        "AnsibleVaultEncryptedUnicode.from_plaintext": [
            {
                "type": "method",
                "args": {
                    "cls": "type[AnsibleUnicode]",
                    "seq": "bytes",
                    "vault": "str | None",
                    "secret": "str"
                }
            }
        ]
    },
    "parsing.vault": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_CRYPTOGRAPHY": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_PYCRYPTO": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_SOME_PYCRYPTO": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "CRYPTOGRAPHY_BACKEND": [
            {
                "type": "var",
                "anno": "C.Backend"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "b_HEADER": [
            {
                "type": "var",
                "anno": "bytes"
            }
        ],
        "CIPHER_WHITELIST": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "CIPHER_WRITE_WHITELIST": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "NEED_CRYPTO_LIBRARY": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "is_encrypted": [
            {
                "type": "func",
                "args": {
                    "data": "bytes"
                }
            }
        ],
        "_parse_vaulttext_envelope": [
            {
                "type": "func",
                "args": {
                    "b_vaulttext_envelope": "bytes",
                    "default_vault_id": "str"
                }
            }
        ],
        "parse_vaulttext_envelope": [
            {
                "type": "func",
                "args": {
                    "b_vaulttext_envelope": "bytes",
                    "default_vault_id": "str",
                    "filename": "str"
                }
            }
        ],
        "_unhexlify": [
            {
                "type": "func",
                "args": {
                    "b_data": "bytes"
                }
            }
        ],
        "_parse_vaulttext": [
            {
                "type": "func",
                "args": {
                    "b_vaulttext": "bytes"
                }
            }
        ],
        "parse_vaulttext": [
            {
                "type": "func",
                "args": {
                    "b_vaulttext": "bytes"
                }
            }
        ],
        "verify_secret_is_not_empty": [
            {
                "type": "func",
                "args": {
                    "secret": "str",
                    "msg": "str"
                }
            }
        ],
        "VaultSecret._bytes": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "VaultSecret.__init__": [
            {
                "type": "method",
                "args": {
                    "_bytes": "bytes"
                }
            }
        ],
        "VaultSecret.bytes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultSecret.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PromptVaultSecret.default_prompt_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "PromptVaultSecret.vault_id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PromptVaultSecret.prompt_formats": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "PromptVaultSecret.__init__": [
            {
                "type": "method",
                "args": {
                    "_bytes": "bytes",
                    "vault_id": "str",
                    "prompt_formats": "list[str]"
                }
            }
        ],
        "PromptVaultSecret._bytes": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "PromptVaultSecret.bytes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PromptVaultSecret.confirm": [
            {
                "type": "method",
                "args": {
                    "b_vault_pass_1": "str",
                    "b_vault_pass_2": "str"
                }
            }
        ],
        "script_is_client": [
            {
                "type": "func",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "FileVaultSecret.filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileVaultSecret.loader": [
            {
                "type": "attr",
                "anno": "DataLoader"
            }
        ],
        "FileVaultSecret.encoding": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileVaultSecret._bytes": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileVaultSecret._text": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FileVaultSecret.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "encoding": "str",
                    "loader": "DataLoader"
                }
            }
        ],
        "FileVaultSecret.bytes": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FileVaultSecret.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScriptVaultSecret._run": [
            {
                "type": "method",
                "args": {
                    "command": "list"
                }
            }
        ],
        "ScriptVaultSecret._check_results": [
            {
                "type": "method",
                "args": {
                    "stdout": "str",
                    "stderr": "str",
                    "popen": "subprocess.CompletedProcess"
                }
            }
        ],
        "ScriptVaultSecret._build_command": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ScriptVaultSecret._read_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "ClientScriptVaultSecret.VAULT_ID_UNKNOWN_RC": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ClientScriptVaultSecret._vault_id": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ClientScriptVaultSecret._run": [
            {
                "type": "method",
                "args": {
                    "command": "str"
                }
            }
        ],
        "ClientScriptVaultSecret._check_results": [
            {
                "type": "method",
                "args": {
                    "stdout": "str",
                    "stderr": "str",
                    "popen": "subprocess.Popen"
                }
            }
        ],
        "ClientScriptVaultSecret.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "match_secrets": [
            {
                "type": "func",
                "args": {
                    "secrets": "list",
                    "target_vault_ids": "list"
                }
            }
        ],
        "match_best_secret": [
            {
                "type": "func",
                "args": {
                    "secrets": "list",
                    "target_vault_ids": "list"
                }
            }
        ],
        "VaultLib.secrets": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "VaultLib.cipher_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VaultLib.b_version": [
            {
                "type": "attr",
                "anno": "bytes"
            }
        ],
        "VaultLib.__init__": [
            {
                "type": "method",
                "args": {
                    "secrets": "dict"
                }
            }
        ],
        "VaultEditor.vault": [
            {
                "type": "attr",
                "anno": "VaultLib"
            }
        ],
        "VaultEditor.__init__": [
            {
                "type": "method",
                "args": {
                    "vault": "VaultLib"
                }
            }
        ],
        "VaultEditor._real_path": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "VaultEditor.shuffle_files": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "dest": "str"
                }
            }
        ],
        "VaultAES256.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultAES256._create_key_cryptography": [
            {
                "type": "method",
                "args": {
                    "b_password": "bytes",
                    "b_salt": "bytes",
                    "key_length": "int",
                    "iv_length": "int"
                }
            }
        ],
        "VaultAES256._pbkdf2_prf": [
            {
                "type": "method",
                "args": {
                    "p": "bytes",
                    "s": "bytes"
                }
            }
        ],
        "VaultAES256._create_key_pycrypto": [
            {
                "type": "method",
                "args": {
                    "cls": "type[VaultSecret]",
                    "b_password": "bytes",
                    "b_salt": "bytes",
                    "key_length": "int",
                    "iv_length": "int"
                }
            }
        ],
        "VaultAES256._gen_key_initctr": [
            {
                "type": "method",
                "args": {
                    "cls": "type[VaultSecret]",
                    "b_password": "bytes",
                    "b_salt": "bytes"
                }
            }
        ],
        "VaultAES256._is_equal": [
            {
                "type": "method",
                "args": {
                    "b_a": "bytes",
                    "b_b": "bytes"
                }
            }
        ],
        "CIPHER_MAPPING": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ClientScriptVaultSecret._build_command": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultEditor._editor_shell_command": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "format_vaulttext_envelope": [
            {
                "type": "func",
                "args": {
                    "b_ciphertext": "bytes",
                    "cipher_name": "str",
                    "version": "str",
                    "vault_id": "str"
                }
            }
        ],
        "VaultEditor._shred_file_custom": [
            {
                "type": "method",
                "args": {
                    "tmp_path": "str"
                }
            }
        ],
        "VaultEditor._shred_file": [
            {
                "type": "method",
                "args": {
                    "tmp_path": "str"
                }
            }
        ],
        "VaultEditor.write_data": [
            {
                "type": "method",
                "args": {
                    "data": "bytes",
                    "thefile": "str",
                    "shred": "bool",
                    "mode": "int"
                }
            }
        ],
        "match_encrypt_vault_id_secret": [
            {
                "type": "func",
                "args": {
                    "secrets": "list",
                    "encrypt_vault_id": "str"
                }
            }
        ],
        "match_encrypt_secret": [
            {
                "type": "func",
                "args": {
                    "secrets": "list",
                    "encrypt_vault_id": "str"
                }
            }
        ],
        "ClientScriptVaultSecret.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "encoding": "str",
                    "loader": "DataLoader",
                    "vault_id": "str"
                }
            }
        ],
        "get_file_vault_secret": [
            {
                "type": "func",
                "args": {
                    "filename": "str",
                    "vault_id": "str",
                    "encoding": "str",
                    "loader": "DataLoader"
                }
            }
        ],
        "VaultEditor.read_data": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "is_encrypted_file": [
            {
                "type": "func",
                "args": {
                    "file_obj": "bytes",
                    "start_pos": "int",
                    "count": "int"
                }
            }
        ],
        "VaultAES256._encrypt_cryptography": [
            {
                "type": "method",
                "args": {
                    "b_plaintext": "bytes",
                    "b_key1": "bytes",
                    "b_key2": "bytes",
                    "b_iv": "bytes"
                }
            }
        ],
        "VaultAES256.encrypt": [
            {
                "type": "method",
                "args": {
                    "cls": "type[VaultSecret]",
                    "b_plaintext": "bytes",
                    "secret": "VaultSecret"
                }
            }
        ],
        "VaultLib.encrypt": [
            {
                "type": "method",
                "args": {
                    "plaintext": "bytes",
                    "secret": "VaultSecret",
                    "vault_id": "str"
                }
            }
        ],
        "VaultAES256._encrypt_pycrypto": [
            {
                "type": "method",
                "args": {
                    "b_plaintext": "bytes",
                    "b_key1": "bytes",
                    "b_key2": "bytes",
                    "b_iv": "bytes"
                }
            }
        ],
        "VaultEditor.encrypt_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "secret": "VaultSecret",
                    "vault_id": "str",
                    "output_file": "str"
                }
            }
        ],
        "VaultEditor.encrypt_bytes": [
            {
                "type": "method",
                "args": {
                    "b_plaintext": "bytes",
                    "secret": "VaultSecret",
                    "vault_id": "str"
                }
            }
        ],
        "VaultEditor._edit_file_helper": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "secret": "VaultSecret",
                    "existing_data": "bytes",
                    "force_save": "bool",
                    "vault_id": "str"
                }
            }
        ],
        "VaultEditor.create_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "secret": "VaultSecret",
                    "vault_id": "str"
                }
            }
        ],
        "VaultAES256._decrypt_cryptography": [
            {
                "type": "method",
                "args": {
                    "cls": "type[VaultSecret]",
                    "b_ciphertext": "bytes",
                    "b_crypted_hmac": "bytes",
                    "b_key1": "bytes",
                    "b_key2": "bytes",
                    "b_iv": "bytes"
                }
            }
        ],
        "VaultAES256.decrypt": [
            {
                "type": "method",
                "args": {
                    "cls": "type[VaultSecret]",
                    "b_vaulttext": "bytes",
                    "secret": "VaultSecret"
                }
            }
        ],
        "VaultLib.decrypt_and_get_vault_id": [
            {
                "type": "method",
                "args": {
                    "vaulttext": "str",
                    "filename": "str"
                }
            }
        ],
        "VaultEditor.rekey_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "new_vault_secret": "str",
                    "new_vault_id": "str"
                }
            }
        ],
        "VaultEditor.edit_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "VaultLib.decrypt": [
            {
                "type": "method",
                "args": {
                    "vaulttext": "str",
                    "filename": "str"
                }
            }
        ],
        "VaultAES256._decrypt_pycrypto": [
            {
                "type": "method",
                "args": {
                    "cls": "type[VaultLib]",
                    "b_ciphertext": "bytes",
                    "b_crypted_hmac": "bytes",
                    "b_key1": "bytes",
                    "b_key2": "bytes",
                    "b_iv": "bytes"
                }
            }
        ],
        "VaultEditor.plaintext": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "VaultEditor.decrypt_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "output_file": "str"
                }
            }
        ],
        "FileVaultSecret._read_file": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "FileVaultSecret.load": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PromptVaultSecret.ask_vault_passwords": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PromptVaultSecret.load": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "parsing.metadata": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "DEFAULT_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_seek_end_of_dict": [
            {
                "type": "func",
                "args": {
                    "module_data": "str",
                    "start_line": "int",
                    "start_col": "int",
                    "next_node_line": "int",
                    "next_node_col": "int"
                }
            }
        ],
        "_seek_end_of_string": [
            {
                "type": "func",
                "args": {
                    "module_data": "str",
                    "start_line": "int",
                    "start_col": "int",
                    "next_node_line": "int",
                    "next_node_col": "int"
                }
            }
        ],
        "extract_metadata": [
            {
                "type": "func",
                "args": {
                    "module_ast": "ast.Module",
                    "module_data": "str",
                    "offsets": "bool"
                }
            }
        ]
    },
    "collections": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "B_FLAG_FILES": [
            {
                "type": "var",
                "anno": "frozenset[bytes]"
            }
        ],
        "is_collection_path": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ]
    },
    "collections.list": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "list_valid_collection_paths": [
            {
                "type": "func",
                "args": {
                    "search_paths": "list",
                    "warn": "bool"
                }
            }
        ],
        "list_collection_dirs": [
            {
                "type": "func",
                "args": {
                    "search_paths": "list",
                    "coll_filter": "str"
                }
            }
        ]
    },
    "errors.yaml_strings": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "YAML_SYNTAX_ERROR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YAML_POSITION_DETAILS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YAML_COMMON_DICT_ERROR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YAML_COMMON_UNQUOTED_VARIABLE_ERROR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YAML_COMMON_UNQUOTED_COLON_ERROR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YAML_COMMON_PARTIALLY_QUOTED_LINE_ERROR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YAML_COMMON_UNBALANCED_QUOTES_ERROR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YAML_COMMON_LEADING_TAB_ERROR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YAML_AND_SHORTHAND_ERROR": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "errors": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "AnsibleError._obj": [
            {
                "type": "attr",
                "anno": "AnsibleBaseYAMLObject"
            }
        ],
        "AnsibleError._show_content": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleError.message": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleError.orig_exc": [
            {
                "type": "attr",
                "anno": "Exception"
            }
        ],
        "AnsibleError.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleError.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleError._get_error_lines_from_file": [
            {
                "type": "method",
                "args": {
                    "file_name": "str",
                    "line_number": "int"
                }
            }
        ],
        "AnsibleError._get_extended_error": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleError.__init__": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "obj": "AnsibleBaseYAMLObject",
                    "show_content": "bool",
                    "suppress_extended_error": "bool",
                    "orig_exc": "Exception"
                }
            }
        ],
        "AnsibleFileNotFound.file_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AnsibleFileNotFound.paths": [
            {
                "type": "attr",
                "anno": "Sequence[str]"
            }
        ],
        "AnsibleFileNotFound.__init__": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "obj": "object",
                    "show_content": "bool",
                    "suppress_extended_error": "bool",
                    "orig_exc": "Exception",
                    "paths": "Sequence[str]",
                    "file_name": "str"
                }
            }
        ],
        "AnsibleAction.result": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleAction.__init__": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "obj": "object",
                    "show_content": "bool",
                    "suppress_extended_error": "bool",
                    "orig_exc": "Exception",
                    "result": "dict"
                }
            }
        ],
        "AnsibleActionFail.__init__": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "obj": "object",
                    "show_content": "bool",
                    "suppress_extended_error": "bool",
                    "orig_exc": "Exception",
                    "result": "dict"
                }
            }
        ],
        "AnsibleActionSkip.__init__": [
            {
                "type": "method",
                "args": {
                    "message": "str",
                    "obj": "object",
                    "show_content": "bool",
                    "suppress_extended_error": "bool",
                    "orig_exc": "Exception",
                    "result": "dict"
                }
            }
        ]
    },
    "": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "playbook.handler": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Handler._listen": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Handler.notified_hosts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Handler.cached_name": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Handler.__init__": [
            {
                "type": "method",
                "args": {
                    "block": "str",
                    "role": "str",
                    "task_include": "str"
                }
            }
        ],
        "Handler.is_host_notified": [
            {
                "type": "method",
                "args": {
                    "host": "str"
                }
            }
        ],
        "Handler.notify_host": [
            {
                "type": "method",
                "args": {
                    "host": "str"
                }
            }
        ],
        "Handler.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Handler.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Handler.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "block": "str",
                    "role": "str",
                    "task_include": "str",
                    "variable_manager": "str",
                    "loader": "object"
                }
            }
        ]
    },
    "playbook.handler_task_include": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HandlerTaskInclude.VALID_INCLUDE_KEYWORDS": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "HandlerTaskInclude.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "block": "Block",
                    "role": "Role",
                    "task_include": "TaskInclude",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ]
    },
    "playbook.role.definition": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "RoleDefinition._role": [
            {
                "type": "attr",
                "anno": "Attribute"
            }
        ],
        "RoleDefinition._play": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RoleDefinition._variable_manager": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RoleDefinition._loader": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RoleDefinition._role_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RoleDefinition._role_collection": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RoleDefinition._role_basedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RoleDefinition._role_params": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "RoleDefinition._collection_list": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RoleDefinition.__init__": [
            {
                "type": "method",
                "args": {
                    "play": "str",
                    "role_basedir": "str",
                    "variable_manager": "str",
                    "loader": "str",
                    "collection_list": "list"
                }
            }
        ],
        "RoleDefinition.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ],
        "RoleDefinition._ds": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "RoleDefinition.get_role_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RoleDefinition.get_name": [
            {
                "type": "method",
                "args": {
                    "include_role_fqcn": "bool"
                }
            }
        ],
        "RoleDefinition._split_role_params": [
            {
                "type": "method",
                "args": {
                    "ds": "dict"
                }
            }
        ],
        "RoleDefinition.get_role_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RoleDefinition._load_role_path": [
            {
                "type": "method",
                "args": {
                    "role_name": "str"
                }
            }
        ],
        "RoleDefinition._load_role_name": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ],
        "RoleDefinition.preprocess_data": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ]
    },
    "playbook.role.include": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "RoleInclude._delegate_to": [
            {
                "type": "attr",
                "anno": "Attribute"
            }
        ],
        "RoleInclude._delegate_facts": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RoleInclude.__init__": [
            {
                "type": "method",
                "args": {
                    "play": "str",
                    "role_basedir": "str",
                    "variable_manager": "str",
                    "loader": "str",
                    "collection_list": "list"
                }
            }
        ],
        "RoleInclude.load": [
            {
                "type": "method",
                "args": {
                    "data": "object",
                    "play": "str",
                    "current_role_path": "str",
                    "parent_role": "str",
                    "variable_manager": "str",
                    "loader": "str",
                    "collection_list": "list"
                }
            }
        ]
    },
    "playbook.role": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "Sequence[str]"
            }
        ],
        "Role._delegate_to": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Role._delegate_facts": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Role._role_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Role._role_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Role._role_collection": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Role._role_params": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Role._loader": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Role._metadata": [
            {
                "type": "attr",
                "anno": "RoleMetadata"
            }
        ],
        "Role._play": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Role._parents": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Role._dependencies": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Role._task_blocks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Role._handler_blocks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Role._compiled_handler_blocks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Role._default_vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Role._role_vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Role._had_task_run": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Role._completed": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Role._from_files": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Role.from_include": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Role.__init__": [
            {
                "type": "method",
                "args": {
                    "play": "str",
                    "from_files": "dict",
                    "from_include": "bool"
                }
            }
        ],
        "Role.get_name": [
            {
                "type": "method",
                "args": {
                    "include_role_fqcn": "bool"
                }
            }
        ],
        "Role.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Role._variable_manager": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Role.collections": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Role.get_parents": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Role.get_inherited_vars": [
            {
                "type": "method",
                "args": {
                    "dep_chain": "Sequence[Role]"
                }
            }
        ],
        "Role.get_role_params": [
            {
                "type": "method",
                "args": {
                    "dep_chain": "Sequence[Role]"
                }
            }
        ],
        "Role.get_direct_dependencies": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Role.get_task_blocks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Role.set_loader": [
            {
                "type": "method",
                "args": {
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ],
        "Role.get_all_dependencies": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Role.get_default_vars": [
            {
                "type": "method",
                "args": {
                    "dep_chain": "list"
                }
            }
        ],
        "Role.add_parent": [
            {
                "type": "method",
                "args": {
                    "parent_role": "Role"
                }
            }
        ],
        "hash_params": [
            {
                "type": "func",
                "args": {
                    "params": "object"
                }
            }
        ],
        "Role.has_run": [
            {
                "type": "method",
                "args": {
                    "host": "Taggable"
                }
            }
        ],
        "Role._load_role_yaml": [
            {
                "type": "method",
                "args": {
                    "subdir": "str",
                    "main": "str",
                    "allow_dir": "bool"
                }
            }
        ],
        "Role.compile": [
            {
                "type": "method",
                "args": {
                    "play": "Play",
                    "dep_chain": "list[Role]"
                }
            }
        ],
        "Role.get_handler_blocks": [
            {
                "type": "method",
                "args": {
                    "play": "Play",
                    "dep_chain": "list"
                }
            }
        ],
        "Role.load": [
            {
                "type": "method",
                "args": {
                    "role_include": "IncludeRole",
                    "play": "str",
                    "parent_role": "Role",
                    "from_files": "dict",
                    "from_include": "bool"
                }
            }
        ],
        "Role._load_dependencies": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Role._load_role_data": [
            {
                "type": "method",
                "args": {
                    "role_include": "IncludeRole",
                    "parent_role": "Role"
                }
            }
        ],
        "Role.serialize": [
            {
                "type": "method",
                "args": {
                    "include_deps": "bool"
                }
            }
        ],
        "Role.get_vars": [
            {
                "type": "method",
                "args": {
                    "dep_chain": "Sequence[Role]",
                    "include_params": "bool"
                }
            }
        ],
        "Role.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "include_deps": "bool"
                }
            }
        ]
    },
    "playbook.role.metadata": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "RoleMetadata._allow_duplicates": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "RoleMetadata._dependencies": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "RoleMetadata._galaxy_info": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RoleMetadata._owner": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "RoleMetadata.__init__": [
            {
                "type": "method",
                "args": {
                    "owner": "object"
                }
            }
        ],
        "RoleMetadata._load_galaxy_info": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "dict"
                }
            }
        ],
        "RoleMetadata.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RoleMetadata.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "RoleMetadata._load_dependencies": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "list"
                }
            }
        ],
        "RoleMetadata.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "owner": "object",
                    "variable_manager": "str",
                    "loader": "object"
                }
            }
        ]
    },
    "playbook.role.requirement": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "VALID_SPEC_KEYS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "RoleRequirement.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RoleRequirement.repo_url_to_role_name": [
            {
                "type": "method",
                "args": {
                    "repo_url": "str"
                }
            }
        ],
        "RoleRequirement.scm_archive_role": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "scm": "str",
                    "name": "str",
                    "version": "str",
                    "keep_scm_meta": "bool"
                }
            }
        ],
        "RoleRequirement.role_yaml_parse": [
            {
                "type": "method",
                "args": {
                    "role": "dict"
                }
            }
        ]
    },
    "playbook.task": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "Task._args": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Task._action": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Task._async_val": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Task._changed_when": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Task._delay": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Task._delegate_to": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Task._delegate_facts": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Task._failed_when": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Task._loop": [
            {
                "type": "attr",
                "anno": "LoopControl"
            }
        ],
        "Task._loop_control": [
            {
                "type": "attr",
                "anno": "LoopControl"
            }
        ],
        "Task._notify": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Task._poll": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Task._register": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Task._retries": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Task._until": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Task._loop_with": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Task._role": [
            {
                "type": "attr",
                "anno": "Role"
            }
        ],
        "Task._parent": [
            {
                "type": "attr",
                "anno": "Block"
            }
        ],
        "Task.__init__": [
            {
                "type": "method",
                "args": {
                    "block": "Block",
                    "role": "Role",
                    "task_include": "bool"
                }
            }
        ],
        "Task._merge_kv": [
            {
                "type": "method",
                "args": {
                    "ds": "dict"
                }
            }
        ],
        "Task._post_validate_loop": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "value": "str",
                    "templar": "str"
                }
            }
        ],
        "Task._post_validate_changed_when": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "value": "str",
                    "templar": "str"
                }
            }
        ],
        "Task._post_validate_failed_when": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "value": "str",
                    "templar": "str"
                }
            }
        ],
        "Task._post_validate_until": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "value": "str",
                    "templar": "str"
                }
            }
        ],
        "Task._loader": [
            {
                "type": "attr",
                "anno": "AnsibleCollectionLoader"
            }
        ],
        "Task.get_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task.get_dep_chain": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task.set_loader": [
            {
                "type": "method",
                "args": {
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ],
        "Task.get_first_parent_include": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task.all_parents_static": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task.get_search_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task._load_loop_control": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "ds": "dict"
                }
            }
        ],
        "Task._get_parent_attribute": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "extend": "bool",
                    "prepend": "bool"
                }
            }
        ],
        "Task._preprocess_with_loop": [
            {
                "type": "method",
                "args": {
                    "ds": "AnsibleBaseYAMLObject",
                    "new_ds": "AnsibleMapping",
                    "k": "str",
                    "v": "str"
                }
            }
        ],
        "Task.get_name": [
            {
                "type": "method",
                "args": {
                    "include_role_fqcn": "bool"
                }
            }
        ],
        "Task.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task.copy": [
            {
                "type": "method",
                "args": {
                    "exclude_parent": "bool",
                    "exclude_tasks": "bool"
                }
            }
        ],
        "Task._validate_attributes": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ],
        "Task.get_include_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task._post_validate_environment": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "value": "object",
                    "templar": "Templar"
                }
            }
        ],
        "Task.get_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Task.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "block": "Block",
                    "role": "Role",
                    "task_include": "bool",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ],
        "Task.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "Task.post_validate": [
            {
                "type": "method",
                "args": {
                    "templar": "Templar"
                }
            }
        ],
        "Task.preprocess_data": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ]
    },
    "playbook.block": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Block._block": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Block._rescue": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Block._always": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Block._delegate_to": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Block._delegate_facts": [
            {
                "type": "attr",
                "anno": "FieldAttribute"
            }
        ],
        "Block._play": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Block._role": [
            {
                "type": "attr",
                "anno": "Role"
            }
        ],
        "Block._parent": [
            {
                "type": "attr",
                "anno": "Block"
            }
        ],
        "Block._dep_chain": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Block._use_handlers": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Block._implicit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Block._eor": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Block.__init__": [
            {
                "type": "method",
                "args": {
                    "play": "str",
                    "parent_block": "str",
                    "role": "Role",
                    "task_include": "bool",
                    "use_handlers": "bool",
                    "implicit": "bool"
                }
            }
        ],
        "Block.is_block": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ],
        "Block._validate_always": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "name": "str",
                    "value": "bool"
                }
            }
        ],
        "Block._validate_rescue": [
            {
                "type": "attr",
                "anno": "type[Callable[[FieldAttribute, str, bool], None]]"
            }
        ],
        "Block.get_dep_chain": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Block._loader": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "Block.set_loader": [
            {
                "type": "method",
                "args": {
                    "loader": "object"
                }
            }
        ],
        "Block.has_tasks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Block.get_first_parent_include": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Block.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "Block.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "Block.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Block.all_parents_static": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Block._load_always": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "object"
                }
            }
        ],
        "Block._load_rescue": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "object"
                }
            }
        ],
        "Block._load_block": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "object"
                }
            }
        ],
        "Block._get_parent_attribute": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "extend": "bool",
                    "prepend": "bool"
                }
            }
        ],
        "Block.copy": [
            {
                "type": "method",
                "args": {
                    "exclude_parent": "bool",
                    "exclude_tasks": "bool"
                }
            }
        ],
        "Block.get_include_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Block.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Block.filter_tagged_tasks": [
            {
                "type": "method",
                "args": {
                    "all_vars": "list"
                }
            }
        ],
        "Block.get_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Block.load": [
            {
                "type": "method",
                "args": {
                    "data": "object",
                    "play": "str",
                    "parent_block": "str",
                    "role": "Role",
                    "task_include": "bool",
                    "use_handlers": "bool",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ],
        "Block.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "Block.preprocess_data": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ]
    },
    "playbook.base": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "FieldAttributeBase._loader": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "FieldAttributeBase._variable_manager": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "FieldAttributeBase._validated": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FieldAttributeBase._squashed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FieldAttributeBase._finalized": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FieldAttributeBase._uuid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FieldAttributeBase._attributes": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_generic_d": [
            {
                "type": "func",
                "args": {
                    "prop_name": "str"
                }
            }
        ],
        "_generic_s": [
            {
                "type": "func",
                "args": {
                    "prop_name": "str",
                    "value": "str"
                }
            }
        ],
        "_generic_g_method": [
            {
                "type": "func",
                "args": {
                    "prop_name": "str"
                }
            }
        ],
        "FieldAttributeBase._attr_defaults": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_generic_g": [
            {
                "type": "func",
                "args": {
                    "prop_name": "str"
                }
            }
        ],
        "FieldAttributeBase.vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "FieldAttributeBase.preprocess_data": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ],
        "FieldAttributeBase.get_ds": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FieldAttributeBase.get_loader": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FieldAttributeBase.get_variable_manager": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FieldAttributeBase._load_vars": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "ds": "object"
                }
            }
        ],
        "Base._name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Base._connection": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Base._port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Base._remote_user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Base._vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Base._module_defaults": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Base._environment": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Base._no_log": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Base._run_once": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Base._ignore_errors": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Base._ignore_unreachable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Base._check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Base._diff": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Base._any_errors_fatal": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Base._throttle": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Base._debugger": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Base._become": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Base._become_method": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Base._become_user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Base._become_flags": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Base._become_exe": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Base.DEPRECATED_ATTRIBUTES": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "FieldAttributeBase.validate": [
            {
                "type": "method",
                "args": {
                    "all_vars": "dict"
                }
            }
        ],
        "FieldAttributeBase._extend_value": [
            {
                "type": "method",
                "args": {
                    "value": "list",
                    "new_value": "list",
                    "prepend": "bool"
                }
            }
        ],
        "_generic_g_parent": [
            {
                "type": "func",
                "args": {
                    "prop_name": "str"
                }
            }
        ],
        "FieldAttributeBase.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FieldAttributeBase.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FieldAttributeBase.squash": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FieldAttributeBase._validate_attributes": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ],
        "FieldAttributeBase.load_data": [
            {
                "type": "method",
                "args": {
                    "ds": "object",
                    "variable_manager": "str",
                    "loader": "object"
                }
            }
        ],
        "FieldAttributeBase.dump_me": [
            {
                "type": "method",
                "args": {
                    "depth": "int"
                }
            }
        ],
        "FieldAttributeBase.dump_attrs": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FieldAttributeBase.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FieldAttributeBase._post_validate_debugger": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "value": "object",
                    "templar": "Templar"
                }
            }
        ],
        "FieldAttributeBase.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "FieldAttributeBase.from_attrs": [
            {
                "type": "method",
                "args": {
                    "attrs": "dict"
                }
            }
        ],
        "FieldAttributeBase.post_validate": [
            {
                "type": "method",
                "args": {
                    "templar": "Templar"
                }
            }
        ],
        "FieldAttributeBase.get_validated_value": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "attribute": "Attribute",
                    "value": "object",
                    "templar": "Templar"
                }
            }
        ],
        "BaseMeta.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "name": "str",
                    "parents": "list",
                    "dct": "dict"
                }
            }
        ]
    },
    "playbook.helpers": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "load_list_of_blocks": [
            {
                "type": "func",
                "args": {
                    "ds": "dict",
                    "play": "Play",
                    "parent_block": "str",
                    "role": "Role",
                    "task_include": "TaskInclude",
                    "use_handlers": "bool",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ],
        "load_list_of_roles": [
            {
                "type": "func",
                "args": {
                    "ds": "list",
                    "play": "str",
                    "current_role_path": "str",
                    "variable_manager": "str",
                    "loader": "AnsibleCollectionLoader",
                    "collection_search_list": "list"
                }
            }
        ],
        "load_list_of_tasks": [
            {
                "type": "func",
                "args": {
                    "ds": "dict",
                    "play": "Play",
                    "block": "Block",
                    "role": "Role",
                    "task_include": "TaskInclude",
                    "use_handlers": "bool",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ]
    },
    "playbook.attribute": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "_CONTAINERS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "Attribute.isa": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Attribute.private": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Attribute.default": [
            {
                "type": "attr",
                "anno": "Callable"
            }
        ],
        "Attribute.required": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Attribute.listof": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Attribute.priority": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Attribute.class_type": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "Attribute.always_post_validate": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Attribute.inherit": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Attribute.alias": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Attribute.extend": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Attribute.prepend": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Attribute.static": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Attribute.__init__": [
            {
                "type": "method",
                "args": {
                    "isa": "str",
                    "private": "bool",
                    "default": "Callable",
                    "required": "bool",
                    "listof": "str",
                    "priority": "int",
                    "class_type": "type",
                    "always_post_validate": "bool",
                    "inherit": "bool",
                    "alias": "str",
                    "extend": "bool",
                    "prepend": "bool",
                    "static": "bool"
                }
            }
        ],
        "Attribute.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "Attribute"
                }
            }
        ],
        "Attribute.__ne__": [
            {
                "type": "method",
                "args": {
                    "other": "Attribute"
                }
            }
        ],
        "Attribute.__lt__": [
            {
                "type": "method",
                "args": {
                    "other": "Attribute"
                }
            }
        ],
        "Attribute.__gt__": [
            {
                "type": "method",
                "args": {
                    "other": "Attribute"
                }
            }
        ],
        "Attribute.__le__": [
            {
                "type": "method",
                "args": {
                    "other": "Attribute"
                }
            }
        ],
        "Attribute.__ge__": [
            {
                "type": "method",
                "args": {
                    "other": "Attribute"
                }
            }
        ]
    },
    "playbook.play": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "Play._hosts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Play._gather_facts": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Play._gather_subset": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Play._gather_timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Play._fact_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Play._vars_files": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Play._vars_prompt": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Play._roles": [
            {
                "type": "attr",
                "anno": "list[Role]"
            }
        ],
        "Play._handlers": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Play._pre_tasks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Play._post_tasks": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Play._tasks": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Play._force_handlers": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Play._max_fail_percentage": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "Play._serial": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Play._strategy": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Play._order": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Play._included_conditional": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Play._included_path": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Play._removed_hosts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Play.ROLE_CACHE": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Play.only_tags": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Play.skip_tags": [
            {
                "type": "attr",
                "anno": "set[str]"
            }
        ],
        "Play.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.get_vars_files": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.get_handlers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.get_roles": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.get_tasks": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play._load_vars_prompt": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "Display"
                }
            }
        ],
        "Play._load_roles": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "ds": "object"
                }
            }
        ],
        "Play._load_post_tasks": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "object"
                }
            }
        ],
        "Play._load_pre_tasks": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "object"
                }
            }
        ],
        "Play._load_tasks": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "object"
                }
            }
        ],
        "Play._load_handlers": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "object"
                }
            }
        ],
        "Play.get_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.get_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play._compile_roles": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.compile": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.compile_roles_handlers": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.serialize": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Play.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "variable_manager": "str",
                    "loader": "object",
                    "vars": "dict"
                }
            }
        ],
        "Play.deserialize": [
            {
                "type": "method",
                "args": {
                    "data": "dict"
                }
            }
        ],
        "Play.preprocess_data": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ]
    },
    "playbook.collectionsearch": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "_ensure_default_collection": [
            {
                "type": "func",
                "args": {
                    "collection_list": "list"
                }
            }
        ],
        "CollectionSearch._collections": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "CollectionSearch._load_collections": [
            {
                "type": "method",
                "args": {
                    "attr": "str",
                    "ds": "list"
                }
            }
        ]
    },
    "playbook.task_include": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "TaskInclude.BASE": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "TaskInclude.OTHER_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "TaskInclude.VALID_ARGS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "TaskInclude.VALID_INCLUDE_KEYWORDS": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "TaskInclude._static": [
            {
                "type": "attr",
                "anno": "C"
            }
        ],
        "TaskInclude.statically_loaded": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "TaskInclude.__init__": [
            {
                "type": "method",
                "args": {
                    "block": "Block",
                    "role": "Role",
                    "task_include": "Block"
                }
            }
        ],
        "TaskInclude.build_parent_block": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskInclude.check_options": [
            {
                "type": "method",
                "args": {
                    "task": "Task",
                    "data": "dict"
                }
            }
        ],
        "TaskInclude.copy": [
            {
                "type": "method",
                "args": {
                    "exclude_parent": "bool",
                    "exclude_tasks": "bool"
                }
            }
        ],
        "TaskInclude.get_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TaskInclude.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "block": "Block",
                    "role": "Role",
                    "task_include": "Block",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ],
        "TaskInclude.preprocess_data": [
            {
                "type": "method",
                "args": {
                    "ds": "dict"
                }
            }
        ]
    },
    "playbook.role_include": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "IncludeRole.BASE": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "IncludeRole.FROM_ARGS": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "IncludeRole.OTHER_ARGS": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "IncludeRole.VALID_ARGS": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "IncludeRole._allow_duplicates": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "IncludeRole._public": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "IncludeRole._from_files": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "IncludeRole._parent_role": [
            {
                "type": "attr",
                "anno": "Role"
            }
        ],
        "IncludeRole._role_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "IncludeRole._role_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "IncludeRole.__init__": [
            {
                "type": "method",
                "args": {
                    "block": "Block",
                    "role": "Role",
                    "task_include": "TaskInclude"
                }
            }
        ],
        "IncludeRole.get_name": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IncludeRole.copy": [
            {
                "type": "method",
                "args": {
                    "exclude_parent": "bool",
                    "exclude_tasks": "bool"
                }
            }
        ],
        "IncludeRole.get_block_list": [
            {
                "type": "method",
                "args": {
                    "play": "Play",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ],
        "IncludeRole.get_include_params": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IncludeRole.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "block": "Block",
                    "role": "Role",
                    "task_include": "TaskInclude",
                    "variable_manager": "VariableManager",
                    "loader": "AnsibleCollectionLoader"
                }
            }
        ]
    },
    "playbook.play_context": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "TASK_ATTRIBUTE_OVERRIDES": [
            {
                "type": "var",
                "anno": "tuple[str, ...]"
            }
        ],
        "RESET_VARS": [
            {
                "type": "var",
                "anno": "C[[str], C[[str], C]]"
            }
        ],
        "PlayContext._module_compression": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._shell": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "PlayContext._executable": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._remote_addr": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayContext._connection_user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._private_key_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._pipelining": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PlayContext._network_os": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._docker_extra_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._ssh_executable": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._ssh_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._ssh_common_args": [
            {
                "type": "attr",
                "anno": "C[[str], C[[str], C[[str], C]]]"
            }
        ],
        "PlayContext._sftp_extra_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._scp_extra_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._ssh_extra_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._ssh_transfer_method": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._connection_lockfd": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayContext._become": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PlayContext._become_method": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._become_user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._become_pass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._become_exe": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._become_flags": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._prompt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._verbosity": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayContext._only_tags": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "PlayContext._skip_tags": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "PlayContext._start_at_task": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._step": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PlayContext._force_handlers": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PlayContext.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.become_pass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext._become_plugin": [
            {
                "type": "attr",
                "anno": "type | None"
            }
        ],
        "PlayContext.prompt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.success_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.connection_lockfd": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayContext.force_handlers": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PlayContext.set_attributes_from_play": [
            {
                "type": "method",
                "args": {
                    "play": "Play"
                }
            }
        ],
        "PlayContext.timeout": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayContext.private_key_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.verbosity": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "PlayContext.ssh_common_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.ssh_extra_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.sftp_extra_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.scp_extra_args": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.start_at_task": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlayContext.set_attributes_from_cli": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PlayContext.set_become_plugin": [
            {
                "type": "method",
                "args": {
                    "plugin": "type"
                }
            }
        ],
        "PlayContext.update_vars": [
            {
                "type": "method",
                "args": {
                    "variables": "dict"
                }
            }
        ],
        "PlayContext.connection": [
            {
                "type": "attr",
                "anno": "C.Connection"
            }
        ],
        "PlayContext._get_attr_connection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PlayContext.__init__": [
            {
                "type": "method",
                "args": {
                    "play": "Play",
                    "passwords": "dict",
                    "connection_lockfd": "int"
                }
            }
        ],
        "PlayContext.set_attributes_from_plugin": [
            {
                "type": "method",
                "args": {
                    "plugin": "C.Plugin"
                }
            }
        ],
        "PlayContext.make_become_cmd": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "executable": "str"
                }
            }
        ],
        "PlayContext.set_task_and_variable_override": [
            {
                "type": "method",
                "args": {
                    "task": "Task",
                    "variables": "dict",
                    "templar": "Templar"
                }
            }
        ]
    },
    "playbook": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "Playbook._entries": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Playbook._basedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Playbook._loader": [
            {
                "type": "attr",
                "anno": "DataLoader"
            }
        ],
        "Playbook._file_name": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Playbook.__init__": [
            {
                "type": "method",
                "args": {
                    "loader": "DataLoader"
                }
            }
        ],
        "Playbook.get_loader": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Playbook.get_plays": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Playbook._load_playbook_data": [
            {
                "type": "method",
                "args": {
                    "file_name": "str",
                    "variable_manager": "str",
                    "vars": "dict"
                }
            }
        ],
        "Playbook.load": [
            {
                "type": "method",
                "args": {
                    "file_name": "str",
                    "variable_manager": "VariableManager",
                    "loader": "DataLoader"
                }
            }
        ]
    },
    "playbook.conditional": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "DEFINED_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "LOOKUP_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "VALID_VAR_REGEX": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "Conditional._when": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "Conditional._loader": [
            {
                "type": "attr",
                "anno": "ast.Module"
            }
        ],
        "Conditional.__init__": [
            {
                "type": "method",
                "args": {
                    "loader": "ast.Module"
                }
            }
        ],
        "Conditional._validate_when": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "name": "str",
                    "value": "str"
                }
            }
        ],
        "Conditional.CleansingNodeVisitor.generic_visit": [
            {
                "type": "method",
                "args": {
                    "node": "ast.AST",
                    "inside_call": "bool",
                    "inside_yield": "bool"
                }
            }
        ],
        "Conditional.extract_defined_undefined": [
            {
                "type": "method",
                "args": {
                    "conditional": "str"
                }
            }
        ],
        "Conditional._check_conditional": [
            {
                "type": "method",
                "args": {
                    "conditional": "str",
                    "templar": "Templar",
                    "all_vars": "dict"
                }
            }
        ],
        "Conditional.evaluate_conditional": [
            {
                "type": "method",
                "args": {
                    "templar": "Templar",
                    "all_vars": "dict"
                }
            }
        ]
    },
    "playbook.included_file": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type[IncludedFile]"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "IncludedFile._filename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "IncludedFile._args": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "IncludedFile._vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "IncludedFile._task": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "IncludedFile._hosts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "IncludedFile._is_role": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "IncludedFile.__init__": [
            {
                "type": "method",
                "args": {
                    "filename": "str",
                    "args": "dict",
                    "vars": "dict",
                    "task": "object",
                    "is_role": "bool"
                }
            }
        ],
        "IncludedFile.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "IncludedFile.add_host": [
            {
                "type": "method",
                "args": {
                    "host": "str"
                }
            }
        ],
        "IncludedFile.__eq__": [
            {
                "type": "method",
                "args": {
                    "other": "object"
                }
            }
        ],
        "IncludedFile.process_include_results": [
            {
                "type": "method",
                "args": {
                    "results": "list",
                    "iterator": "PlayIterator",
                    "loader": "TaskLoader",
                    "variable_manager": "VariableManager"
                }
            }
        ]
    },
    "playbook.loop_control": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "LoopControl._loop_var": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LoopControl._index_var": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LoopControl._label": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LoopControl._pause": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "LoopControl._extended": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LoopControl.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LoopControl.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "variable_manager": "str",
                    "loader": "object"
                }
            }
        ]
    },
    "playbook.taggable": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "Taggable.untagged": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "Taggable._tags": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "Taggable._load_tags": [
            {
                "type": "method",
                "args": {
                    "attr": "FieldAttribute",
                    "ds": "str"
                }
            }
        ],
        "Taggable.tags": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "Taggable.evaluate_tags": [
            {
                "type": "method",
                "args": {
                    "only_tags": "list",
                    "skip_tags": "list",
                    "all_vars": "list"
                }
            }
        ]
    },
    "playbook.playbook_include": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "PlaybookInclude._import_playbook": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PlaybookInclude._vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PlaybookInclude._preprocess_import": [
            {
                "type": "method",
                "args": {
                    "ds": "AnsibleBaseYAMLObject",
                    "new_ds": "AnsibleMapping",
                    "k": "str",
                    "v": "str"
                }
            }
        ],
        "PlaybookInclude.load_data": [
            {
                "type": "method",
                "args": {
                    "ds": "object",
                    "basedir": "str",
                    "variable_manager": "str",
                    "loader": "object"
                }
            }
        ],
        "PlaybookInclude.load": [
            {
                "type": "method",
                "args": {
                    "data": "dict",
                    "basedir": "str",
                    "variable_manager": "str",
                    "loader": "object"
                }
            }
        ],
        "PlaybookInclude.preprocess_data": [
            {
                "type": "method",
                "args": {
                    "ds": "object"
                }
            }
        ]
    },
    "template.vars": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "AnsibleJ2Vars._templar": [
            {
                "type": "attr",
                "anno": "Templar"
            }
        ],
        "AnsibleJ2Vars._globals": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleJ2Vars._extras": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleJ2Vars._locals": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleJ2Vars.__init__": [
            {
                "type": "method",
                "args": {
                    "templar": "Templar",
                    "globals": "dict",
                    "locals": "dict",
                    "extras": "dict"
                }
            }
        ],
        "AnsibleJ2Vars.__contains__": [
            {
                "type": "method",
                "args": {
                    "k": "str"
                }
            }
        ],
        "AnsibleJ2Vars.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleJ2Vars.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleJ2Vars.add_locals": [
            {
                "type": "method",
                "args": {
                    "locals": "dict"
                }
            }
        ],
        "AnsibleJ2Vars.__getitem__": [
            {
                "type": "method",
                "args": {
                    "varname": "str"
                }
            }
        ]
    },
    "template.template": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type[jinja2.environment.Template]"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[type[jinja2.environment.Template]]"
            }
        ],
        "AnsibleJ2Template.new_context": [
            {
                "type": "method",
                "args": {
                    "vars": "dict",
                    "shared": "bool",
                    "locals": "dict"
                }
            }
        ]
    },
    "template": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "Sequence[str]"
            }
        ],
        "NON_TEMPLATED_TYPES": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "JINJA2_OVERRIDE": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "USE_JINJA2_NATIVE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "JINJA2_BEGIN_TOKENS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "JINJA2_END_TOKENS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "generate_ansible_template_vars": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "dest_path": "str"
                }
            }
        ],
        "is_template": [
            {
                "type": "func",
                "args": {
                    "data": "str",
                    "jinja_env": "AnsibleEnvironment"
                }
            }
        ],
        "_count_newlines_from_end": [
            {
                "type": "func",
                "args": {
                    "in_str": "str"
                }
            }
        ],
        "recursive_check_defined": [
            {
                "type": "func",
                "args": {
                    "item": "object"
                }
            }
        ],
        "AnsibleUndefined.__getattr__": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "AnsibleUndefined.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AnsibleUndefined.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleContext.unsafe": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AnsibleContext.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "JinjaPluginIntercept._delegatee": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "JinjaPluginIntercept._pluginloader": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "JinjaPluginIntercept._method_map_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "JinjaPluginIntercept._dirname": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "JinjaPluginIntercept._collection_jinja_func_cache": [
            {
                "type": "attr",
                "anno": "dict[str, object]"
            }
        ],
        "JinjaPluginIntercept.__init__": [
            {
                "type": "method",
                "args": {
                    "delegatee": "object",
                    "pluginloader": "object",
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "JinjaPluginIntercept.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "object"
                }
            }
        ],
        "JinjaPluginIntercept.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "JinjaPluginIntercept.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "JinjaPluginIntercept.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AnsibleEnvironment.context_class": [
            {
                "type": "attr",
                "anno": "type[Context]"
            }
        ],
        "AnsibleEnvironment.template_class": [
            {
                "type": "attr",
                "anno": "type[AnsibleJ2Template]"
            }
        ],
        "AnsibleEnvironment.filters": [
            {
                "type": "attr",
                "anno": "JinjaPluginIntercept"
            }
        ],
        "AnsibleEnvironment.tests": [
            {
                "type": "attr",
                "anno": "JinjaPluginIntercept"
            }
        ],
        "AnsibleEnvironment.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "object",
                    "kwargs": "object"
                }
            }
        ],
        "Templar._loader": [
            {
                "type": "attr",
                "anno": "FileSystemLoader"
            }
        ],
        "Templar._filters": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Templar._tests": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Templar._available_variables": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Templar._cached_result": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Templar._basedir": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Templar._filter_loader": [
            {
                "type": "attr",
                "anno": "filter_loader"
            }
        ],
        "Templar._test_loader": [
            {
                "type": "attr",
                "anno": "test_loader"
            }
        ],
        "Templar._lookup_loader": [
            {
                "type": "attr",
                "anno": "lookup_loader"
            }
        ],
        "Templar._fail_on_lookup_errors": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Templar._fail_on_filter_errors": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Templar._fail_on_undefined_errors": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Templar.environment": [
            {
                "type": "attr",
                "anno": "AnsibleEnvironment"
            }
        ],
        "Templar.cur_context": [
            {
                "type": "attr",
                "anno": "Context | None"
            }
        ],
        "Templar.SINGLE_VAR": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Templar._clean_regex": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Templar._no_type_regex": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Templar._get_extensions": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Templar.available_variables": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "Templar.is_template": [
            {
                "type": "method",
                "args": {
                    "data": "object"
                }
            }
        ],
        "Templar.templatable": [
            {
                "type": "attr",
                "anno": "type[AnsibleJ2Template]"
            }
        ],
        "Templar.is_possibly_template": [
            {
                "type": "method",
                "args": {
                    "data": "object"
                }
            }
        ],
        "Templar._convert_bare_variable": [
            {
                "type": "method",
                "args": {
                    "variable": "object"
                }
            }
        ],
        "Templar._finalize": [
            {
                "type": "method",
                "args": {
                    "thing": "str | None"
                }
            }
        ],
        "Templar.__init__": [
            {
                "type": "method",
                "args": {
                    "loader": "FileSystemLoader",
                    "shared_loader_obj": "object",
                    "variables": "dict"
                }
            }
        ],
        "Templar._fail_lookup": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Templar._now_datetime": [
            {
                "type": "method",
                "args": {
                    "utc": "bool",
                    "fmt": "str | None"
                }
            }
        ],
        "_escape_backslashes": [
            {
                "type": "func",
                "args": {
                    "data": "str",
                    "jinja_env": "AnsibleEnvironment"
                }
            }
        ],
        "AnsibleContext._is_unsafe": [
            {
                "type": "method",
                "args": {
                    "val": "object"
                }
            }
        ],
        "AnsibleContext._update_unsafe": [
            {
                "type": "method",
                "args": {
                    "val": "object"
                }
            }
        ],
        "AnsibleContext.resolve_or_missing": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AnsibleContext.resolve": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "Templar.set_available_variables": [
            {
                "type": "method",
                "args": {
                    "variables": "dict"
                }
            }
        ],
        "Templar.set_temporary_context": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "JinjaPluginIntercept.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "AnsibleContext.get_all": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Templar._get_filters": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Templar._get_tests": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Templar._lookup": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Templar._query_lookup": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Templar.do_template": [
            {
                "type": "method",
                "args": {
                    "data": "object",
                    "preserve_trailing_newlines": "bool",
                    "escape_backslashes": "bool",
                    "fail_on_undefined": "bool",
                    "overrides": "object",
                    "disable_lookups": "bool"
                }
            }
        ],
        "Templar._do_template": [
            {
                "type": "attr",
                "anno": "type[AnsibleJ2Template]"
            }
        ],
        "Templar.template": [
            {
                "type": "method",
                "args": {
                    "variable": "object",
                    "convert_bare": "bool",
                    "preserve_trailing_newlines": "bool",
                    "escape_backslashes": "bool",
                    "fail_on_undefined": "bool",
                    "overrides": "object",
                    "convert_data": "bool",
                    "static_vars": "list",
                    "cache": "bool",
                    "disable_lookups": "bool"
                }
            }
        ]
    },
    "template.safe_eval": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "safe_eval": [
            {
                "type": "func",
                "args": {
                    "expr": "str",
                    "locals": "dict",
                    "include_exceptions": "bool"
                }
            }
        ]
    },
    "template.native_helpers": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "types.Metaclass"
            }
        ],
        "ansible_native_concat": [
            {
                "type": "func",
                "args": {
                    "nodes": "types.GeneratorType"
                }
            }
        ]
    },
    "modules.gather_facts": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.import_playbook": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.getent": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.fetch": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.async_status": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.wait_for_connection": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.import_tasks": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.include_role": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.service": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "Service.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Service.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Service.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "Service.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.sleep": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "Service.pattern": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.enable": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Service.runlevel": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.changed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Service.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Service.crashed": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.action": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.svc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.svc_initscript": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.svc_initctl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.enable_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.arguments": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.rcconf_file": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Service.rcconf_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.rcconf_value": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Service.svc_change": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LinuxService.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxService.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "LinuxService.svc_initscript": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxService.__systemd_unit": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxService.svc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxService.enable_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxService.upstart_version": [
            {
                "type": "attr",
                "anno": "LooseVersion"
            }
        ],
        "LinuxService.svc_initctl": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxService.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LinuxService.crashed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "LinuxService.action": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxService.changed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FreeBsdService.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdService.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "FreeBsdService.svc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdService.sysrc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdService.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FreeBsdService.rcconf_value": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdService.rcconf_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdService.changed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "FreeBsdService.action": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DragonFlyBsdService.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DragonFlyBsdService.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "DragonFlyBsdService.rcconf_value": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DragonFlyBsdService.rcconf_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DragonFlyBsdService.rcconf_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBsdService.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBsdService.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "OpenBsdService.enable_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBsdService.svc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBsdService.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "OpenBsdService.changed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NetBsdService.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBsdService.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "NetBsdService.svc_initscript": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBsdService.rcconf_value": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBsdService.rcconf_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBsdService.rcconf_key": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBsdService.svc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBsdService.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "NetBsdService.action": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSService.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSService.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "SunOSService.svcs_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSService.svcadm_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSService.svcadm_sync": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOSService.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SunOSService.changed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "AIX.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "AIX.lssrc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.startsrc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.stopsrc_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.refresh_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.running": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SunOSService.svcadm_supports_sync": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBsdService.get_service_tools": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.service_control": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.get_service_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.service_enable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.get_service_tools": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "AIX.get_service_tools": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSService.get_service_tools": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBsdService.get_service_tools": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBsdService.get_service_tools": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxService.get_service_tools": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.execute_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str",
                    "daemonize": "bool"
                }
            }
        ],
        "AIX.service_control": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIX.get_aix_src_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIX.get_service_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSService.get_sunos_svcs_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSService.service_control": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSService.get_service_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBsdService.service_control": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBsdService.get_service_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBsdService.service_control": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBsdService.get_service_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBsdService.service_control": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBsdService.get_service_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxService.service_control": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxService.get_systemd_status_dict": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxService.get_systemd_service_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxService.get_service_status": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxService.get_systemd_service_enabled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.check_ps": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOSService.service_enable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxService.service_enable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.service_enable_rcconf": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBsdService.service_enable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DragonFlyBsdService.service_enable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBsdService.service_enable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBsdService.service_enable": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.modify_service_state": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Service.check_service_changed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.yum": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAS_RPM_PYTHON": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "HAS_YUM_PYTHON": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "transaction_helpers": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "def_qf": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "rpmbin": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YumModule.pkg_mgr_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YumModule.lockfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YumModule._yum_base": [
            {
                "type": "attr",
                "anno": "yum.YumBase"
            }
        ],
        "YumModule.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "object"
                }
            }
        ],
        "YumModule.local_envra": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "YumModule.pkg_to_dict": [
            {
                "type": "method",
                "args": {
                    "pkgstr": "str"
                }
            }
        ],
        "YumModule.state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YumModule.has_yum": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumModule.yum_basecmd": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "YumModule.transaction_exists": [
            {
                "type": "method",
                "args": {
                    "pkglist": "list"
                }
            }
        ],
        "YumModule.is_lockfile_pid_valid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumModule._enablerepos_with_error_checking": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumModule.yum_base": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumModule.set_env_proxy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumModule.parse_check_update": [
            {
                "type": "method",
                "args": {
                    "check_update_output": "str"
                }
            }
        ],
        "YumModule.is_group_env_installed": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "YumModule.po_to_envra": [
            {
                "type": "method",
                "args": {
                    "po": "yum.Package"
                }
            }
        ],
        "YumModule.run_check_update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumModule.repolist": [
            {
                "type": "method",
                "args": {
                    "repoq": "list",
                    "qf": "str"
                }
            }
        ],
        "YumModule.is_update": [
            {
                "type": "method",
                "args": {
                    "repoq": "list",
                    "pkgspec": "str",
                    "qf": "str"
                }
            }
        ],
        "YumModule.is_available": [
            {
                "type": "method",
                "args": {
                    "repoq": "list",
                    "pkgspec": "str",
                    "qf": "str"
                }
            }
        ],
        "YumModule.is_installed": [
            {
                "type": "method",
                "args": {
                    "repoq": "list",
                    "pkgspec": "str",
                    "qf": "str",
                    "is_pkg": "bool"
                }
            }
        ],
        "YumModule.list_stuff": [
            {
                "type": "method",
                "args": {
                    "repoquerybin": "str",
                    "stuff": "str"
                }
            }
        ],
        "YumModule.what_provides": [
            {
                "type": "method",
                "args": {
                    "repoq": "list",
                    "req_spec": "str",
                    "qf": "str"
                }
            }
        ],
        "YumModule.latest": [
            {
                "type": "method",
                "args": {
                    "items": "list",
                    "repoq": "list"
                }
            }
        ],
        "YumModule.remove": [
            {
                "type": "method",
                "args": {
                    "items": "list",
                    "repoq": "list"
                }
            }
        ],
        "YumModule.exec_install": [
            {
                "type": "method",
                "args": {
                    "items": "list",
                    "action": "str",
                    "pkgs": "list",
                    "res": "dict"
                }
            }
        ],
        "YumModule.install": [
            {
                "type": "method",
                "args": {
                    "items": "list",
                    "repoq": "list"
                }
            }
        ],
        "YumModule.ensure": [
            {
                "type": "method",
                "args": {
                    "repoq": "list"
                }
            }
        ],
        "YumModule.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.yum_repository": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "YumRepo.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "YumRepo.params": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "YumRepo.section": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "YumRepo.repofile": [
            {
                "type": "attr",
                "anno": "configparser.RawConfigParser"
            }
        ],
        "YumRepo.allowed_params": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "YumRepo.list_params": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "YumRepo.remove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumRepo.dump": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumRepo.save": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumRepo.add": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "YumRepo.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.apt": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "APT_ENV_VARS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DPKG_OPTIONS": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "APT_GET_ZERO": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "APTITUDE_ZERO": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "APT_LISTS_PATH": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "APT_UPDATE_SUCCESS_STAMP_PATH": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "APT_MARK_INVALID_OP": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "APT_MARK_INVALID_OP_DEB6": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CLEAN_OP_CHANGED_STR": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "HAS_PYTHON_APT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PYTHON_APT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "PolicyRcD.m": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "PolicyRcD.backup_dir": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "PolicyRcD.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "package_split": [
            {
                "type": "func",
                "args": {
                    "pkgspec": "str"
                }
            }
        ],
        "package_version_compare": [
            {
                "type": "func",
                "args": {
                    "version": "str",
                    "other_version": "str"
                }
            }
        ],
        "expand_dpkg_options": [
            {
                "type": "func",
                "args": {
                    "dpkg_options_compressed": "str"
                }
            }
        ],
        "parse_diff": [
            {
                "type": "func",
                "args": {
                    "output": "str"
                }
            }
        ],
        "get_cache_mtime": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "get_updated_cache_time": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "PolicyRcD.__exit__": [
            {
                "type": "method",
                "args": {
                    "type": "str",
                    "value": "str",
                    "traceback": "str"
                }
            }
        ],
        "PolicyRcD.__enter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "package_versions": [
            {
                "type": "func",
                "args": {
                    "pkgname": "str",
                    "pkg": "AnsibleModule",
                    "pkg_cache": "AnsibleModule"
                }
            }
        ],
        "expand_pkgspec_from_fnmatches": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "pkgspec": "str",
                    "cache": "str"
                }
            }
        ],
        "get_cache": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "get_field_of_deb": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "deb_file": "str",
                    "field": "str"
                }
            }
        ],
        "mark_installed_manually": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "packages": "list"
                }
            }
        ],
        "package_status": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "pkgname": "str",
                    "version": "str",
                    "cache": "str",
                    "state": "str"
                }
            }
        ],
        "upgrade": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "mode": "str",
                    "force": "bool",
                    "default_release": "str",
                    "use_apt_get": "bool",
                    "dpkg_options": "str",
                    "autoremove": "bool",
                    "allow_unauthenticated": "bool"
                }
            }
        ],
        "cleanup": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "purge": "bool",
                    "force": "bool",
                    "operation": "str",
                    "dpkg_options": "str"
                }
            }
        ],
        "remove": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "pkgspec": "str",
                    "cache": "str",
                    "purge": "bool",
                    "force": "bool",
                    "dpkg_options": "str",
                    "autoremove": "bool"
                }
            }
        ],
        "install": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "pkgspec": "str",
                    "cache": "str",
                    "upgrade": "bool",
                    "default_release": "str",
                    "install_recommends": "bool",
                    "force": "bool",
                    "dpkg_options": "str",
                    "build_dep": "bool",
                    "fixed": "bool",
                    "autoremove": "bool",
                    "only_upgrade": "bool",
                    "allow_unauthenticated": "bool"
                }
            }
        ],
        "install_deb": [
            {
                "type": "func",
                "args": {
                    "m": "AnsibleModule",
                    "debs": "str",
                    "cache": "str",
                    "force": "bool",
                    "install_recommends": "bool",
                    "allow_unauthenticated": "bool",
                    "dpkg_options": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.shell": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.copy": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "module": [
            {
                "type": "var",
                "anno": "AnsibleModule"
            }
        ],
        "AnsibleModuleError.results": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleModuleError.__init__": [
            {
                "type": "method",
                "args": {
                    "results": "dict"
                }
            }
        ],
        "split_pre_existing_dir": [
            {
                "type": "func",
                "args": {
                    "dirname": "str"
                }
            }
        ],
        "clear_facls": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "adjust_recursive_directory_permissions": [
            {
                "type": "func",
                "args": {
                    "pre_existing_dir": "str",
                    "new_directory_list": "list",
                    "module": "AnsibleModule",
                    "directory_args": "dict",
                    "changed": "bool"
                }
            }
        ],
        "copy_diff_files": [
            {
                "type": "func",
                "args": {
                    "src": "str",
                    "dest": "str",
                    "module": "AnsibleModule"
                }
            }
        ],
        "chown_recursive": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "module": "AnsibleModule"
                }
            }
        ],
        "copy_left_only": [
            {
                "type": "func",
                "args": {
                    "src": "str",
                    "dest": "str",
                    "module": "AnsibleModule"
                }
            }
        ],
        "copy_common_dirs": [
            {
                "type": "func",
                "args": {
                    "src": "str",
                    "dest": "str",
                    "module": "AnsibleModule"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.raw": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.dnf": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAS_DNF": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "DnfModule.lockfile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DnfModule.pkg_mgr_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DnfModule.with_modules": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DnfModule.allowerasing": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "DnfModule.is_lockfile_pid_valid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DnfModule._sanitize_dnf_error_msg_install": [
            {
                "type": "method",
                "args": {
                    "spec": "str",
                    "error": "str"
                }
            }
        ],
        "DnfModule._sanitize_dnf_error_msg_remove": [
            {
                "type": "method",
                "args": {
                    "spec": "str",
                    "error": "str"
                }
            }
        ],
        "DnfModule._compare_evr": [
            {
                "type": "method",
                "args": {
                    "e1": "str | None",
                    "v1": "str | None",
                    "r1": "str | None",
                    "e2": "str | None",
                    "v2": "str | None",
                    "r2": "str | None"
                }
            }
        ],
        "DnfModule._specify_repositories": [
            {
                "type": "method",
                "args": {
                    "base": "dnf.Base",
                    "disablerepo": "list",
                    "enablerepo": "list"
                }
            }
        ],
        "DnfModule.names": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "DnfModule.state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DnfModule.has_dnf": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DnfModule.base": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "DnfModule.module_base": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "DnfModule._is_installed": [
            {
                "type": "method",
                "args": {
                    "pkg": "str"
                }
            }
        ],
        "DnfModule._is_module_installed": [
            {
                "type": "method",
                "args": {
                    "module_spec": "str"
                }
            }
        ],
        "DnfModule._package_dict": [
            {
                "type": "method",
                "args": {
                    "package": "dnf.subject.Subject"
                }
            }
        ],
        "DnfModule._ensure_dnf": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DnfModule.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "DnfModule._update_only": [
            {
                "type": "method",
                "args": {
                    "pkgs": "list"
                }
            }
        ],
        "DnfModule.list_items": [
            {
                "type": "method",
                "args": {
                    "command": "str"
                }
            }
        ],
        "DnfModule._configure_base": [
            {
                "type": "method",
                "args": {
                    "base": "dnf.Base",
                    "conf_file": "str",
                    "disable_gpg_check": "bool",
                    "installroot": "str"
                }
            }
        ],
        "DnfModule._base": [
            {
                "type": "method",
                "args": {
                    "conf_file": "str",
                    "disable_gpg_check": "bool",
                    "disablerepo": "list",
                    "enablerepo": "list",
                    "installroot": "str"
                }
            }
        ],
        "DnfModule._packagename_dict": [
            {
                "type": "method",
                "args": {
                    "packagename": "str"
                }
            }
        ],
        "DnfModule._is_newer_version_installed": [
            {
                "type": "method",
                "args": {
                    "pkg_name": "str"
                }
            }
        ],
        "DnfModule._install_remote_rpms": [
            {
                "type": "method",
                "args": {
                    "filenames": "list"
                }
            }
        ],
        "DnfModule._mark_package_install": [
            {
                "type": "method",
                "args": {
                    "pkg_spec": "str",
                    "upgrade": "bool"
                }
            }
        ],
        "DnfModule.ensure": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DnfModule.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "DnfModule._whatprovides": [
            {
                "type": "method",
                "args": {
                    "filepath": "str"
                }
            }
        ],
        "DnfModule._parse_spec_group_file": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "modules.fail": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.slurp": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.setup": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.sysvinit": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.set_fact": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.ping": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.async_wrapper": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "PY3": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "notice": [
            {
                "type": "func",
                "args": {
                    "msg": "str"
                }
            }
        ],
        "daemonize_self": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "_filter_non_json_lines": [
            {
                "type": "func",
                "args": {
                    "data": "str"
                }
            }
        ],
        "_get_interpreter": [
            {
                "type": "func",
                "args": {
                    "module_path": "str"
                }
            }
        ],
        "_run_module": [
            {
                "type": "func",
                "args": {
                    "wrapped_cmd": "str",
                    "jid": "str",
                    "job_path": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.unarchive": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "OWNER_DIFF_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "GROUP_DIFF_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "MODE_DIFF_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "MOD_TIME_DIFF_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "EMPTY_FILE_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "MISSING_FILE_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "ZIP_FILE_MODE_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "INVALID_OWNER_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "INVALID_GROUP_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "shell_escape": [
            {
                "type": "func",
                "args": {
                    "string": "str"
                }
            }
        ],
        "ZipArchive.src": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ZipArchive.b_dest": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ZipArchive.file_args": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ZipArchive.opts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ZipArchive.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "ZipArchive.excludes": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ZipArchive.includes": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ZipArchive.cmd_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ZipArchive.zipinfocmd_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ZipArchive._files_in_archive": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ZipArchive._infodict": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ZipArchive._permstr_to_octal": [
            {
                "type": "method",
                "args": {
                    "modestr": "str",
                    "umask": "int"
                }
            }
        ],
        "TgzArchive.src": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TgzArchive.b_dest": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TgzArchive.file_args": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TgzArchive.opts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TgzArchive.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "TgzArchive.excludes": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TgzArchive.cmd_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TgzArchive.zipflag": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TgzArchive._files_in_archive": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TgzArchive.tar_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TarArchive.zipflag": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TarArchive.__init__": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "b_dest": "bytes",
                    "file_args": "list",
                    "module": "AnsibleModule"
                }
            }
        ],
        "TarBzipArchive.zipflag": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TarBzipArchive.__init__": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "b_dest": "bytes",
                    "file_args": "list",
                    "module": "AnsibleModule"
                }
            }
        ],
        "TarXzArchive.zipflag": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TarXzArchive.__init__": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "b_dest": "bytes",
                    "file_args": "list",
                    "module": "AnsibleModule"
                }
            }
        ],
        "crc32": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "TgzArchive.unarchive": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TgzArchive.is_unarchived": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TgzArchive.files_in_archive": [
            {
                "type": "method",
                "args": {
                    "force_refresh": "bool"
                }
            }
        ],
        "TgzArchive.can_handle_archive": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TgzArchive._get_tar_type": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ZipArchive.can_handle_archive": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "pick_handler": [
            {
                "type": "func",
                "args": {
                    "src": "str",
                    "dest": "str",
                    "file_args": "dict",
                    "module": "AnsibleModule"
                }
            }
        ],
        "ZipArchive.unarchive": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ZipArchive._legacy_file_list": [
            {
                "type": "method",
                "args": {
                    "force_refresh": "bool"
                }
            }
        ],
        "ZipArchive.files_in_archive": [
            {
                "type": "method",
                "args": {
                    "force_refresh": "bool"
                }
            }
        ],
        "ZipArchive._crc32": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ZipArchive.is_unarchived": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ZipArchive.__init__": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "b_dest": "str",
                    "file_args": "dict",
                    "module": "AnsibleModule"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "TgzArchive.__init__": [
            {
                "type": "method",
                "args": {
                    "src": "str",
                    "b_dest": "str",
                    "file_args": "dict",
                    "module": "AnsibleModule"
                }
            }
        ]
    },
    "modules.stat": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "format_output": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "path": "str",
                    "st": "stat.Stat"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.find": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "pfilter": [
            {
                "type": "func",
                "args": {
                    "f": "str",
                    "patterns": "str",
                    "excludes": "str",
                    "use_regex": "bool"
                }
            }
        ],
        "agefilter": [
            {
                "type": "func",
                "args": {
                    "st": "stat.Stat",
                    "now": "float",
                    "age": "int",
                    "timestamp": "str"
                }
            }
        ],
        "sizefilter": [
            {
                "type": "func",
                "args": {
                    "st": "stat.Stat",
                    "size": "int"
                }
            }
        ],
        "contentfilter": [
            {
                "type": "func",
                "args": {
                    "fsname": "str",
                    "pattern": "str"
                }
            }
        ],
        "statinfo": [
            {
                "type": "func",
                "args": {
                    "st": "stat.Stat"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.include_vars": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.git": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "unfrackgitpath": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "set_git_ssh": [
            {
                "type": "func",
                "args": {
                    "ssh_wrapper": "str",
                    "key_file": "dict",
                    "ssh_opts": "str"
                }
            }
        ],
        "get_gpg_fingerprint": [
            {
                "type": "func",
                "args": {
                    "output": "str"
                }
            }
        ],
        "write_ssh_wrapper": [
            {
                "type": "func",
                "args": {
                    "module_tmpdir": "str"
                }
            }
        ],
        "head_splitter": [
            {
                "type": "func",
                "args": {
                    "headfile": "str",
                    "remote": "str",
                    "module": "AnsibleModule",
                    "fail_on_error": "bool"
                }
            }
        ],
        "relocate_repo": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "result": "dict",
                    "repo_dir": "str",
                    "old_repo_dir": "str",
                    "worktree_dir": "str"
                }
            }
        ],
        "get_repo_path": [
            {
                "type": "func",
                "args": {
                    "dest": "str",
                    "bare": "bool"
                }
            }
        ],
        "git_archive": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "archive": "str",
                    "archive_fmt": "str",
                    "archive_prefix": "str",
                    "version": "str"
                }
            }
        ],
        "create_archive": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "archive": "str",
                    "archive_prefix": "str",
                    "version": "str",
                    "repo": "str",
                    "result": "dict"
                }
            }
        ],
        "git_version": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule"
                }
            }
        ],
        "set_remote_branch": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "remote": "str",
                    "version": "str",
                    "depth": "int"
                }
            }
        ],
        "get_remote_url": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "remote": "str"
                }
            }
        ],
        "set_remote_url": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "repo": "str",
                    "dest": "str",
                    "remote": "str"
                }
            }
        ],
        "is_remote_branch": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "remote": "str",
                    "version": "str"
                }
            }
        ],
        "get_annotated_tags": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str"
                }
            }
        ],
        "verify_commit_sign": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "version": "str",
                    "gpg_whitelist": "list"
                }
            }
        ],
        "get_branches": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str"
                }
            }
        ],
        "is_not_a_branch": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str"
                }
            }
        ],
        "get_head_branch": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "remote": "str",
                    "bare": "bool"
                }
            }
        ],
        "is_local_branch": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "branch": "str"
                }
            }
        ],
        "switch_version": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "remote": "str",
                    "version": "str",
                    "verify_commit": "bool",
                    "depth": "int",
                    "gpg_whitelist": "list"
                }
            }
        ],
        "is_remote_tag": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "remote": "str",
                    "version": "str"
                }
            }
        ],
        "fetch": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "repo": "str",
                    "dest": "str",
                    "version": "str",
                    "remote": "str",
                    "depth": "int",
                    "bare": "bool",
                    "refspec": "dict",
                    "git_version_used": "LooseVersion",
                    "force": "bool"
                }
            }
        ],
        "get_remote_head": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "version": "str",
                    "remote": "str",
                    "bare": "bool"
                }
            }
        ],
        "get_diff": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "git_path": "str",
                    "dest": "str",
                    "repo": "str",
                    "remote": "str",
                    "depth": "int",
                    "bare": "bool",
                    "before": "str",
                    "after": "str"
                }
            }
        ],
        "reset": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str"
                }
            }
        ],
        "has_local_mods": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "git_path": "str",
                    "dest": "str",
                    "bare": "bool"
                }
            }
        ],
        "clone": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "repo": "str",
                    "dest": "str",
                    "remote": "str",
                    "depth": "int",
                    "version": "str",
                    "bare": "bool",
                    "reference": "dict",
                    "refspec": "dict",
                    "verify_commit": "bool",
                    "separate_git_dir": "bool",
                    "result": "dict",
                    "gpg_whitelist": "list"
                }
            }
        ],
        "get_submodule_versions": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "version": "str"
                }
            }
        ],
        "submodules_fetch": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "remote": "str",
                    "track_submodules": "bool",
                    "dest": "str"
                }
            }
        ],
        "get_version": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "git_path": "str",
                    "dest": "str",
                    "ref": "str"
                }
            }
        ],
        "get_submodule_update_params": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "git_path": "str",
                    "cwd": "str"
                }
            }
        ],
        "submodule_update": [
            {
                "type": "func",
                "args": {
                    "git_path": "str",
                    "module": "AnsibleModule",
                    "dest": "str",
                    "track_submodules": "bool",
                    "force": "bool"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.apt_key": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "apt_key_bin": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "parse_key_id": [
            {
                "type": "func",
                "args": {
                    "key_id": "str"
                }
            }
        ],
        "shorten_key_ids": [
            {
                "type": "func",
                "args": {
                    "key_id_list": "list"
                }
            }
        ],
        "download_key": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "url": "str"
                }
            }
        ],
        "remove_key": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "key_id": "str",
                    "keyring": "str"
                }
            }
        ],
        "add_key": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "keyfile": "str",
                    "keyring": "str",
                    "data": "str"
                }
            }
        ],
        "import_key": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "keyring": "str",
                    "keyserver": "str",
                    "key_id": "str"
                }
            }
        ],
        "all_keys": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "keyring": "str",
                    "short_format": "bool"
                }
            }
        ],
        "find_needed_binaries": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.add_host": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.pip": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "SETUPTOOLS_IMP_ERR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAS_SETUPTOOLS": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_SPECIAL_PACKAGE_CHECKERS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_VCS_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "op_dict": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "_is_vcs_url": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Package._CANONICALIZE_RE": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "Package._plain_package": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Package.package_name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Package._requirement": [
            {
                "type": "attr",
                "anno": "Requirement"
            }
        ],
        "Package.has_version_specifier": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Package.canonicalize_name": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Package.__init__": [
            {
                "type": "method",
                "args": {
                    "name_string": "str",
                    "version_string": "str"
                }
            }
        ],
        "Package.__str__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Package.is_satisfied_by": [
            {
                "type": "method",
                "args": {
                    "version_to_test": "LooseVersion"
                }
            }
        ],
        "_is_present": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "req": "Requirement",
                    "installed_pkgs": "list",
                    "pkg_command": "str"
                }
            }
        ],
        "_is_package_name": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "_recover_package_name": [
            {
                "type": "func",
                "args": {
                    "names": "str"
                }
            }
        ],
        "_fail": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "cmd": "list",
                    "out": "str",
                    "err": "str"
                }
            }
        ],
        "_get_packages": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "pip": "str",
                    "chdir": "str"
                }
            }
        ],
        "_get_cmd_options": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "cmd": "list"
                }
            }
        ],
        "_get_package_info": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "package": "str",
                    "env": "str"
                }
            }
        ],
        "_get_pip": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "env": "str",
                    "executable": "str"
                }
            }
        ],
        "setup_virtualenv": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "env": "str",
                    "chdir": "str",
                    "out": "str",
                    "err": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.package_facts": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RPM.LIB": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RPM.list_installed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RPM.get_package_details": [
            {
                "type": "method",
                "args": {
                    "package": "dict"
                }
            }
        ],
        "APT.LIB": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "APT._cache": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "APT.__init__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "APT.pkg_cache": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PACMAN.CLI": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PKG.CLI": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PKG.atoms": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PKG.get_package_details": [
            {
                "type": "method",
                "args": {
                    "package": "str"
                }
            }
        ],
        "PORTAGE.CLI": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PORTAGE.atoms": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PORTAGE.get_package_details": [
            {
                "type": "method",
                "args": {
                    "package": "str"
                }
            }
        ],
        "PACMAN.get_package_details": [
            {
                "type": "method",
                "args": {
                    "package": "str"
                }
            }
        ],
        "APT.get_package_details": [
            {
                "type": "method",
                "args": {
                    "package": "str"
                }
            }
        ],
        "PORTAGE.list_installed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PKG.list_installed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PACMAN.list_installed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "RPM.is_available": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "APT.is_available": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "APT.list_installed": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.group_by": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.uri": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "JSON_CANDIDATES": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "format_message": [
            {
                "type": "func",
                "args": {
                    "err": "str",
                    "resp": "Mapping"
                }
            }
        ],
        "url_filename": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "absolute_location": [
            {
                "type": "func",
                "args": {
                    "url": "str",
                    "location": "str"
                }
            }
        ],
        "kv_list": [
            {
                "type": "func",
                "args": {
                    "data": "Union[Sequence, Mapping]"
                }
            }
        ],
        "form_urlencoded": [
            {
                "type": "func",
                "args": {
                    "body": "Union[Sequence, Mapping]"
                }
            }
        ],
        "uri": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "url": "str",
                    "dest": "str",
                    "body": "Union[Sequence, Mapping]",
                    "body_format": "str",
                    "method": "str",
                    "headers": "dict",
                    "socket_timeout": "int"
                }
            }
        ],
        "write_file": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "url": "str",
                    "dest": "str",
                    "content": "str",
                    "resp": "Mapping"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.include": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.debug": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.tempfile": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.template": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.hostname": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type[AnsibleModule]"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "STRATS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "UnimplementedStrategy.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "UnimplementedStrategy.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "Hostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Hostname.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "Hostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type"
            }
        ],
        "Hostname.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type[Hostname]",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "Hostname.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "Hostname.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Hostname.use": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Hostname.strategy": [
            {
                "type": "attr",
                "anno": "GenericStrategy"
            }
        ],
        "GenericStrategy.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "GenericStrategy.changed": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "GenericStrategy.hostname_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GenericStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GenericStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "DebianStrategy.HOSTNAME_FILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SLESStrategy.HOSTNAME_FILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RedHatStrategy.NETWORK_FILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AlpineStrategy.HOSTNAME_FILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenRCStrategy.HOSTNAME_FILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDStrategy.HOSTNAME_FILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBSDStrategy.HOSTNAME_FILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FedoraHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FedoraHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FedoraHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "SLESHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SLESHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SLESHostname.distribution_version": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SLESHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "OpenSUSEHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenSUSEHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenSUSEHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "OpenSUSELeapHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenSUSELeapHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenSUSELeapHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "OpenSUSETumbleweedHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenSUSETumbleweedHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenSUSETumbleweedHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "AsteraHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AsteraHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AsteraHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "ArchHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ArchHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ArchHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "ArchARMHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ArchARMHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ArchARMHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "ManjaroHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ManjaroHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ManjaroHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "RHELHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RHELHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RHELHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "CentOSHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CentOSHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CentOSHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "ClearLinuxHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ClearLinuxHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ClearLinuxHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "CloudlinuxserverHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CloudlinuxserverHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CloudlinuxserverHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "CloudlinuxHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CloudlinuxHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CloudlinuxHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "CoreosHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CoreosHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CoreosHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "ScientificHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScientificHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ScientificHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "OracleLinuxHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OracleLinuxHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OracleLinuxHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "VirtuozzoLinuxHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VirtuozzoLinuxHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VirtuozzoLinuxHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[RedHatStrategy]"
            }
        ],
        "AmazonLinuxHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AmazonLinuxHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AmazonLinuxHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "DebianHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DebianHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DebianHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "KylinHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KylinHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KylinHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "CumulusHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CumulusHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CumulusHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "KaliHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KaliHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "KaliHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "UbuntuHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UbuntuHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UbuntuHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "LinuxmintHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxmintHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxmintHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "LinaroHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinaroHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinaroHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "DevuanHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DevuanHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DevuanHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "RaspbianHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RaspbianHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RaspbianHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "GentooHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GentooHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "GentooHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[OpenRCStrategy]"
            }
        ],
        "ALTLinuxHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ALTLinuxHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ALTLinuxHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "AlpineLinuxHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AlpineLinuxHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AlpineLinuxHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "OpenBSDHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDHostname.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "OpenBSDHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "SolarisHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SolarisHostname.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "SolarisHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "FreeBSDHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBSDHostname.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "FreeBSDHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "NetBSDHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBSDHostname.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "NetBSDHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "NeonHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NeonHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NeonHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "OsmcHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OsmcHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OsmcHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[GenericStrategy]"
            }
        ],
        "VoidLinuxHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VoidLinuxHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VoidLinuxHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "PopHostname.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PopHostname.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PopHostname.strategy_class": [
            {
                "type": "attr",
                "anno": "type[DebianStrategy]"
            }
        ],
        "FreeBSDStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "FreeBSDStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "OpenRCStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "OpenRCStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AlpineStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "RedHatStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "RedHatStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SLESStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "DebianStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "UnimplementedStrategy.unimplemented_error": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnimplementedStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "UnimplementedStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnimplementedStrategy.set_current_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "UnimplementedStrategy.get_current_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnimplementedStrategy.update_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnimplementedStrategy.update_current_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "UnimplementedStrategy.update_current_and_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AlpineStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SLESStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DebianStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SolarisStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "SolarisStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SolarisStrategy.set_current_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "SystemdStrategy.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Hostname.set_permanent_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "SystemdStrategy.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Hostname.get_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SystemdStrategy.set_current_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "SystemdStrategy.get_current_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AlpineStrategy.set_current_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "GenericStrategy.set_current_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "Hostname.set_current_hostname": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "GenericStrategy.get_current_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Hostname.get_current_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GenericStrategy.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "Hostname.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "GenericStrategy.update_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GenericStrategy.update_current_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AlpineStrategy.update_current_and_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GenericStrategy.update_current_and_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Hostname.update_current_and_permanent_hostname": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.meta": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.import_role": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.dpkg_selections": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.debconf": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "set_selection": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "pkg": "str",
                    "question": "dict",
                    "vtype": "str",
                    "value": "dict",
                    "unseen": "bool"
                }
            }
        ],
        "get_selections": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "pkg": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.assemble": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "cleanup": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "result": "dict"
                }
            }
        ],
        "assemble_from_fragments": [
            {
                "type": "func",
                "args": {
                    "src_path": "str",
                    "delimiter": "str",
                    "compiled_regexp": "str",
                    "ignore_hidden": "bool",
                    "tmpdir": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.service_facts": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "BaseService.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "BaseService.incomplete_warning": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "BaseService.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "ServiceScanService.incomplete_warning": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "SystemctlScanService.systemd_enabled": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SystemctlScanService.gather_services": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ServiceScanService.gather_services": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.wait_for": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAS_PSUTIL": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PSUTIL_IMP_ERR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "TCPConnectionInfo.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "TCPConnectionInfo.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "TCPConnectionInfo.match_all_ips": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TCPConnectionInfo.ipv4_mapped_ipv6_address": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "TCPConnectionInfo.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "TCPConnectionInfo.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "TCPConnectionInfo.ips": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TCPConnectionInfo.port": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "TCPConnectionInfo.exclude_ips": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "TCPConnectionInfo.get_active_connections_count": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxTCPConnectionInfo.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxTCPConnectionInfo.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "LinuxTCPConnectionInfo.source_file": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LinuxTCPConnectionInfo.match_all_ips": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LinuxTCPConnectionInfo.ipv4_mapped_ipv6_address": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "LinuxTCPConnectionInfo.local_address_field": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LinuxTCPConnectionInfo.remote_address_field": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LinuxTCPConnectionInfo.connection_state_field": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "LinuxTCPConnectionInfo.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "LinuxTCPConnectionInfo.ips": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "LinuxTCPConnectionInfo.port": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "LinuxTCPConnectionInfo.exclude_ips": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "_timedelta_total_seconds": [
            {
                "type": "func",
                "args": {
                    "timedelta": "datetime.timedelta"
                }
            }
        ],
        "get_connection_state_id": [
            {
                "type": "func",
                "args": {
                    "state": "str"
                }
            }
        ],
        "_convert_host_to_ip": [
            {
                "type": "func",
                "args": {
                    "host": "str"
                }
            }
        ],
        "_convert_host_to_hex": [
            {
                "type": "func",
                "args": {
                    "host": "str"
                }
            }
        ],
        "LinuxTCPConnectionInfo._get_exclude_ips": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxTCPConnectionInfo.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "TCPConnectionInfo._get_exclude_ips": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "LinuxTCPConnectionInfo.get_active_connections_count": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "TCPConnectionInfo.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.rpm_key": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "is_pubkey": [
            {
                "type": "func",
                "args": {
                    "string": "str"
                }
            }
        ],
        "RpmKey.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "RpmKey.rpm": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RpmKey.gpg": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "RpmKey.normalize_keyid": [
            {
                "type": "method",
                "args": {
                    "keyid": "str"
                }
            }
        ],
        "RpmKey.is_keyid": [
            {
                "type": "method",
                "args": {
                    "keystr": "str"
                }
            }
        ],
        "RpmKey.fetch_key": [
            {
                "type": "method",
                "args": {
                    "url": "str"
                }
            }
        ],
        "RpmKey.execute_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "str"
                }
            }
        ],
        "RpmKey.is_key_imported": [
            {
                "type": "method",
                "args": {
                    "keyid": "str"
                }
            }
        ],
        "RpmKey.getfingerprint": [
            {
                "type": "method",
                "args": {
                    "keyfile": "str"
                }
            }
        ],
        "RpmKey.getkeyid": [
            {
                "type": "method",
                "args": {
                    "keyfile": "str"
                }
            }
        ],
        "RpmKey.drop_key": [
            {
                "type": "method",
                "args": {
                    "keyid": "str"
                }
            }
        ],
        "RpmKey.import_key": [
            {
                "type": "method",
                "args": {
                    "keyfile": "str"
                }
            }
        ],
        "RpmKey.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.cron": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "CronTab.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "CronTab.user": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CronTab.root": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CronTab.lines": [
            {
                "type": "attr",
                "anno": "list[str]"
            }
        ],
        "CronTab.ansible": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CronTab.existing": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CronTab.cron_cmd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CronTab.cron_file": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "CronTab.is_empty": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CronTab.do_comment": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "CronTab.do_remove_job": [
            {
                "type": "method",
                "args": {
                    "lines": "list",
                    "comment": "str",
                    "job": "str"
                }
            }
        ],
        "CronTab.do_remove_env": [
            {
                "type": "method",
                "args": {
                    "lines": "list",
                    "decl": "str"
                }
            }
        ],
        "CronTab.remove_job_file": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CronTab.find_job": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "job": "str"
                }
            }
        ],
        "CronTab.find_env": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "CronTab.get_cron_job": [
            {
                "type": "method",
                "args": {
                    "minute": "dict",
                    "hour": "dict",
                    "day": "dict",
                    "month": "dict",
                    "weekday": "dict",
                    "job": "str",
                    "special": "str",
                    "disabled": "bool"
                }
            }
        ],
        "CronTab._read_user_execute": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CronTab._write_execute": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "CronTab.render": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CronTab._update_env": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "decl": "str",
                    "addenvfunction": "Callable[[list, str], None]"
                }
            }
        ],
        "CronTab.remove_env": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "CronTab._update_job": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "job": "str",
                    "addlinesfunction": "Callable[[list, str, str], None]"
                }
            }
        ],
        "CronTab.remove_job": [
            {
                "type": "method",
                "args": {
                    "name": "str"
                }
            }
        ],
        "CronTab.get_envnames": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CronTab.get_jobnames": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CronTab.do_add_env": [
            {
                "type": "method",
                "args": {
                    "lines": "list",
                    "decl": "str"
                }
            }
        ],
        "CronTab.update_env": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "decl": "str"
                }
            }
        ],
        "CronTab.do_add_job": [
            {
                "type": "method",
                "args": {
                    "lines": "list",
                    "comment": "str",
                    "job": "str"
                }
            }
        ],
        "CronTab.update_job": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "job": "str"
                }
            }
        ],
        "CronTab.add_job": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "job": "str"
                }
            }
        ],
        "CronTab.write": [
            {
                "type": "method",
                "args": {
                    "backup_file": "str | None"
                }
            }
        ],
        "CronTab.add_env": [
            {
                "type": "method",
                "args": {
                    "decl": "str",
                    "insertafter": "str",
                    "insertbefore": "str"
                }
            }
        ],
        "CronTab.read": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CronTab.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule",
                    "user": "str",
                    "cron_file": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.file": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "module": [
            {
                "type": "var",
                "anno": "AnsibleModule"
            }
        ],
        "AnsibleModuleError.results": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "AnsibleModuleError.__init__": [
            {
                "type": "method",
                "args": {
                    "results": "dict"
                }
            }
        ],
        "AnsibleModuleError.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Sentinel.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "get_state": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "additional_parameter_handling": [
            {
                "type": "func",
                "args": {
                    "params": "dict"
                }
            }
        ],
        "get_timestamp_for_time": [
            {
                "type": "func",
                "args": {
                    "formatted_time": "str",
                    "time_format": "str"
                }
            }
        ],
        "update_timestamp_for_file": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "mtime": "float",
                    "atime": "float",
                    "diff": "dict"
                }
            }
        ],
        "keep_backward_compatibility_on_timestamps": [
            {
                "type": "func",
                "args": {
                    "parameter": "dict",
                    "state": "str"
                }
            }
        ],
        "initial_diff": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "state": "str",
                    "prev_state": "str"
                }
            }
        ],
        "_ansible_excepthook": [
            {
                "type": "func",
                "args": {
                    "exc_type": "type",
                    "exc_value": "Exception",
                    "tb": "TracebackType"
                }
            }
        ],
        "execute_diff_peek": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ensure_file_attributes": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "follow": "bool",
                    "timestamps": "dict"
                }
            }
        ],
        "recursive_set_attributes": [
            {
                "type": "func",
                "args": {
                    "b_path": "str",
                    "follow": "bool",
                    "file_args": "dict",
                    "mtime": "float",
                    "atime": "float"
                }
            }
        ],
        "ensure_hardlink": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "src": "str",
                    "follow": "bool",
                    "force": "bool",
                    "timestamps": "dict"
                }
            }
        ],
        "ensure_symlink": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "src": "str",
                    "follow": "bool",
                    "force": "bool",
                    "timestamps": "dict"
                }
            }
        ],
        "ensure_directory": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "follow": "bool",
                    "recurse": "bool",
                    "timestamps": "dict"
                }
            }
        ],
        "execute_touch": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "follow": "bool",
                    "timestamps": "dict"
                }
            }
        ],
        "ensure_absent": [
            {
                "type": "func",
                "args": {
                    "path": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.group": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "Group.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Group.distribution": [
            {
                "type": "attr",
                "anno": "grp.Distribution"
            }
        ],
        "Group.GROUPFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Group.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "grp.Group",
                    "kwargs": "grp.Group"
                }
            }
        ],
        "Group.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "Group.state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Group.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Group.gid": [
            {
                "type": "attr",
                "anno": "int | None"
            }
        ],
        "Group.system": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Group.local": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Group.non_unique": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "Group.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "SunOS.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOS.distribution": [
            {
                "type": "attr",
                "anno": "grp.Distribution"
            }
        ],
        "SunOS.GROUPFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.distribution": [
            {
                "type": "attr",
                "anno": "grp.Distribution"
            }
        ],
        "AIX.GROUPFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdGroup.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdGroup.distribution": [
            {
                "type": "attr",
                "anno": "grp.Distribution"
            }
        ],
        "FreeBsdGroup.GROUPFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DragonFlyBsdGroup.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinGroup.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinGroup.distribution": [
            {
                "type": "attr",
                "anno": "grp.Distribution"
            }
        ],
        "DarwinGroup.gid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "OpenBsdGroup.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBsdGroup.distribution": [
            {
                "type": "attr",
                "anno": "grp.Distribution"
            }
        ],
        "OpenBsdGroup.GROUPFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBsdGroup.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBsdGroup.distribution": [
            {
                "type": "attr",
                "anno": "grp.Distribution"
            }
        ],
        "NetBsdGroup.GROUPFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AlpineGroup.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AlpineGroup.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Group._local_check_gid_exists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.group_exists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.group_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Group.execute_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "list"
                }
            }
        ],
        "BusyBoxGroup.group_del": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BusyBoxGroup.group_add": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "NetBsdGroup.group_add": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "NetBsdGroup.group_del": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBsdGroup.group_add": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "OpenBsdGroup.group_del": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinGroup.get_lowest_available_system_gid": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinGroup.group_mod": [
            {
                "type": "method",
                "args": {
                    "gid": "int"
                }
            }
        ],
        "DarwinGroup.group_del": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinGroup.group_add": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "FreeBsdGroup.group_add": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "FreeBsdGroup.group_del": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIX.group_add": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "AIX.group_del": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOS.group_add": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "Group.group_add": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "Group.group_del": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BusyBoxGroup.group_mod": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "NetBsdGroup.group_mod": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "OpenBsdGroup.group_mod": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "FreeBsdGroup.group_mod": [
            {
                "type": "method",
                "args": {
                    "kwargs": "dict"
                }
            }
        ],
        "AIX.group_mod": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "Group.group_mod": [
            {
                "type": "method",
                "args": {
                    "kwargs": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.systemd": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "is_running_service": [
            {
                "type": "func",
                "args": {
                    "service_status": "dict"
                }
            }
        ],
        "is_deactivating_service": [
            {
                "type": "func",
                "args": {
                    "service_status": "dict"
                }
            }
        ],
        "request_was_ignored": [
            {
                "type": "func",
                "args": {
                    "out": "str"
                }
            }
        ],
        "parse_systemctl_show": [
            {
                "type": "func",
                "args": {
                    "lines": "list"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.assert": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.reboot": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.iptables": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "IPTABLES_WAIT_SUPPORT_ADDED": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "IPTABLES_WAIT_WITH_SECONDS_SUPPORT_ADDED": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "BINS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "ICMP_TYPE_OPTIONS": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "append_param": [
            {
                "type": "func",
                "args": {
                    "rule": "list",
                    "param": "dict",
                    "flag": "str",
                    "is_list": "bool"
                }
            }
        ],
        "append_tcp_flags": [
            {
                "type": "func",
                "args": {
                    "rule": "list",
                    "param": "dict",
                    "flag": "str"
                }
            }
        ],
        "append_match_flag": [
            {
                "type": "func",
                "args": {
                    "rule": "list",
                    "param": "str",
                    "flag": "str",
                    "negatable": "bool"
                }
            }
        ],
        "append_csv": [
            {
                "type": "func",
                "args": {
                    "rule": "list",
                    "param": "dict",
                    "flag": "str"
                }
            }
        ],
        "append_match": [
            {
                "type": "func",
                "args": {
                    "rule": "list",
                    "param": "bool",
                    "match": "str"
                }
            }
        ],
        "append_jump": [
            {
                "type": "func",
                "args": {
                    "rule": "list",
                    "param": "bool",
                    "jump": "str"
                }
            }
        ],
        "append_wait": [
            {
                "type": "func",
                "args": {
                    "rule": "list",
                    "param": "dict",
                    "flag": "str"
                }
            }
        ],
        "get_iptables_version": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "module": "AnsibleModule"
                }
            }
        ],
        "construct_rule": [
            {
                "type": "func",
                "args": {
                    "params": "dict"
                }
            }
        ],
        "push_arguments": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "action": "str",
                    "params": "dict",
                    "make_rule": "bool"
                }
            }
        ],
        "get_chain_policy": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "module": "AnsibleModule",
                    "params": "dict"
                }
            }
        ],
        "set_chain_policy": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "module": "AnsibleModule",
                    "params": "dict"
                }
            }
        ],
        "flush_table": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "module": "AnsibleModule",
                    "params": "dict"
                }
            }
        ],
        "remove_rule": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "module": "AnsibleModule",
                    "params": "dict"
                }
            }
        ],
        "insert_rule": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "module": "AnsibleModule",
                    "params": "dict"
                }
            }
        ],
        "append_rule": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "module": "AnsibleModule",
                    "params": "dict"
                }
            }
        ],
        "check_present": [
            {
                "type": "func",
                "args": {
                    "iptables_path": "str",
                    "module": "AnsibleModule",
                    "params": "dict"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.set_stats": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.pause": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.user": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAVE_SPWD": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_HASH_RE": [
            {
                "type": "var",
                "anno": "re.Pattern"
            }
        ],
        "User.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "User.PASSWORDFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.SHADOWFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.SHADOWFILE_EXPIRE_INDEX": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "User.LOGIN_DEFS": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.DATE_FORMAT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.__new__": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "User.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "User.state": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.name": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.uid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.hidden": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.non_unique": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.seuser": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.group": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.comment": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.shell": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.force": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.remove": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.create_home": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.move_home": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.skeleton": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.system": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.login_class": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "User.append": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.sshkeygen": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.ssh_bits": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "User.ssh_type": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.ssh_comment": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.ssh_passphrase": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "User.update_password": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.home": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.expires": [
            {
                "type": "attr",
                "anno": "float"
            }
        ],
        "User.password_lock": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.groups": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "User.local": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "User.profile": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.authorization": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.role": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.ssh_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "User.group_exists": [
            {
                "type": "method",
                "args": {
                    "group": "str"
                }
            }
        ],
        "User.group_info": [
            {
                "type": "method",
                "args": {
                    "group": "str"
                }
            }
        ],
        "User.parse_shadow_file": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBsdUser.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdUser.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "FreeBsdUser.SHADOWFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "FreeBsdUser.SHADOWFILE_EXPIRE_INDEX": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "FreeBsdUser.DATE_FORMAT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DragonFlyBsdUser.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDUser.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "OpenBSDUser.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "OpenBSDUser.SHADOWFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBSDUser.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "NetBSDUser.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "NetBSDUser.SHADOWFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOS.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOS.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "SunOS.SHADOWFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SunOS.USER_ATTR": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinUser.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinUser.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "DarwinUser.SHADOWFILE": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "DarwinUser.dscl_directory": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinUser.fields": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "DarwinUser.hidden": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "DarwinUser.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "DarwinUser.group": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinUser.uid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinUser.home": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "DarwinUser.shell": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "AIX.SHADOWFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HPUX.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HPUX.distribution": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "HPUX.SHADOWFILE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Alpine.platform": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Alpine.distribution": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "AIX.parse_shadow_file": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser._make_group_numerical": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOS.get_password_defaults": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.user_exists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.user_password": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.get_pwd_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.user_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.user_group_membership": [
            {
                "type": "method",
                "args": {
                    "exclude_primary": "bool"
                }
            }
        ],
        "User.check_password_encrypted": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "SunOS._user_attr_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOS.user_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser._get_dscl": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.chown_homedir": [
            {
                "type": "method",
                "args": {
                    "uid": "int",
                    "gid": "int",
                    "path": "str"
                }
            }
        ],
        "User.create_homedir": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "User.get_ssh_key_path": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.get_ssh_public_key": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.backup_shadow": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.execute_command": [
            {
                "type": "method",
                "args": {
                    "cmd": "list",
                    "use_unsafe_shell": "bool",
                    "data": "str",
                    "obey_checkmode": "bool"
                }
            }
        ],
        "BusyBox.remove_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HPUX.remove_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIX.remove_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser.remove_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser.user_exists": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser._update_system_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser.__modify_group": [
            {
                "type": "method",
                "args": {
                    "group": "str",
                    "action": "str"
                }
            }
        ],
        "DarwinUser._change_user_password": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser._get_next_uid": [
            {
                "type": "method",
                "args": {
                    "system": "bool"
                }
            }
        ],
        "DarwinUser._get_user_property": [
            {
                "type": "method",
                "args": {
                    "property": "str"
                }
            }
        ],
        "DarwinUser._list_user_groups": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser._modify_group": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser.modify_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DarwinUser.create_user": [
            {
                "type": "method",
                "args": {
                    "command_name": "str"
                }
            }
        ],
        "SunOS.remove_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBSDUser.remove_user_userdel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDUser.remove_user_userdel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBsdUser.remove_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.ssh_key_fingerprint": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.ssh_key_gen": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User._check_usermod_append": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.remove_user_userdel": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.remove_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.get_groups_set": [
            {
                "type": "method",
                "args": {
                    "remove_existing": "bool"
                }
            }
        ],
        "BusyBox.modify_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "BusyBox.create_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HPUX.modify_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HPUX.create_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIX.modify_user_usermod": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AIX.create_user_useradd": [
            {
                "type": "method",
                "args": {
                    "command_name": "str"
                }
            }
        ],
        "SunOS.modify_user_usermod": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SunOS.create_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBSDUser.modify_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "NetBSDUser.create_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDUser.modify_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "OpenBSDUser.create_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBsdUser.modify_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FreeBsdUser.create_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.modify_user_usermod": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.modify_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.create_user_useradd": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "User.create_user": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "module_utils.json_utils": {
        "_filter_non_json_lines": [
            {
                "type": "func",
                "args": {
                    "data": "str"
                }
            }
        ]
    },
    "modules.script": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.package": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.get_url": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "url_filename": [
            {
                "type": "func",
                "args": {
                    "url": "str"
                }
            }
        ],
        "extract_filename_from_headers": [
            {
                "type": "func",
                "args": {
                    "headers": "dict"
                }
            }
        ],
        "url_get": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "url": "str",
                    "dest": "str",
                    "use_proxy": "bool",
                    "last_mod_time": "str",
                    "force": "bool",
                    "timeout": "int",
                    "headers": "dict",
                    "tmp_dest": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.known_hosts": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "hash_host_key": [
            {
                "type": "func",
                "args": {
                    "host": "str",
                    "key": "str"
                }
            }
        ],
        "normalize_known_hosts_key": [
            {
                "type": "func",
                "args": {
                    "key": "str"
                }
            }
        ],
        "search_for_host_key": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "host": "str",
                    "key": "str",
                    "path": "str",
                    "sshkeygen": "str"
                }
            }
        ],
        "compute_diff": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "found_line": "int",
                    "replace_or_add": "bool",
                    "state": "str",
                    "key": "str"
                }
            }
        ],
        "sanity_check": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "host": "str",
                    "key": "str",
                    "sshkeygen": "str"
                }
            }
        ],
        "enforce_state": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "params": "dict"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.command": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "check_command": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "commandline": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.apt_repository": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "distro": [
            {
                "type": "var",
                "anno": "aptsources_distro.Distribution"
            }
        ],
        "HAVE_PYTHON_APT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "PYTHON_APT": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "DEFAULT_SOURCES_PERM": [
            {
                "type": "var",
                "anno": "int"
            }
        ],
        "VALID_SOURCE_TYPES": [
            {
                "type": "var",
                "anno": "tuple"
            }
        ],
        "SourcesList.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "SourcesList.files": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "SourcesList.new_repos": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "SourcesList.default_file": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "SourcesList.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SourcesList._suggest_filename": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "SourcesList._parse": [
            {
                "type": "method",
                "args": {
                    "line": "str",
                    "raise_if_invalid_or_disabled": "bool"
                }
            }
        ],
        "SourcesList._apt_cfg_file": [
            {
                "type": "method",
                "args": {
                    "filespec": "str"
                }
            }
        ],
        "SourcesList._apt_cfg_dir": [
            {
                "type": "method",
                "args": {
                    "dirspec": "str"
                }
            }
        ],
        "SourcesList._expand_path": [
            {
                "type": "method",
                "args": {
                    "filename": "str"
                }
            }
        ],
        "SourcesList.load": [
            {
                "type": "method",
                "args": {
                    "file": "str"
                }
            }
        ],
        "SourcesList.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "SourcesList.dump": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SourcesList._choice": [
            {
                "type": "method",
                "args": {
                    "new": "bool",
                    "old": "str"
                }
            }
        ],
        "SourcesList.modify": [
            {
                "type": "method",
                "args": {
                    "file": "str",
                    "n": "int",
                    "enabled": "bool",
                    "source": "str",
                    "comment": "str"
                }
            }
        ],
        "SourcesList._remove_valid_source": [
            {
                "type": "method",
                "args": {
                    "source": "str"
                }
            }
        ],
        "SourcesList.remove_source": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "UbuntuSourcesList.LP_API": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UbuntuSourcesList.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "UbuntuSourcesList.add_ppa_signing_keys_callback": [
            {
                "type": "attr",
                "anno": "Callable[[str], None]"
            }
        ],
        "UbuntuSourcesList.codename": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "UbuntuSourcesList._expand_ppa": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "UbuntuSourcesList.remove_source": [
            {
                "type": "method",
                "args": {
                    "line": "str"
                }
            }
        ],
        "UbuntuSourcesList.repos_urls": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "SourcesList._add_valid_source": [
            {
                "type": "method",
                "args": {
                    "source_new": "str",
                    "comment_new": "str",
                    "file": "str"
                }
            }
        ],
        "SourcesList.add_source": [
            {
                "type": "method",
                "args": {
                    "line": "str",
                    "comment": "str",
                    "file": "str"
                }
            }
        ],
        "UbuntuSourcesList._key_already_exists": [
            {
                "type": "method",
                "args": {
                    "key_fingerprint": "str"
                }
            }
        ],
        "UbuntuSourcesList._get_ppa_info": [
            {
                "type": "method",
                "args": {
                    "owner_name": "str",
                    "ppa_name": "str"
                }
            }
        ],
        "UbuntuSourcesList.add_source": [
            {
                "type": "method",
                "args": {
                    "line": "str",
                    "comment": "str",
                    "file": "str"
                }
            }
        ],
        "UbuntuSourcesList.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule",
                    "add_ppa_signing_keys_callback": "Callable[[str], None]"
                }
            }
        ],
        "SourcesList.save": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "revert_sources_list": [
            {
                "type": "func",
                "args": {
                    "sources_before": "dict",
                    "sources_after": "dict",
                    "sourceslist_before": "dict"
                }
            }
        ],
        "get_add_ppa_signing_key_callback": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "install_python_apt": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.include_tasks": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "RETURN": [
            {
                "type": "var",
                "anno": "str"
            }
        ]
    },
    "modules.expect": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "PEXPECT_IMP_ERR": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "HAS_PEXPECT": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "response_closure": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "question": "str",
                    "responses": "dict"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.lineinfile": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "write_changes": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "b_lines": "list",
                    "dest": "str"
                }
            }
        ],
        "check_file_attrs": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "changed": "bool",
                    "message": "str",
                    "diff": "dict"
                }
            }
        ],
        "absent": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "dest": "str",
                    "regexp": "str",
                    "line": "str",
                    "backup": "bool"
                }
            }
        ],
        "present": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "dest": "str",
                    "regexp": "str",
                    "line": "str",
                    "insertafter": "str",
                    "insertbefore": "str",
                    "create": "bool",
                    "backup": "bool",
                    "backrefs": "bool",
                    "firstmatch": "bool"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.blockinfile": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "write_changes": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "contents": "bytes",
                    "path": "str"
                }
            }
        ],
        "check_file_attrs": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "changed": "bool",
                    "message": "str",
                    "diff": "dict"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.replace": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "write_changes": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "contents": "bytes",
                    "path": "str"
                }
            }
        ],
        "check_file_attrs": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "changed": "bool",
                    "message": "str"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "modules.subversion": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "ANSIBLE_METADATA": [
            {
                "type": "var",
                "anno": "dict"
            }
        ],
        "DOCUMENTATION": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "EXAMPLES": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "Subversion.module": [
            {
                "type": "attr",
                "anno": "AnsibleModule"
            }
        ],
        "Subversion.dest": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Subversion.repo": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Subversion.revision": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Subversion.username": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Subversion.password": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Subversion.svn_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "Subversion.__init__": [
            {
                "type": "method",
                "args": {
                    "module": "AnsibleModule",
                    "dest": "str",
                    "repo": "str",
                    "revision": "str",
                    "username": "str",
                    "password": "str",
                    "svn_path": "str"
                }
            }
        ],
        "Subversion.has_option_password_from_stdin": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subversion._exec": [
            {
                "type": "method",
                "args": {
                    "args": "list",
                    "check_rc": "bool"
                }
            }
        ],
        "Subversion.has_local_mods": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subversion.get_remote_revision": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subversion.get_revision": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subversion.needs_update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subversion.revert": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subversion.update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subversion.switch": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "Subversion.export": [
            {
                "type": "method",
                "args": {
                    "force": "bool"
                }
            }
        ],
        "Subversion.checkout": [
            {
                "type": "method",
                "args": {
                    "force": "bool"
                }
            }
        ],
        "Subversion.is_svn_repo": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "vars.reserved": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "get_reserved_names": [
            {
                "type": "func",
                "args": {
                    "include_private": "bool"
                }
            }
        ],
        "_RESERVED_NAMES": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "is_reserved_name": [
            {
                "type": "func",
                "args": {
                    "name": "str"
                }
            }
        ],
        "warn_if_reserved": [
            {
                "type": "func",
                "args": {
                    "myvars": "str"
                }
            }
        ]
    },
    "vars.manager": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "preprocess_vars": [
            {
                "type": "func",
                "args": {
                    "a": "dict"
                }
            }
        ],
        "VariableManager._ALLOWED": [
            {
                "type": "attr",
                "anno": "frozenset"
            }
        ],
        "VariableManager._nonpersistent_fact_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VariableManager._vars_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VariableManager._extra_vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VariableManager._host_vars_files": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VariableManager._group_vars_files": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VariableManager._inventory": [
            {
                "type": "attr",
                "anno": "Host"
            }
        ],
        "VariableManager._loader": [
            {
                "type": "attr",
                "anno": "lookup_loader"
            }
        ],
        "VariableManager._hostvars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VariableManager._omit_token": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VariableManager._options_vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VariableManager.safe_basedir": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VariableManager._fact_cache": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VariableManager.__getstate__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VariableManager.extra_vars": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VariableManager.set_inventory": [
            {
                "type": "method",
                "args": {
                    "inventory": "Host"
                }
            }
        ],
        "VariableManager.clear_facts": [
            {
                "type": "method",
                "args": {
                    "hostname": "str"
                }
            }
        ],
        "VariableManager.set_host_variable": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "varname": "str",
                    "value": "dict"
                }
            }
        ],
        "VarsWithSources.data": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VarsWithSources.sources": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "VarsWithSources.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "str",
                    "kwargs": "str"
                }
            }
        ],
        "VarsWithSources.new_vars_with_sources": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "data": "dict",
                    "sources": "dict"
                }
            }
        ],
        "VarsWithSources.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "VarsWithSources.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "VarsWithSources.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VarsWithSources.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VarsWithSources.__contains__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "VariableManager.set_nonpersistent_facts": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "facts": "dict"
                }
            }
        ],
        "VariableManager.set_host_facts": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "facts": "dict"
                }
            }
        ],
        "VarsWithSources.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "VarsWithSources.get_source": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "VariableManager.__setstate__": [
            {
                "type": "method",
                "args": {
                    "data": "MutableMapping[str, object]"
                }
            }
        ],
        "VariableManager.__init__": [
            {
                "type": "method",
                "args": {
                    "loader": "lookup_loader",
                    "inventory": "Host",
                    "version_info": "str"
                }
            }
        ],
        "VariableManager._get_magic_variables": [
            {
                "type": "method",
                "args": {
                    "play": "Play",
                    "host": "Host",
                    "task": "Task",
                    "include_hostvars": "bool",
                    "include_delegate_to": "bool",
                    "_hosts": "list",
                    "_hosts_all": "list"
                }
            }
        ],
        "VarsWithSources.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VariableManager._get_delegated_vars": [
            {
                "type": "method",
                "args": {
                    "play": "Play",
                    "task": "Task",
                    "existing_variables": "dict"
                }
            }
        ],
        "VariableManager.get_vars": [
            {
                "type": "method",
                "args": {
                    "play": "Play",
                    "host": "Host",
                    "task": "Task",
                    "include_hostvars": "bool",
                    "include_delegate_to": "bool",
                    "use_cache": "bool",
                    "_hosts": "list",
                    "_hosts_all": "list",
                    "stage": "str"
                }
            }
        ]
    },
    "vars.hostvars": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "STATIC_VARS": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "__all__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "HostVars._inventory": [
            {
                "type": "attr",
                "anno": "InventoryManager"
            }
        ],
        "HostVars._loader": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HostVars._variable_manager": [
            {
                "type": "attr",
                "anno": "VariableManager"
            }
        ],
        "HostVars.__init__": [
            {
                "type": "method",
                "args": {
                    "inventory": "InventoryManager",
                    "variable_manager": "VariableManager",
                    "loader": "object"
                }
            }
        ],
        "HostVars.set_variable_manager": [
            {
                "type": "method",
                "args": {
                    "variable_manager": "VariableManager"
                }
            }
        ],
        "HostVars.set_inventory": [
            {
                "type": "method",
                "args": {
                    "inventory": "InventoryManager"
                }
            }
        ],
        "HostVars.set_host_variable": [
            {
                "type": "method",
                "args": {
                    "host": "str",
                    "varname": "str",
                    "value": "object"
                }
            }
        ],
        "HostVars.__deepcopy__": [
            {
                "type": "method",
                "args": {
                    "memo": "dict"
                }
            }
        ],
        "HostVarsVars._vars": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "HostVarsVars._loader": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "HostVarsVars.__init__": [
            {
                "type": "method",
                "args": {
                    "variables": "dict",
                    "loader": "str"
                }
            }
        ],
        "HostVarsVars.__contains__": [
            {
                "type": "method",
                "args": {
                    "var": "str"
                }
            }
        ],
        "HostVars.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostVars.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostVarsVars.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostVarsVars.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostVars.__setstate__": [
            {
                "type": "method",
                "args": {
                    "state": "dict"
                }
            }
        ],
        "HostVars.set_nonpersistent_facts": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "facts": "dict"
                }
            }
        ],
        "HostVars.set_host_facts": [
            {
                "type": "method",
                "args": {
                    "host": "Host",
                    "facts": "dict"
                }
            }
        ],
        "HostVars.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostVars._find_host": [
            {
                "type": "method",
                "args": {
                    "host_name": "str"
                }
            }
        ],
        "HostVars.__contains__": [
            {
                "type": "method",
                "args": {
                    "host_name": "str"
                }
            }
        ],
        "HostVarsVars.__repr__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "HostVarsVars.__getitem__": [
            {
                "type": "method",
                "args": {
                    "var": "str"
                }
            }
        ],
        "HostVars.raw_get": [
            {
                "type": "method",
                "args": {
                    "host_name": "str"
                }
            }
        ],
        "HostVars.__getitem__": [
            {
                "type": "method",
                "args": {
                    "host_name": "str"
                }
            }
        ]
    },
    "vars.plugins": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "get_plugin_vars": [
            {
                "type": "func",
                "args": {
                    "loader": "vars_loader.TaskLoader",
                    "plugin": "AnsiblePlugin",
                    "path": "str",
                    "entities": "dict"
                }
            }
        ],
        "get_vars_from_path": [
            {
                "type": "func",
                "args": {
                    "loader": "vars_loader.TaskLoader",
                    "path": "str",
                    "entities": "dict",
                    "stage": "str"
                }
            }
        ],
        "get_vars_from_inventory_sources": [
            {
                "type": "func",
                "args": {
                    "loader": "vars_loader.TaskLoader",
                    "sources": "list",
                    "entities": "dict",
                    "stage": "str"
                }
            }
        ]
    },
    "vars.clean": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "strip_internal_keys": [
            {
                "type": "func",
                "args": {
                    "dirty": "MutableMapping",
                    "exceptions": "tuple"
                }
            }
        ],
        "remove_internal_keys": [
            {
                "type": "func",
                "args": {
                    "data": "MutableMapping[str, object]"
                }
            }
        ],
        "module_response_deepcopy": [
            {
                "type": "func",
                "args": {
                    "v": "MutableMapping"
                }
            }
        ],
        "namespace_facts": [
            {
                "type": "func",
                "args": {
                    "facts": "MutableMapping"
                }
            }
        ],
        "clean_facts": [
            {
                "type": "func",
                "args": {
                    "facts": "MutableMapping"
                }
            }
        ]
    },
    "vars.fact_cache": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "FactCache._plugin": [
            {
                "type": "attr",
                "anno": "cache_loader.CachePlugin"
            }
        ],
        "FactCache.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Any",
                    "kwargs": "Any"
                }
            }
        ],
        "FactCache.copy": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FactCache.__contains__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "FactCache.keys": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FactCache.__len__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FactCache.__iter__": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FactCache.__setitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "str"
                }
            }
        ],
        "FactCache.__delitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ],
        "FactCache.flush": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "FactCache.first_order_merge": [
            {
                "type": "method",
                "args": {
                    "key": "str",
                    "value": "dict"
                }
            }
        ],
        "FactCache.update": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "FactCache.__getitem__": [
            {
                "type": "method",
                "args": {
                    "key": "str"
                }
            }
        ]
    },
    "cli.inventory": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "INTERNAL_VARS": [
            {
                "type": "var",
                "anno": "frozenset"
            }
        ],
        "InventoryCLI.ARGUMENTS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "InventoryCLI.vm": [
            {
                "type": "attr",
                "anno": "C[[str], C[[str], C]]"
            }
        ],
        "InventoryCLI.loader": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "InventoryCLI.inventory": [
            {
                "type": "attr",
                "anno": "C[[str], C[[str], C]]"
            }
        ],
        "InventoryCLI.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "list"
                }
            }
        ],
        "InventoryCLI.dump": [
            {
                "type": "method",
                "args": {
                    "stuff": "C[[str], C[[str], C]]"
                }
            }
        ],
        "InventoryCLI._remove_internal": [
            {
                "type": "method",
                "args": {
                    "dump": "dict"
                }
            }
        ],
        "InventoryCLI._remove_empty": [
            {
                "type": "method",
                "args": {
                    "dump": "dict"
                }
            }
        ],
        "InventoryCLI._graph_name": [
            {
                "type": "method",
                "args": {
                    "name": "str",
                    "depth": "int"
                }
            }
        ],
        "InventoryCLI._show_vars": [
            {
                "type": "method",
                "args": {
                    "dump": "dict",
                    "depth": "int"
                }
            }
        ],
        "InventoryCLI._get_group": [
            {
                "type": "method",
                "args": {
                    "gname": "str"
                }
            }
        ],
        "InventoryCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "InventoryCLI._get_host_variables": [
            {
                "type": "method",
                "args": {
                    "host": "Host"
                }
            }
        ],
        "InventoryCLI._get_group_variables": [
            {
                "type": "method",
                "args": {
                    "group": "Group"
                }
            }
        ],
        "InventoryCLI.toml_inventory": [
            {
                "type": "method",
                "args": {
                    "top": "C[[str], C[[str], C]]"
                }
            }
        ],
        "InventoryCLI.yaml_inventory": [
            {
                "type": "method",
                "args": {
                    "top": "C[[str], C[[str], C]]"
                }
            }
        ],
        "InventoryCLI.json_inventory": [
            {
                "type": "method",
                "args": {
                    "top": "C[[str], C[[str], C]]"
                }
            }
        ],
        "InventoryCLI._graph_group": [
            {
                "type": "method",
                "args": {
                    "group": "Group",
                    "depth": "int"
                }
            }
        ],
        "InventoryCLI.inventory_graph": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "InventoryCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "cli.pull": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "PullCLI.DEFAULT_REPO_TYPE": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PullCLI.DEFAULT_PLAYBOOK": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "PullCLI.REPO_CHOICES": [
            {
                "type": "attr",
                "anno": "tuple"
            }
        ],
        "PullCLI.PLAYBOOK_ERRORS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PullCLI.SUPPORTED_REPO_MODULES": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "PullCLI.ARGUMENTS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "PullCLI.SKIP_INVENTORY_DEFAULTS": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "PullCLI._get_inv_cli": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PullCLI.try_playbook": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "PullCLI.select_playbook": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "PullCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "PullCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PullCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "cli.config": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ConfigCLI.config_file": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ConfigCLI.config": [
            {
                "type": "attr",
                "anno": "ConfigManager"
            }
        ],
        "ConfigCLI.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "list",
                    "callback": "str"
                }
            }
        ],
        "ConfigCLI.execute_update": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigCLI.execute_edit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigCLI.execute_view": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigCLI.execute_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigCLI.execute_dump": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "ConfigCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConfigCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "cli.adhoc": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "C[[str], type[C]]"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "AdHocCLI._play_ds": [
            {
                "type": "method",
                "args": {
                    "pattern": "str",
                    "async_val": "int",
                    "poll": "int"
                }
            }
        ],
        "AdHocCLI._tqm": [
            {
                "type": "attr",
                "anno": "TaskQueueManager"
            }
        ],
        "AdHocCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "AdHocCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "AdHocCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "cli.arguments.option_helpers": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "SortingHelpFormatter.add_arguments": [
            {
                "type": "method",
                "args": {
                    "actions": "list"
                }
            }
        ],
        "UnrecognizedArgument.__init__": [
            {
                "type": "method",
                "args": {
                    "option_strings": "list",
                    "dest": "str",
                    "const": "bool",
                    "default": "str",
                    "required": "bool",
                    "help": "str",
                    "metavar": "str",
                    "nargs": "int"
                }
            }
        ],
        "PrependListAction.__init__": [
            {
                "type": "method",
                "args": {
                    "option_strings": "list",
                    "dest": "str",
                    "nargs": "int",
                    "const": "bool",
                    "default": "str",
                    "type": "str",
                    "choices": "list",
                    "required": "bool",
                    "help": "str",
                    "metavar": "str"
                }
            }
        ],
        "ensure_value": [
            {
                "type": "func",
                "args": {
                    "namespace": "object",
                    "name": "str",
                    "value": "list"
                }
            }
        ],
        "PrependListAction.__call__": [
            {
                "type": "method",
                "args": {
                    "parser": "argparse._SubParsersAction",
                    "namespace": "object",
                    "values": "list",
                    "option_string": "str"
                }
            }
        ],
        "unfrack_path": [
            {
                "type": "func",
                "args": {
                    "pathsep": "bool"
                }
            }
        ],
        "add_verbosity_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "create_base_parser": [
            {
                "type": "func",
                "args": {
                    "prog": "str",
                    "usage": "str",
                    "desc": "str",
                    "epilog": "str"
                }
            }
        ],
        "add_async_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_basedir_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_check_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_connect_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse._SubParsersAction"
                }
            }
        ],
        "add_fork_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_inventory_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_meta_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_output_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_runas_prompt_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser",
                    "runas_group": "argparse.ArgumentGroup"
                }
            }
        ],
        "add_runas_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_runtask_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_subset_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "add_vault_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "UnrecognizedArgument.__call__": [
            {
                "type": "method",
                "args": {
                    "parser": "argparse._SubParsersAction",
                    "namespace": "dict",
                    "values": "dict",
                    "option_string": "str"
                }
            }
        ],
        "add_module_options": [
            {
                "type": "func",
                "args": {
                    "parser": "argparse.ArgumentParser"
                }
            }
        ],
        "_git_repo_info": [
            {
                "type": "func",
                "args": {
                    "repo_path": "str"
                }
            }
        ],
        "_gitinfo": [
            {
                "type": "func",
                "args": {}
            }
        ],
        "version": [
            {
                "type": "func",
                "args": {
                    "prog": "str"
                }
            }
        ],
        "AnsibleVersion.__call__": [
            {
                "type": "method",
                "args": {
                    "parser": "argparse._SubParsersAction",
                    "namespace": "dict",
                    "values": "dict",
                    "option_string": "str"
                }
            }
        ]
    },
    "cli.arguments": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ]
    },
    "cli.playbook": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "PlaybookCLI._flush_cache": [
            {
                "type": "method",
                "args": {
                    "inventory": "InventoryManager",
                    "variable_manager": "VariableManager"
                }
            }
        ],
        "PlaybookCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "PlaybookCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "PlaybookCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "cli.doc": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "DocCLI.IGNORE": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "DocCLI.plugin_list": [
            {
                "type": "attr",
                "anno": "set"
            }
        ],
        "DocCLI.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "Sequence[str]"
                }
            }
        ],
        "DocCLI.namespace_from_plugin_filepath": [
            {
                "type": "method",
                "args": {
                    "filepath": "str",
                    "plugin_name": "str",
                    "basedir": "str"
                }
            }
        ],
        "DocCLI.print_paths": [
            {
                "type": "method",
                "args": {
                    "finder": "Any"
                }
            }
        ],
        "DocCLI.get_support_block": [
            {
                "type": "method",
                "args": {
                    "doc": "dict"
                }
            }
        ],
        "DocCLI.get_metadata_block": [
            {
                "type": "method",
                "args": {
                    "doc": "dict"
                }
            }
        ],
        "DocCLI._dump_yaml": [
            {
                "type": "method",
                "args": {
                    "struct": "dict",
                    "indent": "str"
                }
            }
        ],
        "DocCLI.add_fields": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "fields": "dict",
                    "limit": "int",
                    "opt_indent": "str"
                }
            }
        ],
        "jdump": [
            {
                "type": "func",
                "args": {
                    "text": "dict"
                }
            }
        ],
        "DocCLI.find_plugins": [
            {
                "type": "method",
                "args": {
                    "path": "str",
                    "ptype": "str",
                    "collection": "str"
                }
            }
        ],
        "DocCLI.get_man_text": [
            {
                "type": "method",
                "args": {
                    "doc": "dict"
                }
            }
        ],
        "DocCLI.get_snippet_text": [
            {
                "type": "method",
                "args": {
                    "doc": "dict"
                }
            }
        ],
        "DocCLI.format_plugin_doc": [
            {
                "type": "method",
                "args": {
                    "plugin": "str",
                    "plugin_type": "str",
                    "doc": "dict",
                    "plainexamples": "str",
                    "returndocs": "str",
                    "metadata": "dict"
                }
            }
        ],
        "DocCLI.get_all_plugins_of_type": [
            {
                "type": "method",
                "args": {
                    "plugin_type": "str"
                }
            }
        ],
        "add_collection_plugins": [
            {
                "type": "func",
                "args": {
                    "plugin_list": "set",
                    "plugin_type": "str",
                    "coll_filter": "str"
                }
            }
        ],
        "DocCLI._get_plugin_list_filenames": [
            {
                "type": "method",
                "args": {
                    "loader": "plugin_loader"
                }
            }
        ],
        "DocCLI._get_plugin_list_descriptions": [
            {
                "type": "method",
                "args": {
                    "loader": "plugin_loader"
                }
            }
        ],
        "DocCLI._get_plugin_doc": [
            {
                "type": "method",
                "args": {
                    "plugin": "str",
                    "loader": "plugin_loader",
                    "search_paths": "str"
                }
            }
        ],
        "DocCLI.get_plugin_metadata": [
            {
                "type": "method",
                "args": {
                    "plugin_type": "str",
                    "plugin_name": "str"
                }
            }
        ],
        "DocCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "DocCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "DocCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "cli.galaxy": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "urlparse": [
            {
                "type": "var",
                "anno": "type[urlparse]"
            }
        ],
        "GalaxyCLI.SKIP_INFO_KEYS": [
            {
                "type": "attr",
                "anno": "tuple[str, ...]"
            }
        ],
        "GalaxyCLI.api_servers": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "GalaxyCLI.galaxy": [
            {
                "type": "attr",
                "anno": "Galaxy"
            }
        ],
        "GalaxyCLI.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "list"
                }
            }
        ],
        "GalaxyCLI.api": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.exit_without_ignore": [
            {
                "type": "method",
                "args": {
                    "rc": "int"
                }
            }
        ],
        "GalaxyCLI._resolve_path": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "GalaxyCLI.execute_role": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.execute_collection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.execute_build": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_build_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_publish": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_publish_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "_display_header": [
            {
                "type": "func",
                "args": {
                    "path": "str",
                    "h1": "str",
                    "h2": "str",
                    "w1": "int",
                    "w2": "int"
                }
            }
        ],
        "_get_collection_widths": [
            {
                "type": "func",
                "args": {
                    "collections": "CollectionRequirement"
                }
            }
        ],
        "_display_collection": [
            {
                "type": "func",
                "args": {
                    "collection": "CollectionRequirement",
                    "cwidth": "int",
                    "vwidth": "int",
                    "min_cwidth": "int",
                    "min_vwidth": "int"
                }
            }
        ],
        "GalaxyCLI.execute_list_collection": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI._display_role_info": [
            {
                "type": "method",
                "args": {
                    "role_info": "dict"
                }
            }
        ],
        "GalaxyCLI.execute_setup": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_setup_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_search": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_search_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_import": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_import_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_login": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_login_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI._parse_requirements_file": [
            {
                "type": "method",
                "args": {
                    "requirements_file": "str",
                    "allow_old_format": "bool"
                }
            }
        ],
        "GalaxyCLI._require_one_of_collections_requirements": [
            {
                "type": "method",
                "args": {
                    "collections": "list",
                    "requirements_file": "str"
                }
            }
        ],
        "GalaxyCLI.execute_verify": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_verify_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_download": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_download_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "_display_role": [
            {
                "type": "func",
                "args": {
                    "gr": "GalaxyRole"
                }
            }
        ],
        "GalaxyCLI.execute_list_role": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.execute_list": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_list_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_delete": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_delete_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_info": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_info_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_remove": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_remove_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.execute_install": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_install_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "GalaxyCLI._get_skeleton_galaxy_yml": [
            {
                "type": "method",
                "args": {
                    "template_path": "str",
                    "inject_data": "dict"
                }
            }
        ],
        "GalaxyCLI.execute_init": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.add_init_options": [
            {
                "type": "method",
                "args": {
                    "parser": "Any",
                    "parents": "list"
                }
            }
        ],
        "GalaxyCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "GalaxyCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "cli.scripts.ansible_connection_cli_stub": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__requires__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "file_lock": [
            {
                "type": "func",
                "args": {
                    "lock_path": "str"
                }
            }
        ],
        "ConnectionProcess.play_context": [
            {
                "type": "attr",
                "anno": "PlayContext"
            }
        ],
        "ConnectionProcess.socket_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionProcess.original_path": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionProcess._task_uuid": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConnectionProcess.fd": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ConnectionProcess.exception": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ConnectionProcess.srv": [
            {
                "type": "attr",
                "anno": "JsonRpcServer"
            }
        ],
        "ConnectionProcess.sock": [
            {
                "type": "attr",
                "anno": "socket.socket"
            }
        ],
        "ConnectionProcess.connection": [
            {
                "type": "attr",
                "anno": "Connection"
            }
        ],
        "ConnectionProcess._ansible_playbook_pid": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ConnectionProcess.__init__": [
            {
                "type": "method",
                "args": {
                    "fd": "int",
                    "play_context": "PlayContext",
                    "socket_path": "str",
                    "original_path": "str",
                    "task_uuid": "str",
                    "ansible_playbook_pid": "int"
                }
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ConnectionProcess.handler": [
            {
                "type": "method",
                "args": {
                    "signum": "int",
                    "frame": "str"
                }
            }
        ],
        "read_stream": [
            {
                "type": "func",
                "args": {
                    "byte_stream": "bytes"
                }
            }
        ],
        "ConnectionProcess.shutdown": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionProcess.command_timeout": [
            {
                "type": "method",
                "args": {
                    "signum": "int",
                    "frame": "str"
                }
            }
        ],
        "ConnectionProcess.connect_timeout": [
            {
                "type": "method",
                "args": {
                    "signum": "int",
                    "frame": "str"
                }
            }
        ],
        "ConnectionProcess.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConnectionProcess.start": [
            {
                "type": "method",
                "args": {
                    "variables": "dict"
                }
            }
        ],
        "main": [
            {
                "type": "func",
                "args": {}
            }
        ]
    },
    "cli.scripts.ansible_cli_stub": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "__requires__": [
            {
                "type": "var",
                "anno": "list[str]"
            }
        ],
        "_PY3_MIN": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_PY2_MIN": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "_PY_MIN": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "LastResort.display": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "log_only": "bool"
                }
            }
        ],
        "LastResort.error": [
            {
                "type": "method",
                "args": {
                    "msg": "str",
                    "wrap_text": "bool"
                }
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "me": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "target": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "sub": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "myclass": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "mycli": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "msg": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "b_ansible_dir": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "args": [
            {
                "type": "var",
                "anno": "list"
            }
        ],
        "cli": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "have_cli_options": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "log_only": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "why": [
            {
                "type": "var",
                "anno": "str"
            }
        ],
        "exit_code": [
            {
                "type": "var",
                "anno": "int"
            }
        ]
    },
    "cli": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "HAS_ARGCOMPLETE": [
            {
                "type": "var",
                "anno": "bool"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "CLI._ITALIC": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "CLI._BOLD": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "CLI._MODULE": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "CLI._URL": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "CLI._CONST": [
            {
                "type": "attr",
                "anno": "re.Pattern"
            }
        ],
        "CLI.PAGER": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CLI.LESS_OPTS": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "CLI.SKIP_INVENTORY_DEFAULTS": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "CLI.args": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "CLI.parser": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "CLI.callback": [
            {
                "type": "attr",
                "anno": "Any"
            }
        ],
        "CLI.split_vault_id": [
            {
                "type": "method",
                "args": {
                    "vault_id": "str"
                }
            }
        ],
        "CLI.build_vault_ids": [
            {
                "type": "method",
                "args": {
                    "vault_ids": "list",
                    "vault_password_files": "list",
                    "ask_vault_pass": "bool",
                    "create_new_password": "bool",
                    "auto_prompt": "bool"
                }
            }
        ],
        "CLI.ask_passwords": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CLI.init_parser": [
            {
                "type": "method",
                "args": {
                    "usage": "str",
                    "desc": "str",
                    "epilog": "str"
                }
            }
        ],
        "CLI.version_info": [
            {
                "type": "method",
                "args": {
                    "gitinfo": "bool"
                }
            }
        ],
        "CLI.pager_pipe": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "cmd": "str"
                }
            }
        ],
        "CLI.tty_ify": [
            {
                "type": "method",
                "args": {
                    "cls": "type",
                    "text": "str"
                }
            }
        ],
        "CLI.pager": [
            {
                "type": "method",
                "args": {
                    "text": "str"
                }
            }
        ],
        "CLI.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "list",
                    "callback": "Any"
                }
            }
        ],
        "CLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "CLI.parse": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "CLI.get_host_list": [
            {
                "type": "method",
                "args": {
                    "inventory": "InventoryManager",
                    "subset": "str",
                    "pattern": "str"
                }
            }
        ],
        "CLI.validate_conflicts": [
            {
                "type": "method",
                "args": {
                    "op": "object",
                    "runas_opts": "bool",
                    "fork_opts": "bool"
                }
            }
        ],
        "CLI.setup_vault_secrets": [
            {
                "type": "method",
                "args": {
                    "loader": "DataLoader",
                    "vault_ids": "list",
                    "vault_password_files": "list",
                    "ask_vault_pass": "bool",
                    "create_new_password": "bool",
                    "auto_prompt": "bool"
                }
            }
        ],
        "CLI._play_prereqs": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "cli.console": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "ConsoleCLI.modules": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ConsoleCLI.ARGUMENTS": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConsoleCLI.NORMAL_PROMPT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConsoleCLI.intro": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConsoleCLI.groups": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ConsoleCLI.hosts": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ConsoleCLI.pattern": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ConsoleCLI.variable_manager": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConsoleCLI.loader": [
            {
                "type": "attr",
                "anno": "object"
            }
        ],
        "ConsoleCLI.passwords": [
            {
                "type": "attr",
                "anno": "dict"
            }
        ],
        "ConsoleCLI.cwd": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConsoleCLI.remote_user": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ConsoleCLI.become": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConsoleCLI.become_user": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ConsoleCLI.become_method": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "ConsoleCLI.check_mode": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConsoleCLI.diff": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "ConsoleCLI.forks": [
            {
                "type": "attr",
                "anno": "int"
            }
        ],
        "ConsoleCLI.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "ConsoleCLI.get_names": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleCLI.selected": [
            {
                "type": "attr",
                "anno": "list"
            }
        ],
        "ConsoleCLI.prompt": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "ConsoleCLI.set_prompt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleCLI._find_modules_in_path": [
            {
                "type": "method",
                "args": {
                    "path": "str"
                }
            }
        ],
        "ConsoleCLI.list_modules": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleCLI._tqm": [
            {
                "type": "attr",
                "anno": "TaskQueueManager"
            }
        ],
        "ConsoleCLI.emptyline": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleCLI.do_forks": [
            {
                "type": "method",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "ConsoleCLI.do_serial": [
            {
                "type": "attr",
                "anno": "type[cmd.Cmd]"
            }
        ],
        "ConsoleCLI.do_verbosity": [
            {
                "type": "method",
                "args": {
                    "arg": "int | None"
                }
            }
        ],
        "ConsoleCLI.do_cd": [
            {
                "type": "method",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "ConsoleCLI.do_list": [
            {
                "type": "method",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "ConsoleCLI.do_become": [
            {
                "type": "method",
                "args": {
                    "arg": "bool"
                }
            }
        ],
        "ConsoleCLI.do_remote_user": [
            {
                "type": "method",
                "args": {
                    "arg": "str | None"
                }
            }
        ],
        "ConsoleCLI.do_become_user": [
            {
                "type": "method",
                "args": {
                    "arg": "str | None"
                }
            }
        ],
        "ConsoleCLI.do_become_method": [
            {
                "type": "method",
                "args": {
                    "arg": "str | None"
                }
            }
        ],
        "ConsoleCLI.do_check": [
            {
                "type": "method",
                "args": {
                    "arg": "bool"
                }
            }
        ],
        "ConsoleCLI.do_diff": [
            {
                "type": "method",
                "args": {
                    "arg": "bool"
                }
            }
        ],
        "ConsoleCLI.do_exit": [
            {
                "type": "method",
                "args": {
                    "args": "cmd.Cmd"
                }
            }
        ],
        "ConsoleCLI.cmdloop": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleCLI.do_EOF": [
            {
                "type": "attr",
                "anno": "cmd.Cmd"
            }
        ],
        "ConsoleCLI.helpdefault": [
            {
                "type": "method",
                "args": {
                    "module_name": "str"
                }
            }
        ],
        "ConsoleCLI.complete_cd": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "line": "str",
                    "begidx": "int",
                    "endidx": "int"
                }
            }
        ],
        "ConsoleCLI.module_args": [
            {
                "type": "method",
                "args": {
                    "module_name": "str"
                }
            }
        ],
        "ConsoleCLI.completedefault": [
            {
                "type": "method",
                "args": {
                    "text": "str",
                    "line": "str",
                    "begidx": "int",
                    "endidx": "int"
                }
            }
        ],
        "ConsoleCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "ConsoleCLI.default": [
            {
                "type": "method",
                "args": {
                    "arg": "str",
                    "forceshell": "bool"
                }
            }
        ],
        "ConsoleCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "ConsoleCLI.do_shell": [
            {
                "type": "method",
                "args": {
                    "arg": "str"
                }
            }
        ],
        "ConsoleCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    },
    "module_utils.facts.sysctl": {
        "get_sysctl": [
            {
                "type": "func",
                "args": {
                    "module": "AnsibleModule",
                    "prefixes": "list"
                }
            }
        ]
    },
    "cli.vault": {
        "__metaclass__": [
            {
                "type": "var",
                "anno": "type"
            }
        ],
        "display": [
            {
                "type": "var",
                "anno": "Display"
            }
        ],
        "VaultCLI.FROM_STDIN": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VaultCLI.FROM_ARGS": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VaultCLI.FROM_PROMPT": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VaultCLI.b_vault_pass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VaultCLI.b_new_vault_pass": [
            {
                "type": "attr",
                "anno": "str"
            }
        ],
        "VaultCLI.encrypt_string_read_stdin": [
            {
                "type": "attr",
                "anno": "bool"
            }
        ],
        "VaultCLI.encrypt_secret": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "VaultCLI.encrypt_vault_id": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "VaultCLI.new_encrypt_secret": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "VaultCLI.new_encrypt_vault_id": [
            {
                "type": "attr",
                "anno": "str | None"
            }
        ],
        "VaultCLI.__init__": [
            {
                "type": "method",
                "args": {
                    "args": "dict"
                }
            }
        ],
        "VaultCLI.post_process_args": [
            {
                "type": "method",
                "args": {
                    "options": "object"
                }
            }
        ],
        "VaultCLI.editor": [
            {
                "type": "attr",
                "anno": "VaultEditor"
            }
        ],
        "VaultCLI.run": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultCLI.execute_encrypt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultCLI.format_ciphertext_yaml": [
            {
                "type": "method",
                "args": {
                    "b_ciphertext": "bytes",
                    "indent": "int",
                    "name": "str"
                }
            }
        ],
        "VaultCLI._format_output_vault_strings": [
            {
                "type": "method",
                "args": {
                    "b_plaintext_list": "list",
                    "vault_id": "str"
                }
            }
        ],
        "VaultCLI.execute_encrypt_string": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultCLI.execute_decrypt": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultCLI.execute_create": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultCLI.execute_edit": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultCLI.execute_view": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultCLI.execute_rekey": [
            {
                "type": "method",
                "args": {}
            }
        ],
        "VaultCLI.init_parser": [
            {
                "type": "method",
                "args": {}
            }
        ]
    }
}